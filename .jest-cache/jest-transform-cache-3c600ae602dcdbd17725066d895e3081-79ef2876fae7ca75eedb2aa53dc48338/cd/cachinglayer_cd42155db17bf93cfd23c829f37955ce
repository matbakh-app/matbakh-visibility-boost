93bee0d39a6e7d999670ad6a15505ad4
"use strict";

/**
 * AI Orchestrator Caching Layer
 *
 * Implements:
 * - Redis/ElastiCache integration for response caching
 * - Intelligent cache key generation
 * - TTL-based cache invalidation
 * - Cache hit rate monitoring
 * - Performance optimization for frequent queries
 */
/* istanbul ignore next */
function cov_19xzcbd8ax() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/caching-layer.ts";
  var hash = "c8404129a0cb800c0d5f6288cab193761b7d4282";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/caching-layer.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 83
        }
      },
      "2": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "3": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 148
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "6": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "7": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "8": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "9": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "10": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "11": {
        start: {
          line: 43,
          column: 30
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "12": {
        start: {
          line: 44,
          column: 29
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "13": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "14": {
        start: {
          line: 46,
          column: 31
        },
        end: {
          line: 46,
          column: 116
        }
      },
      "15": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 65,
          column: 17
        }
      },
      "16": {
        start: {
          line: 48,
          column: 34
        },
        end: {
          line: 48,
          column: 52
        }
      },
      "17": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 54,
          column: 21
        }
      },
      "18": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 110
        }
      },
      "19": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 64
        }
      },
      "20": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "21": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 49
        }
      },
      "22": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "23": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 67
        }
      },
      "24": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "25": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 146
        }
      },
      "26": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 59
        }
      },
      "27": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 104
        }
      },
      "28": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 56
        }
      },
      "29": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 28
        }
      },
      "30": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "31": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "32": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 28
        }
      },
      "33": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "34": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "35": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "36": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 59
        }
      },
      "37": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "38": {
        start: {
          line: 87,
          column: 38
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "39": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 88,
          column: 38
        }
      },
      "40": {
        start: {
          line: 90,
          column: 37
        },
        end: {
          line: 90,
          column: 68
        }
      },
      "41": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 95,
          column: 17
        }
      },
      "42": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 68
        }
      },
      "43": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 38
        }
      },
      "44": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "45": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 142
        }
      },
      "46": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 39
        }
      },
      "47": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 57
        }
      },
      "48": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "49": {
        start: {
          line: 125,
          column: 92
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "50": {
        start: {
          line: 130,
          column: 21
        },
        end: {
          line: 132,
          column: 26
        }
      },
      "51": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "52": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 39
        }
      },
      "53": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 18
        }
      },
      "54": {
        start: {
          line: 144,
          column: 18
        },
        end: {
          line: 144,
          column: 40
        }
      },
      "55": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "56": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 21
        }
      },
      "57": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "58": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "59": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "60": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 23
        }
      },
      "61": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "62": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "63": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 136
        }
      },
      "64": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "65": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 181
        }
      },
      "66": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 26
        }
      },
      "67": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 35
        }
      },
      "68": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 34
        }
      },
      "69": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 28
        }
      },
      "70": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 35
        }
      },
      "71": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 34
        }
      },
      "72": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 201,
          column: 20
        }
      },
      "73": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 78
        }
      },
      "74": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 44
        }
      },
      "75": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 45
        }
      },
      "76": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 63
        }
      },
      "77": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "78": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "79": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 98
        }
      },
      "80": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 233,
          column: 18
        }
      },
      "81": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 59
        }
      },
      "82": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "83": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 88
        }
      },
      "84": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "85": {
        start: {
          line: 248,
          column: 33
        },
        end: {
          line: 248,
          column: 61
        }
      },
      "86": {
        start: {
          line: 250,
          column: 31
        },
        end: {
          line: 250,
          column: 119
        }
      },
      "87": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 264,
          column: 17
        }
      },
      "88": {
        start: {
          line: 254,
          column: 41
        },
        end: {
          line: 262,
          column: 21
        }
      },
      "89": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 263,
          column: 56
        }
      },
      "90": {
        start: {
          line: 274,
          column: 22
        },
        end: {
          line: 274,
          column: 31
        }
      },
      "91": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 297,
          column: 10
        }
      },
      "92": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 278,
          column: 14
        }
      },
      "93": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 46
        }
      },
      "94": {
        start: {
          line: 279,
          column: 44
        },
        end: {
          line: 284,
          column: 14
        }
      },
      "95": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 38
        }
      },
      "96": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 28
        }
      },
      "97": {
        start: {
          line: 285,
          column: 26
        },
        end: {
          line: 289,
          column: 14
        }
      },
      "98": {
        start: {
          line: 286,
          column: 32
        },
        end: {
          line: 286,
          column: 46
        }
      },
      "99": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 34
        }
      },
      "100": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 39
        }
      },
      "101": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 292,
          column: 14
        }
      },
      "102": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "103": {
        start: {
          line: 293,
          column: 27
        },
        end: {
          line: 296,
          column: 14
        }
      },
      "104": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 30
        }
      },
      "105": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 28
        }
      },
      "106": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "107": {
        start: {
          line: 305,
          column: 27
        },
        end: {
          line: 305,
          column: 29
        }
      },
      "108": {
        start: {
          line: 306,
          column: 30
        },
        end: {
          line: 306,
          column: 40
        }
      },
      "109": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "110": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 124
        }
      },
      "111": {
        start: {
          line: 310,
          column: 31
        },
        end: {
          line: 310,
          column: 122
        }
      },
      "112": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 313,
          column: 17
        }
      },
      "113": {
        start: {
          line: 312,
          column: 20
        },
        end: {
          line: 312,
          column: 66
        }
      },
      "114": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 108
        }
      },
      "115": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 66
        }
      },
      "116": {
        start: {
          line: 319,
          column: 28
        },
        end: {
          line: 319,
          column: 50
        }
      },
      "117": {
        start: {
          line: 320,
          column: 28
        },
        end: {
          line: 320,
          column: 64
        }
      },
      "118": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 326,
          column: 14
        }
      },
      "119": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 46
        }
      },
      "120": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 79
        }
      },
      "121": {
        start: {
          line: 342,
          column: 0
        },
        end: {
          line: 342,
          column: 36
        }
      },
      "122": {
        start: {
          line: 346,
          column: 27
        },
        end: {
          line: 348,
          column: 1
        }
      },
      "123": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 347,
          column: 36
        }
      },
      "124": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 349,
          column: 48
        }
      },
      "125": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 369,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 55
          },
          end: {
            line: 38,
            column: 56
          }
        },
        loc: {
          start: {
            line: 38,
            column: 68
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 27
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 79
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 80,
            column: 55
          },
          end: {
            line: 80,
            column: 56
          }
        },
        loc: {
          start: {
            line: 80,
            column: 68
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 80
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 30
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 114
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 125,
            column: 84
          },
          end: {
            line: 125,
            column: 85
          }
        },
        loc: {
          start: {
            line: 125,
            column: 92
          },
          end: {
            line: 128,
            column: 13
          }
        },
        line: 125
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 36
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 143
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        loc: {
          start: {
            line: 162,
            column: 23
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 162
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 55
          },
          end: {
            line: 163,
            column: 56
          }
        },
        loc: {
          start: {
            line: 163,
            column: 68
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 171
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 172,
            column: 55
          },
          end: {
            line: 172,
            column: 56
          }
        },
        loc: {
          start: {
            line: 172,
            column: 68
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 172
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 23
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 181
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 189
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 197
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 15
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 214
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 220
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 221,
            column: 56
          }
        },
        loc: {
          start: {
            line: 221,
            column: 68
          },
          end: {
            line: 238,
            column: 9
          }
        },
        line: 221
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 26
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 243
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 244,
            column: 55
          },
          end: {
            line: 244,
            column: 56
          }
        },
        loc: {
          start: {
            line: 244,
            column: 68
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 244
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 28
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 271
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 276,
            column: 17
          },
          end: {
            line: 276,
            column: 18
          }
        },
        loc: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 278,
            column: 14
          }
        },
        line: 276
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 276,
            column: 66
          },
          end: {
            line: 276,
            column: 67
          }
        },
        loc: {
          start: {
            line: 276,
            column: 79
          },
          end: {
            line: 278,
            column: 13
          }
        },
        line: 276
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 279,
            column: 17
          },
          end: {
            line: 279,
            column: 18
          }
        },
        loc: {
          start: {
            line: 279,
            column: 44
          },
          end: {
            line: 284,
            column: 14
          }
        },
        line: 279
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 279,
            column: 84
          },
          end: {
            line: 279,
            column: 85
          }
        },
        loc: {
          start: {
            line: 279,
            column: 97
          },
          end: {
            line: 284,
            column: 13
          }
        },
        line: 279
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 285,
            column: 17
          },
          end: {
            line: 285,
            column: 18
          }
        },
        loc: {
          start: {
            line: 285,
            column: 26
          },
          end: {
            line: 289,
            column: 14
          }
        },
        line: 285
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 285,
            column: 66
          },
          end: {
            line: 285,
            column: 67
          }
        },
        loc: {
          start: {
            line: 285,
            column: 79
          },
          end: {
            line: 289,
            column: 13
          }
        },
        line: 285
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 290,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        },
        loc: {
          start: {
            line: 290,
            column: 29
          },
          end: {
            line: 292,
            column: 14
          }
        },
        line: 290
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 290,
            column: 69
          },
          end: {
            line: 290,
            column: 70
          }
        },
        loc: {
          start: {
            line: 290,
            column: 82
          },
          end: {
            line: 292,
            column: 13
          }
        },
        line: 290
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 293,
            column: 21
          },
          end: {
            line: 293,
            column: 22
          }
        },
        loc: {
          start: {
            line: 293,
            column: 27
          },
          end: {
            line: 296,
            column: 14
          }
        },
        line: 293
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 293,
            column: 67
          },
          end: {
            line: 293,
            column: 68
          }
        },
        loc: {
          start: {
            line: 293,
            column: 80
          },
          end: {
            line: 296,
            column: 13
          }
        },
        line: 293
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 18
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 302
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 303,
            column: 55
          },
          end: {
            line: 303,
            column: 56
          }
        },
        loc: {
          start: {
            line: 303,
            column: 68
          },
          end: {
            line: 327,
            column: 9
          }
        },
        line: 303
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 332
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 28
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 338
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 346,
            column: 27
          },
          end: {
            line: 346,
            column: 28
          }
        },
        loc: {
          start: {
            line: 346,
            column: 39
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 346
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 20,
            column: 27
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 38
          },
          end: {
            line: 46,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 90
          },
          end: {
            line: 46,
            column: 96
          }
        }, {
          start: {
            line: 46,
            column: 99
          },
          end: {
            line: 46,
            column: 115
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 38
          },
          end: {
            line: 46,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 38
          },
          end: {
            line: 46,
            column: 70
          }
        }, {
          start: {
            line: 46,
            column: 74
          },
          end: {
            line: 46,
            column: 87
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 16
          },
          end: {
            line: 65,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 83
          },
          end: {
            line: 51,
            column: 89
          }
        }, {
          start: {
            line: 51,
            column: 92
          },
          end: {
            line: 51,
            column: 108
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 63
          }
        }, {
          start: {
            line: 51,
            column: 67
          },
          end: {
            line: 51,
            column: 80
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 40
          }
        }, {
          start: {
            line: 57,
            column: 44
          },
          end: {
            line: 57,
            column: 67
          }
        }],
        line: 57
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 79
          },
          end: {
            line: 62,
            column: 85
          }
        }, {
          start: {
            line: 62,
            column: 88
          },
          end: {
            line: 62,
            column: 144
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 59
          }
        }, {
          start: {
            line: 62,
            column: 63
          },
          end: {
            line: 62,
            column: 76
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 36
          }
        }, {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 82,
            column: 54
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 95,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 16
          },
          end: {
            line: 95,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 92,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 67
          }
        }, {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 43
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 75
          },
          end: {
            line: 103,
            column: 81
          }
        }, {
          start: {
            line: 103,
            column: 84
          },
          end: {
            line: 103,
            column: 140
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 23
          },
          end: {
            line: 103,
            column: 55
          }
        }, {
          start: {
            line: 103,
            column: 59
          },
          end: {
            line: 103,
            column: 72
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 128,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 68
          },
          end: {
            line: 125,
            column: 74
          }
        }, {
          start: {
            line: 125,
            column: 77
          },
          end: {
            line: 128,
            column: 15
          }
        }],
        line: 125
      },
      "19": {
        loc: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 48
          }
        }, {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 125,
            column: 65
          }
        }],
        line: 125
      },
      "20": {
        loc: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 138,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 14
          },
          end: {
            line: 137,
            column: 56
          }
        }, {
          start: {
            line: 138,
            column: 14
          },
          end: {
            line: 138,
            column: 17
          }
        }],
        line: 136
      },
      "21": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "22": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "23": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 156,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 70
          },
          end: {
            line: 165,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 86
          },
          end: {
            line: 165,
            column: 116
          }
        }, {
          start: {
            line: 165,
            column: 119
          },
          end: {
            line: 165,
            column: 132
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 175,
            column: 70
          },
          end: {
            line: 175,
            column: 177
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 71
          },
          end: {
            line: 175,
            column: 159
          }
        }, {
          start: {
            line: 175,
            column: 164
          },
          end: {
            line: 175,
            column: 177
          }
        }],
        line: 175
      },
      "26": {
        loc: {
          start: {
            line: 175,
            column: 71
          },
          end: {
            line: 175,
            column: 159
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 120
          },
          end: {
            line: 175,
            column: 126
          }
        }, {
          start: {
            line: 175,
            column: 129
          },
          end: {
            line: 175,
            column: 159
          }
        }],
        line: 175
      },
      "27": {
        loc: {
          start: {
            line: 175,
            column: 71
          },
          end: {
            line: 175,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 71
          },
          end: {
            line: 175,
            column: 100
          }
        }, {
          start: {
            line: 175,
            column: 104
          },
          end: {
            line: 175,
            column: 117
          }
        }],
        line: 175
      },
      "28": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 201,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 200,
            column: 18
          },
          end: {
            line: 200,
            column: 60
          }
        }, {
          start: {
            line: 201,
            column: 18
          },
          end: {
            line: 201,
            column: 19
          }
        }],
        line: 199
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 75
          },
          end: {
            line: 224,
            column: 81
          }
        }, {
          start: {
            line: 224,
            column: 84
          },
          end: {
            line: 224,
            column: 96
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 23
          },
          end: {
            line: 224,
            column: 55
          }
        }, {
          start: {
            line: 224,
            column: 59
          },
          end: {
            line: 224,
            column: 72
          }
        }],
        line: 224
      },
      "31": {
        loc: {
          start: {
            line: 250,
            column: 38
          },
          end: {
            line: 250,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 90
          },
          end: {
            line: 250,
            column: 96
          }
        }, {
          start: {
            line: 250,
            column: 99
          },
          end: {
            line: 250,
            column: 118
          }
        }],
        line: 250
      },
      "32": {
        loc: {
          start: {
            line: 250,
            column: 38
          },
          end: {
            line: 250,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 38
          },
          end: {
            line: 250,
            column: 70
          }
        }, {
          start: {
            line: 250,
            column: 74
          },
          end: {
            line: 250,
            column: 87
          }
        }],
        line: 250
      },
      "33": {
        loc: {
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 16
          },
          end: {
            line: 264,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "34": {
        loc: {
          start: {
            line: 277,
            column: 23
          },
          end: {
            line: 277,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 23
          },
          end: {
            line: 277,
            column: 37
          }
        }, {
          start: {
            line: 277,
            column: 41
          },
          end: {
            line: 277,
            column: 45
          }
        }],
        line: 277
      },
      "35": {
        loc: {
          start: {
            line: 288,
            column: 23
          },
          end: {
            line: 288,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 33
          },
          end: {
            line: 288,
            column: 34
          }
        }, {
          start: {
            line: 288,
            column: 37
          },
          end: {
            line: 288,
            column: 38
          }
        }],
        line: 288
      },
      "36": {
        loc: {
          start: {
            line: 291,
            column: 23
          },
          end: {
            line: 291,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 40
          },
          end: {
            line: 291,
            column: 41
          }
        }, {
          start: {
            line: 291,
            column: 44
          },
          end: {
            line: 291,
            column: 45
          }
        }],
        line: 291
      },
      "37": {
        loc: {
          start: {
            line: 309,
            column: 23
          },
          end: {
            line: 309,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 309,
            column: 75
          },
          end: {
            line: 309,
            column: 81
          }
        }, {
          start: {
            line: 309,
            column: 84
          },
          end: {
            line: 309,
            column: 122
          }
        }],
        line: 309
      },
      "38": {
        loc: {
          start: {
            line: 309,
            column: 23
          },
          end: {
            line: 309,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 23
          },
          end: {
            line: 309,
            column: 55
          }
        }, {
          start: {
            line: 309,
            column: 59
          },
          end: {
            line: 309,
            column: 72
          }
        }],
        line: 309
      },
      "39": {
        loc: {
          start: {
            line: 310,
            column: 38
          },
          end: {
            line: 310,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 310,
            column: 90
          },
          end: {
            line: 310,
            column: 96
          }
        }, {
          start: {
            line: 310,
            column: 99
          },
          end: {
            line: 310,
            column: 121
          }
        }],
        line: 310
      },
      "40": {
        loc: {
          start: {
            line: 310,
            column: 38
          },
          end: {
            line: 310,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 38
          },
          end: {
            line: 310,
            column: 70
          }
        }, {
          start: {
            line: 310,
            column: 74
          },
          end: {
            line: 310,
            column: 87
          }
        }],
        line: 310
      },
      "41": {
        loc: {
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 313,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 313,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "42": {
        loc: {
          start: {
            line: 314,
            column: 23
          },
          end: {
            line: 314,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 75
          },
          end: {
            line: 314,
            column: 81
          }
        }, {
          start: {
            line: 314,
            column: 84
          },
          end: {
            line: 314,
            column: 106
          }
        }],
        line: 314
      },
      "43": {
        loc: {
          start: {
            line: 314,
            column: 23
          },
          end: {
            line: 314,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 23
          },
          end: {
            line: 314,
            column: 55
          }
        }, {
          start: {
            line: 314,
            column: 59
          },
          end: {
            line: 314,
            column: 72
          }
        }],
        line: 314
      },
      "44": {
        loc: {
          start: {
            line: 320,
            column: 28
          },
          end: {
            line: 320,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 28
          },
          end: {
            line: 320,
            column: 47
          }
        }, {
          start: {
            line: 320,
            column: 51
          },
          end: {
            line: 320,
            column: 64
          }
        }],
        line: 320
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/caching-layer.ts",
      mappings: ";AAAA;;;;;;;;;GASG;;;;AAEH,mCAAoC;AA6BpC;;GAEG;AACH,MAAa,YAAY;IAMvB,YAAY,SAA+B,EAAE;QAC3C,IAAI,CAAC,MAAM,mBACT,OAAO,EAAE,IAAI,EACb,UAAU,EAAE,IAAI,EAChB,YAAY,EAAE,GAAG,EACjB,oBAAoB,EAAE,IAAI,EAC1B,aAAa,EAAE,GAAG,IACf,MAAM,CACV,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG;YACX,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC;YACV,aAAa,EAAE,CAAC;YAChB,cAAc,EAAE,CAAC;YACjB,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,IAAI,IAAI,EAAE;SACxB,CAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACG,GAAG,CAAC,OAAkB;;;YAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBACzB,OAAO,IAAI,CAAC;YACd,CAAC;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAEhD,IAAI,CAAC;gBACH,MAAM,MAAM,GAAG,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CAAC,QAAQ,CAAC,CAAA,CAAC;gBAErD,IAAI,MAAM,EAAE,CAAC;oBACX,MAAM,KAAK,GAAe,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBAE7C,YAAY;oBACZ,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;wBACpD,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CAAC,QAAQ,CAAC,CAAA,CAAC;wBACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;wBACxC,OAAO,IAAI,CAAC;oBACd,CAAC;oBAED,uBAAuB;oBACvB,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;oBAC9B,IAAI,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBAChD,QAAQ,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;oBAC7C,CAAC;oBAED,sBAAsB;oBACtB,KAAK,CAAC,WAAW,EAAE,CAAC;oBACpB,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CACzB,QAAQ,EACR,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACrB,IAAI,EACJ,KAAK,CAAC,GAAG,CACV,CAAA,CAAC;oBAEF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;oBACvC,uCACK,QAAQ,KACX,MAAM,EAAE,IAAI,EACZ,QAAQ,EAAE,IAAI,IACd;gBACJ,CAAC;gBAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;gBACxC,OAAO,IAAI,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;gBACzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;gBACxC,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACG,GAAG,CAAC,OAAkB,EAAE,QAAoB;;;YAChD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;gBAC3C,OAAO;YACT,CAAC;YAED,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAEhD,IAAI,CAAC;gBACH,IAAI,eAAe,GAAG,QAAQ,CAAC;gBAC/B,IAAI,UAAU,GAAG,KAAK,CAAC;gBAEvB,2BAA2B;gBAC3B,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;gBACrD,IACE,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB;oBAC/C,IAAI,CAAC,kBAAkB,EACvB,CAAC;oBACD,eAAe,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAChD,UAAU,GAAG,IAAI,CAAC;gBACpB,CAAC;gBAED,MAAM,KAAK,GAAe;oBACxB,QAAQ,EAAE,eAAe;oBACzB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;oBACrB,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC;oBACzC,UAAU;oBACV,WAAW,EAAE,CAAC;iBACf,CAAC;gBAEF,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CACzB,QAAQ,EACR,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EACrB,IAAI,EACJ,KAAK,CAAC,GAAG,CACV,CAAA,CAAC;gBAEF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACzB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACK,gBAAgB,CAAC,OAAkB;;QACzC,oDAAoD;QACpD,MAAM,OAAO,GAAG;YACd,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,OAAO,EAAE;gBACP,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM;gBAC9B,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM;gBAC9B,YAAY,EAAE,OAAO,CAAC,OAAO,CAAC,YAAY;gBAC1C,UAAU,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU;aACvC;YACD,KAAK,EAAE,MAAA,OAAO,CAAC,KAAK,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAChC,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,UAAU,EAAE,CAAC,CAAC,UAAU;aACzB,CAAC,CAAC;SACJ,CAAC;QAEF,MAAM,IAAI,GAAG,IAAA,mBAAU,EAAC,QAAQ,CAAC;aAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aAC/B,MAAM,CAAC,KAAK,CAAC,CAAC;QAEjB,MAAM,MAAM,GAAG,UAAU,CAAC;QAC1B,MAAM,GAAG,GAAG,GAAG,MAAM,IAAI,IAAI,EAAE,CAAC;QAEhC,gDAAgD;QAChD,OAAO,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY;YAC1C,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;YAC5C,CAAC,CAAC,GAAG,CAAC;IACV,CAAC;IAED;;OAEG;IACK,YAAY,CAAC,OAAkB,EAAE,QAAoB;QAC3D,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAEjC,sCAAsC;QACtC,IAAI,QAAQ,CAAC,QAAQ,GAAG,IAAI,EAAE,CAAC;YAC7B,GAAG,IAAI,CAAC,CAAC;QACX,CAAC;QAED,yCAAyC;QACzC,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YACzC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,gBAAgB;QAC5C,CAAC;QAED,iCAAiC;QACjC,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YACzC,GAAG,IAAI,GAAG,CAAC;QACb,CAAC;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;OAEG;IACW,QAAQ,CAAC,QAAoB;;YACzC,yDAAyD;YACzD,uCACK,QAAQ,KACX,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IACpE;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,UAAU,CAAC,QAAoB;;;YAC3C,kCAAkC;YAClC,uCACK,QAAQ,KACX,IAAI,EAAE,CAAA,MAAA,QAAQ,CAAC,IAAI,0CAAE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,KAAI,QAAQ,CAAC,IAAI,IACjE;QACJ,CAAC;KAAA;IAED;;OAEG;IACK,SAAS,CAAC,OAAe;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,UAAU,CAAC,OAAe;QAChC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACK,WAAW,CAAC,OAAe;QACjC,IAAI,CAAC,KAAK,CAAC,OAAO;YAChB,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC;gBAC1B,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa;gBAC5C,CAAC,CAAC,CAAC,CAAC;QAER,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACtE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,yBAAY,IAAI,CAAC,KAAK,EAAG;IAC3B,CAAC;IAED;;OAEG;IACH,mBAAmB;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;IACzD,CAAC;IAED;;OAEG;IACG,KAAK;;;YACT,IAAI,CAAC;gBACH,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,OAAO,EAAE,CAAA,CAAC;gBAClC,IAAI,CAAC,KAAK,GAAG;oBACX,IAAI,EAAE,CAAC;oBACP,MAAM,EAAE,CAAC;oBACT,OAAO,EAAE,CAAC;oBACV,aAAa,EAAE,CAAC;oBAChB,cAAc,EAAE,CAAC;oBACjB,SAAS,EAAE,CAAC;oBACZ,WAAW,EAAE,IAAI,IAAI,EAAE;iBACxB,CAAC;YACJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACG,MAAM,CAAC,aAA0B;;;YACrC,OAAO,CAAC,GAAG,CAAC,yBAAyB,aAAa,CAAC,MAAM,iBAAiB,CAAC,CAAC;YAE5E,KAAK,MAAM,KAAK,IAAI,aAAa,EAAE,CAAC;gBAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAE9C,0BAA0B;gBAC1B,MAAM,MAAM,GAAG,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,MAAM,CAAC,QAAQ,CAAC,CAAA,CAAC;gBACxD,IAAI,CAAC,MAAM,EAAE,CAAC;oBACZ,uDAAuD;oBACvD,sCAAsC;oBACtC,MAAM,YAAY,GAAe;wBAC/B,IAAI,EAAE,wBAAwB,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK;wBAChE,QAAQ,EAAE,SAAS;wBACnB,OAAO,EAAE,cAAc;wBACvB,SAAS,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE,EAAE;wBAChC,SAAS,EAAE,CAAC;wBACZ,QAAQ,EAAE,CAAC;wBACX,OAAO,EAAE,IAAI;qBACd,CAAC;oBAEF,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACK,qBAAqB;QAC3B,2DAA2D;QAC3D,wDAAwD;QACxD,MAAM,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;QAExC,IAAI,CAAC,WAAW,GAAG;YACjB,GAAG,EAAE,CAAO,GAAW,EAAE,EAAE;gBACzB,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;YAChC,CAAC,CAAA;YACD,GAAG,EAAE,CAAO,GAAW,EAAE,KAAa,EAAE,IAAa,EAAE,GAAY,EAAE,EAAE;gBACrE,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gBACtB,iEAAiE;gBACjE,yCAAyC;gBACzC,OAAO,IAAI,CAAC;YACd,CAAC,CAAA;YACD,GAAG,EAAE,CAAO,GAAW,EAAE,EAAE;gBACzB,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC/B,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAClB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzB,CAAC,CAAA;YACD,MAAM,EAAE,CAAO,GAAW,EAAE,EAAE;gBAC5B,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAA;YACD,OAAO,EAAE,GAAS,EAAE;gBAClB,KAAK,CAAC,KAAK,EAAE,CAAC;gBACd,OAAO,IAAI,CAAC;YACd,CAAC,CAAA;SACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACG,WAAW;;;YAMf,MAAM,MAAM,GAAa,EAAE,CAAC;YAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAE7B,IAAI,CAAC;gBACH,0BAA0B;gBAC1B,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA,CAAC;gBAC5D,MAAM,MAAM,GAAG,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CAAC,cAAc,CAAC,CAAA,CAAC;gBAE3D,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;oBACpB,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;gBAChD,CAAC;gBAED,MAAM,CAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,GAAG,CAAC,cAAc,CAAC,CAAA,CAAC;YAC9C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC,6BAA6B,KAAK,EAAE,CAAC,CAAC;YACpD,CAAC;YAED,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YACvC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,UAAU;YAEhE,OAAO;gBACL,OAAO;gBACP,OAAO;gBACP,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC3B,MAAM;aACP,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACH,SAAS;QACP,yBAAY,IAAI,CAAC,MAAM,EAAG;IAC5B,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,SAA+B;QAC1C,IAAI,CAAC,MAAM,mCAAQ,IAAI,CAAC,MAAM,GAAK,SAAS,CAAE,CAAC;IACjD,CAAC;CACF;AAlYD,oCAkYC;AAED;;GAEG;AACI,MAAM,kBAAkB,GAAG,CAChC,MAA6B,EACf,EAAE;IAChB,OAAO,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;AAClC,CAAC,CAAC;AAJW,QAAA,kBAAkB,sBAI7B;AAEF;;GAEG;AACU,QAAA,aAAa,GAAG;IAC3B,WAAW,EAAE;QACX,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,GAAG,EAAE,YAAY;QAC7B,aAAa,EAAE,GAAG;KACnB;IACD,OAAO,EAAE;QACP,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,IAAI,EAAE,aAAa;QAC/B,aAAa,EAAE,GAAG;KACnB;IACD,UAAU,EAAE;QACV,OAAO,EAAE,IAAI;QACb,UAAU,EAAE,IAAI,EAAE,SAAS;QAC3B,aAAa,EAAE,GAAG;KACnB;CACO,CAAC",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/caching-layer.ts"],
      sourcesContent: ["/**\n * AI Orchestrator Caching Layer\n *\n * Implements:\n * - Redis/ElastiCache integration for response caching\n * - Intelligent cache key generation\n * - TTL-based cache invalidation\n * - Cache hit rate monitoring\n * - Performance optimization for frequent queries\n */\n\nimport { createHash } from \"crypto\";\nimport { AiRequest, AiResponse } from \"./types\";\n\nexport interface CacheConfig {\n  enabled: boolean;\n  ttlSeconds: number;\n  maxKeyLength: number;\n  compressionThreshold: number;\n  hitRateTarget: number;\n}\n\nexport interface CacheStats {\n  hits: number;\n  misses: number;\n  hitRate: number;\n  totalRequests: number;\n  averageLatency: number;\n  cacheSize: number;\n  lastUpdated: Date;\n}\n\nexport interface CacheEntry {\n  response: AiResponse;\n  timestamp: number;\n  ttl: number;\n  compressed: boolean;\n  accessCount: number;\n}\n\n/**\n * Redis-based Caching Layer for AI Responses\n */\nexport class CachingLayer {\n  private config: CacheConfig;\n  private stats: CacheStats;\n  private redisClient: any; // Redis client interface\n  private compressionEnabled: boolean;\n\n  constructor(config: Partial<CacheConfig> = {}) {\n    this.config = {\n      enabled: true,\n      ttlSeconds: 3600, // 1 hour default\n      maxKeyLength: 250,\n      compressionThreshold: 1024, // Compress responses > 1KB\n      hitRateTarget: 0.8, // 80% target hit rate\n      ...config,\n    };\n\n    this.stats = {\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      totalRequests: 0,\n      averageLatency: 0,\n      cacheSize: 0,\n      lastUpdated: new Date(),\n    };\n\n    this.compressionEnabled = true;\n    this.initializeRedisClient();\n  }\n\n  /**\n   * Get cached response for request\n   */\n  async get(request: AiRequest): Promise<AiResponse | null> {\n    if (!this.config.enabled) {\n      return null;\n    }\n\n    const startTime = Date.now();\n    const cacheKey = this.generateCacheKey(request);\n\n    try {\n      const cached = await this.redisClient?.get(cacheKey);\n\n      if (cached) {\n        const entry: CacheEntry = JSON.parse(cached);\n\n        // Check TTL\n        if (Date.now() - entry.timestamp > entry.ttl * 1000) {\n          await this.redisClient?.del(cacheKey);\n          this.recordMiss(Date.now() - startTime);\n          return null;\n        }\n\n        // Decompress if needed\n        let response = entry.response;\n        if (entry.compressed && this.compressionEnabled) {\n          response = await this.decompress(response);\n        }\n\n        // Update access count\n        entry.accessCount++;\n        await this.redisClient?.set(\n          cacheKey,\n          JSON.stringify(entry),\n          \"EX\",\n          entry.ttl\n        );\n\n        this.recordHit(Date.now() - startTime);\n        return {\n          ...response,\n          cached: true,\n          cacheHit: true,\n        };\n      }\n\n      this.recordMiss(Date.now() - startTime);\n      return null;\n    } catch (error) {\n      console.error(\"Cache get error:\", error);\n      this.recordMiss(Date.now() - startTime);\n      return null;\n    }\n  }\n\n  /**\n   * Store response in cache\n   */\n  async set(request: AiRequest, response: AiResponse): Promise<void> {\n    if (!this.config.enabled || response.error) {\n      return;\n    }\n\n    const cacheKey = this.generateCacheKey(request);\n\n    try {\n      let responseToCache = response;\n      let compressed = false;\n\n      // Compress large responses\n      const responseSize = JSON.stringify(response).length;\n      if (\n        responseSize > this.config.compressionThreshold &&\n        this.compressionEnabled\n      ) {\n        responseToCache = await this.compress(response);\n        compressed = true;\n      }\n\n      const entry: CacheEntry = {\n        response: responseToCache,\n        timestamp: Date.now(),\n        ttl: this.calculateTTL(request, response),\n        compressed,\n        accessCount: 0,\n      };\n\n      await this.redisClient?.set(\n        cacheKey,\n        JSON.stringify(entry),\n        \"EX\",\n        entry.ttl\n      );\n\n      this.stats.cacheSize++;\n    } catch (error) {\n      console.error(\"Cache set error:\", error);\n    }\n  }\n\n  /**\n   * Generate cache key from request\n   */\n  private generateCacheKey(request: AiRequest): string {\n    // Create deterministic hash from request parameters\n    const keyData = {\n      prompt: request.prompt,\n      context: {\n        domain: request.context.domain,\n        locale: request.context.locale,\n        requireTools: request.context.requireTools,\n        budgetTier: request.context.budgetTier,\n      },\n      tools: request.tools?.map((t) => ({\n        name: t.name,\n        parameters: t.parameters,\n      })),\n    };\n\n    const hash = createHash(\"sha256\")\n      .update(JSON.stringify(keyData))\n      .digest(\"hex\");\n\n    const prefix = \"ai-cache\";\n    const key = `${prefix}:${hash}`;\n\n    // Ensure key length doesn't exceed Redis limits\n    return key.length > this.config.maxKeyLength\n      ? key.substring(0, this.config.maxKeyLength)\n      : key;\n  }\n\n  /**\n   * Calculate TTL based on request characteristics\n   */\n  private calculateTTL(request: AiRequest, response: AiResponse): number {\n    let ttl = this.config.ttlSeconds;\n\n    // Longer TTL for expensive operations\n    if (response.costEuro > 0.01) {\n      ttl *= 2;\n    }\n\n    // Shorter TTL for time-sensitive domains\n    if (request.context.domain === \"support\") {\n      ttl = Math.min(ttl, 300); // 5 minutes max\n    }\n\n    // Longer TTL for general queries\n    if (request.context.domain === \"general\") {\n      ttl *= 1.5;\n    }\n\n    return ttl;\n  }\n\n  /**\n   * Compress response data\n   */\n  private async compress(response: AiResponse): Promise<AiResponse> {\n    // Simple compression simulation - in production use zlib\n    return {\n      ...response,\n      text: response.text ? `[COMPRESSED]${response.text}` : response.text,\n    };\n  }\n\n  /**\n   * Decompress response data\n   */\n  private async decompress(response: AiResponse): Promise<AiResponse> {\n    // Simple decompression simulation\n    return {\n      ...response,\n      text: response.text?.replace(\"[COMPRESSED]\", \"\") || response.text,\n    };\n  }\n\n  /**\n   * Record cache hit\n   */\n  private recordHit(latency: number): void {\n    this.stats.hits++;\n    this.stats.totalRequests++;\n    this.updateStats(latency);\n  }\n\n  /**\n   * Record cache miss\n   */\n  private recordMiss(latency: number): void {\n    this.stats.misses++;\n    this.stats.totalRequests++;\n    this.updateStats(latency);\n  }\n\n  /**\n   * Update cache statistics\n   */\n  private updateStats(latency: number): void {\n    this.stats.hitRate =\n      this.stats.totalRequests > 0\n        ? this.stats.hits / this.stats.totalRequests\n        : 0;\n\n    this.stats.averageLatency = (this.stats.averageLatency + latency) / 2;\n    this.stats.lastUpdated = new Date();\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getStats(): CacheStats {\n    return { ...this.stats };\n  }\n\n  /**\n   * Check if cache performance meets targets\n   */\n  isPerformanceTarget(): boolean {\n    return this.stats.hitRate >= this.config.hitRateTarget;\n  }\n\n  /**\n   * Clear cache\n   */\n  async clear(): Promise<void> {\n    try {\n      await this.redisClient?.flushdb();\n      this.stats = {\n        hits: 0,\n        misses: 0,\n        hitRate: 0,\n        totalRequests: 0,\n        averageLatency: 0,\n        cacheSize: 0,\n        lastUpdated: new Date(),\n      };\n    } catch (error) {\n      console.error(\"Cache clear error:\", error);\n    }\n  }\n\n  /**\n   * Warm up cache with common queries\n   */\n  async warmUp(commonQueries: AiRequest[]): Promise<void> {\n    console.log(`Warming up cache with ${commonQueries.length} common queries`);\n\n    for (const query of commonQueries) {\n      const cacheKey = this.generateCacheKey(query);\n\n      // Check if already cached\n      const exists = await this.redisClient?.exists(cacheKey);\n      if (!exists) {\n        // In production, this would trigger actual AI requests\n        // For now, create placeholder entries\n        const mockResponse: AiResponse = {\n          text: `Cached response for: ${query.prompt.substring(0, 50)}...`,\n          provider: \"bedrock\",\n          modelId: \"cache-warmed\",\n          requestId: `cache-${Date.now()}`,\n          latencyMs: 0,\n          costEuro: 0,\n          success: true,\n        };\n\n        await this.set(query, mockResponse);\n      }\n    }\n  }\n\n  /**\n   * Initialize Redis client\n   */\n  private initializeRedisClient(): void {\n    // In production, this would initialize actual Redis client\n    // For now, use in-memory mock that actually stores data\n    const store = new Map<string, string>();\n\n    this.redisClient = {\n      get: async (key: string) => {\n        return store.get(key) || null;\n      },\n      set: async (key: string, value: string, mode?: string, ttl?: number) => {\n        store.set(key, value);\n        // In a real implementation, TTL would be handled with setTimeout\n        // For testing purposes, we'll ignore TTL\n        return \"OK\";\n      },\n      del: async (key: string) => {\n        const existed = store.has(key);\n        store.delete(key);\n        return existed ? 1 : 0;\n      },\n      exists: async (key: string) => {\n        return store.has(key) ? 1 : 0;\n      },\n      flushdb: async () => {\n        store.clear();\n        return \"OK\";\n      },\n    };\n  }\n\n  /**\n   * Health check for cache system\n   */\n  async healthCheck(): Promise<{\n    healthy: boolean;\n    latency: number;\n    hitRate: number;\n    errors: string[];\n  }> {\n    const errors: string[] = [];\n    const startTime = Date.now();\n\n    try {\n      // Test Redis connectivity\n      await this.redisClient?.set(\"health-check\", \"ok\", \"EX\", 10);\n      const result = await this.redisClient?.get(\"health-check\");\n\n      if (result !== \"ok\") {\n        errors.push(\"Redis connectivity test failed\");\n      }\n\n      await this.redisClient?.del(\"health-check\");\n    } catch (error) {\n      errors.push(`Redis health check error: ${error}`);\n    }\n\n    const latency = Date.now() - startTime;\n    const healthy = errors.length === 0 && latency < 100; // < 100ms\n\n    return {\n      healthy,\n      latency,\n      hitRate: this.stats.hitRate,\n      errors,\n    };\n  }\n\n  /**\n   * Get cache configuration\n   */\n  getConfig(): CacheConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update cache configuration\n   */\n  updateConfig(newConfig: Partial<CacheConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n  }\n}\n\n/**\n * Factory function for creating caching layer\n */\nexport const createCachingLayer = (\n  config?: Partial<CacheConfig>\n): CachingLayer => {\n  return new CachingLayer(config);\n};\n\n/**\n * Default cache configurations for different environments\n */\nexport const CACHE_CONFIGS = {\n  development: {\n    enabled: true,\n    ttlSeconds: 300, // 5 minutes\n    hitRateTarget: 0.5,\n  },\n  staging: {\n    enabled: true,\n    ttlSeconds: 1800, // 30 minutes\n    hitRateTarget: 0.7,\n  },\n  production: {\n    enabled: true,\n    ttlSeconds: 3600, // 1 hour\n    hitRateTarget: 0.8,\n  },\n} as const;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c8404129a0cb800c0d5f6288cab193761b7d4282"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19xzcbd8ax = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19xzcbd8ax();
cov_19xzcbd8ax().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19xzcbd8ax().s[1]++;
exports.CACHE_CONFIGS = exports.createCachingLayer = exports.CachingLayer = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_19xzcbd8ax().s[2]++, require("tslib"));
const crypto_1 =
/* istanbul ignore next */
(cov_19xzcbd8ax().s[3]++, require("crypto"));
/**
 * Redis-based Caching Layer for AI Responses
 */
class CachingLayer {
  constructor(config =
  /* istanbul ignore next */
  (cov_19xzcbd8ax().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[0]++;
    cov_19xzcbd8ax().s[4]++;
    this.config = Object.assign({
      enabled: true,
      ttlSeconds: 3600,
      maxKeyLength: 250,
      compressionThreshold: 1024,
      hitRateTarget: 0.8
    }, config);
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[5]++;
    this.stats = {
      hits: 0,
      misses: 0,
      hitRate: 0,
      totalRequests: 0,
      averageLatency: 0,
      cacheSize: 0,
      lastUpdated: new Date()
    };
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[6]++;
    this.compressionEnabled = true;
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[7]++;
    this.initializeRedisClient();
  }
  /**
   * Get cached response for request
   */
  get(request) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[1]++;
    cov_19xzcbd8ax().s[8]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[2]++;
      var _a, _b, _c;
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[9]++;
      if (!this.config.enabled) {
        /* istanbul ignore next */
        cov_19xzcbd8ax().b[1][0]++;
        cov_19xzcbd8ax().s[10]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_19xzcbd8ax().b[1][1]++;
      }
      const startTime =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[11]++, Date.now());
      const cacheKey =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[12]++, this.generateCacheKey(request));
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[13]++;
      try {
        const cached =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[14]++, yield /* istanbul ignore next */(cov_19xzcbd8ax().b[3][0]++, (_a = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[3][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[2][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[2][1]++, _a.get(cacheKey)));
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[15]++;
        if (cached) {
          /* istanbul ignore next */
          cov_19xzcbd8ax().b[4][0]++;
          const entry =
          /* istanbul ignore next */
          (cov_19xzcbd8ax().s[16]++, JSON.parse(cached));
          // Check TTL
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[17]++;
          if (Date.now() - entry.timestamp > entry.ttl * 1000) {
            /* istanbul ignore next */
            cov_19xzcbd8ax().b[5][0]++;
            cov_19xzcbd8ax().s[18]++;
            yield /* istanbul ignore next */(cov_19xzcbd8ax().b[7][0]++, (_b = this.redisClient) === null) ||
            /* istanbul ignore next */
            (cov_19xzcbd8ax().b[7][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_19xzcbd8ax().b[6][0]++, void 0) :
            /* istanbul ignore next */
            (cov_19xzcbd8ax().b[6][1]++, _b.del(cacheKey));
            /* istanbul ignore next */
            cov_19xzcbd8ax().s[19]++;
            this.recordMiss(Date.now() - startTime);
            /* istanbul ignore next */
            cov_19xzcbd8ax().s[20]++;
            return null;
          } else
          /* istanbul ignore next */
          {
            cov_19xzcbd8ax().b[5][1]++;
          }
          // Decompress if needed
          let response =
          /* istanbul ignore next */
          (cov_19xzcbd8ax().s[21]++, entry.response);
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[22]++;
          if (
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[9][0]++, entry.compressed) &&
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[9][1]++, this.compressionEnabled)) {
            /* istanbul ignore next */
            cov_19xzcbd8ax().b[8][0]++;
            cov_19xzcbd8ax().s[23]++;
            response = yield this.decompress(response);
          } else
          /* istanbul ignore next */
          {
            cov_19xzcbd8ax().b[8][1]++;
          }
          // Update access count
          cov_19xzcbd8ax().s[24]++;
          entry.accessCount++;
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[25]++;
          yield /* istanbul ignore next */(cov_19xzcbd8ax().b[11][0]++, (_c = this.redisClient) === null) ||
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[11][1]++, _c === void 0) ?
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[10][0]++, void 0) :
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[10][1]++, _c.set(cacheKey, JSON.stringify(entry), "EX", entry.ttl));
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[26]++;
          this.recordHit(Date.now() - startTime);
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[27]++;
          return Object.assign(Object.assign({}, response), {
            cached: true,
            cacheHit: true
          });
        } else
        /* istanbul ignore next */
        {
          cov_19xzcbd8ax().b[4][1]++;
        }
        cov_19xzcbd8ax().s[28]++;
        this.recordMiss(Date.now() - startTime);
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[29]++;
        return null;
      } catch (error) {
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[30]++;
        console.error("Cache get error:", error);
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[31]++;
        this.recordMiss(Date.now() - startTime);
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[32]++;
        return null;
      }
    });
  }
  /**
   * Store response in cache
   */
  set(request, response) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[3]++;
    cov_19xzcbd8ax().s[33]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[4]++;
      var _a;
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[13][0]++, !this.config.enabled) ||
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[13][1]++, response.error)) {
        /* istanbul ignore next */
        cov_19xzcbd8ax().b[12][0]++;
        cov_19xzcbd8ax().s[35]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_19xzcbd8ax().b[12][1]++;
      }
      const cacheKey =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[36]++, this.generateCacheKey(request));
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[37]++;
      try {
        let responseToCache =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[38]++, response);
        let compressed =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[39]++, false);
        // Compress large responses
        const responseSize =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[40]++, JSON.stringify(response).length);
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[41]++;
        if (
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[15][0]++, responseSize > this.config.compressionThreshold) &&
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[15][1]++, this.compressionEnabled)) {
          /* istanbul ignore next */
          cov_19xzcbd8ax().b[14][0]++;
          cov_19xzcbd8ax().s[42]++;
          responseToCache = yield this.compress(response);
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[43]++;
          compressed = true;
        } else
        /* istanbul ignore next */
        {
          cov_19xzcbd8ax().b[14][1]++;
        }
        const entry =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[44]++, {
          response: responseToCache,
          timestamp: Date.now(),
          ttl: this.calculateTTL(request, response),
          compressed,
          accessCount: 0
        });
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[45]++;
        yield /* istanbul ignore next */(cov_19xzcbd8ax().b[17][0]++, (_a = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[17][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[16][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[16][1]++, _a.set(cacheKey, JSON.stringify(entry), "EX", entry.ttl));
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[46]++;
        this.stats.cacheSize++;
      } catch (error) {
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[47]++;
        console.error("Cache set error:", error);
      }
    });
  }
  /**
   * Generate cache key from request
   */
  generateCacheKey(request) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[5]++;
    var _a;
    // Create deterministic hash from request parameters
    const keyData =
    /* istanbul ignore next */
    (cov_19xzcbd8ax().s[48]++, {
      prompt: request.prompt,
      context: {
        domain: request.context.domain,
        locale: request.context.locale,
        requireTools: request.context.requireTools,
        budgetTier: request.context.budgetTier
      },
      tools:
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[19][0]++, (_a = request.tools) === null) ||
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[19][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[18][0]++, void 0) :
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[18][1]++, _a.map(t => {
        /* istanbul ignore next */
        cov_19xzcbd8ax().f[6]++;
        cov_19xzcbd8ax().s[49]++;
        return {
          name: t.name,
          parameters: t.parameters
        };
      }))
    });
    const hash =
    /* istanbul ignore next */
    (cov_19xzcbd8ax().s[50]++, (0, crypto_1.createHash)("sha256").update(JSON.stringify(keyData)).digest("hex"));
    const prefix =
    /* istanbul ignore next */
    (cov_19xzcbd8ax().s[51]++, "ai-cache");
    const key =
    /* istanbul ignore next */
    (cov_19xzcbd8ax().s[52]++, `${prefix}:${hash}`);
    // Ensure key length doesn't exceed Redis limits
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[53]++;
    return key.length > this.config.maxKeyLength ?
    /* istanbul ignore next */
    (cov_19xzcbd8ax().b[20][0]++, key.substring(0, this.config.maxKeyLength)) :
    /* istanbul ignore next */
    (cov_19xzcbd8ax().b[20][1]++, key);
  }
  /**
   * Calculate TTL based on request characteristics
   */
  calculateTTL(request, response) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[7]++;
    let ttl =
    /* istanbul ignore next */
    (cov_19xzcbd8ax().s[54]++, this.config.ttlSeconds);
    // Longer TTL for expensive operations
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[55]++;
    if (response.costEuro > 0.01) {
      /* istanbul ignore next */
      cov_19xzcbd8ax().b[21][0]++;
      cov_19xzcbd8ax().s[56]++;
      ttl *= 2;
    } else
    /* istanbul ignore next */
    {
      cov_19xzcbd8ax().b[21][1]++;
    }
    // Shorter TTL for time-sensitive domains
    cov_19xzcbd8ax().s[57]++;
    if (request.context.domain === "support") {
      /* istanbul ignore next */
      cov_19xzcbd8ax().b[22][0]++;
      cov_19xzcbd8ax().s[58]++;
      ttl = Math.min(ttl, 300); // 5 minutes max
    } else
    /* istanbul ignore next */
    {
      cov_19xzcbd8ax().b[22][1]++;
    }
    // Longer TTL for general queries
    cov_19xzcbd8ax().s[59]++;
    if (request.context.domain === "general") {
      /* istanbul ignore next */
      cov_19xzcbd8ax().b[23][0]++;
      cov_19xzcbd8ax().s[60]++;
      ttl *= 1.5;
    } else
    /* istanbul ignore next */
    {
      cov_19xzcbd8ax().b[23][1]++;
    }
    cov_19xzcbd8ax().s[61]++;
    return ttl;
  }
  /**
   * Compress response data
   */
  compress(response) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[8]++;
    cov_19xzcbd8ax().s[62]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[9]++;
      cov_19xzcbd8ax().s[63]++;
      // Simple compression simulation - in production use zlib
      return Object.assign(Object.assign({}, response), {
        text: response.text ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[24][0]++, `[COMPRESSED]${response.text}`) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[24][1]++, response.text)
      });
    });
  }
  /**
   * Decompress response data
   */
  decompress(response) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[10]++;
    cov_19xzcbd8ax().s[64]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[11]++;
      var _a;
      // Simple decompression simulation
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[65]++;
      return Object.assign(Object.assign({}, response), {
        text:
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[25][0]++,
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[27][0]++, (_a = response.text) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[27][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[26][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[26][1]++, _a.replace("[COMPRESSED]", ""))) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[25][1]++, response.text)
      });
    });
  }
  /**
   * Record cache hit
   */
  recordHit(latency) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[12]++;
    cov_19xzcbd8ax().s[66]++;
    this.stats.hits++;
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[67]++;
    this.stats.totalRequests++;
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[68]++;
    this.updateStats(latency);
  }
  /**
   * Record cache miss
   */
  recordMiss(latency) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[13]++;
    cov_19xzcbd8ax().s[69]++;
    this.stats.misses++;
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[70]++;
    this.stats.totalRequests++;
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[71]++;
    this.updateStats(latency);
  }
  /**
   * Update cache statistics
   */
  updateStats(latency) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[14]++;
    cov_19xzcbd8ax().s[72]++;
    this.stats.hitRate = this.stats.totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_19xzcbd8ax().b[28][0]++, this.stats.hits / this.stats.totalRequests) :
    /* istanbul ignore next */
    (cov_19xzcbd8ax().b[28][1]++, 0);
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[73]++;
    this.stats.averageLatency = (this.stats.averageLatency + latency) / 2;
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[74]++;
    this.stats.lastUpdated = new Date();
  }
  /**
   * Get cache statistics
   */
  getStats() {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[15]++;
    cov_19xzcbd8ax().s[75]++;
    return Object.assign({}, this.stats);
  }
  /**
   * Check if cache performance meets targets
   */
  isPerformanceTarget() {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[16]++;
    cov_19xzcbd8ax().s[76]++;
    return this.stats.hitRate >= this.config.hitRateTarget;
  }
  /**
   * Clear cache
   */
  clear() {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[17]++;
    cov_19xzcbd8ax().s[77]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[18]++;
      var _a;
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[78]++;
      try {
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[79]++;
        yield /* istanbul ignore next */(cov_19xzcbd8ax().b[30][0]++, (_a = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[30][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[29][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[29][1]++, _a.flushdb());
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[80]++;
        this.stats = {
          hits: 0,
          misses: 0,
          hitRate: 0,
          totalRequests: 0,
          averageLatency: 0,
          cacheSize: 0,
          lastUpdated: new Date()
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[81]++;
        console.error("Cache clear error:", error);
      }
    });
  }
  /**
   * Warm up cache with common queries
   */
  warmUp(commonQueries) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[19]++;
    cov_19xzcbd8ax().s[82]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[20]++;
      var _a;
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[83]++;
      console.log(`Warming up cache with ${commonQueries.length} common queries`);
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[84]++;
      for (const query of commonQueries) {
        const cacheKey =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[85]++, this.generateCacheKey(query));
        // Check if already cached
        const exists =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[86]++, yield /* istanbul ignore next */(cov_19xzcbd8ax().b[32][0]++, (_a = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[32][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[31][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[31][1]++, _a.exists(cacheKey)));
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[87]++;
        if (!exists) {
          /* istanbul ignore next */
          cov_19xzcbd8ax().b[33][0]++;
          // In production, this would trigger actual AI requests
          // For now, create placeholder entries
          const mockResponse =
          /* istanbul ignore next */
          (cov_19xzcbd8ax().s[88]++, {
            text: `Cached response for: ${query.prompt.substring(0, 50)}...`,
            provider: "bedrock",
            modelId: "cache-warmed",
            requestId: `cache-${Date.now()}`,
            latencyMs: 0,
            costEuro: 0,
            success: true
          });
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[89]++;
          yield this.set(query, mockResponse);
        } else
        /* istanbul ignore next */
        {
          cov_19xzcbd8ax().b[33][1]++;
        }
      }
    });
  }
  /**
   * Initialize Redis client
   */
  initializeRedisClient() {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[21]++;
    // In production, this would initialize actual Redis client
    // For now, use in-memory mock that actually stores data
    const store =
    /* istanbul ignore next */
    (cov_19xzcbd8ax().s[90]++, new Map());
    /* istanbul ignore next */
    cov_19xzcbd8ax().s[91]++;
    this.redisClient = {
      get: key => {
        /* istanbul ignore next */
        cov_19xzcbd8ax().f[22]++;
        cov_19xzcbd8ax().s[92]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_19xzcbd8ax().f[23]++;
          cov_19xzcbd8ax().s[93]++;
          return /* istanbul ignore next */(cov_19xzcbd8ax().b[34][0]++, store.get(key)) ||
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[34][1]++, null);
        });
      },
      set: (key, value, mode, ttl) => {
        /* istanbul ignore next */
        cov_19xzcbd8ax().f[24]++;
        cov_19xzcbd8ax().s[94]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_19xzcbd8ax().f[25]++;
          cov_19xzcbd8ax().s[95]++;
          store.set(key, value);
          // In a real implementation, TTL would be handled with setTimeout
          // For testing purposes, we'll ignore TTL
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[96]++;
          return "OK";
        });
      },
      del: key => {
        /* istanbul ignore next */
        cov_19xzcbd8ax().f[26]++;
        cov_19xzcbd8ax().s[97]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_19xzcbd8ax().f[27]++;
          const existed =
          /* istanbul ignore next */
          (cov_19xzcbd8ax().s[98]++, store.has(key));
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[99]++;
          store.delete(key);
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[100]++;
          return existed ?
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[35][0]++, 1) :
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[35][1]++, 0);
        });
      },
      exists: key => {
        /* istanbul ignore next */
        cov_19xzcbd8ax().f[28]++;
        cov_19xzcbd8ax().s[101]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_19xzcbd8ax().f[29]++;
          cov_19xzcbd8ax().s[102]++;
          return store.has(key) ?
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[36][0]++, 1) :
          /* istanbul ignore next */
          (cov_19xzcbd8ax().b[36][1]++, 0);
        });
      },
      flushdb: () => {
        /* istanbul ignore next */
        cov_19xzcbd8ax().f[30]++;
        cov_19xzcbd8ax().s[103]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_19xzcbd8ax().f[31]++;
          cov_19xzcbd8ax().s[104]++;
          store.clear();
          /* istanbul ignore next */
          cov_19xzcbd8ax().s[105]++;
          return "OK";
        });
      }
    };
  }
  /**
   * Health check for cache system
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[32]++;
    cov_19xzcbd8ax().s[106]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19xzcbd8ax().f[33]++;
      var _a, _b, _c;
      const errors =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[107]++, []);
      const startTime =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[108]++, Date.now());
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[109]++;
      try {
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[110]++;
        // Test Redis connectivity
        yield /* istanbul ignore next */(cov_19xzcbd8ax().b[38][0]++, (_a = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[38][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[37][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[37][1]++, _a.set("health-check", "ok", "EX", 10));
        const result =
        /* istanbul ignore next */
        (cov_19xzcbd8ax().s[111]++, yield /* istanbul ignore next */(cov_19xzcbd8ax().b[40][0]++, (_b = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[40][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[39][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[39][1]++, _b.get("health-check")));
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[112]++;
        if (result !== "ok") {
          /* istanbul ignore next */
          cov_19xzcbd8ax().b[41][0]++;
          cov_19xzcbd8ax().s[113]++;
          errors.push("Redis connectivity test failed");
        } else
        /* istanbul ignore next */
        {
          cov_19xzcbd8ax().b[41][1]++;
        }
        cov_19xzcbd8ax().s[114]++;
        yield /* istanbul ignore next */(cov_19xzcbd8ax().b[43][0]++, (_c = this.redisClient) === null) ||
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[43][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[42][0]++, void 0) :
        /* istanbul ignore next */
        (cov_19xzcbd8ax().b[42][1]++, _c.del("health-check"));
      } catch (error) {
        /* istanbul ignore next */
        cov_19xzcbd8ax().s[115]++;
        errors.push(`Redis health check error: ${error}`);
      }
      const latency =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[116]++, Date.now() - startTime);
      const healthy =
      /* istanbul ignore next */
      (cov_19xzcbd8ax().s[117]++,
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[44][0]++, errors.length === 0) &&
      /* istanbul ignore next */
      (cov_19xzcbd8ax().b[44][1]++, latency < 100)); // < 100ms
      /* istanbul ignore next */
      cov_19xzcbd8ax().s[118]++;
      return {
        healthy,
        latency,
        hitRate: this.stats.hitRate,
        errors
      };
    });
  }
  /**
   * Get cache configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[34]++;
    cov_19xzcbd8ax().s[119]++;
    return Object.assign({}, this.config);
  }
  /**
   * Update cache configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_19xzcbd8ax().f[35]++;
    cov_19xzcbd8ax().s[120]++;
    this.config = Object.assign(Object.assign({}, this.config), newConfig);
  }
}
/* istanbul ignore next */
cov_19xzcbd8ax().s[121]++;
exports.CachingLayer = CachingLayer;
/**
 * Factory function for creating caching layer
 */
/* istanbul ignore next */
cov_19xzcbd8ax().s[122]++;
const createCachingLayer = config => {
  /* istanbul ignore next */
  cov_19xzcbd8ax().f[36]++;
  cov_19xzcbd8ax().s[123]++;
  return new CachingLayer(config);
};
/* istanbul ignore next */
cov_19xzcbd8ax().s[124]++;
exports.createCachingLayer = createCachingLayer;
/**
 * Default cache configurations for different environments
 */
/* istanbul ignore next */
cov_19xzcbd8ax().s[125]++;
exports.CACHE_CONFIGS = {
  development: {
    enabled: true,
    ttlSeconds: 300,
    // 5 minutes
    hitRateTarget: 0.5
  },
  staging: {
    enabled: true,
    ttlSeconds: 1800,
    // 30 minutes
    hitRateTarget: 0.7
  },
  production: {
    enabled: true,
    ttlSeconds: 3600,
    // 1 hour
    hitRateTarget: 0.8
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,