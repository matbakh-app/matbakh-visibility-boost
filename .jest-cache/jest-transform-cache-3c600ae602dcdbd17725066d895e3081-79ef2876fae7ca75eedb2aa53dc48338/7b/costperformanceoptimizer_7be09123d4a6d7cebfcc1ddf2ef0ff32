98e579d3185e665d3bff85c999ad8196
"use strict";

/**
 * PR-4: Cost & Performance Optimization
 *
 * Implements:
 * - Intelligent cost management with budget controls
 * - Performance optimization with caching strategies
 * - Token usage optimization and compression
 * - Real-time cost tracking and alerts
 */
/* istanbul ignore next */
function cov_urzb4o1br() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/cost-performance-optimizer.ts";
  var hash = "2a4d110483eb29c9e4ecfea7d2577d8b8889fbd9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/cost-performance-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "2": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "4": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "10": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "11": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "13": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "14": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "15": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "16": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "17": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "18": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "19": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 29
        }
      },
      "20": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "21": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 24
        }
      },
      "22": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 115
        }
      },
      "23": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "24": {
        start: {
          line: 66,
          column: 30
        },
        end: {
          line: 66,
          column: 60
        }
      },
      "25": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 41
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "27": {
        start: {
          line: 76,
          column: 22
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 53
        }
      },
      "29": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 26
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "32": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "33": {
        start: {
          line: 101,
          column: 31
        },
        end: {
          line: 101,
          column: 44
        }
      },
      "34": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 30
        }
      },
      "35": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 103,
          column: 29
        }
      },
      "36": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 58
        }
      },
      "37": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "38": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "39": {
        start: {
          line: 110,
          column: 30
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "40": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "41": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 59
        }
      },
      "42": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "43": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 61
        }
      },
      "44": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 48
        }
      },
      "45": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 72
        }
      },
      "46": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "47": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 130,
          column: 119
        }
      },
      "48": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "49": {
        start: {
          line: 132,
          column: 30
        },
        end: {
          line: 132,
          column: 65
        }
      },
      "50": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "51": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 61
        }
      },
      "52": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 54
        }
      },
      "53": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "54": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 58
        }
      },
      "55": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 52
        }
      },
      "56": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 58
        }
      },
      "57": {
        start: {
          line: 146,
          column: 31
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "58": {
        start: {
          line: 147,
          column: 40
        },
        end: {
          line: 147,
          column: 61
        }
      },
      "59": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "60": {
        start: {
          line: 157,
          column: 34
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "61": {
        start: {
          line: 164,
          column: 25
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "62": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "63": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 58
        }
      },
      "64": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 26
        }
      },
      "65": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 175,
          column: 28
        }
      },
      "66": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 28
        }
      },
      "67": {
        start: {
          line: 176,
          column: 32
        },
        end: {
          line: 176,
          column: 62
        }
      },
      "68": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 178,
          column: 28
        }
      },
      "69": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 28
        }
      },
      "70": {
        start: {
          line: 180,
          column: 26
        },
        end: {
          line: 180,
          column: 50
        }
      },
      "71": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 26
        }
      },
      "72": {
        start: {
          line: 182,
          column: 25
        },
        end: {
          line: 182,
          column: 26
        }
      },
      "73": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "74": {
        start: {
          line: 184,
          column: 35
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "75": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 186,
          column: 22
        }
      },
      "76": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 22
        }
      },
      "77": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 40
        }
      },
      "78": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "79": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 32
        }
      },
      "80": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 29
        }
      },
      "81": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 29
        }
      },
      "82": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 36
        }
      },
      "83": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 38
        }
      },
      "84": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 44
        }
      },
      "85": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "86": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 79
        }
      },
      "87": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "88": {
        start: {
          line: 211,
          column: 30
        },
        end: {
          line: 211,
          column: 56
        }
      },
      "89": {
        start: {
          line: 212,
          column: 30
        },
        end: {
          line: 212,
          column: 40
        }
      },
      "90": {
        start: {
          line: 214,
          column: 32
        },
        end: {
          line: 214,
          column: 63
        }
      },
      "91": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "92": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 227,
          column: 18
        }
      },
      "93": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 60
        }
      },
      "94": {
        start: {
          line: 231,
          column: 35
        },
        end: {
          line: 231,
          column: 59
        }
      },
      "95": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "96": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 244,
          column: 18
        }
      },
      "97": {
        start: {
          line: 247,
          column: 38
        },
        end: {
          line: 247,
          column: 94
        }
      },
      "98": {
        start: {
          line: 248,
          column: 37
        },
        end: {
          line: 249,
          column: 15
        }
      },
      "99": {
        start: {
          line: 251,
          column: 33
        },
        end: {
          line: 251,
          column: 61
        }
      },
      "100": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "101": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 105
        }
      },
      "102": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 257,
          column: 17
        }
      },
      "103": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 100
        }
      },
      "104": {
        start: {
          line: 259,
          column: 34
        },
        end: {
          line: 259,
          column: 76
        }
      },
      "105": {
        start: {
          line: 260,
          column: 28
        },
        end: {
          line: 260,
          column: 69
        }
      },
      "106": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "107": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 301,
          column: 11
        }
      },
      "108": {
        start: {
          line: 280,
          column: 31
        },
        end: {
          line: 280,
          column: 74
        }
      },
      "109": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "110": {
        start: {
          line: 283,
          column: 33
        },
        end: {
          line: 283,
          column: 64
        }
      },
      "111": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 63
        }
      },
      "112": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 54
        }
      },
      "113": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 295,
          column: 15
        }
      },
      "114": {
        start: {
          line: 297,
          column: 37
        },
        end: {
          line: 299,
          column: 34
        }
      },
      "115": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 125
        }
      },
      "116": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "117": {
        start: {
          line: 308,
          column: 34
        },
        end: {
          line: 308,
          column: 67
        }
      },
      "118": {
        start: {
          line: 309,
          column: 26
        },
        end: {
          line: 309,
          column: 64
        }
      },
      "119": {
        start: {
          line: 310,
          column: 30
        },
        end: {
          line: 310,
          column: 70
        }
      },
      "120": {
        start: {
          line: 311,
          column: 31
        },
        end: {
          line: 311,
          column: 62
        }
      },
      "121": {
        start: {
          line: 312,
          column: 33
        },
        end: {
          line: 312,
          column: 70
        }
      },
      "122": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "123": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 322,
          column: 17
        }
      },
      "124": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 321,
          column: 22
        }
      },
      "125": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "126": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 333,
          column: 17
        }
      },
      "127": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 332,
          column: 22
        }
      },
      "128": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 339,
          column: 14
        }
      },
      "129": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 346,
          column: 64
        }
      },
      "130": {
        start: {
          line: 347,
          column: 29
        },
        end: {
          line: 347,
          column: 54
        }
      },
      "131": {
        start: {
          line: 348,
          column: 30
        },
        end: {
          line: 352,
          column: 9
        }
      },
      "132": {
        start: {
          line: 353,
          column: 22
        },
        end: {
          line: 353,
          column: 66
        }
      },
      "133": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 80
        }
      },
      "134": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 361,
          column: 21
        }
      },
      "135": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 21
        }
      },
      "136": {
        start: {
          line: 362,
          column: 28
        },
        end: {
          line: 362,
          column: 88
        }
      },
      "137": {
        start: {
          line: 363,
          column: 29
        },
        end: {
          line: 363,
          column: 92
        }
      },
      "138": {
        start: {
          line: 364,
          column: 30
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "139": {
        start: {
          line: 369,
          column: 22
        },
        end: {
          line: 369,
          column: 66
        }
      },
      "140": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 80
        }
      },
      "141": {
        start: {
          line: 376,
          column: 22
        },
        end: {
          line: 376,
          column: 60
        }
      },
      "142": {
        start: {
          line: 377,
          column: 26
        },
        end: {
          line: 377,
          column: 66
        }
      },
      "143": {
        start: {
          line: 378,
          column: 27
        },
        end: {
          line: 378,
          column: 58
        }
      },
      "144": {
        start: {
          line: 379,
          column: 29
        },
        end: {
          line: 379,
          column: 66
        }
      },
      "145": {
        start: {
          line: 380,
          column: 30
        },
        end: {
          line: 380,
          column: 65
        }
      },
      "146": {
        start: {
          line: 381,
          column: 32
        },
        end: {
          line: 381,
          column: 71
        }
      },
      "147": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 56
        }
      },
      "148": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 389,
          column: 26
        }
      },
      "149": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 26
        }
      },
      "150": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 392,
          column: 80
        }
      },
      "151": {
        start: {
          line: 398,
          column: 28
        },
        end: {
          line: 398,
          column: 88
        }
      },
      "152": {
        start: {
          line: 399,
          column: 29
        },
        end: {
          line: 399,
          column: 92
        }
      },
      "153": {
        start: {
          line: 400,
          column: 28
        },
        end: {
          line: 400,
          column: 54
        }
      },
      "154": {
        start: {
          line: 402,
          column: 30
        },
        end: {
          line: 402,
          column: 81
        }
      },
      "155": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 71
        }
      },
      "156": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 420,
          column: 11
        }
      },
      "157": {
        start: {
          line: 410,
          column: 26
        },
        end: {
          line: 410,
          column: 64
        }
      },
      "158": {
        start: {
          line: 411,
          column: 30
        },
        end: {
          line: 411,
          column: 70
        }
      },
      "159": {
        start: {
          line: 413,
          column: 33
        },
        end: {
          line: 413,
          column: 64
        }
      },
      "160": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 60
        }
      },
      "161": {
        start: {
          line: 416,
          column: 35
        },
        end: {
          line: 416,
          column: 72
        }
      },
      "162": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 68
        }
      },
      "163": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 88
        }
      },
      "164": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 434,
          column: 11
        }
      },
      "165": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 433,
          column: 13
        }
      },
      "166": {
        start: {
          line: 428,
          column: 39
        },
        end: {
          line: 428,
          column: 81
        }
      },
      "167": {
        start: {
          line: 429,
          column: 41
        },
        end: {
          line: 429,
          column: 85
        }
      },
      "168": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "169": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 84
        }
      },
      "170": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 456,
          column: 11
        }
      },
      "171": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 146
        }
      },
      "172": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 455,
          column: 16
        }
      },
      "173": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 494,
          column: 11
        }
      },
      "174": {
        start: {
          line: 463,
          column: 31
        },
        end: {
          line: 489,
          column: 98
        }
      },
      "175": {
        start: {
          line: 489,
          column: 29
        },
        end: {
          line: 489,
          column: 96
        }
      },
      "176": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 493,
          column: 16
        }
      },
      "177": {
        start: {
          line: 500,
          column: 27
        },
        end: {
          line: 500,
          column: 48
        }
      },
      "178": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 507,
          column: 10
        }
      },
      "179": {
        start: {
          line: 513,
          column: 22
        },
        end: {
          line: 513,
          column: 60
        }
      },
      "180": {
        start: {
          line: 514,
          column: 26
        },
        end: {
          line: 514,
          column: 66
        }
      },
      "181": {
        start: {
          line: 515,
          column: 27
        },
        end: {
          line: 515,
          column: 58
        }
      },
      "182": {
        start: {
          line: 516,
          column: 29
        },
        end: {
          line: 516,
          column: 66
        }
      },
      "183": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 529,
          column: 10
        }
      },
      "184": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 27
        }
      },
      "185": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 32
        }
      },
      "186": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 542,
          column: 34
        }
      },
      "187": {
        start: {
          line: 545,
          column: 0
        },
        end: {
          line: 545,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 29
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 17
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 79
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 84
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 100
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 155
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 173
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 49
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 197
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 29
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 209
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 210,
            column: 55
          },
          end: {
            line: 210,
            column: 56
          }
        },
        loc: {
          start: {
            line: 210,
            column: 68
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 210
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 53
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 278
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 279,
            column: 55
          },
          end: {
            line: 279,
            column: 56
          }
        },
        loc: {
          start: {
            line: 279,
            column: 68
          },
          end: {
            line: 301,
            column: 9
          }
        },
        line: 279
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        loc: {
          start: {
            line: 306,
            column: 25
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 306
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 307,
            column: 55
          },
          end: {
            line: 307,
            column: 56
          }
        },
        loc: {
          start: {
            line: 307,
            column: 68
          },
          end: {
            line: 340,
            column: 9
          }
        },
        line: 307
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 33
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 345
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 43
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 359
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 375,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        loc: {
          start: {
            line: 375,
            column: 28
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 375
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 387,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        loc: {
          start: {
            line: 387,
            column: 49
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 387
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 48
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 397
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 5
          }
        },
        loc: {
          start: {
            line: 408,
            column: 29
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 408
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 409,
            column: 55
          },
          end: {
            line: 409,
            column: 56
          }
        },
        loc: {
          start: {
            line: 409,
            column: 68
          },
          end: {
            line: 420,
            column: 9
          }
        },
        line: 409
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 51
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 425
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 426,
            column: 55
          },
          end: {
            line: 426,
            column: 56
          }
        },
        loc: {
          start: {
            line: 426,
            column: 68
          },
          end: {
            line: 434,
            column: 9
          }
        },
        line: 426
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 5
          }
        },
        loc: {
          start: {
            line: 439,
            column: 57
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 439
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 440,
            column: 55
          },
          end: {
            line: 440,
            column: 56
          }
        },
        loc: {
          start: {
            line: 440,
            column: 68
          },
          end: {
            line: 456,
            column: 9
          }
        },
        line: 440
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        loc: {
          start: {
            line: 461,
            column: 28
          },
          end: {
            line: 495,
            column: 5
          }
        },
        line: 461
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 462,
            column: 55
          },
          end: {
            line: 462,
            column: 56
          }
        },
        loc: {
          start: {
            line: 462,
            column: 68
          },
          end: {
            line: 494,
            column: 9
          }
        },
        line: 462
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 489,
            column: 18
          },
          end: {
            line: 489,
            column: 19
          }
        },
        loc: {
          start: {
            line: 489,
            column: 29
          },
          end: {
            line: 489,
            column: 96
          }
        },
        line: 489
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 499,
            column: 4
          },
          end: {
            line: 499,
            column: 5
          }
        },
        loc: {
          start: {
            line: 499,
            column: 28
          },
          end: {
            line: 508,
            column: 5
          }
        },
        line: 499
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 21
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 512
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 17
          },
          end: {
            line: 536,
            column: 5
          }
        },
        line: 534
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 540,
            column: 4
          },
          end: {
            line: 540,
            column: 5
          }
        },
        loc: {
          start: {
            line: 540,
            column: 24
          },
          end: {
            line: 543,
            column: 5
          }
        },
        line: 540
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 31
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 20,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 20,
            column: 48
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 34,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 34,
            column: 44
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 51
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 77,
            column: 48
          }
        }, {
          start: {
            line: 77,
            column: 51
          },
          end: {
            line: 77,
            column: 52
          }
        }],
        line: 77
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 27
          },
          end: {
            line: 100,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 100,
            column: 48
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "10": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "11": {
        loc: {
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 136,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "12": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "13": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 175,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 175,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "14": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 178,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 178,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "15": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 186,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 186,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "16": {
        loc: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 197,
            column: 33
          },
          end: {
            line: 197,
            column: 47
          }
        }],
        line: 197
      },
      "17": {
        loc: {
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "18": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "19": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "20": {
        loc: {
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 252,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 252,
            column: 34
          }
        }, {
          start: {
            line: 252,
            column: 38
          },
          end: {
            line: 252,
            column: 99
          }
        }],
        line: 252
      },
      "21": {
        loc: {
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 257,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 257,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "22": {
        loc: {
          start: {
            line: 255,
            column: 20
          },
          end: {
            line: 255,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 20
          },
          end: {
            line: 255,
            column: 37
          }
        }, {
          start: {
            line: 255,
            column: 41
          },
          end: {
            line: 255,
            column: 65
          }
        }],
        line: 255
      },
      "23": {
        loc: {
          start: {
            line: 267,
            column: 35
          },
          end: {
            line: 267,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 65
          },
          end: {
            line: 267,
            column: 86
          }
        }, {
          start: {
            line: 267,
            column: 89
          },
          end: {
            line: 267,
            column: 91
          }
        }],
        line: 267
      },
      "24": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "25": {
        loc: {
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 282,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 282,
            column: 32
          }
        }, {
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 282,
            column: 51
          }
        }],
        line: 282
      },
      "26": {
        loc: {
          start: {
            line: 290,
            column: 25
          },
          end: {
            line: 290,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 25
          },
          end: {
            line: 290,
            column: 48
          }
        }, {
          start: {
            line: 290,
            column: 52
          },
          end: {
            line: 290,
            column: 53
          }
        }],
        line: 290
      },
      "27": {
        loc: {
          start: {
            line: 291,
            column: 36
          },
          end: {
            line: 291,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 36
          },
          end: {
            line: 291,
            column: 59
          }
        }, {
          start: {
            line: 291,
            column: 63
          },
          end: {
            line: 291,
            column: 67
          }
        }],
        line: 291
      },
      "28": {
        loc: {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 299,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 18
          },
          end: {
            line: 298,
            column: 91
          }
        }, {
          start: {
            line: 299,
            column: 18
          },
          end: {
            line: 299,
            column: 34
          }
        }],
        line: 297
      },
      "29": {
        loc: {
          start: {
            line: 311,
            column: 31
          },
          end: {
            line: 311,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 31
          },
          end: {
            line: 311,
            column: 57
          }
        }, {
          start: {
            line: 311,
            column: 61
          },
          end: {
            line: 311,
            column: 62
          }
        }],
        line: 311
      },
      "30": {
        loc: {
          start: {
            line: 312,
            column: 33
          },
          end: {
            line: 312,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 33
          },
          end: {
            line: 312,
            column: 65
          }
        }, {
          start: {
            line: 312,
            column: 69
          },
          end: {
            line: 312,
            column: 70
          }
        }],
        line: 312
      },
      "31": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 323,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "32": {
        loc: {
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 322,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 16
          },
          end: {
            line: 322,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "33": {
        loc: {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "34": {
        loc: {
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 333,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 333,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "35": {
        loc: {
          start: {
            line: 347,
            column: 29
          },
          end: {
            line: 347,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 29
          },
          end: {
            line: 347,
            column: 46
          }
        }, {
          start: {
            line: 347,
            column: 50
          },
          end: {
            line: 347,
            column: 54
          }
        }],
        line: 347
      },
      "36": {
        loc: {
          start: {
            line: 353,
            column: 36
          },
          end: {
            line: 353,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 36
          },
          end: {
            line: 353,
            column: 52
          }
        }, {
          start: {
            line: 353,
            column: 56
          },
          end: {
            line: 353,
            column: 65
          }
        }],
        line: 353
      },
      "37": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 361,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 361,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "38": {
        loc: {
          start: {
            line: 362,
            column: 28
          },
          end: {
            line: 362,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 28
          },
          end: {
            line: 362,
            column: 48
          }
        }, {
          start: {
            line: 362,
            column: 52
          },
          end: {
            line: 362,
            column: 88
          }
        }],
        line: 362
      },
      "39": {
        loc: {
          start: {
            line: 363,
            column: 29
          },
          end: {
            line: 363,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 29
          },
          end: {
            line: 363,
            column: 50
          }
        }, {
          start: {
            line: 363,
            column: 54
          },
          end: {
            line: 363,
            column: 92
          }
        }],
        line: 363
      },
      "40": {
        loc: {
          start: {
            line: 369,
            column: 36
          },
          end: {
            line: 369,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 36
          },
          end: {
            line: 369,
            column: 52
          }
        }, {
          start: {
            line: 369,
            column: 56
          },
          end: {
            line: 369,
            column: 65
          }
        }],
        line: 369
      },
      "41": {
        loc: {
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 53
          }
        }, {
          start: {
            line: 378,
            column: 57
          },
          end: {
            line: 378,
            column: 58
          }
        }],
        line: 378
      },
      "42": {
        loc: {
          start: {
            line: 379,
            column: 29
          },
          end: {
            line: 379,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 29
          },
          end: {
            line: 379,
            column: 61
          }
        }, {
          start: {
            line: 379,
            column: 65
          },
          end: {
            line: 379,
            column: 66
          }
        }],
        line: 379
      },
      "43": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 389,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 389,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "44": {
        loc: {
          start: {
            line: 391,
            column: 15
          },
          end: {
            line: 392,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 70
          }
        }, {
          start: {
            line: 392,
            column: 73
          },
          end: {
            line: 392,
            column: 79
          }
        }],
        line: 391
      },
      "45": {
        loc: {
          start: {
            line: 398,
            column: 28
          },
          end: {
            line: 398,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 28
          },
          end: {
            line: 398,
            column: 48
          }
        }, {
          start: {
            line: 398,
            column: 52
          },
          end: {
            line: 398,
            column: 88
          }
        }],
        line: 398
      },
      "46": {
        loc: {
          start: {
            line: 399,
            column: 29
          },
          end: {
            line: 399,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 399,
            column: 29
          },
          end: {
            line: 399,
            column: 50
          }
        }, {
          start: {
            line: 399,
            column: 54
          },
          end: {
            line: 399,
            column: 92
          }
        }],
        line: 399
      },
      "47": {
        loc: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 33
          },
          end: {
            line: 403,
            column: 66
          }
        }, {
          start: {
            line: 403,
            column: 69
          },
          end: {
            line: 403,
            column: 70
          }
        }],
        line: 403
      },
      "48": {
        loc: {
          start: {
            line: 413,
            column: 33
          },
          end: {
            line: 413,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 33
          },
          end: {
            line: 413,
            column: 59
          }
        }, {
          start: {
            line: 413,
            column: 63
          },
          end: {
            line: 413,
            column: 64
          }
        }],
        line: 413
      },
      "49": {
        loc: {
          start: {
            line: 416,
            column: 35
          },
          end: {
            line: 416,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 35
          },
          end: {
            line: 416,
            column: 67
          }
        }, {
          start: {
            line: 416,
            column: 71
          },
          end: {
            line: 416,
            column: 72
          }
        }],
        line: 416
      },
      "50": {
        loc: {
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "51": {
        loc: {
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 430,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 430,
            column: 48
          }
        }, {
          start: {
            line: 430,
            column: 52
          },
          end: {
            line: 430,
            column: 84
          }
        }],
        line: 430
      },
      "52": {
        loc: {
          start: {
            line: 452,
            column: 39
          },
          end: {
            line: 452,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 98
          },
          end: {
            line: 452,
            column: 105
          }
        }, {
          start: {
            line: 452,
            column: 108
          },
          end: {
            line: 452,
            column: 117
          }
        }],
        line: 452
      },
      "53": {
        loc: {
          start: {
            line: 515,
            column: 27
          },
          end: {
            line: 515,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 27
          },
          end: {
            line: 515,
            column: 53
          }
        }, {
          start: {
            line: 515,
            column: 57
          },
          end: {
            line: 515,
            column: 58
          }
        }],
        line: 515
      },
      "54": {
        loc: {
          start: {
            line: 516,
            column: 29
          },
          end: {
            line: 516,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 29
          },
          end: {
            line: 516,
            column: 61
          }
        }, {
          start: {
            line: 516,
            column: 65
          },
          end: {
            line: 516,
            column: 66
          }
        }],
        line: 516
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/cost-performance-optimizer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/cost-performance-optimizer.ts"],
      sourcesContent: ["/**\n * PR-4: Cost & Performance Optimization\n * \n * Implements:\n * - Intelligent cost management with budget controls\n * - Performance optimization with caching strategies\n * - Token usage optimization and compression\n * - Real-time cost tracking and alerts\n */\n\nimport { CloudWatchClient, PutMetricDataCommand } from '@aws-sdk/client-cloudwatch';\nimport { randomUUID } from 'crypto';\nimport { AIRequest, AIResponse } from './types';\n\nexport interface CostBudget {\n    dailyLimit: number;\n    monthlyLimit: number;\n    alertThresholds: number[]; // [50%, 75%, 90%]\n    hardStop: boolean;\n}\n\nexport interface PerformanceMetrics {\n    latency: number;\n    throughput: number;\n    cacheHitRate: number;\n    tokenEfficiency: number;\n    costPerRequest: number;\n}\n\nexport interface CostOptimizationResult {\n    originalCost: number;\n    optimizedCost: number;\n    savings: number;\n    optimizations: string[];\n    cacheUsed: boolean;\n    compressionUsed: boolean;\n}\n\nexport interface TokenOptimization {\n    originalTokens: number;\n    optimizedTokens: number;\n    compressionRatio: number;\n    technique: string;\n}\n\n/**\n * Intelligent Caching Layer\n */\nclass IntelligentCache {\n    private cache: Map<string, { response: AIResponse; timestamp: number; cost: number }> = new Map();\n    private hitCount: number = 0;\n    private missCount: number = 0;\n\n    constructor(\n        private readonly maxSize: number = 10000,\n        private readonly ttlMs: number = 3600000 // 1 hour\n    ) { }\n\n    generateKey(request: AIRequest): string {\n        // Create semantic hash of request\n        const keyData = {\n            prompt: this.normalizePrompt(request.prompt),\n            provider: request.provider,\n            model: request.model,\n            temperature: request.temperature || 0.7,\n            maxTokens: request.maxTokens,\n            domain: request.domain\n        };\n\n        return Buffer.from(JSON.stringify(keyData)).toString('base64');\n    }\n\n    private normalizePrompt(prompt: string): string {\n        // Normalize whitespace and remove non-semantic variations\n        return prompt\n            .toLowerCase()\n            .replace(/\\s+/g, ' ')\n            .trim()\n            .replace(/[^\\w\\s]/g, ''); // Remove punctuation for semantic matching\n    }\n\n    get(key: string): AIResponse | null {\n        const entry = this.cache.get(key);\n\n        if (!entry) {\n            this.missCount++;\n            return null;\n        }\n\n        // Check TTL\n        if (Date.now() - entry.timestamp > this.ttlMs) {\n            this.cache.delete(key);\n            this.missCount++;\n            return null;\n        }\n\n        this.hitCount++;\n        return {\n            ...entry.response,\n            cached: true,\n            cacheTimestamp: entry.timestamp\n        };\n    }\n\n    set(key: string, response: AIResponse, cost: number): void {\n        // Implement LRU eviction if cache is full\n        if (this.cache.size >= this.maxSize) {\n            const oldestKey = this.cache.keys().next().value;\n            this.cache.delete(oldestKey);\n        }\n\n        this.cache.set(key, {\n            response: { ...response, cached: false },\n            timestamp: Date.now(),\n            cost\n        });\n    }\n\n    getHitRate(): number {\n        const total = this.hitCount + this.missCount;\n        return total > 0 ? this.hitCount / total : 0;\n    }\n\n    clear(): void {\n        this.cache.clear();\n        this.hitCount = 0;\n        this.missCount = 0;\n    }\n\n    getStats() {\n        return {\n            size: this.cache.size,\n            hitCount: this.hitCount,\n            missCount: this.missCount,\n            hitRate: this.getHitRate()\n        };\n    }\n}\n\n/**\n * Token Compression and Optimization\n */\nclass TokenOptimizer {\n    /**\n     * Compress prompt using various techniques\n     */\n    compressPrompt(prompt: string, targetReduction: number = 0.2): TokenOptimization {\n        const originalLength = prompt.length;\n        let optimized = prompt;\n        const techniques: string[] = [];\n\n        // 1. Remove redundant whitespace\n        optimized = optimized.replace(/\\s+/g, ' ').trim();\n        if (optimized.length < prompt.length) {\n            techniques.push('whitespace-normalization');\n        }\n\n        // 2. Abbreviate common phrases\n        const abbreviations = {\n            'please': 'pls',\n            'you are': \"you're\",\n            'do not': \"don't\",\n            'cannot': \"can't\",\n            'will not': \"won't\",\n            'should not': \"shouldn't\",\n            'would not': \"wouldn't\",\n            'could not': \"couldn't\"\n        };\n\n        for (const [full, abbrev] of Object.entries(abbreviations)) {\n            const regex = new RegExp(`\\\\b${full}\\\\b`, 'gi');\n            if (regex.test(optimized)) {\n                optimized = optimized.replace(regex, abbrev);\n                techniques.push('abbreviation');\n            }\n        }\n\n        // 3. Remove filler words if target reduction not met\n        const currentReduction = 1 - (optimized.length / originalLength);\n        if (currentReduction < targetReduction) {\n            const fillerWords = ['really', 'very', 'quite', 'rather', 'somewhat', 'actually', 'basically', 'literally'];\n            for (const filler of fillerWords) {\n                const regex = new RegExp(`\\\\b${filler}\\\\b`, 'gi');\n                if (regex.test(optimized)) {\n                    optimized = optimized.replace(regex, '');\n                    techniques.push('filler-removal');\n                }\n            }\n        }\n\n        // 4. Sentence compression (remove redundant clauses)\n        if (currentReduction < targetReduction) {\n            optimized = this.compressSentences(optimized);\n            techniques.push('sentence-compression');\n        }\n\n        // Clean up any double spaces created\n        optimized = optimized.replace(/\\s+/g, ' ').trim();\n\n        const finalReduction = 1 - (optimized.length / originalLength);\n        const estimatedTokenReduction = finalReduction * 0.75; // Approximate token to character ratio\n\n        return {\n            originalTokens: Math.ceil(originalLength / 4), // Rough token estimate\n            optimizedTokens: Math.ceil(optimized.length / 4),\n            compressionRatio: finalReduction,\n            technique: techniques.join(', ')\n        };\n    }\n\n    private compressSentences(text: string): string {\n        // Simple sentence compression - remove redundant phrases\n        const redundantPatterns = [\n            /,\\s*which is to say,?/gi,\n            /,\\s*in other words,?/gi,\n            /,\\s*that is to say,?/gi,\n            /\\s*as I mentioned before,?\\s*/gi,\n            /\\s*as previously stated,?\\s*/gi\n        ];\n\n        let compressed = text;\n        for (const pattern of redundantPatterns) {\n            compressed = compressed.replace(pattern, ' ');\n        }\n\n        return compressed;\n    }\n\n    /**\n     * Optimize response for token efficiency\n     */\n    optimizeResponse(response: string, maxTokens?: number): string {\n        if (!maxTokens) return response;\n\n        const estimatedTokens = Math.ceil(response.length / 4);\n        if (estimatedTokens <= maxTokens) return response;\n\n        // Truncate at sentence boundaries\n        const sentences = response.split(/[.!?]+/);\n        let optimized = '';\n        let tokenCount = 0;\n\n        for (const sentence of sentences) {\n            const sentenceTokens = Math.ceil(sentence.length / 4);\n            if (tokenCount + sentenceTokens > maxTokens) break;\n\n            optimized += sentence + '.';\n            tokenCount += sentenceTokens;\n        }\n\n        return optimized.trim();\n    }\n}\n\n/**\n * Cost & Performance Optimization Service\n */\nexport class CostPerformanceOptimizer {\n    private cache: IntelligentCache;\n    private tokenOptimizer: TokenOptimizer;\n    private cloudWatch: CloudWatchClient;\n    private dailyCosts: Map<string, number> = new Map(); // date -> cost\n    private monthlyCosts: Map<string, number> = new Map(); // month -> cost\n\n    constructor(\n        private readonly budget: CostBudget,\n        private readonly region: string = 'eu-central-1'\n    ) {\n        this.cache = new IntelligentCache();\n        this.tokenOptimizer = new TokenOptimizer();\n        this.cloudWatch = new CloudWatchClient({ region });\n    }\n\n    /**\n     * Optimize request for cost and performance\n     */\n    async optimizeRequest(request: AIRequest): Promise<{\n        optimizedRequest: AIRequest;\n        optimization: CostOptimizationResult;\n        shouldProceed: boolean;\n    }> {\n        const requestId = randomUUID();\n        const startTime = Date.now();\n\n        // Check budget constraints\n        const budgetCheck = await this.checkBudget(request);\n        if (!budgetCheck.allowed) {\n            return {\n                optimizedRequest: request,\n                optimization: {\n                    originalCost: budgetCheck.estimatedCost,\n                    optimizedCost: 0,\n                    savings: 0,\n                    optimizations: ['budget-exceeded'],\n                    cacheUsed: false,\n                    compressionUsed: false\n                },\n                shouldProceed: false\n            };\n        }\n\n        // Check cache first\n        const cacheKey = this.cache.generateKey(request);\n        const cachedResponse = this.cache.get(cacheKey);\n\n        if (cachedResponse) {\n            return {\n                optimizedRequest: request,\n                optimization: {\n                    originalCost: budgetCheck.estimatedCost,\n                    optimizedCost: 0,\n                    savings: budgetCheck.estimatedCost,\n                    optimizations: ['cache-hit'],\n                    cacheUsed: true,\n                    compressionUsed: false\n                },\n                shouldProceed: false // Don't need to make API call\n            };\n        }\n\n        // Optimize prompt for token efficiency\n        const tokenOptimization = this.tokenOptimizer.compressPrompt(request.prompt, 0.15);\n        const optimizedRequest: AIRequest = {\n            ...request,\n            prompt: request.prompt // Keep original for now, apply compression based on cost pressure\n        };\n\n        // Apply compression if cost pressure is high\n        const costPressure = this.calculateCostPressure();\n        if (costPressure > 0.7 || budgetCheck.estimatedCost > budgetCheck.remainingBudget * 0.1) {\n            optimizedRequest.prompt = this.applyTokenOptimization(request.prompt, tokenOptimization);\n\n            // Reduce max tokens if needed\n            if (request.maxTokens && request.maxTokens > 1000) {\n                optimizedRequest.maxTokens = Math.max(500, Math.floor(request.maxTokens * 0.8));\n            }\n        }\n\n        const optimizedCost = this.estimateRequestCost(optimizedRequest);\n        const savings = budgetCheck.estimatedCost - optimizedCost;\n\n        return {\n            optimizedRequest,\n            optimization: {\n                originalCost: budgetCheck.estimatedCost,\n                optimizedCost,\n                savings,\n                optimizations: tokenOptimization.technique ? ['token-compression'] : [],\n                cacheUsed: false,\n                compressionUsed: tokenOptimization.compressionRatio > 0.05\n            },\n            shouldProceed: true\n        };\n    }\n\n    /**\n     * Process response and update metrics\n     */\n    async processResponse(\n        request: AIRequest,\n        response: AIResponse,\n        optimization: CostOptimizationResult\n    ): Promise<AIResponse> {\n        const actualCost = this.calculateActualCost(request, response);\n\n        // Cache successful responses\n        if (response.content && !response.error) {\n            const cacheKey = this.cache.generateKey(request);\n            this.cache.set(cacheKey, response, actualCost);\n        }\n\n        // Update cost tracking\n        await this.updateCostTracking(actualCost);\n\n        // Publish metrics\n        await this.publishMetrics({\n            latency: response.processingTime || 0,\n            throughput: 1000 / (response.processingTime || 1000), // requests per second\n            cacheHitRate: this.cache.getHitRate(),\n            tokenEfficiency: this.calculateTokenEfficiency(request, response),\n            costPerRequest: actualCost\n        });\n\n        // Optimize response if needed\n        const optimizedContent = request.maxTokens\n            ? this.tokenOptimizer.optimizeResponse(response.content, request.maxTokens)\n            : response.content;\n\n        return {\n            ...response,\n            content: optimizedContent,\n            cost: actualCost,\n            optimization\n        };\n    }\n\n    /**\n     * Check budget constraints\n     */\n    private async checkBudget(request: AIRequest): Promise<{\n        allowed: boolean;\n        estimatedCost: number;\n        remainingBudget: number;\n        reason?: string;\n    }> {\n        const estimatedCost = this.estimateRequestCost(request);\n        const today = new Date().toISOString().split('T')[0];\n        const thisMonth = new Date().toISOString().substring(0, 7);\n\n        const dailySpent = this.dailyCosts.get(today) || 0;\n        const monthlySpent = this.monthlyCosts.get(thisMonth) || 0;\n\n        // Check daily limit\n        if (dailySpent + estimatedCost > this.budget.dailyLimit) {\n            if (this.budget.hardStop) {\n                return {\n                    allowed: false,\n                    estimatedCost,\n                    remainingBudget: this.budget.dailyLimit - dailySpent,\n                    reason: 'Daily budget exceeded'\n                };\n            }\n        }\n\n        // Check monthly limit\n        if (monthlySpent + estimatedCost > this.budget.monthlyLimit) {\n            if (this.budget.hardStop) {\n                return {\n                    allowed: false,\n                    estimatedCost,\n                    remainingBudget: this.budget.monthlyLimit - monthlySpent,\n                    reason: 'Monthly budget exceeded'\n                };\n            }\n        }\n\n        return {\n            allowed: true,\n            estimatedCost,\n            remainingBudget: Math.min(\n                this.budget.dailyLimit - dailySpent,\n                this.budget.monthlyLimit - monthlySpent\n            )\n        };\n    }\n\n    /**\n     * Estimate request cost based on tokens and provider\n     */\n    private estimateRequestCost(request: AIRequest): number {\n        const inputTokens = Math.ceil(request.prompt.length / 4);\n        const outputTokens = request.maxTokens || 1000;\n\n        const providerCosts = {\n            bedrock: { input: 0.003, output: 0.015 }, // per 1K tokens\n            google: { input: 0.00125, output: 0.005 },\n            meta: { input: 0.0008, output: 0.0024 }\n        };\n\n        const costs = providerCosts[request.provider || 'bedrock'];\n        return (inputTokens * costs.input + outputTokens * costs.output) / 1000;\n    }\n\n    /**\n     * Calculate actual cost from response\n     */\n    private calculateActualCost(request: AIRequest, response: AIResponse): number {\n        if (response.cached) return 0;\n\n        const inputTokens = response.inputTokens || Math.ceil(request.prompt.length / 4);\n        const outputTokens = response.outputTokens || Math.ceil(response.content.length / 4);\n\n        const providerCosts = {\n            bedrock: { input: 0.003, output: 0.015 },\n            google: { input: 0.00125, output: 0.005 },\n            meta: { input: 0.0008, output: 0.0024 }\n        };\n\n        const costs = providerCosts[request.provider || 'bedrock'];\n        return (inputTokens * costs.input + outputTokens * costs.output) / 1000;\n    }\n\n    /**\n     * Calculate cost pressure (0-1 scale)\n     */\n    private calculateCostPressure(): number {\n        const today = new Date().toISOString().split('T')[0];\n        const thisMonth = new Date().toISOString().substring(0, 7);\n\n        const dailySpent = this.dailyCosts.get(today) || 0;\n        const monthlySpent = this.monthlyCosts.get(thisMonth) || 0;\n\n        const dailyPressure = dailySpent / this.budget.dailyLimit;\n        const monthlyPressure = monthlySpent / this.budget.monthlyLimit;\n\n        return Math.max(dailyPressure, monthlyPressure);\n    }\n\n    /**\n     * Apply token optimization to prompt\n     */\n    private applyTokenOptimization(prompt: string, optimization: TokenOptimization): string {\n        if (optimization.compressionRatio < 0.05) return prompt;\n\n        // Apply the compression techniques\n        return this.tokenOptimizer.compressPrompt(prompt, 0.2).technique ?\n            this.tokenOptimizer.compressPrompt(prompt, 0.2).toString() : prompt;\n    }\n\n    /**\n     * Calculate token efficiency\n     */\n    private calculateTokenEfficiency(request: AIRequest, response: AIResponse): number {\n        const inputTokens = response.inputTokens || Math.ceil(request.prompt.length / 4);\n        const outputTokens = response.outputTokens || Math.ceil(response.content.length / 4);\n        const totalTokens = inputTokens + outputTokens;\n\n        // Efficiency = useful content / total tokens\n        const usefulContent = response.content.replace(/\\s+/g, ' ').trim().length;\n        return totalTokens > 0 ? usefulContent / (totalTokens * 4) : 0;\n    }\n\n    /**\n     * Update cost tracking\n     */\n    private async updateCostTracking(cost: number): Promise<void> {\n        const today = new Date().toISOString().split('T')[0];\n        const thisMonth = new Date().toISOString().substring(0, 7);\n\n        // Update daily costs\n        const currentDaily = this.dailyCosts.get(today) || 0;\n        this.dailyCosts.set(today, currentDaily + cost);\n\n        // Update monthly costs\n        const currentMonthly = this.monthlyCosts.get(thisMonth) || 0;\n        this.monthlyCosts.set(thisMonth, currentMonthly + cost);\n\n        // Check alert thresholds\n        await this.checkAlertThresholds(currentDaily + cost, currentMonthly + cost);\n    }\n\n    /**\n     * Check budget alert thresholds\n     */\n    private async checkAlertThresholds(dailySpent: number, monthlySpent: number): Promise<void> {\n        for (const threshold of this.budget.alertThresholds) {\n            const dailyThreshold = this.budget.dailyLimit * (threshold / 100);\n            const monthlyThreshold = this.budget.monthlyLimit * (threshold / 100);\n\n            if (dailySpent >= dailyThreshold || monthlySpent >= monthlyThreshold) {\n                await this.sendBudgetAlert(threshold, dailySpent, monthlySpent);\n            }\n        }\n    }\n\n    /**\n     * Send budget alert\n     */\n    private async sendBudgetAlert(threshold: number, dailySpent: number, monthlySpent: number): Promise<void> {\n        console.warn(`Budget alert: ${threshold}% threshold reached. Daily: $${dailySpent.toFixed(2)}, Monthly: $${monthlySpent.toFixed(2)}`);\n\n        // Publish alert metric\n        await this.cloudWatch.send(new PutMetricDataCommand({\n            Namespace: 'AI/CostOptimization',\n            MetricData: [{\n                MetricName: 'BudgetAlert',\n                Value: threshold,\n                Unit: 'Percent',\n                Timestamp: new Date(),\n                Dimensions: [{\n                    Name: 'AlertType',\n                    Value: dailySpent >= this.budget.dailyLimit * (threshold / 100) ? 'Daily' : 'Monthly'\n                }]\n            }]\n        }));\n    }\n\n    /**\n     * Publish performance metrics\n     */\n    private async publishMetrics(metrics: PerformanceMetrics): Promise<void> {\n        const metricData = [\n            {\n                MetricName: 'Latency',\n                Value: metrics.latency,\n                Unit: 'Milliseconds'\n            },\n            {\n                MetricName: 'Throughput',\n                Value: metrics.throughput,\n                Unit: 'Count/Second'\n            },\n            {\n                MetricName: 'CacheHitRate',\n                Value: metrics.cacheHitRate * 100,\n                Unit: 'Percent'\n            },\n            {\n                MetricName: 'TokenEfficiency',\n                Value: metrics.tokenEfficiency,\n                Unit: 'None'\n            },\n            {\n                MetricName: 'CostPerRequest',\n                Value: metrics.costPerRequest,\n                Unit: 'None'\n            }\n        ].map(metric => ({\n            ...metric,\n            Timestamp: new Date()\n        }));\n\n        await this.cloudWatch.send(new PutMetricDataCommand({\n            Namespace: 'AI/Performance',\n            MetricData: metricData\n        }));\n    }\n\n    /**\n     * Get current performance metrics\n     */\n    getPerformanceMetrics(): PerformanceMetrics {\n        const cacheStats = this.cache.getStats();\n\n        return {\n            latency: 0, // Will be updated by actual requests\n            throughput: 0, // Will be updated by actual requests\n            cacheHitRate: cacheStats.hitRate,\n            tokenEfficiency: 0, // Will be updated by actual requests\n            costPerRequest: 0 // Will be updated by actual requests\n        };\n    }\n\n    /**\n     * Get cost summary\n     */\n    getCostSummary(): {\n        daily: { spent: number; limit: number; remaining: number };\n        monthly: { spent: number; limit: number; remaining: number };\n        cacheStats: any;\n    } {\n        const today = new Date().toISOString().split('T')[0];\n        const thisMonth = new Date().toISOString().substring(0, 7);\n\n        const dailySpent = this.dailyCosts.get(today) || 0;\n        const monthlySpent = this.monthlyCosts.get(thisMonth) || 0;\n\n        return {\n            daily: {\n                spent: dailySpent,\n                limit: this.budget.dailyLimit,\n                remaining: this.budget.dailyLimit - dailySpent\n            },\n            monthly: {\n                spent: monthlySpent,\n                limit: this.budget.monthlyLimit,\n                remaining: this.budget.monthlyLimit - monthlySpent\n            },\n            cacheStats: this.cache.getStats()\n        };\n    }\n\n    /**\n     * Clear cache\n     */\n    clearCache(): void {\n        this.cache.clear();\n    }\n\n    /**\n     * Reset cost tracking\n     */\n    resetCostTracking(): void {\n        this.dailyCosts.clear();\n        this.monthlyCosts.clear();\n    }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2a4d110483eb29c9e4ecfea7d2577d8b8889fbd9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_urzb4o1br = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_urzb4o1br();
cov_urzb4o1br().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_urzb4o1br().s[1]++;
exports.CostPerformanceOptimizer = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_urzb4o1br().s[2]++, require("tslib"));
const client_cloudwatch_1 =
/* istanbul ignore next */
(cov_urzb4o1br().s[3]++, require("@aws-sdk/client-cloudwatch"));
const crypto_1 =
/* istanbul ignore next */
(cov_urzb4o1br().s[4]++, require("crypto"));
/**
 * Intelligent Caching Layer
 */
class IntelligentCache {
  constructor(maxSize =
  /* istanbul ignore next */
  (cov_urzb4o1br().b[0][0]++, 10000), ttlMs =
  /* istanbul ignore next */
  (cov_urzb4o1br().b[1][0]++, 3600000) // 1 hour
  ) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[0]++;
    cov_urzb4o1br().s[5]++;
    this.maxSize = maxSize;
    /* istanbul ignore next */
    cov_urzb4o1br().s[6]++;
    this.ttlMs = ttlMs;
    /* istanbul ignore next */
    cov_urzb4o1br().s[7]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_urzb4o1br().s[8]++;
    this.hitCount = 0;
    /* istanbul ignore next */
    cov_urzb4o1br().s[9]++;
    this.missCount = 0;
  }
  generateKey(request) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[1]++;
    // Create semantic hash of request
    const keyData =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[10]++, {
      prompt: this.normalizePrompt(request.prompt),
      provider: request.provider,
      model: request.model,
      temperature:
      /* istanbul ignore next */
      (cov_urzb4o1br().b[2][0]++, request.temperature) ||
      /* istanbul ignore next */
      (cov_urzb4o1br().b[2][1]++, 0.7),
      maxTokens: request.maxTokens,
      domain: request.domain
    });
    /* istanbul ignore next */
    cov_urzb4o1br().s[11]++;
    return Buffer.from(JSON.stringify(keyData)).toString('base64');
  }
  normalizePrompt(prompt) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[2]++;
    cov_urzb4o1br().s[12]++;
    // Normalize whitespace and remove non-semantic variations
    return prompt.toLowerCase().replace(/\s+/g, ' ').trim().replace(/[^\w\s]/g, ''); // Remove punctuation for semantic matching
  }
  get(key) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[3]++;
    const entry =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[13]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_urzb4o1br().s[14]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[3][0]++;
      cov_urzb4o1br().s[15]++;
      this.missCount++;
      /* istanbul ignore next */
      cov_urzb4o1br().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[3][1]++;
    }
    // Check TTL
    cov_urzb4o1br().s[17]++;
    if (Date.now() - entry.timestamp > this.ttlMs) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[4][0]++;
      cov_urzb4o1br().s[18]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_urzb4o1br().s[19]++;
      this.missCount++;
      /* istanbul ignore next */
      cov_urzb4o1br().s[20]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[4][1]++;
    }
    cov_urzb4o1br().s[21]++;
    this.hitCount++;
    /* istanbul ignore next */
    cov_urzb4o1br().s[22]++;
    return Object.assign(Object.assign({}, entry.response), {
      cached: true,
      cacheTimestamp: entry.timestamp
    });
  }
  set(key, response, cost) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[4]++;
    cov_urzb4o1br().s[23]++;
    // Implement LRU eviction if cache is full
    if (this.cache.size >= this.maxSize) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[5][0]++;
      const oldestKey =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[24]++, this.cache.keys().next().value);
      /* istanbul ignore next */
      cov_urzb4o1br().s[25]++;
      this.cache.delete(oldestKey);
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[5][1]++;
    }
    cov_urzb4o1br().s[26]++;
    this.cache.set(key, {
      response: Object.assign(Object.assign({}, response), {
        cached: false
      }),
      timestamp: Date.now(),
      cost
    });
  }
  getHitRate() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[5]++;
    const total =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[27]++, this.hitCount + this.missCount);
    /* istanbul ignore next */
    cov_urzb4o1br().s[28]++;
    return total > 0 ?
    /* istanbul ignore next */
    (cov_urzb4o1br().b[6][0]++, this.hitCount / total) :
    /* istanbul ignore next */
    (cov_urzb4o1br().b[6][1]++, 0);
  }
  clear() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[6]++;
    cov_urzb4o1br().s[29]++;
    this.cache.clear();
    /* istanbul ignore next */
    cov_urzb4o1br().s[30]++;
    this.hitCount = 0;
    /* istanbul ignore next */
    cov_urzb4o1br().s[31]++;
    this.missCount = 0;
  }
  getStats() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[7]++;
    cov_urzb4o1br().s[32]++;
    return {
      size: this.cache.size,
      hitCount: this.hitCount,
      missCount: this.missCount,
      hitRate: this.getHitRate()
    };
  }
}
/**
 * Token Compression and Optimization
 */
class TokenOptimizer {
  /**
   * Compress prompt using various techniques
   */
  compressPrompt(prompt, targetReduction =
  /* istanbul ignore next */
  (cov_urzb4o1br().b[7][0]++, 0.2)) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[8]++;
    const originalLength =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[33]++, prompt.length);
    let optimized =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[34]++, prompt);
    const techniques =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[35]++, []);
    // 1. Remove redundant whitespace
    /* istanbul ignore next */
    cov_urzb4o1br().s[36]++;
    optimized = optimized.replace(/\s+/g, ' ').trim();
    /* istanbul ignore next */
    cov_urzb4o1br().s[37]++;
    if (optimized.length < prompt.length) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[8][0]++;
      cov_urzb4o1br().s[38]++;
      techniques.push('whitespace-normalization');
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[8][1]++;
    }
    // 2. Abbreviate common phrases
    const abbreviations =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[39]++, {
      'please': 'pls',
      'you are': "you're",
      'do not': "don't",
      'cannot': "can't",
      'will not': "won't",
      'should not': "shouldn't",
      'would not': "wouldn't",
      'could not': "couldn't"
    });
    /* istanbul ignore next */
    cov_urzb4o1br().s[40]++;
    for (const [full, abbrev] of Object.entries(abbreviations)) {
      const regex =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[41]++, new RegExp(`\\b${full}\\b`, 'gi'));
      /* istanbul ignore next */
      cov_urzb4o1br().s[42]++;
      if (regex.test(optimized)) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[9][0]++;
        cov_urzb4o1br().s[43]++;
        optimized = optimized.replace(regex, abbrev);
        /* istanbul ignore next */
        cov_urzb4o1br().s[44]++;
        techniques.push('abbreviation');
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[9][1]++;
      }
    }
    // 3. Remove filler words if target reduction not met
    const currentReduction =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[45]++, 1 - optimized.length / originalLength);
    /* istanbul ignore next */
    cov_urzb4o1br().s[46]++;
    if (currentReduction < targetReduction) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[10][0]++;
      const fillerWords =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[47]++, ['really', 'very', 'quite', 'rather', 'somewhat', 'actually', 'basically', 'literally']);
      /* istanbul ignore next */
      cov_urzb4o1br().s[48]++;
      for (const filler of fillerWords) {
        const regex =
        /* istanbul ignore next */
        (cov_urzb4o1br().s[49]++, new RegExp(`\\b${filler}\\b`, 'gi'));
        /* istanbul ignore next */
        cov_urzb4o1br().s[50]++;
        if (regex.test(optimized)) {
          /* istanbul ignore next */
          cov_urzb4o1br().b[11][0]++;
          cov_urzb4o1br().s[51]++;
          optimized = optimized.replace(regex, '');
          /* istanbul ignore next */
          cov_urzb4o1br().s[52]++;
          techniques.push('filler-removal');
        } else
        /* istanbul ignore next */
        {
          cov_urzb4o1br().b[11][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[10][1]++;
    }
    // 4. Sentence compression (remove redundant clauses)
    cov_urzb4o1br().s[53]++;
    if (currentReduction < targetReduction) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[12][0]++;
      cov_urzb4o1br().s[54]++;
      optimized = this.compressSentences(optimized);
      /* istanbul ignore next */
      cov_urzb4o1br().s[55]++;
      techniques.push('sentence-compression');
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[12][1]++;
    }
    // Clean up any double spaces created
    cov_urzb4o1br().s[56]++;
    optimized = optimized.replace(/\s+/g, ' ').trim();
    const finalReduction =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[57]++, 1 - optimized.length / originalLength);
    const estimatedTokenReduction =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[58]++, finalReduction * 0.75); // Approximate token to character ratio
    /* istanbul ignore next */
    cov_urzb4o1br().s[59]++;
    return {
      originalTokens: Math.ceil(originalLength / 4),
      // Rough token estimate
      optimizedTokens: Math.ceil(optimized.length / 4),
      compressionRatio: finalReduction,
      technique: techniques.join(', ')
    };
  }
  compressSentences(text) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[9]++;
    // Simple sentence compression - remove redundant phrases
    const redundantPatterns =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[60]++, [/,\s*which is to say,?/gi, /,\s*in other words,?/gi, /,\s*that is to say,?/gi, /\s*as I mentioned before,?\s*/gi, /\s*as previously stated,?\s*/gi]);
    let compressed =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[61]++, text);
    /* istanbul ignore next */
    cov_urzb4o1br().s[62]++;
    for (const pattern of redundantPatterns) {
      /* istanbul ignore next */
      cov_urzb4o1br().s[63]++;
      compressed = compressed.replace(pattern, ' ');
    }
    /* istanbul ignore next */
    cov_urzb4o1br().s[64]++;
    return compressed;
  }
  /**
   * Optimize response for token efficiency
   */
  optimizeResponse(response, maxTokens) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[10]++;
    cov_urzb4o1br().s[65]++;
    if (!maxTokens) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[13][0]++;
      cov_urzb4o1br().s[66]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[13][1]++;
    }
    const estimatedTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[67]++, Math.ceil(response.length / 4));
    /* istanbul ignore next */
    cov_urzb4o1br().s[68]++;
    if (estimatedTokens <= maxTokens) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[14][0]++;
      cov_urzb4o1br().s[69]++;
      return response;
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[14][1]++;
    }
    // Truncate at sentence boundaries
    const sentences =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[70]++, response.split(/[.!?]+/));
    let optimized =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[71]++, '');
    let tokenCount =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[72]++, 0);
    /* istanbul ignore next */
    cov_urzb4o1br().s[73]++;
    for (const sentence of sentences) {
      const sentenceTokens =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[74]++, Math.ceil(sentence.length / 4));
      /* istanbul ignore next */
      cov_urzb4o1br().s[75]++;
      if (tokenCount + sentenceTokens > maxTokens) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[15][0]++;
        cov_urzb4o1br().s[76]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[15][1]++;
      }
      cov_urzb4o1br().s[77]++;
      optimized += sentence + '.';
      /* istanbul ignore next */
      cov_urzb4o1br().s[78]++;
      tokenCount += sentenceTokens;
    }
    /* istanbul ignore next */
    cov_urzb4o1br().s[79]++;
    return optimized.trim();
  }
}
/**
 * Cost & Performance Optimization Service
 */
class CostPerformanceOptimizer {
  constructor(budget, region =
  /* istanbul ignore next */
  (cov_urzb4o1br().b[16][0]++, 'eu-central-1')) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[11]++;
    cov_urzb4o1br().s[80]++;
    this.budget = budget;
    /* istanbul ignore next */
    cov_urzb4o1br().s[81]++;
    this.region = region;
    /* istanbul ignore next */
    cov_urzb4o1br().s[82]++;
    this.dailyCosts = new Map(); // date -> cost
    /* istanbul ignore next */
    cov_urzb4o1br().s[83]++;
    this.monthlyCosts = new Map(); // month -> cost
    /* istanbul ignore next */
    cov_urzb4o1br().s[84]++;
    this.cache = new IntelligentCache();
    /* istanbul ignore next */
    cov_urzb4o1br().s[85]++;
    this.tokenOptimizer = new TokenOptimizer();
    /* istanbul ignore next */
    cov_urzb4o1br().s[86]++;
    this.cloudWatch = new client_cloudwatch_1.CloudWatchClient({
      region
    });
  }
  /**
   * Optimize request for cost and performance
   */
  optimizeRequest(request) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[12]++;
    cov_urzb4o1br().s[87]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[13]++;
      const requestId =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[88]++, (0, crypto_1.randomUUID)());
      const startTime =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[89]++, Date.now());
      // Check budget constraints
      const budgetCheck =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[90]++, yield this.checkBudget(request));
      /* istanbul ignore next */
      cov_urzb4o1br().s[91]++;
      if (!budgetCheck.allowed) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[17][0]++;
        cov_urzb4o1br().s[92]++;
        return {
          optimizedRequest: request,
          optimization: {
            originalCost: budgetCheck.estimatedCost,
            optimizedCost: 0,
            savings: 0,
            optimizations: ['budget-exceeded'],
            cacheUsed: false,
            compressionUsed: false
          },
          shouldProceed: false
        };
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[17][1]++;
      }
      // Check cache first
      const cacheKey =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[93]++, this.cache.generateKey(request));
      const cachedResponse =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[94]++, this.cache.get(cacheKey));
      /* istanbul ignore next */
      cov_urzb4o1br().s[95]++;
      if (cachedResponse) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[18][0]++;
        cov_urzb4o1br().s[96]++;
        return {
          optimizedRequest: request,
          optimization: {
            originalCost: budgetCheck.estimatedCost,
            optimizedCost: 0,
            savings: budgetCheck.estimatedCost,
            optimizations: ['cache-hit'],
            cacheUsed: true,
            compressionUsed: false
          },
          shouldProceed: false // Don't need to make API call
        };
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[18][1]++;
      }
      // Optimize prompt for token efficiency
      const tokenOptimization =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[97]++, this.tokenOptimizer.compressPrompt(request.prompt, 0.15));
      const optimizedRequest =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[98]++, Object.assign(Object.assign({}, request), {
        prompt: request.prompt // Keep original for now, apply compression based on cost pressure
      }));
      // Apply compression if cost pressure is high
      const costPressure =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[99]++, this.calculateCostPressure());
      /* istanbul ignore next */
      cov_urzb4o1br().s[100]++;
      if (
      /* istanbul ignore next */
      (cov_urzb4o1br().b[20][0]++, costPressure > 0.7) ||
      /* istanbul ignore next */
      (cov_urzb4o1br().b[20][1]++, budgetCheck.estimatedCost > budgetCheck.remainingBudget * 0.1)) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[19][0]++;
        cov_urzb4o1br().s[101]++;
        optimizedRequest.prompt = this.applyTokenOptimization(request.prompt, tokenOptimization);
        // Reduce max tokens if needed
        /* istanbul ignore next */
        cov_urzb4o1br().s[102]++;
        if (
        /* istanbul ignore next */
        (cov_urzb4o1br().b[22][0]++, request.maxTokens) &&
        /* istanbul ignore next */
        (cov_urzb4o1br().b[22][1]++, request.maxTokens > 1000)) {
          /* istanbul ignore next */
          cov_urzb4o1br().b[21][0]++;
          cov_urzb4o1br().s[103]++;
          optimizedRequest.maxTokens = Math.max(500, Math.floor(request.maxTokens * 0.8));
        } else
        /* istanbul ignore next */
        {
          cov_urzb4o1br().b[21][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[19][1]++;
      }
      const optimizedCost =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[104]++, this.estimateRequestCost(optimizedRequest));
      const savings =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[105]++, budgetCheck.estimatedCost - optimizedCost);
      /* istanbul ignore next */
      cov_urzb4o1br().s[106]++;
      return {
        optimizedRequest,
        optimization: {
          originalCost: budgetCheck.estimatedCost,
          optimizedCost,
          savings,
          optimizations: tokenOptimization.technique ?
          /* istanbul ignore next */
          (cov_urzb4o1br().b[23][0]++, ['token-compression']) :
          /* istanbul ignore next */
          (cov_urzb4o1br().b[23][1]++, []),
          cacheUsed: false,
          compressionUsed: tokenOptimization.compressionRatio > 0.05
        },
        shouldProceed: true
      };
    });
  }
  /**
   * Process response and update metrics
   */
  processResponse(request, response, optimization) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[14]++;
    cov_urzb4o1br().s[107]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[15]++;
      const actualCost =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[108]++, this.calculateActualCost(request, response));
      // Cache successful responses
      /* istanbul ignore next */
      cov_urzb4o1br().s[109]++;
      if (
      /* istanbul ignore next */
      (cov_urzb4o1br().b[25][0]++, response.content) &&
      /* istanbul ignore next */
      (cov_urzb4o1br().b[25][1]++, !response.error)) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[24][0]++;
        const cacheKey =
        /* istanbul ignore next */
        (cov_urzb4o1br().s[110]++, this.cache.generateKey(request));
        /* istanbul ignore next */
        cov_urzb4o1br().s[111]++;
        this.cache.set(cacheKey, response, actualCost);
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[24][1]++;
      }
      // Update cost tracking
      cov_urzb4o1br().s[112]++;
      yield this.updateCostTracking(actualCost);
      // Publish metrics
      /* istanbul ignore next */
      cov_urzb4o1br().s[113]++;
      yield this.publishMetrics({
        latency:
        /* istanbul ignore next */
        (cov_urzb4o1br().b[26][0]++, response.processingTime) ||
        /* istanbul ignore next */
        (cov_urzb4o1br().b[26][1]++, 0),
        throughput: 1000 / (
        /* istanbul ignore next */
        (cov_urzb4o1br().b[27][0]++, response.processingTime) ||
        /* istanbul ignore next */
        (cov_urzb4o1br().b[27][1]++, 1000)),
        // requests per second
        cacheHitRate: this.cache.getHitRate(),
        tokenEfficiency: this.calculateTokenEfficiency(request, response),
        costPerRequest: actualCost
      });
      // Optimize response if needed
      const optimizedContent =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[114]++, request.maxTokens ?
      /* istanbul ignore next */
      (cov_urzb4o1br().b[28][0]++, this.tokenOptimizer.optimizeResponse(response.content, request.maxTokens)) :
      /* istanbul ignore next */
      (cov_urzb4o1br().b[28][1]++, response.content));
      /* istanbul ignore next */
      cov_urzb4o1br().s[115]++;
      return Object.assign(Object.assign({}, response), {
        content: optimizedContent,
        cost: actualCost,
        optimization
      });
    });
  }
  /**
   * Check budget constraints
   */
  checkBudget(request) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[16]++;
    cov_urzb4o1br().s[116]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[17]++;
      const estimatedCost =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[117]++, this.estimateRequestCost(request));
      const today =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[118]++, new Date().toISOString().split('T')[0]);
      const thisMonth =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[119]++, new Date().toISOString().substring(0, 7));
      const dailySpent =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[120]++,
      /* istanbul ignore next */
      (cov_urzb4o1br().b[29][0]++, this.dailyCosts.get(today)) ||
      /* istanbul ignore next */
      (cov_urzb4o1br().b[29][1]++, 0));
      const monthlySpent =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[121]++,
      /* istanbul ignore next */
      (cov_urzb4o1br().b[30][0]++, this.monthlyCosts.get(thisMonth)) ||
      /* istanbul ignore next */
      (cov_urzb4o1br().b[30][1]++, 0));
      // Check daily limit
      /* istanbul ignore next */
      cov_urzb4o1br().s[122]++;
      if (dailySpent + estimatedCost > this.budget.dailyLimit) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[31][0]++;
        cov_urzb4o1br().s[123]++;
        if (this.budget.hardStop) {
          /* istanbul ignore next */
          cov_urzb4o1br().b[32][0]++;
          cov_urzb4o1br().s[124]++;
          return {
            allowed: false,
            estimatedCost,
            remainingBudget: this.budget.dailyLimit - dailySpent,
            reason: 'Daily budget exceeded'
          };
        } else
        /* istanbul ignore next */
        {
          cov_urzb4o1br().b[32][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[31][1]++;
      }
      // Check monthly limit
      cov_urzb4o1br().s[125]++;
      if (monthlySpent + estimatedCost > this.budget.monthlyLimit) {
        /* istanbul ignore next */
        cov_urzb4o1br().b[33][0]++;
        cov_urzb4o1br().s[126]++;
        if (this.budget.hardStop) {
          /* istanbul ignore next */
          cov_urzb4o1br().b[34][0]++;
          cov_urzb4o1br().s[127]++;
          return {
            allowed: false,
            estimatedCost,
            remainingBudget: this.budget.monthlyLimit - monthlySpent,
            reason: 'Monthly budget exceeded'
          };
        } else
        /* istanbul ignore next */
        {
          cov_urzb4o1br().b[34][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_urzb4o1br().b[33][1]++;
      }
      cov_urzb4o1br().s[128]++;
      return {
        allowed: true,
        estimatedCost,
        remainingBudget: Math.min(this.budget.dailyLimit - dailySpent, this.budget.monthlyLimit - monthlySpent)
      };
    });
  }
  /**
   * Estimate request cost based on tokens and provider
   */
  estimateRequestCost(request) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[18]++;
    const inputTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[129]++, Math.ceil(request.prompt.length / 4));
    const outputTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[130]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[35][0]++, request.maxTokens) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[35][1]++, 1000));
    const providerCosts =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[131]++, {
      bedrock: {
        input: 0.003,
        output: 0.015
      },
      // per 1K tokens
      google: {
        input: 0.00125,
        output: 0.005
      },
      meta: {
        input: 0.0008,
        output: 0.0024
      }
    });
    const costs =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[132]++, providerCosts[
    /* istanbul ignore next */
    (cov_urzb4o1br().b[36][0]++, request.provider) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[36][1]++, 'bedrock')]);
    /* istanbul ignore next */
    cov_urzb4o1br().s[133]++;
    return (inputTokens * costs.input + outputTokens * costs.output) / 1000;
  }
  /**
   * Calculate actual cost from response
   */
  calculateActualCost(request, response) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[19]++;
    cov_urzb4o1br().s[134]++;
    if (response.cached) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[37][0]++;
      cov_urzb4o1br().s[135]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[37][1]++;
    }
    const inputTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[136]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[38][0]++, response.inputTokens) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[38][1]++, Math.ceil(request.prompt.length / 4)));
    const outputTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[137]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[39][0]++, response.outputTokens) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[39][1]++, Math.ceil(response.content.length / 4)));
    const providerCosts =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[138]++, {
      bedrock: {
        input: 0.003,
        output: 0.015
      },
      google: {
        input: 0.00125,
        output: 0.005
      },
      meta: {
        input: 0.0008,
        output: 0.0024
      }
    });
    const costs =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[139]++, providerCosts[
    /* istanbul ignore next */
    (cov_urzb4o1br().b[40][0]++, request.provider) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[40][1]++, 'bedrock')]);
    /* istanbul ignore next */
    cov_urzb4o1br().s[140]++;
    return (inputTokens * costs.input + outputTokens * costs.output) / 1000;
  }
  /**
   * Calculate cost pressure (0-1 scale)
   */
  calculateCostPressure() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[20]++;
    const today =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[141]++, new Date().toISOString().split('T')[0]);
    const thisMonth =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[142]++, new Date().toISOString().substring(0, 7));
    const dailySpent =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[143]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[41][0]++, this.dailyCosts.get(today)) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[41][1]++, 0));
    const monthlySpent =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[144]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[42][0]++, this.monthlyCosts.get(thisMonth)) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[42][1]++, 0));
    const dailyPressure =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[145]++, dailySpent / this.budget.dailyLimit);
    const monthlyPressure =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[146]++, monthlySpent / this.budget.monthlyLimit);
    /* istanbul ignore next */
    cov_urzb4o1br().s[147]++;
    return Math.max(dailyPressure, monthlyPressure);
  }
  /**
   * Apply token optimization to prompt
   */
  applyTokenOptimization(prompt, optimization) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[21]++;
    cov_urzb4o1br().s[148]++;
    if (optimization.compressionRatio < 0.05) {
      /* istanbul ignore next */
      cov_urzb4o1br().b[43][0]++;
      cov_urzb4o1br().s[149]++;
      return prompt;
    } else
    /* istanbul ignore next */
    {
      cov_urzb4o1br().b[43][1]++;
    }
    // Apply the compression techniques
    cov_urzb4o1br().s[150]++;
    return this.tokenOptimizer.compressPrompt(prompt, 0.2).technique ?
    /* istanbul ignore next */
    (cov_urzb4o1br().b[44][0]++, this.tokenOptimizer.compressPrompt(prompt, 0.2).toString()) :
    /* istanbul ignore next */
    (cov_urzb4o1br().b[44][1]++, prompt);
  }
  /**
   * Calculate token efficiency
   */
  calculateTokenEfficiency(request, response) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[22]++;
    const inputTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[151]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[45][0]++, response.inputTokens) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[45][1]++, Math.ceil(request.prompt.length / 4)));
    const outputTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[152]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[46][0]++, response.outputTokens) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[46][1]++, Math.ceil(response.content.length / 4)));
    const totalTokens =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[153]++, inputTokens + outputTokens);
    // Efficiency = useful content / total tokens
    const usefulContent =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[154]++, response.content.replace(/\s+/g, ' ').trim().length);
    /* istanbul ignore next */
    cov_urzb4o1br().s[155]++;
    return totalTokens > 0 ?
    /* istanbul ignore next */
    (cov_urzb4o1br().b[47][0]++, usefulContent / (totalTokens * 4)) :
    /* istanbul ignore next */
    (cov_urzb4o1br().b[47][1]++, 0);
  }
  /**
   * Update cost tracking
   */
  updateCostTracking(cost) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[23]++;
    cov_urzb4o1br().s[156]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[24]++;
      const today =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[157]++, new Date().toISOString().split('T')[0]);
      const thisMonth =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[158]++, new Date().toISOString().substring(0, 7));
      // Update daily costs
      const currentDaily =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[159]++,
      /* istanbul ignore next */
      (cov_urzb4o1br().b[48][0]++, this.dailyCosts.get(today)) ||
      /* istanbul ignore next */
      (cov_urzb4o1br().b[48][1]++, 0));
      /* istanbul ignore next */
      cov_urzb4o1br().s[160]++;
      this.dailyCosts.set(today, currentDaily + cost);
      // Update monthly costs
      const currentMonthly =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[161]++,
      /* istanbul ignore next */
      (cov_urzb4o1br().b[49][0]++, this.monthlyCosts.get(thisMonth)) ||
      /* istanbul ignore next */
      (cov_urzb4o1br().b[49][1]++, 0));
      /* istanbul ignore next */
      cov_urzb4o1br().s[162]++;
      this.monthlyCosts.set(thisMonth, currentMonthly + cost);
      // Check alert thresholds
      /* istanbul ignore next */
      cov_urzb4o1br().s[163]++;
      yield this.checkAlertThresholds(currentDaily + cost, currentMonthly + cost);
    });
  }
  /**
   * Check budget alert thresholds
   */
  checkAlertThresholds(dailySpent, monthlySpent) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[25]++;
    cov_urzb4o1br().s[164]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[26]++;
      cov_urzb4o1br().s[165]++;
      for (const threshold of this.budget.alertThresholds) {
        const dailyThreshold =
        /* istanbul ignore next */
        (cov_urzb4o1br().s[166]++, this.budget.dailyLimit * (threshold / 100));
        const monthlyThreshold =
        /* istanbul ignore next */
        (cov_urzb4o1br().s[167]++, this.budget.monthlyLimit * (threshold / 100));
        /* istanbul ignore next */
        cov_urzb4o1br().s[168]++;
        if (
        /* istanbul ignore next */
        (cov_urzb4o1br().b[51][0]++, dailySpent >= dailyThreshold) ||
        /* istanbul ignore next */
        (cov_urzb4o1br().b[51][1]++, monthlySpent >= monthlyThreshold)) {
          /* istanbul ignore next */
          cov_urzb4o1br().b[50][0]++;
          cov_urzb4o1br().s[169]++;
          yield this.sendBudgetAlert(threshold, dailySpent, monthlySpent);
        } else
        /* istanbul ignore next */
        {
          cov_urzb4o1br().b[50][1]++;
        }
      }
    });
  }
  /**
   * Send budget alert
   */
  sendBudgetAlert(threshold, dailySpent, monthlySpent) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[27]++;
    cov_urzb4o1br().s[170]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[28]++;
      cov_urzb4o1br().s[171]++;
      console.warn(`Budget alert: ${threshold}% threshold reached. Daily: $${dailySpent.toFixed(2)}, Monthly: $${monthlySpent.toFixed(2)}`);
      // Publish alert metric
      /* istanbul ignore next */
      cov_urzb4o1br().s[172]++;
      yield this.cloudWatch.send(new client_cloudwatch_1.PutMetricDataCommand({
        Namespace: 'AI/CostOptimization',
        MetricData: [{
          MetricName: 'BudgetAlert',
          Value: threshold,
          Unit: 'Percent',
          Timestamp: new Date(),
          Dimensions: [{
            Name: 'AlertType',
            Value: dailySpent >= this.budget.dailyLimit * (threshold / 100) ?
            /* istanbul ignore next */
            (cov_urzb4o1br().b[52][0]++, 'Daily') :
            /* istanbul ignore next */
            (cov_urzb4o1br().b[52][1]++, 'Monthly')
          }]
        }]
      }));
    });
  }
  /**
   * Publish performance metrics
   */
  publishMetrics(metrics) {
    /* istanbul ignore next */
    cov_urzb4o1br().f[29]++;
    cov_urzb4o1br().s[173]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_urzb4o1br().f[30]++;
      const metricData =
      /* istanbul ignore next */
      (cov_urzb4o1br().s[174]++, [{
        MetricName: 'Latency',
        Value: metrics.latency,
        Unit: 'Milliseconds'
      }, {
        MetricName: 'Throughput',
        Value: metrics.throughput,
        Unit: 'Count/Second'
      }, {
        MetricName: 'CacheHitRate',
        Value: metrics.cacheHitRate * 100,
        Unit: 'Percent'
      }, {
        MetricName: 'TokenEfficiency',
        Value: metrics.tokenEfficiency,
        Unit: 'None'
      }, {
        MetricName: 'CostPerRequest',
        Value: metrics.costPerRequest,
        Unit: 'None'
      }].map(metric => {
        /* istanbul ignore next */
        cov_urzb4o1br().f[31]++;
        cov_urzb4o1br().s[175]++;
        return Object.assign(Object.assign({}, metric), {
          Timestamp: new Date()
        });
      }));
      /* istanbul ignore next */
      cov_urzb4o1br().s[176]++;
      yield this.cloudWatch.send(new client_cloudwatch_1.PutMetricDataCommand({
        Namespace: 'AI/Performance',
        MetricData: metricData
      }));
    });
  }
  /**
   * Get current performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[32]++;
    const cacheStats =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[177]++, this.cache.getStats());
    /* istanbul ignore next */
    cov_urzb4o1br().s[178]++;
    return {
      latency: 0,
      // Will be updated by actual requests
      throughput: 0,
      // Will be updated by actual requests
      cacheHitRate: cacheStats.hitRate,
      tokenEfficiency: 0,
      // Will be updated by actual requests
      costPerRequest: 0 // Will be updated by actual requests
    };
  }
  /**
   * Get cost summary
   */
  getCostSummary() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[33]++;
    const today =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[179]++, new Date().toISOString().split('T')[0]);
    const thisMonth =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[180]++, new Date().toISOString().substring(0, 7));
    const dailySpent =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[181]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[53][0]++, this.dailyCosts.get(today)) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[53][1]++, 0));
    const monthlySpent =
    /* istanbul ignore next */
    (cov_urzb4o1br().s[182]++,
    /* istanbul ignore next */
    (cov_urzb4o1br().b[54][0]++, this.monthlyCosts.get(thisMonth)) ||
    /* istanbul ignore next */
    (cov_urzb4o1br().b[54][1]++, 0));
    /* istanbul ignore next */
    cov_urzb4o1br().s[183]++;
    return {
      daily: {
        spent: dailySpent,
        limit: this.budget.dailyLimit,
        remaining: this.budget.dailyLimit - dailySpent
      },
      monthly: {
        spent: monthlySpent,
        limit: this.budget.monthlyLimit,
        remaining: this.budget.monthlyLimit - monthlySpent
      },
      cacheStats: this.cache.getStats()
    };
  }
  /**
   * Clear cache
   */
  clearCache() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[34]++;
    cov_urzb4o1br().s[184]++;
    this.cache.clear();
  }
  /**
   * Reset cost tracking
   */
  resetCostTracking() {
    /* istanbul ignore next */
    cov_urzb4o1br().f[35]++;
    cov_urzb4o1br().s[185]++;
    this.dailyCosts.clear();
    /* istanbul ignore next */
    cov_urzb4o1br().s[186]++;
    this.monthlyCosts.clear();
  }
}
/* istanbul ignore next */
cov_urzb4o1br().s[187]++;
exports.CostPerformanceOptimizer = CostPerformanceOptimizer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,