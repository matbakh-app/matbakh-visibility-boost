{"version":3,"names":["cov_1deb2j9vg3","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","audit_trail_system_1","require","basic_logger_1","ProviderAgreementCompliance","constructor","agreements","Map","violations","logger","BasicLogger","auditTrail","AuditTrailSystem","complianceMode","enableIntegrityChecking","retentionDays","initializeProviderAgreements","currentDate","Date","toISOString","set","providerId","providerName","agreementId","signedDate","expiryDate","noTrainingOnCustomerData","dataProcessingAgreement","gdprCompliant","euDataResidency","agreementUrl","contactEmail","complianceOfficer","lastVerified","verificationMethod","verificationStatus","timestamp","action","details","performedBy","evidence","info","totalProviders","size","verifiedProviders","Array","from","values","filter","a","length","verifyProviderCompliance","agreement","get","warnings","push","compliant","now","daysSinceVerification","getTime","Math","floor","recentViolations","v","status","recordViolation","violation","violationId","random","toString","substr","fullViolation","Object","assign","logEvent","eventType","requestId","provider","complianceStatus","metadata","violationType","severity","description","error","updateAgreementVerification","Error","generateComplianceReport","startDate","endDate","reportId","compliantProviders","complianceScore","round","overallCompliance","providers","entries","map","agreementStatus","providerViolations","periodViolations","violationsByType","reduce","acc","violationsBySeverity","resolvedViolations","pendingViolations","recommendations","some","nextActions","expiringSoon","daysUntilExpiry","priority","dueDate","report","generatedAt","reportingPeriod","total","byType","bySeverity","resolved","pending","totalViolations","getAllAgreements","getAgreement","getAllViolations","resolveViolation","resolutionNotes","find","resolutionDate","exports","providerAgreementCompliance"],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts"],"sourcesContent":["/**\n * Provider Agreement Compliance System\n *\n * Ensures all AI providers comply with \"no training on customer data\" agreements\n * Validates and monitors compliance with data processing agreements (DPAs)\n * Provides audit trail for regulatory compliance\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { BasicLogger } from \"./basic-logger\";\nimport { Provider } from \"./types\";\n\nexport interface ProviderAgreement {\n  providerId: Provider;\n  providerName: string;\n  agreementId: string;\n  signedDate: string;\n  expiryDate: string;\n  version: string;\n\n  // Core compliance requirements\n  noTrainingOnCustomerData: boolean;\n  dataProcessingAgreement: boolean;\n  gdprCompliant: boolean;\n  euDataResidency: boolean;\n\n  // Agreement details\n  agreementUrl?: string;\n  contactEmail?: string;\n  complianceOfficer?: string;\n\n  // Verification\n  lastVerified: string;\n  verificationMethod: \"contract_review\" | \"api_confirmation\" | \"certification\";\n  verificationStatus: \"verified\" | \"pending\" | \"expired\" | \"violated\";\n\n  // Audit trail\n  auditTrail: ProviderAgreementAudit[];\n}\n\nexport interface ProviderAgreementAudit {\n  timestamp: string;\n  action: \"created\" | \"updated\" | \"verified\" | \"violation_detected\" | \"expired\";\n  details: string;\n  performedBy: string;\n  evidence?: string;\n}\n\nexport interface ComplianceViolation {\n  violationId: string;\n  providerId: Provider;\n  timestamp: string;\n  violationType:\n    | \"training_detected\"\n    | \"data_retention\"\n    | \"unauthorized_access\"\n    | \"agreement_expired\";\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  evidence: string;\n  status: \"open\" | \"investigating\" | \"resolved\" | \"false_positive\";\n  resolutionDate?: string;\n  resolutionNotes?: string;\n}\n\nexport interface ComplianceReport {\n  reportId: string;\n  generatedAt: string;\n  reportingPeriod: {\n    start: string;\n    end: string;\n  };\n\n  // Overall compliance status\n  overallCompliance: \"compliant\" | \"non_compliant\" | \"warning\";\n  complianceScore: number; // 0-100\n\n  // Provider status\n  providers: Array<{\n    providerId: Provider;\n    compliant: boolean;\n    agreementStatus: \"active\" | \"expired\" | \"missing\";\n    lastVerified: string;\n    violations: number;\n  }>;\n\n  // Violations summary\n  violations: {\n    total: number;\n    byType: Record<string, number>;\n    bySeverity: Record<string, number>;\n    resolved: number;\n    pending: number;\n  };\n\n  // Recommendations\n  recommendations: string[];\n\n  // Next actions\n  nextActions: Array<{\n    action: string;\n    priority: \"low\" | \"medium\" | \"high\" | \"critical\";\n    dueDate: string;\n  }>;\n}\n\n/**\n * Provider Agreement Compliance Manager\n */\nexport class ProviderAgreementCompliance {\n  private logger: BasicLogger;\n  private auditTrail: AuditTrailSystem;\n  private agreements: Map<Provider, ProviderAgreement> = new Map();\n  private violations: ComplianceViolation[] = [];\n\n  constructor() {\n    this.logger = new BasicLogger(\"provider-agreement-compliance\");\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for compliance\n    });\n\n    // Initialize with known provider agreements\n    this.initializeProviderAgreements();\n  }\n\n  /**\n   * Initialize provider agreements with current status\n   */\n  private initializeProviderAgreements(): void {\n    const currentDate = new Date().toISOString();\n\n    // AWS Bedrock Agreement\n    this.agreements.set(\"bedrock\", {\n      providerId: \"bedrock\",\n      providerName: \"Amazon Web Services (Bedrock)\",\n      agreementId: \"AWS-BEDROCK-DPA-2024\",\n      signedDate: \"2024-01-15T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: true,\n\n      agreementUrl: \"https://aws.amazon.com/service-terms/\",\n      contactEmail: \"privacy@amazon.com\",\n      complianceOfficer: \"AWS Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-01-15T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with AWS Bedrock DPA\",\n          performedBy: \"system\",\n          evidence: \"AWS Service Terms and Bedrock documentation\",\n        },\n      ],\n    });\n\n    // Google AI Agreement\n    this.agreements.set(\"google\", {\n      providerId: \"google\",\n      providerName: \"Google Cloud AI Platform\",\n      agreementId: \"GOOGLE-AI-DPA-2024\",\n      signedDate: \"2024-02-01T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: true,\n\n      agreementUrl: \"https://cloud.google.com/terms/data-processing-addendum\",\n      contactEmail: \"privacy@google.com\",\n      complianceOfficer: \"Google Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-02-01T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with Google Cloud AI DPA\",\n          performedBy: \"system\",\n          evidence: \"Google Cloud Data Processing Addendum\",\n        },\n      ],\n    });\n\n    // Meta AI Agreement\n    this.agreements.set(\"meta\", {\n      providerId: \"meta\",\n      providerName: \"Meta AI Platform\",\n      agreementId: \"META-AI-DPA-2024\",\n      signedDate: \"2024-03-01T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: false, // Meta may process in US\n\n      agreementUrl: \"https://developers.facebook.com/terms/\",\n      contactEmail: \"privacy@meta.com\",\n      complianceOfficer: \"Meta Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-03-01T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with Meta AI DPA\",\n          performedBy: \"system\",\n          evidence: \"Meta Developer Terms and Privacy Policy\",\n        },\n      ],\n    });\n\n    this.logger.info(\"Provider agreements initialized\", {\n      totalProviders: this.agreements.size,\n      verifiedProviders: Array.from(this.agreements.values()).filter(\n        (a) => a.verificationStatus === \"verified\"\n      ).length,\n    });\n  }\n\n  /**\n   * Verify provider compliance before AI request\n   */\n  async verifyProviderCompliance(providerId: Provider): Promise<{\n    compliant: boolean;\n    agreement?: ProviderAgreement;\n    violations: string[];\n    warnings: string[];\n  }> {\n    const agreement = this.agreements.get(providerId);\n    const violations: string[] = [];\n    const warnings: string[] = [];\n\n    if (!agreement) {\n      violations.push(`No agreement found for provider: ${providerId}`);\n      return { compliant: false, violations, warnings };\n    }\n\n    // Check agreement expiry\n    const now = new Date();\n    const expiryDate = new Date(agreement.expiryDate);\n    if (now > expiryDate) {\n      violations.push(`Agreement expired on ${agreement.expiryDate}`);\n    }\n\n    // Check core compliance requirements\n    if (!agreement.noTrainingOnCustomerData) {\n      violations.push(\n        \"Provider does not guarantee no training on customer data\"\n      );\n    }\n\n    if (!agreement.dataProcessingAgreement) {\n      violations.push(\"No valid Data Processing Agreement\");\n    }\n\n    if (!agreement.gdprCompliant) {\n      violations.push(\"Provider is not GDPR compliant\");\n    }\n\n    // Check verification status\n    if (agreement.verificationStatus !== \"verified\") {\n      violations.push(\n        `Agreement verification status: ${agreement.verificationStatus}`\n      );\n    }\n\n    // Check last verification date (warn if older than 90 days)\n    const lastVerified = new Date(agreement.lastVerified);\n    const daysSinceVerification =\n      (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24);\n    if (daysSinceVerification > 90) {\n      warnings.push(\n        `Agreement not verified in ${Math.floor(daysSinceVerification)} days`\n      );\n    }\n\n    // Check for recent violations\n    const recentViolations = this.violations.filter(\n      (v) =>\n        v.providerId === providerId &&\n        v.status === \"open\" &&\n        new Date(v.timestamp) >\n          new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000) // Last 30 days\n    );\n\n    if (recentViolations.length > 0) {\n      violations.push(\n        `${recentViolations.length} unresolved violations in last 30 days`\n      );\n    }\n\n    const compliant = violations.length === 0;\n\n    this.logger.info(\"Provider compliance verified\", {\n      providerId,\n      compliant,\n      violations: violations.length,\n      warnings: warnings.length,\n    });\n\n    return {\n      compliant,\n      agreement,\n      violations,\n      warnings,\n    };\n  }\n\n  /**\n   * Record compliance violation\n   */\n  async recordViolation(\n    violation: Omit<ComplianceViolation, \"violationId\" | \"timestamp\" | \"status\">\n  ): Promise<string> {\n    const violationId = `violation-${Date.now()}-${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    const fullViolation: ComplianceViolation = {\n      violationId,\n      timestamp: new Date().toISOString(),\n      status: \"open\",\n      ...violation,\n    };\n\n    this.violations.push(fullViolation);\n\n    // Log to audit trail\n    await this.auditTrail.logEvent({\n      eventType: \"compliance_violation\",\n      requestId: violationId,\n      provider: violation.providerId,\n      complianceStatus: \"violation\",\n      metadata: {\n        violationType: violation.violationType,\n        severity: violation.severity,\n        description: violation.description,\n      },\n    });\n\n    this.logger.error(\"Compliance violation recorded\", {\n      violationId,\n      providerId: violation.providerId,\n      violationType: violation.violationType,\n      severity: violation.severity,\n    });\n\n    return violationId;\n  }\n\n  /**\n   * Update agreement verification\n   */\n  async updateAgreementVerification(\n    providerId: Provider,\n    verificationStatus: ProviderAgreement[\"verificationStatus\"],\n    verificationMethod: ProviderAgreement[\"verificationMethod\"],\n    evidence?: string\n  ): Promise<void> {\n    const agreement = this.agreements.get(providerId);\n    if (!agreement) {\n      throw new Error(`No agreement found for provider: ${providerId}`);\n    }\n\n    agreement.verificationStatus = verificationStatus;\n    agreement.verificationMethod = verificationMethod;\n    agreement.lastVerified = new Date().toISOString();\n\n    // Add to audit trail\n    agreement.auditTrail.push({\n      timestamp: new Date().toISOString(),\n      action: \"verified\",\n      details: `Verification updated to ${verificationStatus} via ${verificationMethod}`,\n      performedBy: \"system\",\n      evidence,\n    });\n\n    this.logger.info(\"Agreement verification updated\", {\n      providerId,\n      verificationStatus,\n      verificationMethod,\n    });\n  }\n\n  /**\n   * Generate compliance report\n   */\n  async generateComplianceReport(\n    startDate: string,\n    endDate: string\n  ): Promise<ComplianceReport> {\n    const reportId = `compliance-report-${Date.now()}`;\n    const now = new Date().toISOString();\n\n    // Calculate overall compliance\n    const totalProviders = this.agreements.size;\n    const compliantProviders = Array.from(this.agreements.values()).filter(\n      (agreement) => {\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        return (\n          agreement.verificationStatus === \"verified\" &&\n          agreement.noTrainingOnCustomerData &&\n          agreement.dataProcessingAgreement &&\n          now <= expiryDate\n        );\n      }\n    ).length;\n\n    const complianceScore =\n      totalProviders > 0\n        ? Math.round((compliantProviders / totalProviders) * 100)\n        : 0;\n    const overallCompliance: ComplianceReport[\"overallCompliance\"] =\n      complianceScore >= 95\n        ? \"compliant\"\n        : complianceScore >= 80\n        ? \"warning\"\n        : \"non_compliant\";\n\n    // Provider status\n    const providers = Array.from(this.agreements.entries()).map(\n      ([providerId, agreement]) => {\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        const agreementStatus = now > expiryDate ? \"expired\" : \"active\";\n\n        const providerViolations = this.violations.filter(\n          (v) =>\n            v.providerId === providerId &&\n            new Date(v.timestamp) >= new Date(startDate) &&\n            new Date(v.timestamp) <= new Date(endDate)\n        ).length;\n\n        return {\n          providerId,\n          compliant:\n            agreement.verificationStatus === \"verified\" &&\n            agreement.noTrainingOnCustomerData &&\n            agreementStatus === \"active\",\n          agreementStatus,\n          lastVerified: agreement.lastVerified,\n          violations: providerViolations,\n        };\n      }\n    );\n\n    // Violations summary\n    const periodViolations = this.violations.filter(\n      (v) =>\n        new Date(v.timestamp) >= new Date(startDate) &&\n        new Date(v.timestamp) <= new Date(endDate)\n    );\n\n    const violationsByType = periodViolations.reduce((acc, v) => {\n      acc[v.violationType] = (acc[v.violationType] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const violationsBySeverity = periodViolations.reduce((acc, v) => {\n      acc[v.severity] = (acc[v.severity] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const resolvedViolations = periodViolations.filter(\n      (v) => v.status === \"resolved\"\n    ).length;\n    const pendingViolations = periodViolations.filter(\n      (v) => v.status === \"open\" || v.status === \"investigating\"\n    ).length;\n\n    // Generate recommendations\n    const recommendations: string[] = [];\n    if (complianceScore < 100) {\n      recommendations.push(\n        \"Review and update expired or missing provider agreements\"\n      );\n    }\n    if (pendingViolations > 0) {\n      recommendations.push(\n        `Resolve ${pendingViolations} pending compliance violations`\n      );\n    }\n    if (\n      Array.from(this.agreements.values()).some((a) => {\n        const daysSinceVerification =\n          (new Date().getTime() - new Date(a.lastVerified).getTime()) /\n          (1000 * 60 * 60 * 24);\n        return daysSinceVerification > 90;\n      })\n    ) {\n      recommendations.push(\n        \"Update verification for agreements older than 90 days\"\n      );\n    }\n\n    // Next actions\n    const nextActions = [];\n    const expiringSoon = Array.from(this.agreements.values()).filter((a) => {\n      const expiryDate = new Date(a.expiryDate);\n      const daysUntilExpiry =\n        (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24);\n      return daysUntilExpiry <= 90 && daysUntilExpiry > 0;\n    });\n\n    for (const agreement of expiringSoon) {\n      const expiryDate = new Date(agreement.expiryDate);\n      const daysUntilExpiry = Math.floor(\n        (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)\n      );\n      nextActions.push({\n        action: `Renew agreement with ${agreement.providerName}`,\n        priority:\n          daysUntilExpiry <= 30 ? (\"critical\" as const) : (\"high\" as const),\n        dueDate: new Date(\n          expiryDate.getTime() - 30 * 24 * 60 * 60 * 1000\n        ).toISOString(), // 30 days before expiry\n      });\n    }\n\n    const report: ComplianceReport = {\n      reportId,\n      generatedAt: now,\n      reportingPeriod: { start: startDate, end: endDate },\n      overallCompliance,\n      complianceScore,\n      providers,\n      violations: {\n        total: periodViolations.length,\n        byType: violationsByType,\n        bySeverity: violationsBySeverity,\n        resolved: resolvedViolations,\n        pending: pendingViolations,\n      },\n      recommendations,\n      nextActions,\n    };\n\n    this.logger.info(\"Compliance report generated\", {\n      reportId,\n      overallCompliance,\n      complianceScore,\n      totalViolations: periodViolations.length,\n    });\n\n    return report;\n  }\n\n  /**\n   * Get all provider agreements\n   */\n  getAllAgreements(): ProviderAgreement[] {\n    return Array.from(this.agreements.values());\n  }\n\n  /**\n   * Get agreement for specific provider\n   */\n  getAgreement(providerId: Provider): ProviderAgreement | undefined {\n    return this.agreements.get(providerId);\n  }\n\n  /**\n   * Get all violations\n   */\n  getAllViolations(): ComplianceViolation[] {\n    return [...this.violations];\n  }\n\n  /**\n   * Resolve violation\n   */\n  async resolveViolation(\n    violationId: string,\n    resolutionNotes: string\n  ): Promise<void> {\n    const violation = this.violations.find(\n      (v) => v.violationId === violationId\n    );\n    if (!violation) {\n      throw new Error(`Violation not found: ${violationId}`);\n    }\n\n    violation.status = \"resolved\";\n    violation.resolutionDate = new Date().toISOString();\n    violation.resolutionNotes = resolutionNotes;\n\n    this.logger.info(\"Violation resolved\", {\n      violationId,\n      providerId: violation.providerId,\n      resolutionNotes,\n    });\n  }\n}\n\n// Singleton instance - create fresh instance for each test\nexport const providerAgreementCompliance = new ProviderAgreementCompliance();\n"],"mappings":"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","ignoreList":[]}