5df1422c4895816444928749f9c03974
"use strict";

/**
 * Provider Agreement Compliance System
 *
 * Ensures all AI providers comply with "no training on customer data" agreements
 * Validates and monitors compliance with data processing agreements (DPAs)
 * Provides audit trail for regulatory compliance
 */
/* istanbul ignore next */
function cov_1deb2j9vg3() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts";
  var hash = "c458971e4ce8eeaa8e8692f7b78d085d4f48610d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 83
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 60
        }
      },
      "4": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 86
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 44
        }
      },
      "10": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "12": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 90,
          column: 11
        }
      },
      "13": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "14": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "15": {
        start: {
          line: 121,
          column: 82
        },
        end: {
          line: 121,
          column: 117
        }
      },
      "16": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 184,
          column: 11
        }
      },
      "17": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "18": {
        start: {
          line: 130,
          column: 31
        },
        end: {
          line: 130,
          column: 33
        }
      },
      "19": {
        start: {
          line: 131,
          column: 29
        },
        end: {
          line: 131,
          column: 31
        }
      },
      "20": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "21": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 82
        }
      },
      "22": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 66
        }
      },
      "23": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 34
        }
      },
      "24": {
        start: {
          line: 138,
          column: 31
        },
        end: {
          line: 138,
          column: 61
        }
      },
      "25": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "26": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 80
        }
      },
      "27": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "28": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 92
        }
      },
      "29": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "30": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 70
        }
      },
      "31": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "32": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 66
        }
      },
      "33": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "34": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 98
        }
      },
      "35": {
        start: {
          line: 157,
          column: 33
        },
        end: {
          line: 157,
          column: 65
        }
      },
      "36": {
        start: {
          line: 158,
          column: 42
        },
        end: {
          line: 158,
          column: 106
        }
      },
      "37": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "38": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 101
        }
      },
      "39": {
        start: {
          line: 163,
          column: 37
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "40": {
        start: {
          line: 163,
          column: 67
        },
        end: {
          line: 166,
          column: 70
        }
      },
      "41": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "42": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 100
        }
      },
      "43": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 53
        }
      },
      "44": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "45": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 183,
          column: 14
        }
      },
      "46": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "47": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "48": {
        start: {
          line: 194,
          column: 34
        },
        end: {
          line: 194,
          column: 128
        }
      },
      "49": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "50": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "51": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "52": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "53": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "54": {
        start: {
          line: 222,
          column: 30
        },
        end: {
          line: 222,
          column: 61
        }
      },
      "55": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "56": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 82
        }
      },
      "57": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 62
        }
      },
      "58": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 62
        }
      },
      "59": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 62
        }
      },
      "60": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 236,
          column: 15
        }
      },
      "61": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "62": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 355,
          column: 11
        }
      },
      "63": {
        start: {
          line: 249,
          column: 29
        },
        end: {
          line: 249,
          column: 62
        }
      },
      "64": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 250,
          column: 48
        }
      },
      "65": {
        start: {
          line: 252,
          column: 35
        },
        end: {
          line: 252,
          column: 55
        }
      },
      "66": {
        start: {
          line: 253,
          column: 39
        },
        end: {
          line: 260,
          column: 21
        }
      },
      "67": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 38
        }
      },
      "68": {
        start: {
          line: 255,
          column: 35
        },
        end: {
          line: 255,
          column: 65
        }
      },
      "69": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 259,
          column: 39
        }
      },
      "70": {
        start: {
          line: 261,
          column: 36
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "71": {
        start: {
          line: 264,
          column: 38
        },
        end: {
          line: 268,
          column: 37
        }
      },
      "72": {
        start: {
          line: 270,
          column: 30
        },
        end: {
          line: 286,
          column: 14
        }
      },
      "73": {
        start: {
          line: 271,
          column: 28
        },
        end: {
          line: 271,
          column: 38
        }
      },
      "74": {
        start: {
          line: 272,
          column: 35
        },
        end: {
          line: 272,
          column: 65
        }
      },
      "75": {
        start: {
          line: 273,
          column: 40
        },
        end: {
          line: 273,
          column: 79
        }
      },
      "76": {
        start: {
          line: 274,
          column: 43
        },
        end: {
          line: 276,
          column: 70
        }
      },
      "77": {
        start: {
          line: 274,
          column: 73
        },
        end: {
          line: 276,
          column: 62
        }
      },
      "78": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 285,
          column: 18
        }
      },
      "79": {
        start: {
          line: 288,
          column: 37
        },
        end: {
          line: 289,
          column: 59
        }
      },
      "80": {
        start: {
          line: 288,
          column: 67
        },
        end: {
          line: 289,
          column: 58
        }
      },
      "81": {
        start: {
          line: 290,
          column: 37
        },
        end: {
          line: 293,
          column: 18
        }
      },
      "82": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 71
        }
      },
      "83": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 292,
          column: 27
        }
      },
      "84": {
        start: {
          line: 294,
          column: 41
        },
        end: {
          line: 297,
          column: 18
        }
      },
      "85": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 61
        }
      },
      "86": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 27
        }
      },
      "87": {
        start: {
          line: 298,
          column: 39
        },
        end: {
          line: 298,
          column: 101
        }
      },
      "88": {
        start: {
          line: 298,
          column: 70
        },
        end: {
          line: 298,
          column: 93
        }
      },
      "89": {
        start: {
          line: 299,
          column: 38
        },
        end: {
          line: 299,
          column: 128
        }
      },
      "90": {
        start: {
          line: 299,
          column: 69
        },
        end: {
          line: 299,
          column: 120
        }
      },
      "91": {
        start: {
          line: 301,
          column: 36
        },
        end: {
          line: 301,
          column: 38
        }
      },
      "92": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "93": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 97
        }
      },
      "94": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "95": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 99
        }
      },
      "96": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 314,
          column: 13
        }
      },
      "97": {
        start: {
          line: 309,
          column: 46
        },
        end: {
          line: 310,
          column: 41
        }
      },
      "98": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 50
        }
      },
      "99": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 94
        }
      },
      "100": {
        start: {
          line: 316,
          column: 32
        },
        end: {
          line: 316,
          column: 34
        }
      },
      "101": {
        start: {
          line: 317,
          column: 33
        },
        end: {
          line: 321,
          column: 14
        }
      },
      "102": {
        start: {
          line: 318,
          column: 35
        },
        end: {
          line: 318,
          column: 57
        }
      },
      "103": {
        start: {
          line: 319,
          column: 40
        },
        end: {
          line: 319,
          column: 109
        }
      },
      "104": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 68
        }
      },
      "105": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 330,
          column: 13
        }
      },
      "106": {
        start: {
          line: 323,
          column: 35
        },
        end: {
          line: 323,
          column: 65
        }
      },
      "107": {
        start: {
          line: 324,
          column: 40
        },
        end: {
          line: 324,
          column: 121
        }
      },
      "108": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 329,
          column: 19
        }
      },
      "109": {
        start: {
          line: 331,
          column: 27
        },
        end: {
          line: 347,
          column: 13
        }
      },
      "110": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 353,
          column: 15
        }
      },
      "111": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 26
        }
      },
      "112": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 52
        }
      },
      "113": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 47
        }
      },
      "114": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 36
        }
      },
      "115": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 392,
          column: 11
        }
      },
      "116": {
        start: {
          line: 380,
          column: 30
        },
        end: {
          line: 380,
          column: 88
        }
      },
      "117": {
        start: {
          line: 380,
          column: 58
        },
        end: {
          line: 380,
          column: 87
        }
      },
      "118": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 383,
          column: 13
        }
      },
      "119": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 71
        }
      },
      "120": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 42
        }
      },
      "121": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 64
        }
      },
      "122": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 56
        }
      },
      "123": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 391,
          column: 15
        }
      },
      "124": {
        start: {
          line: 395,
          column: 0
        },
        end: {
          line: 395,
          column: 66
        }
      },
      "125": {
        start: {
          line: 397,
          column: 0
        },
        end: {
          line: 397,
          column: 72
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 121,
            column: 75
          },
          end: {
            line: 121,
            column: 76
          }
        },
        loc: {
          start: {
            line: 121,
            column: 82
          },
          end: {
            line: 121,
            column: 117
          }
        },
        line: 121
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 41
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 127
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 128,
            column: 55
          },
          end: {
            line: 128,
            column: 56
          }
        },
        loc: {
          start: {
            line: 128,
            column: 68
          },
          end: {
            line: 184,
            column: 9
          }
        },
        line: 128
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 163,
            column: 60
          },
          end: {
            line: 163,
            column: 61
          }
        },
        loc: {
          start: {
            line: 163,
            column: 67
          },
          end: {
            line: 166,
            column: 70
          }
        },
        line: 163
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 31
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 189
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 190,
            column: 55
          },
          end: {
            line: 190,
            column: 56
          }
        },
        loc: {
          start: {
            line: 190,
            column: 68
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 190
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 94
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 220
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 221,
            column: 56
          }
        },
        loc: {
          start: {
            line: 221,
            column: 68
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 221
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 49
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 247
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 248,
            column: 55
          },
          end: {
            line: 248,
            column: 56
          }
        },
        loc: {
          start: {
            line: 248,
            column: 68
          },
          end: {
            line: 355,
            column: 9
          }
        },
        line: 248
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 253,
            column: 83
          },
          end: {
            line: 253,
            column: 84
          }
        },
        loc: {
          start: {
            line: 253,
            column: 98
          },
          end: {
            line: 260,
            column: 13
          }
        },
        line: 253
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 270,
            column: 72
          },
          end: {
            line: 270,
            column: 73
          }
        },
        loc: {
          start: {
            line: 270,
            column: 101
          },
          end: {
            line: 286,
            column: 13
          }
        },
        line: 270
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 274,
            column: 66
          },
          end: {
            line: 274,
            column: 67
          }
        },
        loc: {
          start: {
            line: 274,
            column: 73
          },
          end: {
            line: 276,
            column: 62
          }
        },
        line: 274
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 288,
            column: 60
          },
          end: {
            line: 288,
            column: 61
          }
        },
        loc: {
          start: {
            line: 288,
            column: 67
          },
          end: {
            line: 289,
            column: 58
          }
        },
        line: 288
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 290,
            column: 61
          },
          end: {
            line: 290,
            column: 62
          }
        },
        loc: {
          start: {
            line: 290,
            column: 73
          },
          end: {
            line: 293,
            column: 13
          }
        },
        line: 290
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 294,
            column: 65
          },
          end: {
            line: 294,
            column: 66
          }
        },
        loc: {
          start: {
            line: 294,
            column: 77
          },
          end: {
            line: 297,
            column: 13
          }
        },
        line: 294
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 298,
            column: 63
          },
          end: {
            line: 298,
            column: 64
          }
        },
        loc: {
          start: {
            line: 298,
            column: 70
          },
          end: {
            line: 298,
            column: 93
          }
        },
        line: 298
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 299,
            column: 62
          },
          end: {
            line: 299,
            column: 63
          }
        },
        loc: {
          start: {
            line: 299,
            column: 69
          },
          end: {
            line: 299,
            column: 120
          }
        },
        line: 299
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 308,
            column: 58
          },
          end: {
            line: 308,
            column: 59
          }
        },
        loc: {
          start: {
            line: 308,
            column: 65
          },
          end: {
            line: 312,
            column: 13
          }
        },
        line: 308
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 317,
            column: 77
          },
          end: {
            line: 317,
            column: 78
          }
        },
        loc: {
          start: {
            line: 317,
            column: 84
          },
          end: {
            line: 321,
            column: 13
          }
        },
        line: 317
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        loc: {
          start: {
            line: 360,
            column: 23
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 360
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 29
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 366
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 23
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 372
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 378,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        loc: {
          start: {
            line: 378,
            column: 51
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 378
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 379,
            column: 55
          },
          end: {
            line: 379,
            column: 56
          }
        },
        loc: {
          start: {
            line: 379,
            column: 68
          },
          end: {
            line: 392,
            column: 9
          }
        },
        line: 379
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 380,
            column: 51
          },
          end: {
            line: 380,
            column: 52
          }
        },
        loc: {
          start: {
            line: 380,
            column: 58
          },
          end: {
            line: 380,
            column: 87
          }
        },
        line: 380
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "1": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "2": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "3": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "4": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "5": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "6": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "7": {
        loc: {
          start: {
            line: 163,
            column: 67
          },
          end: {
            line: 166,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 67
          },
          end: {
            line: 163,
            column: 94
          }
        }, {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 35
          }
        }, {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 166,
            column: 70
          }
        }],
        line: 163
      },
      "8": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "9": {
        loc: {
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "10": {
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 259,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 67
          }
        }, {
          start: {
            line: 257,
            column: 20
          },
          end: {
            line: 257,
            column: 54
          }
        }, {
          start: {
            line: 258,
            column: 20
          },
          end: {
            line: 258,
            column: 53
          }
        }, {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 259,
            column: 37
          }
        }],
        line: 256
      },
      "11": {
        loc: {
          start: {
            line: 261,
            column: 36
          },
          end: {
            line: 263,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 18
          },
          end: {
            line: 262,
            column: 73
          }
        }, {
          start: {
            line: 263,
            column: 18
          },
          end: {
            line: 263,
            column: 19
          }
        }],
        line: 261
      },
      "12": {
        loc: {
          start: {
            line: 264,
            column: 38
          },
          end: {
            line: 268,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 18
          },
          end: {
            line: 265,
            column: 29
          }
        }, {
          start: {
            line: 266,
            column: 18
          },
          end: {
            line: 268,
            column: 37
          }
        }],
        line: 264
      },
      "13": {
        loc: {
          start: {
            line: 266,
            column: 18
          },
          end: {
            line: 268,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 31
          }
        }, {
          start: {
            line: 268,
            column: 22
          },
          end: {
            line: 268,
            column: 37
          }
        }],
        line: 266
      },
      "14": {
        loc: {
          start: {
            line: 273,
            column: 40
          },
          end: {
            line: 273,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 59
          },
          end: {
            line: 273,
            column: 68
          }
        }, {
          start: {
            line: 273,
            column: 71
          },
          end: {
            line: 273,
            column: 79
          }
        }],
        line: 273
      },
      "15": {
        loc: {
          start: {
            line: 274,
            column: 73
          },
          end: {
            line: 276,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 73
          },
          end: {
            line: 274,
            column: 100
          }
        }, {
          start: {
            line: 275,
            column: 20
          },
          end: {
            line: 275,
            column: 64
          }
        }, {
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 276,
            column: 62
          }
        }],
        line: 274
      },
      "16": {
        loc: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 281,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 74
          }
        }, {
          start: {
            line: 280,
            column: 24
          },
          end: {
            line: 280,
            column: 58
          }
        }, {
          start: {
            line: 281,
            column: 24
          },
          end: {
            line: 281,
            column: 52
          }
        }],
        line: 279
      },
      "17": {
        loc: {
          start: {
            line: 288,
            column: 67
          },
          end: {
            line: 289,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 67
          },
          end: {
            line: 288,
            column: 111
          }
        }, {
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 289,
            column: 58
          }
        }],
        line: 288
      },
      "18": {
        loc: {
          start: {
            line: 291,
            column: 40
          },
          end: {
            line: 291,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 40
          },
          end: {
            line: 291,
            column: 60
          }
        }, {
          start: {
            line: 291,
            column: 64
          },
          end: {
            line: 291,
            column: 65
          }
        }],
        line: 291
      },
      "19": {
        loc: {
          start: {
            line: 295,
            column: 35
          },
          end: {
            line: 295,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 35
          },
          end: {
            line: 295,
            column: 50
          }
        }, {
          start: {
            line: 295,
            column: 54
          },
          end: {
            line: 295,
            column: 55
          }
        }],
        line: 295
      },
      "20": {
        loc: {
          start: {
            line: 299,
            column: 69
          },
          end: {
            line: 299,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 69
          },
          end: {
            line: 299,
            column: 88
          }
        }, {
          start: {
            line: 299,
            column: 92
          },
          end: {
            line: 299,
            column: 120
          }
        }],
        line: 299
      },
      "21": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "22": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "23": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 314,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 314,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "24": {
        loc: {
          start: {
            line: 320,
            column: 23
          },
          end: {
            line: 320,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 23
          },
          end: {
            line: 320,
            column: 44
          }
        }, {
          start: {
            line: 320,
            column: 48
          },
          end: {
            line: 320,
            column: 67
          }
        }],
        line: 320
      },
      "25": {
        loc: {
          start: {
            line: 327,
            column: 30
          },
          end: {
            line: 327,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 54
          },
          end: {
            line: 327,
            column: 64
          }
        }, {
          start: {
            line: 327,
            column: 67
          },
          end: {
            line: 327,
            column: 73
          }
        }],
        line: 327
      },
      "26": {
        loc: {
          start: {
            line: 381,
            column: 12
          },
          end: {
            line: 383,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 12
          },
          end: {
            line: 383,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts"],
      sourcesContent: ["/**\n * Provider Agreement Compliance System\n *\n * Ensures all AI providers comply with \"no training on customer data\" agreements\n * Validates and monitors compliance with data processing agreements (DPAs)\n * Provides audit trail for regulatory compliance\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { BasicLogger } from \"./basic-logger\";\nimport { Provider } from \"./types\";\n\nexport interface ProviderAgreement {\n  providerId: Provider;\n  providerName: string;\n  agreementId: string;\n  signedDate: string;\n  expiryDate: string;\n  version: string;\n\n  // Core compliance requirements\n  noTrainingOnCustomerData: boolean;\n  dataProcessingAgreement: boolean;\n  gdprCompliant: boolean;\n  euDataResidency: boolean;\n\n  // Agreement details\n  agreementUrl?: string;\n  contactEmail?: string;\n  complianceOfficer?: string;\n\n  // Verification\n  lastVerified: string;\n  verificationMethod: \"contract_review\" | \"api_confirmation\" | \"certification\";\n  verificationStatus: \"verified\" | \"pending\" | \"expired\" | \"violated\";\n\n  // Audit trail\n  auditTrail: ProviderAgreementAudit[];\n}\n\nexport interface ProviderAgreementAudit {\n  timestamp: string;\n  action: \"created\" | \"updated\" | \"verified\" | \"violation_detected\" | \"expired\";\n  details: string;\n  performedBy: string;\n  evidence?: string;\n}\n\nexport interface ComplianceViolation {\n  violationId: string;\n  providerId: Provider;\n  timestamp: string;\n  violationType:\n    | \"training_detected\"\n    | \"data_retention\"\n    | \"unauthorized_access\"\n    | \"agreement_expired\";\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  evidence: string;\n  status: \"open\" | \"investigating\" | \"resolved\" | \"false_positive\";\n  resolutionDate?: string;\n  resolutionNotes?: string;\n}\n\nexport interface ComplianceReport {\n  reportId: string;\n  generatedAt: string;\n  reportingPeriod: {\n    start: string;\n    end: string;\n  };\n\n  // Overall compliance status\n  overallCompliance: \"compliant\" | \"non_compliant\" | \"warning\";\n  complianceScore: number; // 0-100\n\n  // Provider status\n  providers: Array<{\n    providerId: Provider;\n    compliant: boolean;\n    agreementStatus: \"active\" | \"expired\" | \"missing\";\n    lastVerified: string;\n    violations: number;\n  }>;\n\n  // Violations summary\n  violations: {\n    total: number;\n    byType: Record<string, number>;\n    bySeverity: Record<string, number>;\n    resolved: number;\n    pending: number;\n  };\n\n  // Recommendations\n  recommendations: string[];\n\n  // Next actions\n  nextActions: Array<{\n    action: string;\n    priority: \"low\" | \"medium\" | \"high\" | \"critical\";\n    dueDate: string;\n  }>;\n}\n\n/**\n * Provider Agreement Compliance Manager\n */\nexport class ProviderAgreementCompliance {\n  private logger: BasicLogger;\n  private auditTrail: AuditTrailSystem;\n  private agreements: Map<Provider, ProviderAgreement> = new Map();\n  private violations: ComplianceViolation[] = [];\n\n  constructor() {\n    this.logger = new BasicLogger(\"provider-agreement-compliance\");\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for compliance\n    });\n\n    // Initialize with known provider agreements\n    this.initializeProviderAgreements();\n  }\n\n  /**\n   * Initialize provider agreements with current status\n   */\n  private initializeProviderAgreements(): void {\n    const currentDate = new Date().toISOString();\n\n    // AWS Bedrock Agreement\n    this.agreements.set(\"bedrock\", {\n      providerId: \"bedrock\",\n      providerName: \"Amazon Web Services (Bedrock)\",\n      agreementId: \"AWS-BEDROCK-DPA-2024\",\n      signedDate: \"2024-01-15T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: true,\n\n      agreementUrl: \"https://aws.amazon.com/service-terms/\",\n      contactEmail: \"privacy@amazon.com\",\n      complianceOfficer: \"AWS Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-01-15T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with AWS Bedrock DPA\",\n          performedBy: \"system\",\n          evidence: \"AWS Service Terms and Bedrock documentation\",\n        },\n      ],\n    });\n\n    // Google AI Agreement\n    this.agreements.set(\"google\", {\n      providerId: \"google\",\n      providerName: \"Google Cloud AI Platform\",\n      agreementId: \"GOOGLE-AI-DPA-2024\",\n      signedDate: \"2024-02-01T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: true,\n\n      agreementUrl: \"https://cloud.google.com/terms/data-processing-addendum\",\n      contactEmail: \"privacy@google.com\",\n      complianceOfficer: \"Google Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-02-01T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with Google Cloud AI DPA\",\n          performedBy: \"system\",\n          evidence: \"Google Cloud Data Processing Addendum\",\n        },\n      ],\n    });\n\n    // Meta AI Agreement\n    this.agreements.set(\"meta\", {\n      providerId: \"meta\",\n      providerName: \"Meta AI Platform\",\n      agreementId: \"META-AI-DPA-2024\",\n      signedDate: \"2024-03-01T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: false, // Meta may process in US\n\n      agreementUrl: \"https://developers.facebook.com/terms/\",\n      contactEmail: \"privacy@meta.com\",\n      complianceOfficer: \"Meta Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-03-01T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with Meta AI DPA\",\n          performedBy: \"system\",\n          evidence: \"Meta Developer Terms and Privacy Policy\",\n        },\n      ],\n    });\n\n    this.logger.info(\"Provider agreements initialized\", {\n      totalProviders: this.agreements.size,\n      verifiedProviders: Array.from(this.agreements.values()).filter(\n        (a) => a.verificationStatus === \"verified\"\n      ).length,\n    });\n  }\n\n  /**\n   * Verify provider compliance before AI request\n   */\n  async verifyProviderCompliance(providerId: Provider): Promise<{\n    compliant: boolean;\n    agreement?: ProviderAgreement;\n    violations: string[];\n    warnings: string[];\n  }> {\n    const agreement = this.agreements.get(providerId);\n    const violations: string[] = [];\n    const warnings: string[] = [];\n\n    if (!agreement) {\n      violations.push(`No agreement found for provider: ${providerId}`);\n      return { compliant: false, violations, warnings };\n    }\n\n    // Check agreement expiry\n    const now = new Date();\n    const expiryDate = new Date(agreement.expiryDate);\n    if (now > expiryDate) {\n      violations.push(`Agreement expired on ${agreement.expiryDate}`);\n    }\n\n    // Check core compliance requirements\n    if (!agreement.noTrainingOnCustomerData) {\n      violations.push(\n        \"Provider does not guarantee no training on customer data\"\n      );\n    }\n\n    if (!agreement.dataProcessingAgreement) {\n      violations.push(\"No valid Data Processing Agreement\");\n    }\n\n    if (!agreement.gdprCompliant) {\n      violations.push(\"Provider is not GDPR compliant\");\n    }\n\n    // Check verification status\n    if (agreement.verificationStatus !== \"verified\") {\n      violations.push(\n        `Agreement verification status: ${agreement.verificationStatus}`\n      );\n    }\n\n    // Check last verification date (warn if older than 90 days)\n    const lastVerified = new Date(agreement.lastVerified);\n    const daysSinceVerification =\n      (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24);\n    if (daysSinceVerification > 90) {\n      warnings.push(\n        `Agreement not verified in ${Math.floor(daysSinceVerification)} days`\n      );\n    }\n\n    // Check for recent violations\n    const recentViolations = this.violations.filter(\n      (v) =>\n        v.providerId === providerId &&\n        v.status === \"open\" &&\n        new Date(v.timestamp) >\n          new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000) // Last 30 days\n    );\n\n    if (recentViolations.length > 0) {\n      violations.push(\n        `${recentViolations.length} unresolved violations in last 30 days`\n      );\n    }\n\n    const compliant = violations.length === 0;\n\n    this.logger.info(\"Provider compliance verified\", {\n      providerId,\n      compliant,\n      violations: violations.length,\n      warnings: warnings.length,\n    });\n\n    return {\n      compliant,\n      agreement,\n      violations,\n      warnings,\n    };\n  }\n\n  /**\n   * Record compliance violation\n   */\n  async recordViolation(\n    violation: Omit<ComplianceViolation, \"violationId\" | \"timestamp\" | \"status\">\n  ): Promise<string> {\n    const violationId = `violation-${Date.now()}-${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    const fullViolation: ComplianceViolation = {\n      violationId,\n      timestamp: new Date().toISOString(),\n      status: \"open\",\n      ...violation,\n    };\n\n    this.violations.push(fullViolation);\n\n    // Log to audit trail\n    await this.auditTrail.logEvent({\n      eventType: \"compliance_violation\",\n      requestId: violationId,\n      provider: violation.providerId,\n      complianceStatus: \"violation\",\n      metadata: {\n        violationType: violation.violationType,\n        severity: violation.severity,\n        description: violation.description,\n      },\n    });\n\n    this.logger.error(\"Compliance violation recorded\", {\n      violationId,\n      providerId: violation.providerId,\n      violationType: violation.violationType,\n      severity: violation.severity,\n    });\n\n    return violationId;\n  }\n\n  /**\n   * Update agreement verification\n   */\n  async updateAgreementVerification(\n    providerId: Provider,\n    verificationStatus: ProviderAgreement[\"verificationStatus\"],\n    verificationMethod: ProviderAgreement[\"verificationMethod\"],\n    evidence?: string\n  ): Promise<void> {\n    const agreement = this.agreements.get(providerId);\n    if (!agreement) {\n      throw new Error(`No agreement found for provider: ${providerId}`);\n    }\n\n    agreement.verificationStatus = verificationStatus;\n    agreement.verificationMethod = verificationMethod;\n    agreement.lastVerified = new Date().toISOString();\n\n    // Add to audit trail\n    agreement.auditTrail.push({\n      timestamp: new Date().toISOString(),\n      action: \"verified\",\n      details: `Verification updated to ${verificationStatus} via ${verificationMethod}`,\n      performedBy: \"system\",\n      evidence,\n    });\n\n    this.logger.info(\"Agreement verification updated\", {\n      providerId,\n      verificationStatus,\n      verificationMethod,\n    });\n  }\n\n  /**\n   * Generate compliance report\n   */\n  async generateComplianceReport(\n    startDate: string,\n    endDate: string\n  ): Promise<ComplianceReport> {\n    const reportId = `compliance-report-${Date.now()}`;\n    const now = new Date().toISOString();\n\n    // Calculate overall compliance\n    const totalProviders = this.agreements.size;\n    const compliantProviders = Array.from(this.agreements.values()).filter(\n      (agreement) => {\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        return (\n          agreement.verificationStatus === \"verified\" &&\n          agreement.noTrainingOnCustomerData &&\n          agreement.dataProcessingAgreement &&\n          now <= expiryDate\n        );\n      }\n    ).length;\n\n    const complianceScore =\n      totalProviders > 0\n        ? Math.round((compliantProviders / totalProviders) * 100)\n        : 0;\n    const overallCompliance: ComplianceReport[\"overallCompliance\"] =\n      complianceScore >= 95\n        ? \"compliant\"\n        : complianceScore >= 80\n        ? \"warning\"\n        : \"non_compliant\";\n\n    // Provider status\n    const providers = Array.from(this.agreements.entries()).map(\n      ([providerId, agreement]) => {\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        const agreementStatus = now > expiryDate ? \"expired\" : \"active\";\n\n        const providerViolations = this.violations.filter(\n          (v) =>\n            v.providerId === providerId &&\n            new Date(v.timestamp) >= new Date(startDate) &&\n            new Date(v.timestamp) <= new Date(endDate)\n        ).length;\n\n        return {\n          providerId,\n          compliant:\n            agreement.verificationStatus === \"verified\" &&\n            agreement.noTrainingOnCustomerData &&\n            agreementStatus === \"active\",\n          agreementStatus,\n          lastVerified: agreement.lastVerified,\n          violations: providerViolations,\n        };\n      }\n    );\n\n    // Violations summary\n    const periodViolations = this.violations.filter(\n      (v) =>\n        new Date(v.timestamp) >= new Date(startDate) &&\n        new Date(v.timestamp) <= new Date(endDate)\n    );\n\n    const violationsByType = periodViolations.reduce((acc, v) => {\n      acc[v.violationType] = (acc[v.violationType] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const violationsBySeverity = periodViolations.reduce((acc, v) => {\n      acc[v.severity] = (acc[v.severity] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const resolvedViolations = periodViolations.filter(\n      (v) => v.status === \"resolved\"\n    ).length;\n    const pendingViolations = periodViolations.filter(\n      (v) => v.status === \"open\" || v.status === \"investigating\"\n    ).length;\n\n    // Generate recommendations\n    const recommendations: string[] = [];\n    if (complianceScore < 100) {\n      recommendations.push(\n        \"Review and update expired or missing provider agreements\"\n      );\n    }\n    if (pendingViolations > 0) {\n      recommendations.push(\n        `Resolve ${pendingViolations} pending compliance violations`\n      );\n    }\n    if (\n      Array.from(this.agreements.values()).some((a) => {\n        const daysSinceVerification =\n          (new Date().getTime() - new Date(a.lastVerified).getTime()) /\n          (1000 * 60 * 60 * 24);\n        return daysSinceVerification > 90;\n      })\n    ) {\n      recommendations.push(\n        \"Update verification for agreements older than 90 days\"\n      );\n    }\n\n    // Next actions\n    const nextActions = [];\n    const expiringSoon = Array.from(this.agreements.values()).filter((a) => {\n      const expiryDate = new Date(a.expiryDate);\n      const daysUntilExpiry =\n        (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24);\n      return daysUntilExpiry <= 90 && daysUntilExpiry > 0;\n    });\n\n    for (const agreement of expiringSoon) {\n      const expiryDate = new Date(agreement.expiryDate);\n      const daysUntilExpiry = Math.floor(\n        (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)\n      );\n      nextActions.push({\n        action: `Renew agreement with ${agreement.providerName}`,\n        priority:\n          daysUntilExpiry <= 30 ? (\"critical\" as const) : (\"high\" as const),\n        dueDate: new Date(\n          expiryDate.getTime() - 30 * 24 * 60 * 60 * 1000\n        ).toISOString(), // 30 days before expiry\n      });\n    }\n\n    const report: ComplianceReport = {\n      reportId,\n      generatedAt: now,\n      reportingPeriod: { start: startDate, end: endDate },\n      overallCompliance,\n      complianceScore,\n      providers,\n      violations: {\n        total: periodViolations.length,\n        byType: violationsByType,\n        bySeverity: violationsBySeverity,\n        resolved: resolvedViolations,\n        pending: pendingViolations,\n      },\n      recommendations,\n      nextActions,\n    };\n\n    this.logger.info(\"Compliance report generated\", {\n      reportId,\n      overallCompliance,\n      complianceScore,\n      totalViolations: periodViolations.length,\n    });\n\n    return report;\n  }\n\n  /**\n   * Get all provider agreements\n   */\n  getAllAgreements(): ProviderAgreement[] {\n    return Array.from(this.agreements.values());\n  }\n\n  /**\n   * Get agreement for specific provider\n   */\n  getAgreement(providerId: Provider): ProviderAgreement | undefined {\n    return this.agreements.get(providerId);\n  }\n\n  /**\n   * Get all violations\n   */\n  getAllViolations(): ComplianceViolation[] {\n    return [...this.violations];\n  }\n\n  /**\n   * Resolve violation\n   */\n  async resolveViolation(\n    violationId: string,\n    resolutionNotes: string\n  ): Promise<void> {\n    const violation = this.violations.find(\n      (v) => v.violationId === violationId\n    );\n    if (!violation) {\n      throw new Error(`Violation not found: ${violationId}`);\n    }\n\n    violation.status = \"resolved\";\n    violation.resolutionDate = new Date().toISOString();\n    violation.resolutionNotes = resolutionNotes;\n\n    this.logger.info(\"Violation resolved\", {\n      violationId,\n      providerId: violation.providerId,\n      resolutionNotes,\n    });\n  }\n}\n\n// Singleton instance - create fresh instance for each test\nexport const providerAgreementCompliance = new ProviderAgreementCompliance();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c458971e4ce8eeaa8e8692f7b78d085d4f48610d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1deb2j9vg3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1deb2j9vg3();
cov_1deb2j9vg3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1deb2j9vg3().s[1]++;
exports.providerAgreementCompliance = exports.ProviderAgreementCompliance = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1deb2j9vg3().s[2]++, require("tslib"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_1deb2j9vg3().s[3]++, require("./audit-trail-system"));
const basic_logger_1 =
/* istanbul ignore next */
(cov_1deb2j9vg3().s[4]++, require("./basic-logger"));
/**
 * Provider Agreement Compliance Manager
 */
class ProviderAgreementCompliance {
  constructor() {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[0]++;
    cov_1deb2j9vg3().s[5]++;
    this.agreements = new Map();
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[6]++;
    this.violations = [];
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[7]++;
    this.logger = new basic_logger_1.BasicLogger("provider-agreement-compliance");
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[8]++;
    this.auditTrail = new audit_trail_system_1.AuditTrailSystem({
      complianceMode: "strict",
      enableIntegrityChecking: true,
      retentionDays: 2555 // 7 years for compliance
    });
    // Initialize with known provider agreements
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[9]++;
    this.initializeProviderAgreements();
  }
  /**
   * Initialize provider agreements with current status
   */
  initializeProviderAgreements() {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[1]++;
    const currentDate =
    /* istanbul ignore next */
    (cov_1deb2j9vg3().s[10]++, new Date().toISOString());
    // AWS Bedrock Agreement
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[11]++;
    this.agreements.set("bedrock", {
      providerId: "bedrock",
      providerName: "Amazon Web Services (Bedrock)",
      agreementId: "AWS-BEDROCK-DPA-2024",
      signedDate: "2024-01-15T00:00:00Z",
      expiryDate: "2030-12-31T23:59:59Z",
      version: "2024.1",
      noTrainingOnCustomerData: true,
      dataProcessingAgreement: true,
      gdprCompliant: true,
      euDataResidency: true,
      agreementUrl: "https://aws.amazon.com/service-terms/",
      contactEmail: "privacy@amazon.com",
      complianceOfficer: "AWS Privacy Team",
      lastVerified: currentDate,
      verificationMethod: "contract_review",
      verificationStatus: "verified",
      auditTrail: [{
        timestamp: "2024-01-15T00:00:00Z",
        action: "created",
        details: "Initial agreement setup with AWS Bedrock DPA",
        performedBy: "system",
        evidence: "AWS Service Terms and Bedrock documentation"
      }]
    });
    // Google AI Agreement
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[12]++;
    this.agreements.set("google", {
      providerId: "google",
      providerName: "Google Cloud AI Platform",
      agreementId: "GOOGLE-AI-DPA-2024",
      signedDate: "2024-02-01T00:00:00Z",
      expiryDate: "2030-12-31T23:59:59Z",
      version: "2024.1",
      noTrainingOnCustomerData: true,
      dataProcessingAgreement: true,
      gdprCompliant: true,
      euDataResidency: true,
      agreementUrl: "https://cloud.google.com/terms/data-processing-addendum",
      contactEmail: "privacy@google.com",
      complianceOfficer: "Google Privacy Team",
      lastVerified: currentDate,
      verificationMethod: "contract_review",
      verificationStatus: "verified",
      auditTrail: [{
        timestamp: "2024-02-01T00:00:00Z",
        action: "created",
        details: "Initial agreement setup with Google Cloud AI DPA",
        performedBy: "system",
        evidence: "Google Cloud Data Processing Addendum"
      }]
    });
    // Meta AI Agreement
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[13]++;
    this.agreements.set("meta", {
      providerId: "meta",
      providerName: "Meta AI Platform",
      agreementId: "META-AI-DPA-2024",
      signedDate: "2024-03-01T00:00:00Z",
      expiryDate: "2030-12-31T23:59:59Z",
      version: "2024.1",
      noTrainingOnCustomerData: true,
      dataProcessingAgreement: true,
      gdprCompliant: true,
      euDataResidency: false,
      // Meta may process in US
      agreementUrl: "https://developers.facebook.com/terms/",
      contactEmail: "privacy@meta.com",
      complianceOfficer: "Meta Privacy Team",
      lastVerified: currentDate,
      verificationMethod: "contract_review",
      verificationStatus: "verified",
      auditTrail: [{
        timestamp: "2024-03-01T00:00:00Z",
        action: "created",
        details: "Initial agreement setup with Meta AI DPA",
        performedBy: "system",
        evidence: "Meta Developer Terms and Privacy Policy"
      }]
    });
    /* istanbul ignore next */
    cov_1deb2j9vg3().s[14]++;
    this.logger.info("Provider agreements initialized", {
      totalProviders: this.agreements.size,
      verifiedProviders: Array.from(this.agreements.values()).filter(a => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[2]++;
        cov_1deb2j9vg3().s[15]++;
        return a.verificationStatus === "verified";
      }).length
    });
  }
  /**
   * Verify provider compliance before AI request
   */
  verifyProviderCompliance(providerId) {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[3]++;
    cov_1deb2j9vg3().s[16]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1deb2j9vg3().f[4]++;
      const agreement =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[17]++, this.agreements.get(providerId));
      const violations =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[18]++, []);
      const warnings =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[19]++, []);
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[20]++;
      if (!agreement) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[0][0]++;
        cov_1deb2j9vg3().s[21]++;
        violations.push(`No agreement found for provider: ${providerId}`);
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[22]++;
        return {
          compliant: false,
          violations,
          warnings
        };
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[0][1]++;
      }
      // Check agreement expiry
      const now =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[23]++, new Date());
      const expiryDate =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[24]++, new Date(agreement.expiryDate));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[25]++;
      if (now > expiryDate) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[1][0]++;
        cov_1deb2j9vg3().s[26]++;
        violations.push(`Agreement expired on ${agreement.expiryDate}`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[1][1]++;
      }
      // Check core compliance requirements
      cov_1deb2j9vg3().s[27]++;
      if (!agreement.noTrainingOnCustomerData) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[2][0]++;
        cov_1deb2j9vg3().s[28]++;
        violations.push("Provider does not guarantee no training on customer data");
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[2][1]++;
      }
      cov_1deb2j9vg3().s[29]++;
      if (!agreement.dataProcessingAgreement) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[3][0]++;
        cov_1deb2j9vg3().s[30]++;
        violations.push("No valid Data Processing Agreement");
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[3][1]++;
      }
      cov_1deb2j9vg3().s[31]++;
      if (!agreement.gdprCompliant) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[4][0]++;
        cov_1deb2j9vg3().s[32]++;
        violations.push("Provider is not GDPR compliant");
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[4][1]++;
      }
      // Check verification status
      cov_1deb2j9vg3().s[33]++;
      if (agreement.verificationStatus !== "verified") {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[5][0]++;
        cov_1deb2j9vg3().s[34]++;
        violations.push(`Agreement verification status: ${agreement.verificationStatus}`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[5][1]++;
      }
      // Check last verification date (warn if older than 90 days)
      const lastVerified =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[35]++, new Date(agreement.lastVerified));
      const daysSinceVerification =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[36]++, (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[37]++;
      if (daysSinceVerification > 90) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[6][0]++;
        cov_1deb2j9vg3().s[38]++;
        warnings.push(`Agreement not verified in ${Math.floor(daysSinceVerification)} days`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[6][1]++;
      }
      // Check for recent violations
      const recentViolations =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[39]++, this.violations.filter(v => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[5]++;
        cov_1deb2j9vg3().s[40]++;
        return /* istanbul ignore next */(cov_1deb2j9vg3().b[7][0]++, v.providerId === providerId) &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[7][1]++, v.status === "open") &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[7][2]++, new Date(v.timestamp) > new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000));
      } // Last 30 days
      ));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[41]++;
      if (recentViolations.length > 0) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[8][0]++;
        cov_1deb2j9vg3().s[42]++;
        violations.push(`${recentViolations.length} unresolved violations in last 30 days`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[8][1]++;
      }
      const compliant =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[43]++, violations.length === 0);
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[44]++;
      this.logger.info("Provider compliance verified", {
        providerId,
        compliant,
        violations: violations.length,
        warnings: warnings.length
      });
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[45]++;
      return {
        compliant,
        agreement,
        violations,
        warnings
      };
    });
  }
  /**
   * Record compliance violation
   */
  recordViolation(violation) {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[6]++;
    cov_1deb2j9vg3().s[46]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1deb2j9vg3().f[7]++;
      const violationId =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[47]++, `violation-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);
      const fullViolation =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[48]++, Object.assign({
        violationId,
        timestamp: new Date().toISOString(),
        status: "open"
      }, violation));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[49]++;
      this.violations.push(fullViolation);
      // Log to audit trail
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[50]++;
      yield this.auditTrail.logEvent({
        eventType: "compliance_violation",
        requestId: violationId,
        provider: violation.providerId,
        complianceStatus: "violation",
        metadata: {
          violationType: violation.violationType,
          severity: violation.severity,
          description: violation.description
        }
      });
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[51]++;
      this.logger.error("Compliance violation recorded", {
        violationId,
        providerId: violation.providerId,
        violationType: violation.violationType,
        severity: violation.severity
      });
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[52]++;
      return violationId;
    });
  }
  /**
   * Update agreement verification
   */
  updateAgreementVerification(providerId, verificationStatus, verificationMethod, evidence) {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[8]++;
    cov_1deb2j9vg3().s[53]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1deb2j9vg3().f[9]++;
      const agreement =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[54]++, this.agreements.get(providerId));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[55]++;
      if (!agreement) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[9][0]++;
        cov_1deb2j9vg3().s[56]++;
        throw new Error(`No agreement found for provider: ${providerId}`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[9][1]++;
      }
      cov_1deb2j9vg3().s[57]++;
      agreement.verificationStatus = verificationStatus;
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[58]++;
      agreement.verificationMethod = verificationMethod;
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[59]++;
      agreement.lastVerified = new Date().toISOString();
      // Add to audit trail
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[60]++;
      agreement.auditTrail.push({
        timestamp: new Date().toISOString(),
        action: "verified",
        details: `Verification updated to ${verificationStatus} via ${verificationMethod}`,
        performedBy: "system",
        evidence
      });
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[61]++;
      this.logger.info("Agreement verification updated", {
        providerId,
        verificationStatus,
        verificationMethod
      });
    });
  }
  /**
   * Generate compliance report
   */
  generateComplianceReport(startDate, endDate) {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[10]++;
    cov_1deb2j9vg3().s[62]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1deb2j9vg3().f[11]++;
      const reportId =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[63]++, `compliance-report-${Date.now()}`);
      const now =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[64]++, new Date().toISOString());
      // Calculate overall compliance
      const totalProviders =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[65]++, this.agreements.size);
      const compliantProviders =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[66]++, Array.from(this.agreements.values()).filter(agreement => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[12]++;
        const now =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[67]++, new Date());
        const expiryDate =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[68]++, new Date(agreement.expiryDate));
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[69]++;
        return /* istanbul ignore next */(cov_1deb2j9vg3().b[10][0]++, agreement.verificationStatus === "verified") &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[10][1]++, agreement.noTrainingOnCustomerData) &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[10][2]++, agreement.dataProcessingAgreement) &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[10][3]++, now <= expiryDate);
      }).length);
      const complianceScore =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[70]++, totalProviders > 0 ?
      /* istanbul ignore next */
      (cov_1deb2j9vg3().b[11][0]++, Math.round(compliantProviders / totalProviders * 100)) :
      /* istanbul ignore next */
      (cov_1deb2j9vg3().b[11][1]++, 0));
      const overallCompliance =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[71]++, complianceScore >= 95 ?
      /* istanbul ignore next */
      (cov_1deb2j9vg3().b[12][0]++, "compliant") :
      /* istanbul ignore next */
      (cov_1deb2j9vg3().b[12][1]++, complianceScore >= 80 ?
      /* istanbul ignore next */
      (cov_1deb2j9vg3().b[13][0]++, "warning") :
      /* istanbul ignore next */
      (cov_1deb2j9vg3().b[13][1]++, "non_compliant")));
      // Provider status
      const providers =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[72]++, Array.from(this.agreements.entries()).map(([providerId, agreement]) => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[13]++;
        const now =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[73]++, new Date());
        const expiryDate =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[74]++, new Date(agreement.expiryDate));
        const agreementStatus =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[75]++, now > expiryDate ?
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[14][0]++, "expired") :
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[14][1]++, "active"));
        const providerViolations =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[76]++, this.violations.filter(v => {
          /* istanbul ignore next */
          cov_1deb2j9vg3().f[14]++;
          cov_1deb2j9vg3().s[77]++;
          return /* istanbul ignore next */(cov_1deb2j9vg3().b[15][0]++, v.providerId === providerId) &&
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[15][1]++, new Date(v.timestamp) >= new Date(startDate)) &&
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[15][2]++, new Date(v.timestamp) <= new Date(endDate));
        }).length);
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[78]++;
        return {
          providerId,
          compliant:
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[16][0]++, agreement.verificationStatus === "verified") &&
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[16][1]++, agreement.noTrainingOnCustomerData) &&
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[16][2]++, agreementStatus === "active"),
          agreementStatus,
          lastVerified: agreement.lastVerified,
          violations: providerViolations
        };
      }));
      // Violations summary
      const periodViolations =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[79]++, this.violations.filter(v => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[15]++;
        cov_1deb2j9vg3().s[80]++;
        return /* istanbul ignore next */(cov_1deb2j9vg3().b[17][0]++, new Date(v.timestamp) >= new Date(startDate)) &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[17][1]++, new Date(v.timestamp) <= new Date(endDate));
      }));
      const violationsByType =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[81]++, periodViolations.reduce((acc, v) => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[16]++;
        cov_1deb2j9vg3().s[82]++;
        acc[v.violationType] = (
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[18][0]++, acc[v.violationType]) ||
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[18][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[83]++;
        return acc;
      }, {}));
      const violationsBySeverity =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[84]++, periodViolations.reduce((acc, v) => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[17]++;
        cov_1deb2j9vg3().s[85]++;
        acc[v.severity] = (
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[19][0]++, acc[v.severity]) ||
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[19][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[86]++;
        return acc;
      }, {}));
      const resolvedViolations =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[87]++, periodViolations.filter(v => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[18]++;
        cov_1deb2j9vg3().s[88]++;
        return v.status === "resolved";
      }).length);
      const pendingViolations =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[89]++, periodViolations.filter(v => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[19]++;
        cov_1deb2j9vg3().s[90]++;
        return /* istanbul ignore next */(cov_1deb2j9vg3().b[20][0]++, v.status === "open") ||
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[20][1]++, v.status === "investigating");
      }).length);
      // Generate recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[91]++, []);
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[92]++;
      if (complianceScore < 100) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[21][0]++;
        cov_1deb2j9vg3().s[93]++;
        recommendations.push("Review and update expired or missing provider agreements");
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[21][1]++;
      }
      cov_1deb2j9vg3().s[94]++;
      if (pendingViolations > 0) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[22][0]++;
        cov_1deb2j9vg3().s[95]++;
        recommendations.push(`Resolve ${pendingViolations} pending compliance violations`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[22][1]++;
      }
      cov_1deb2j9vg3().s[96]++;
      if (Array.from(this.agreements.values()).some(a => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[20]++;
        const daysSinceVerification =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[97]++, (new Date().getTime() - new Date(a.lastVerified).getTime()) / (1000 * 60 * 60 * 24));
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[98]++;
        return daysSinceVerification > 90;
      })) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[23][0]++;
        cov_1deb2j9vg3().s[99]++;
        recommendations.push("Update verification for agreements older than 90 days");
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[23][1]++;
      }
      // Next actions
      const nextActions =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[100]++, []);
      const expiringSoon =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[101]++, Array.from(this.agreements.values()).filter(a => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[21]++;
        const expiryDate =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[102]++, new Date(a.expiryDate));
        const daysUntilExpiry =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[103]++, (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[104]++;
        return /* istanbul ignore next */(cov_1deb2j9vg3().b[24][0]++, daysUntilExpiry <= 90) &&
        /* istanbul ignore next */
        (cov_1deb2j9vg3().b[24][1]++, daysUntilExpiry > 0);
      }));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[105]++;
      for (const agreement of expiringSoon) {
        const expiryDate =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[106]++, new Date(agreement.expiryDate));
        const daysUntilExpiry =
        /* istanbul ignore next */
        (cov_1deb2j9vg3().s[107]++, Math.floor((expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)));
        /* istanbul ignore next */
        cov_1deb2j9vg3().s[108]++;
        nextActions.push({
          action: `Renew agreement with ${agreement.providerName}`,
          priority: daysUntilExpiry <= 30 ?
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[25][0]++, "critical") :
          /* istanbul ignore next */
          (cov_1deb2j9vg3().b[25][1]++, "high"),
          dueDate: new Date(expiryDate.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days before expiry
        });
      }
      const report =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[109]++, {
        reportId,
        generatedAt: now,
        reportingPeriod: {
          start: startDate,
          end: endDate
        },
        overallCompliance,
        complianceScore,
        providers,
        violations: {
          total: periodViolations.length,
          byType: violationsByType,
          bySeverity: violationsBySeverity,
          resolved: resolvedViolations,
          pending: pendingViolations
        },
        recommendations,
        nextActions
      });
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[110]++;
      this.logger.info("Compliance report generated", {
        reportId,
        overallCompliance,
        complianceScore,
        totalViolations: periodViolations.length
      });
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[111]++;
      return report;
    });
  }
  /**
   * Get all provider agreements
   */
  getAllAgreements() {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[22]++;
    cov_1deb2j9vg3().s[112]++;
    return Array.from(this.agreements.values());
  }
  /**
   * Get agreement for specific provider
   */
  getAgreement(providerId) {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[23]++;
    cov_1deb2j9vg3().s[113]++;
    return this.agreements.get(providerId);
  }
  /**
   * Get all violations
   */
  getAllViolations() {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[24]++;
    cov_1deb2j9vg3().s[114]++;
    return [...this.violations];
  }
  /**
   * Resolve violation
   */
  resolveViolation(violationId, resolutionNotes) {
    /* istanbul ignore next */
    cov_1deb2j9vg3().f[25]++;
    cov_1deb2j9vg3().s[115]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1deb2j9vg3().f[26]++;
      const violation =
      /* istanbul ignore next */
      (cov_1deb2j9vg3().s[116]++, this.violations.find(v => {
        /* istanbul ignore next */
        cov_1deb2j9vg3().f[27]++;
        cov_1deb2j9vg3().s[117]++;
        return v.violationId === violationId;
      }));
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[118]++;
      if (!violation) {
        /* istanbul ignore next */
        cov_1deb2j9vg3().b[26][0]++;
        cov_1deb2j9vg3().s[119]++;
        throw new Error(`Violation not found: ${violationId}`);
      } else
      /* istanbul ignore next */
      {
        cov_1deb2j9vg3().b[26][1]++;
      }
      cov_1deb2j9vg3().s[120]++;
      violation.status = "resolved";
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[121]++;
      violation.resolutionDate = new Date().toISOString();
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[122]++;
      violation.resolutionNotes = resolutionNotes;
      /* istanbul ignore next */
      cov_1deb2j9vg3().s[123]++;
      this.logger.info("Violation resolved", {
        violationId,
        providerId: violation.providerId,
        resolutionNotes
      });
    });
  }
}
/* istanbul ignore next */
cov_1deb2j9vg3().s[124]++;
exports.ProviderAgreementCompliance = ProviderAgreementCompliance;
// Singleton instance - create fresh instance for each test
/* istanbul ignore next */
cov_1deb2j9vg3().s[125]++;
exports.providerAgreementCompliance = new ProviderAgreementCompliance();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,