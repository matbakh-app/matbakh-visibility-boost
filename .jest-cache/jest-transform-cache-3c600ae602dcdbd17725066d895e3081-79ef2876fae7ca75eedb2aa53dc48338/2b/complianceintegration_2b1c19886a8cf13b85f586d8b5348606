8a409609b84c6860adbbb204d52a77c0
"use strict";

/**
 * Compliance Integration for AI Orchestrator
 *
 * Integrates provider agreement compliance checks into the AI request flow
 * Ensures all AI requests are validated against provider agreements
 */
/* istanbul ignore next */
function cov_233juid8vi() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts";
  var hash = "54ac7a17cd022a4298b2cb221a1f923ef3bf3d4d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 71
        }
      },
      "2": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "3": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 11,
          column: 60
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "5": {
        start: {
          line: 13,
          column: 40
        },
        end: {
          line: 13,
          column: 82
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 79
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 23,
          column: 11
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 100
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 216
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 163,
          column: 11
        }
      },
      "11": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "12": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "13": {
        start: {
          line: 35,
          column: 41
        },
        end: {
          line: 35,
          column: 105
        }
      },
      "14": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 60
        }
      },
      "15": {
        start: {
          line: 37,
          column: 35
        },
        end: {
          line: 37,
          column: 67
        }
      },
      "16": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "17": {
        start: {
          line: 40,
          column: 38
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "18": {
        start: {
          line: 41,
          column: 38
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "19": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "20": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "21": {
        start: {
          line: 45,
          column: 39
        },
        end: {
          line: 45,
          column: 69
        }
      },
      "22": {
        start: {
          line: 46,
          column: 44
        },
        end: {
          line: 46,
          column: 106
        }
      },
      "23": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "24": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 52
        }
      },
      "25": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 102
        }
      },
      "26": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 46
        }
      },
      "27": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 51
        }
      },
      "28": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "29": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 102
        }
      },
      "30": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 57,
          column: 50
        }
      },
      "31": {
        start: {
          line: 61,
          column: 41
        },
        end: {
          line: 61,
          column: 73
        }
      },
      "32": {
        start: {
          line: 62,
          column: 50
        },
        end: {
          line: 62,
          column: 114
        }
      },
      "33": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 66,
          column: 21
        }
      },
      "34": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 109
        }
      },
      "35": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "36": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 71,
          column: 21
        }
      },
      "37": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 100
        }
      },
      "38": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 46
        }
      },
      "39": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 75,
          column: 21
        }
      },
      "40": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 78
        }
      },
      "41": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 46
        }
      },
      "42": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 79,
          column: 21
        }
      },
      "43": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 77,
          column: 74
        }
      },
      "44": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 78,
          column: 46
        }
      },
      "45": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 84
        }
      },
      "46": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 40
        }
      },
      "47": {
        start: {
          line: 86,
          column: 30
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "48": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "49": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "50": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 90,
          column: 40
        }
      },
      "51": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "52": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "53": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 98,
          column: 21
        }
      },
      "54": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 40
        }
      },
      "55": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 108,
          column: 17
        }
      },
      "56": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "57": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "58": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 30
        }
      },
      "59": {
        start: {
          line: 135,
          column: 37
        },
        end: {
          line: 135,
          column: 91
        }
      },
      "60": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "61": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "62": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 161,
          column: 18
        }
      },
      "63": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "64": {
        start: {
          line: 170,
          column: 37
        },
        end: {
          line: 170,
          column: 100
        }
      },
      "65": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "66": {
        start: {
          line: 172,
          column: 37
        },
        end: {
          line: 172,
          column: 122
        }
      },
      "67": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "68": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 46
        }
      },
      "69": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "70": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 193,
          column: 19
        }
      },
      "71": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "72": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 209,
          column: 28
        }
      },
      "73": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "74": {
        start: {
          line: 217,
          column: 30
        },
        end: {
          line: 217,
          column: 59
        }
      },
      "75": {
        start: {
          line: 218,
          column: 38
        },
        end: {
          line: 218,
          column: 40
        }
      },
      "76": {
        start: {
          line: 219,
          column: 29
        },
        end: {
          line: 219,
          column: 30
        }
      },
      "77": {
        start: {
          line: 220,
          column: 37
        },
        end: {
          line: 220,
          column: 38
        }
      },
      "78": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "79": {
        start: {
          line: 222,
          column: 41
        },
        end: {
          line: 222,
          column: 105
        }
      },
      "80": {
        start: {
          line: 223,
          column: 34
        },
        end: {
          line: 223,
          column: 60
        }
      },
      "81": {
        start: {
          line: 224,
          column: 28
        },
        end: {
          line: 224,
          column: 31
        }
      },
      "82": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 227,
          column: 17
        }
      },
      "83": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 87
        }
      },
      "84": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 230,
          column: 17
        }
      },
      "85": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 87
        }
      },
      "86": {
        start: {
          line: 231,
          column: 34
        },
        end: {
          line: 231,
          column: 75
        }
      },
      "87": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 233,
          column: 41
        }
      },
      "88": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 41
        }
      },
      "89": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 36
        }
      },
      "90": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 245,
          column: 19
        }
      },
      "91": {
        start: {
          line: 247,
          column: 33
        },
        end: {
          line: 247,
          column: 62
        }
      },
      "92": {
        start: {
          line: 248,
          column: 38
        },
        end: {
          line: 252,
          column: 37
        }
      },
      "93": {
        start: {
          line: 254,
          column: 31
        },
        end: {
          line: 254,
          column: 73
        }
      },
      "94": {
        start: {
          line: 255,
          column: 37
        },
        end: {
          line: 259,
          column: 21
        }
      },
      "95": {
        start: {
          line: 256,
          column: 38
        },
        end: {
          line: 256,
          column: 59
        }
      },
      "96": {
        start: {
          line: 257,
          column: 32
        },
        end: {
          line: 257,
          column: 78
        }
      },
      "97": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 70
        }
      },
      "98": {
        start: {
          line: 261,
          column: 31
        },
        end: {
          line: 261,
          column: 73
        }
      },
      "99": {
        start: {
          line: 262,
          column: 35
        },
        end: {
          line: 266,
          column: 21
        }
      },
      "100": {
        start: {
          line: 263,
          column: 35
        },
        end: {
          line: 263,
          column: 57
        }
      },
      "101": {
        start: {
          line: 264,
          column: 40
        },
        end: {
          line: 264,
          column: 99
        }
      },
      "102": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 68
        }
      },
      "103": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 272,
          column: 14
        }
      },
      "104": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 79
        }
      },
      "105": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 282,
          column: 11
        }
      },
      "106": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 46
        }
      },
      "107": {
        start: {
          line: 291,
          column: 0
        },
        end: {
          line: 291,
          column: 54
        }
      },
      "108": {
        start: {
          line: 293,
          column: 0
        },
        end: {
          line: 293,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 55
          },
          end: {
            line: 31,
            column: 56
          }
        },
        loc: {
          start: {
            line: 31,
            column: 68
          },
          end: {
            line: 163,
            column: 9
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 52
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 168
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 169,
            column: 55
          },
          end: {
            line: 169,
            column: 56
          }
        },
        loc: {
          start: {
            line: 169,
            column: 68
          },
          end: {
            line: 195,
            column: 9
          }
        },
        line: 169
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 59
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 200
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 201,
            column: 55
          },
          end: {
            line: 201,
            column: 56
          }
        },
        loc: {
          start: {
            line: 201,
            column: 68
          },
          end: {
            line: 210,
            column: 9
          }
        },
        line: 201
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 27
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 215
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 216,
            column: 55
          },
          end: {
            line: 216,
            column: 56
          }
        },
        loc: {
          start: {
            line: 216,
            column: 68
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 216
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 255,
            column: 55
          },
          end: {
            line: 255,
            column: 56
          }
        },
        loc: {
          start: {
            line: 255,
            column: 62
          },
          end: {
            line: 259,
            column: 13
          }
        },
        line: 255
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 262,
            column: 53
          },
          end: {
            line: 262,
            column: 54
          }
        },
        loc: {
          start: {
            line: 262,
            column: 60
          },
          end: {
            line: 266,
            column: 13
          }
        },
        line: 262
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 28
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 278
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 287
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 27
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        }, {
          start: {
            line: 81,
            column: 21
          },
          end: {
            line: 84,
            column: 17
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 59,
            column: 21
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 58,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 58,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 66,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 66,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 71,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 71,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 75,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 75,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 79,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 79,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 91,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 91,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 89,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 60
          }
        }, {
          start: {
            line: 89,
            column: 24
          },
          end: {
            line: 89,
            column: 53
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 95,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 95,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 93,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 60
          }
        }, {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 53
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 98,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "14": {
        loc: {
          start: {
            line: 96,
            column: 24
          },
          end: {
            line: 96,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 24
          },
          end: {
            line: 96,
            column: 53
          }
        }, {
          start: {
            line: 96,
            column: 57
          },
          end: {
            line: 96,
            column: 78
          }
        }],
        line: 96
      },
      "15": {
        loc: {
          start: {
            line: 107,
            column: 34
          },
          end: {
            line: 107,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 111
          }
        }, {
          start: {
            line: 107,
            column: 116
          },
          end: {
            line: 107,
            column: 123
          }
        }],
        line: 107
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 80
          },
          end: {
            line: 107,
            column: 86
          }
        }, {
          start: {
            line: 107,
            column: 89
          },
          end: {
            line: 107,
            column: 111
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 53
          }
        }, {
          start: {
            line: 107,
            column: 57
          },
          end: {
            line: 107,
            column: 77
          }
        }],
        line: 107
      },
      "18": {
        loc: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 48
          },
          end: {
            line: 114,
            column: 59
          }
        }, {
          start: {
            line: 114,
            column: 62
          },
          end: {
            line: 114,
            column: 73
          }
        }],
        line: 114
      },
      "19": {
        loc: {
          start: {
            line: 135,
            column: 37
          },
          end: {
            line: 135,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 62
          },
          end: {
            line: 135,
            column: 75
          }
        }, {
          start: {
            line: 135,
            column: 78
          },
          end: {
            line: 135,
            column: 91
          }
        }],
        line: 135
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 176,
            column: 35
          },
          end: {
            line: 180,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 26
          },
          end: {
            line: 177,
            column: 47
          }
        }, {
          start: {
            line: 178,
            column: 26
          },
          end: {
            line: 180,
            column: 49
          }
        }],
        line: 176
      },
      "22": {
        loc: {
          start: {
            line: 178,
            column: 26
          },
          end: {
            line: 180,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 49
          }
        }, {
          start: {
            line: 180,
            column: 30
          },
          end: {
            line: 180,
            column: 49
          }
        }],
        line: 178
      },
      "23": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "24": {
        loc: {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 227,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 227,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "25": {
        loc: {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "26": {
        loc: {
          start: {
            line: 231,
            column: 34
          },
          end: {
            line: 231,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 34
          },
          end: {
            line: 231,
            column: 60
          }
        }, {
          start: {
            line: 231,
            column: 64
          },
          end: {
            line: 231,
            column: 75
          }
        }],
        line: 231
      },
      "27": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 233,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 233,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "28": {
        loc: {
          start: {
            line: 239,
            column: 37
          },
          end: {
            line: 243,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 242,
            column: 38
          }
        }, {
          start: {
            line: 243,
            column: 26
          },
          end: {
            line: 243,
            column: 35
          }
        }],
        line: 239
      },
      "29": {
        loc: {
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 242,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 30
          },
          end: {
            line: 241,
            column: 39
          }
        }, {
          start: {
            line: 242,
            column: 30
          },
          end: {
            line: 242,
            column: 38
          }
        }],
        line: 240
      },
      "30": {
        loc: {
          start: {
            line: 244,
            column: 34
          },
          end: {
            line: 244,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 35
          },
          end: {
            line: 244,
            column: 111
          }
        }, {
          start: {
            line: 244,
            column: 116
          },
          end: {
            line: 244,
            column: 123
          }
        }],
        line: 244
      },
      "31": {
        loc: {
          start: {
            line: 244,
            column: 35
          },
          end: {
            line: 244,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 80
          },
          end: {
            line: 244,
            column: 86
          }
        }, {
          start: {
            line: 244,
            column: 89
          },
          end: {
            line: 244,
            column: 111
          }
        }],
        line: 244
      },
      "32": {
        loc: {
          start: {
            line: 244,
            column: 35
          },
          end: {
            line: 244,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 35
          },
          end: {
            line: 244,
            column: 53
          }
        }, {
          start: {
            line: 244,
            column: 57
          },
          end: {
            line: 244,
            column: 77
          }
        }],
        line: 244
      },
      "33": {
        loc: {
          start: {
            line: 248,
            column: 38
          },
          end: {
            line: 252,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 18
          },
          end: {
            line: 249,
            column: 29
          }
        }, {
          start: {
            line: 250,
            column: 18
          },
          end: {
            line: 252,
            column: 37
          }
        }],
        line: 248
      },
      "34": {
        loc: {
          start: {
            line: 250,
            column: 18
          },
          end: {
            line: 252,
            column: 37
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 31
          }
        }, {
          start: {
            line: 252,
            column: 22
          },
          end: {
            line: 252,
            column: 37
          }
        }],
        line: 250
      },
      "35": {
        loc: {
          start: {
            line: 258,
            column: 23
          },
          end: {
            line: 258,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 23
          },
          end: {
            line: 258,
            column: 46
          }
        }, {
          start: {
            line: 258,
            column: 50
          },
          end: {
            line: 258,
            column: 69
          }
        }],
        line: 258
      },
      "36": {
        loc: {
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 265,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 265,
            column: 44
          }
        }, {
          start: {
            line: 265,
            column: 48
          },
          end: {
            line: 265,
            column: 67
          }
        }],
        line: 265
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts"],
      sourcesContent: ["/**\n * Compliance Integration for AI Orchestrator\n *\n * Integrates provider agreement compliance checks into the AI request flow\n * Ensures all AI requests are validated against provider agreements\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { BasicLogger } from \"./basic-logger\";\nimport { ProviderAgreementCompliance } from \"./provider-agreement-compliance\";\nimport { AiRequest, AiResponse, Provider } from \"./types\";\n\nexport interface ComplianceCheckResult {\n  allowed: boolean;\n  provider: Provider;\n  violations: string[];\n  warnings: string[];\n  complianceScore: number;\n  agreementStatus: \"active\" | \"expired\" | \"missing\";\n  lastVerified: string;\n}\n\nexport interface ComplianceEnforcementConfig {\n  enforceCompliance: boolean;\n  blockOnViolations: boolean;\n  blockOnExpiredAgreements: boolean;\n  blockOnMissingAgreements: boolean;\n  warningThresholdDays: number; // Days before agreement expiry to warn\n  maxVerificationAgeDays: number; // Max days since last verification\n}\n\n/**\n * Compliance Integration Manager\n */\nexport class ComplianceIntegration {\n  private logger: BasicLogger;\n  private auditTrail: AuditTrailSystem;\n  private config: ComplianceEnforcementConfig;\n  private providerCompliance: ProviderAgreementCompliance;\n\n  constructor(config: Partial<ComplianceEnforcementConfig> = {}) {\n    this.logger = new BasicLogger(\"compliance-integration\");\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n    });\n    this.providerCompliance = new ProviderAgreementCompliance();\n\n    this.config = {\n      enforceCompliance: true,\n      blockOnViolations: true,\n      blockOnExpiredAgreements: true,\n      blockOnMissingAgreements: true,\n      warningThresholdDays: 30,\n      maxVerificationAgeDays: 90,\n      ...config,\n    };\n  }\n\n  /**\n   * Perform compliance check before AI request\n   */\n  async performComplianceCheck(\n    request: AiRequest,\n    provider: Provider,\n    requestId: string\n  ): Promise<ComplianceCheckResult> {\n    const startTime = Date.now();\n\n    try {\n      // Get provider compliance status\n      const complianceResult =\n        await this.providerCompliance.verifyProviderCompliance(provider);\n\n      const agreement = complianceResult.agreement;\n      const violations = [...complianceResult.violations];\n      const warnings = [...complianceResult.warnings];\n\n      // Additional compliance checks\n      let complianceScore = 100;\n      let agreementStatus: ComplianceCheckResult[\"agreementStatus\"] = \"missing\";\n\n      if (agreement) {\n        // Check agreement expiry\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        const daysUntilExpiry =\n          (expiryDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24);\n\n        if (now > expiryDate) {\n          agreementStatus = \"expired\";\n          violations.push(\n            `Agreement expired ${Math.floor(-daysUntilExpiry)} days ago`\n          );\n          complianceScore -= 50;\n        } else {\n          agreementStatus = \"active\";\n\n          // Warn if expiring soon\n          if (daysUntilExpiry <= this.config.warningThresholdDays) {\n            warnings.push(\n              `Agreement expires in ${Math.floor(daysUntilExpiry)} days`\n            );\n            complianceScore -= 10;\n          }\n        }\n\n        // Check verification age\n        const lastVerified = new Date(agreement.lastVerified);\n        const daysSinceVerification =\n          (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24);\n\n        if (daysSinceVerification > this.config.maxVerificationAgeDays) {\n          warnings.push(\n            `Agreement not verified in ${Math.floor(\n              daysSinceVerification\n            )} days`\n          );\n          complianceScore -= 15;\n        }\n\n        // Check core compliance requirements\n        if (!agreement.noTrainingOnCustomerData) {\n          violations.push(\n            \"Provider does not guarantee no training on customer data\"\n          );\n          complianceScore -= 40;\n        }\n\n        if (!agreement.dataProcessingAgreement) {\n          violations.push(\"No valid Data Processing Agreement\");\n          complianceScore -= 30;\n        }\n\n        if (!agreement.gdprCompliant) {\n          violations.push(\"Provider is not GDPR compliant\");\n          complianceScore -= 25;\n        }\n      } else {\n        violations.push(`No agreement found for provider: ${provider}`);\n        complianceScore = 0;\n      }\n\n      // Determine if request should be allowed\n      let allowed = true;\n\n      if (this.config.enforceCompliance) {\n        if (\n          this.config.blockOnMissingAgreements &&\n          agreementStatus === \"missing\"\n        ) {\n          allowed = false;\n        }\n\n        if (\n          this.config.blockOnExpiredAgreements &&\n          agreementStatus === \"expired\"\n        ) {\n          allowed = false;\n        }\n\n        if (this.config.blockOnViolations && violations.length > 0) {\n          allowed = false;\n        }\n      }\n\n      const result: ComplianceCheckResult = {\n        allowed,\n        provider,\n        violations,\n        warnings,\n        complianceScore: Math.max(0, complianceScore),\n        agreementStatus,\n        lastVerified: agreement?.lastVerified || \"never\",\n      };\n\n      // Log compliance check to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"compliance_check\",\n        requestId,\n        provider,\n        complianceStatus: allowed ? \"compliant\" : \"violation\",\n        metadata: {\n          complianceScore: result.complianceScore,\n          agreementStatus: result.agreementStatus,\n          violationsCount: violations.length,\n          warningsCount: warnings.length,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      this.logger.info(\"Compliance check completed\", {\n        requestId,\n        provider,\n        allowed,\n        complianceScore: result.complianceScore,\n        violations: violations.length,\n        warnings: warnings.length,\n        processingTimeMs: Date.now() - startTime,\n      });\n\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      this.logger.error(\"Compliance check failed\", {\n        requestId,\n        provider,\n        error: errorMessage,\n      });\n\n      // Log error to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"compliance_check\",\n        requestId,\n        provider,\n        complianceStatus: \"violation\",\n        error: {\n          type: \"compliance_check_error\",\n          message: errorMessage,\n        },\n      });\n\n      // Return restrictive result on error\n      return {\n        allowed: false,\n        provider,\n        violations: [`Compliance check failed: ${errorMessage}`],\n        warnings: [],\n        complianceScore: 0,\n        agreementStatus: \"missing\",\n        lastVerified: \"never\",\n      };\n    }\n  }\n\n  /**\n   * Enforce compliance for AI request\n   */\n  async enforceCompliance(\n    request: AiRequest,\n    provider: Provider,\n    requestId: string\n  ): Promise<void> {\n    const complianceResult = await this.performComplianceCheck(\n      request,\n      provider,\n      requestId\n    );\n\n    if (!complianceResult.allowed) {\n      const errorMessage = `Compliance violation prevents AI request: ${complianceResult.violations.join(\n        \", \"\n      )}`;\n\n      // Record compliance violation\n      await this.providerCompliance.recordViolation({\n        providerId: provider,\n        violationType:\n          complianceResult.agreementStatus === \"missing\"\n            ? \"unauthorized_access\"\n            : complianceResult.agreementStatus === \"expired\"\n            ? \"agreement_expired\"\n            : \"training_detected\",\n        severity: \"high\",\n        description: `AI request blocked due to compliance violation`,\n        evidence: `Request ID: ${requestId}, Violations: ${complianceResult.violations.join(\n          \", \"\n        )}`,\n      });\n\n      throw new Error(errorMessage);\n    }\n\n    // Log warnings if any\n    if (complianceResult.warnings.length > 0) {\n      this.logger.warn(\"Compliance warnings detected\", {\n        requestId,\n        provider,\n        warnings: complianceResult.warnings,\n      });\n    }\n  }\n\n  /**\n   * Wrap AI response with compliance metadata\n   */\n  async wrapResponseWithCompliance(\n    response: AiResponse,\n    complianceResult: ComplianceCheckResult\n  ): Promise<AiResponse> {\n    return {\n      ...response,\n      metadata: {\n        ...response.metadata,\n        compliance: {\n          checked: true,\n          score: complianceResult.complianceScore,\n          agreementStatus: complianceResult.agreementStatus,\n          lastVerified: complianceResult.lastVerified,\n          violations: complianceResult.violations.length,\n          warnings: complianceResult.warnings.length,\n        },\n      },\n    };\n  }\n\n  /**\n   * Get compliance summary for monitoring\n   */\n  async getComplianceSummary(): Promise<{\n    overallCompliance: \"compliant\" | \"warning\" | \"non_compliant\";\n    providers: Array<{\n      provider: Provider;\n      compliant: boolean;\n      score: number;\n      agreementStatus: string;\n      lastVerified: string;\n    }>;\n    recentViolations: number;\n    pendingActions: number;\n  }> {\n    const providers: Provider[] = [\"bedrock\", \"google\", \"meta\"];\n    const providerSummaries = [];\n    let totalScore = 0;\n    let compliantProviders = 0;\n\n    for (const provider of providers) {\n      const complianceResult =\n        await this.providerCompliance.verifyProviderCompliance(provider);\n      const agreement = complianceResult.agreement;\n\n      let score = 100;\n      if (complianceResult.violations.length > 0) {\n        score = Math.max(0, 100 - complianceResult.violations.length * 25);\n      }\n      if (complianceResult.warnings.length > 0) {\n        score = Math.max(0, score - complianceResult.warnings.length * 10);\n      }\n\n      const compliant = complianceResult.compliant && score >= 80;\n      if (compliant) compliantProviders++;\n      totalScore += score;\n\n      providerSummaries.push({\n        provider,\n        compliant,\n        score,\n        agreementStatus: agreement\n          ? new Date() > new Date(agreement.expiryDate)\n            ? \"expired\"\n            : \"active\"\n          : \"missing\",\n        lastVerified: agreement?.lastVerified || \"never\",\n      });\n    }\n\n    const averageScore = totalScore / providers.length;\n    const overallCompliance =\n      averageScore >= 95\n        ? \"compliant\"\n        : averageScore >= 80\n        ? \"warning\"\n        : \"non_compliant\";\n\n    // Get recent violations (last 7 days)\n    const violations = this.providerCompliance.getAllViolations();\n    const recentViolations = violations.filter((v) => {\n      const violationDate = new Date(v.timestamp);\n      const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n      return violationDate > weekAgo && v.status === \"open\";\n    }).length;\n\n    // Count pending actions (expiring agreements)\n    const agreements = this.providerCompliance.getAllAgreements();\n    const pendingActions = agreements.filter((a) => {\n      const expiryDate = new Date(a.expiryDate);\n      const daysUntilExpiry =\n        (expiryDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24);\n      return daysUntilExpiry <= 90 && daysUntilExpiry > 0;\n    }).length;\n\n    return {\n      overallCompliance,\n      providers: providerSummaries,\n      recentViolations,\n      pendingActions,\n    };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(newConfig: Partial<ComplianceEnforcementConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n\n    this.logger.info(\"Compliance configuration updated\", {\n      config: this.config,\n    });\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): ComplianceEnforcementConfig {\n    return { ...this.config };\n  }\n}\n\n// Singleton instance\nexport const complianceIntegration = new ComplianceIntegration();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "54ac7a17cd022a4298b2cb221a1f923ef3bf3d4d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_233juid8vi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_233juid8vi();
cov_233juid8vi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_233juid8vi().s[1]++;
exports.complianceIntegration = exports.ComplianceIntegration = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_233juid8vi().s[2]++, require("tslib"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_233juid8vi().s[3]++, require("./audit-trail-system"));
const basic_logger_1 =
/* istanbul ignore next */
(cov_233juid8vi().s[4]++, require("./basic-logger"));
const provider_agreement_compliance_1 =
/* istanbul ignore next */
(cov_233juid8vi().s[5]++, require("./provider-agreement-compliance"));
/**
 * Compliance Integration Manager
 */
class ComplianceIntegration {
  constructor(config =
  /* istanbul ignore next */
  (cov_233juid8vi().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_233juid8vi().f[0]++;
    cov_233juid8vi().s[6]++;
    this.logger = new basic_logger_1.BasicLogger("compliance-integration");
    /* istanbul ignore next */
    cov_233juid8vi().s[7]++;
    this.auditTrail = new audit_trail_system_1.AuditTrailSystem({
      complianceMode: "strict",
      enableIntegrityChecking: true
    });
    /* istanbul ignore next */
    cov_233juid8vi().s[8]++;
    this.providerCompliance = new provider_agreement_compliance_1.ProviderAgreementCompliance();
    /* istanbul ignore next */
    cov_233juid8vi().s[9]++;
    this.config = Object.assign({
      enforceCompliance: true,
      blockOnViolations: true,
      blockOnExpiredAgreements: true,
      blockOnMissingAgreements: true,
      warningThresholdDays: 30,
      maxVerificationAgeDays: 90
    }, config);
  }
  /**
   * Perform compliance check before AI request
   */
  performComplianceCheck(request, provider, requestId) {
    /* istanbul ignore next */
    cov_233juid8vi().f[1]++;
    cov_233juid8vi().s[10]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_233juid8vi().f[2]++;
      const startTime =
      /* istanbul ignore next */
      (cov_233juid8vi().s[11]++, Date.now());
      /* istanbul ignore next */
      cov_233juid8vi().s[12]++;
      try {
        // Get provider compliance status
        const complianceResult =
        /* istanbul ignore next */
        (cov_233juid8vi().s[13]++, yield this.providerCompliance.verifyProviderCompliance(provider));
        const agreement =
        /* istanbul ignore next */
        (cov_233juid8vi().s[14]++, complianceResult.agreement);
        const violations =
        /* istanbul ignore next */
        (cov_233juid8vi().s[15]++, [...complianceResult.violations]);
        const warnings =
        /* istanbul ignore next */
        (cov_233juid8vi().s[16]++, [...complianceResult.warnings]);
        // Additional compliance checks
        let complianceScore =
        /* istanbul ignore next */
        (cov_233juid8vi().s[17]++, 100);
        let agreementStatus =
        /* istanbul ignore next */
        (cov_233juid8vi().s[18]++, "missing");
        /* istanbul ignore next */
        cov_233juid8vi().s[19]++;
        if (agreement) {
          /* istanbul ignore next */
          cov_233juid8vi().b[1][0]++;
          // Check agreement expiry
          const now =
          /* istanbul ignore next */
          (cov_233juid8vi().s[20]++, new Date());
          const expiryDate =
          /* istanbul ignore next */
          (cov_233juid8vi().s[21]++, new Date(agreement.expiryDate));
          const daysUntilExpiry =
          /* istanbul ignore next */
          (cov_233juid8vi().s[22]++, (expiryDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));
          /* istanbul ignore next */
          cov_233juid8vi().s[23]++;
          if (now > expiryDate) {
            /* istanbul ignore next */
            cov_233juid8vi().b[2][0]++;
            cov_233juid8vi().s[24]++;
            agreementStatus = "expired";
            /* istanbul ignore next */
            cov_233juid8vi().s[25]++;
            violations.push(`Agreement expired ${Math.floor(-daysUntilExpiry)} days ago`);
            /* istanbul ignore next */
            cov_233juid8vi().s[26]++;
            complianceScore -= 50;
          } else {
            /* istanbul ignore next */
            cov_233juid8vi().b[2][1]++;
            cov_233juid8vi().s[27]++;
            agreementStatus = "active";
            // Warn if expiring soon
            /* istanbul ignore next */
            cov_233juid8vi().s[28]++;
            if (daysUntilExpiry <= this.config.warningThresholdDays) {
              /* istanbul ignore next */
              cov_233juid8vi().b[3][0]++;
              cov_233juid8vi().s[29]++;
              warnings.push(`Agreement expires in ${Math.floor(daysUntilExpiry)} days`);
              /* istanbul ignore next */
              cov_233juid8vi().s[30]++;
              complianceScore -= 10;
            } else
            /* istanbul ignore next */
            {
              cov_233juid8vi().b[3][1]++;
            }
          }
          // Check verification age
          const lastVerified =
          /* istanbul ignore next */
          (cov_233juid8vi().s[31]++, new Date(agreement.lastVerified));
          const daysSinceVerification =
          /* istanbul ignore next */
          (cov_233juid8vi().s[32]++, (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24));
          /* istanbul ignore next */
          cov_233juid8vi().s[33]++;
          if (daysSinceVerification > this.config.maxVerificationAgeDays) {
            /* istanbul ignore next */
            cov_233juid8vi().b[4][0]++;
            cov_233juid8vi().s[34]++;
            warnings.push(`Agreement not verified in ${Math.floor(daysSinceVerification)} days`);
            /* istanbul ignore next */
            cov_233juid8vi().s[35]++;
            complianceScore -= 15;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[4][1]++;
          }
          // Check core compliance requirements
          cov_233juid8vi().s[36]++;
          if (!agreement.noTrainingOnCustomerData) {
            /* istanbul ignore next */
            cov_233juid8vi().b[5][0]++;
            cov_233juid8vi().s[37]++;
            violations.push("Provider does not guarantee no training on customer data");
            /* istanbul ignore next */
            cov_233juid8vi().s[38]++;
            complianceScore -= 40;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[5][1]++;
          }
          cov_233juid8vi().s[39]++;
          if (!agreement.dataProcessingAgreement) {
            /* istanbul ignore next */
            cov_233juid8vi().b[6][0]++;
            cov_233juid8vi().s[40]++;
            violations.push("No valid Data Processing Agreement");
            /* istanbul ignore next */
            cov_233juid8vi().s[41]++;
            complianceScore -= 30;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[6][1]++;
          }
          cov_233juid8vi().s[42]++;
          if (!agreement.gdprCompliant) {
            /* istanbul ignore next */
            cov_233juid8vi().b[7][0]++;
            cov_233juid8vi().s[43]++;
            violations.push("Provider is not GDPR compliant");
            /* istanbul ignore next */
            cov_233juid8vi().s[44]++;
            complianceScore -= 25;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[7][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_233juid8vi().b[1][1]++;
          cov_233juid8vi().s[45]++;
          violations.push(`No agreement found for provider: ${provider}`);
          /* istanbul ignore next */
          cov_233juid8vi().s[46]++;
          complianceScore = 0;
        }
        // Determine if request should be allowed
        let allowed =
        /* istanbul ignore next */
        (cov_233juid8vi().s[47]++, true);
        /* istanbul ignore next */
        cov_233juid8vi().s[48]++;
        if (this.config.enforceCompliance) {
          /* istanbul ignore next */
          cov_233juid8vi().b[8][0]++;
          cov_233juid8vi().s[49]++;
          if (
          /* istanbul ignore next */
          (cov_233juid8vi().b[10][0]++, this.config.blockOnMissingAgreements) &&
          /* istanbul ignore next */
          (cov_233juid8vi().b[10][1]++, agreementStatus === "missing")) {
            /* istanbul ignore next */
            cov_233juid8vi().b[9][0]++;
            cov_233juid8vi().s[50]++;
            allowed = false;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[9][1]++;
          }
          cov_233juid8vi().s[51]++;
          if (
          /* istanbul ignore next */
          (cov_233juid8vi().b[12][0]++, this.config.blockOnExpiredAgreements) &&
          /* istanbul ignore next */
          (cov_233juid8vi().b[12][1]++, agreementStatus === "expired")) {
            /* istanbul ignore next */
            cov_233juid8vi().b[11][0]++;
            cov_233juid8vi().s[52]++;
            allowed = false;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[11][1]++;
          }
          cov_233juid8vi().s[53]++;
          if (
          /* istanbul ignore next */
          (cov_233juid8vi().b[14][0]++, this.config.blockOnViolations) &&
          /* istanbul ignore next */
          (cov_233juid8vi().b[14][1]++, violations.length > 0)) {
            /* istanbul ignore next */
            cov_233juid8vi().b[13][0]++;
            cov_233juid8vi().s[54]++;
            allowed = false;
          } else
          /* istanbul ignore next */
          {
            cov_233juid8vi().b[13][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_233juid8vi().b[8][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_233juid8vi().s[55]++, {
          allowed,
          provider,
          violations,
          warnings,
          complianceScore: Math.max(0, complianceScore),
          agreementStatus,
          lastVerified:
          /* istanbul ignore next */
          (cov_233juid8vi().b[15][0]++,
          /* istanbul ignore next */
          (cov_233juid8vi().b[17][0]++, agreement === null) ||
          /* istanbul ignore next */
          (cov_233juid8vi().b[17][1]++, agreement === void 0) ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[16][0]++, void 0) :
          /* istanbul ignore next */
          (cov_233juid8vi().b[16][1]++, agreement.lastVerified)) ||
          /* istanbul ignore next */
          (cov_233juid8vi().b[15][1]++, "never")
        });
        // Log compliance check to audit trail
        /* istanbul ignore next */
        cov_233juid8vi().s[56]++;
        yield this.auditTrail.logEvent({
          eventType: "compliance_check",
          requestId,
          provider,
          complianceStatus: allowed ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[18][0]++, "compliant") :
          /* istanbul ignore next */
          (cov_233juid8vi().b[18][1]++, "violation"),
          metadata: {
            complianceScore: result.complianceScore,
            agreementStatus: result.agreementStatus,
            violationsCount: violations.length,
            warningsCount: warnings.length,
            processingTimeMs: Date.now() - startTime
          }
        });
        /* istanbul ignore next */
        cov_233juid8vi().s[57]++;
        this.logger.info("Compliance check completed", {
          requestId,
          provider,
          allowed,
          complianceScore: result.complianceScore,
          violations: violations.length,
          warnings: warnings.length,
          processingTimeMs: Date.now() - startTime
        });
        /* istanbul ignore next */
        cov_233juid8vi().s[58]++;
        return result;
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_233juid8vi().s[59]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_233juid8vi().b[19][0]++, error.message) :
        /* istanbul ignore next */
        (cov_233juid8vi().b[19][1]++, String(error)));
        /* istanbul ignore next */
        cov_233juid8vi().s[60]++;
        this.logger.error("Compliance check failed", {
          requestId,
          provider,
          error: errorMessage
        });
        // Log error to audit trail
        /* istanbul ignore next */
        cov_233juid8vi().s[61]++;
        yield this.auditTrail.logEvent({
          eventType: "compliance_check",
          requestId,
          provider,
          complianceStatus: "violation",
          error: {
            type: "compliance_check_error",
            message: errorMessage
          }
        });
        // Return restrictive result on error
        /* istanbul ignore next */
        cov_233juid8vi().s[62]++;
        return {
          allowed: false,
          provider,
          violations: [`Compliance check failed: ${errorMessage}`],
          warnings: [],
          complianceScore: 0,
          agreementStatus: "missing",
          lastVerified: "never"
        };
      }
    });
  }
  /**
   * Enforce compliance for AI request
   */
  enforceCompliance(request, provider, requestId) {
    /* istanbul ignore next */
    cov_233juid8vi().f[3]++;
    cov_233juid8vi().s[63]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_233juid8vi().f[4]++;
      const complianceResult =
      /* istanbul ignore next */
      (cov_233juid8vi().s[64]++, yield this.performComplianceCheck(request, provider, requestId));
      /* istanbul ignore next */
      cov_233juid8vi().s[65]++;
      if (!complianceResult.allowed) {
        /* istanbul ignore next */
        cov_233juid8vi().b[20][0]++;
        const errorMessage =
        /* istanbul ignore next */
        (cov_233juid8vi().s[66]++, `Compliance violation prevents AI request: ${complianceResult.violations.join(", ")}`);
        // Record compliance violation
        /* istanbul ignore next */
        cov_233juid8vi().s[67]++;
        yield this.providerCompliance.recordViolation({
          providerId: provider,
          violationType: complianceResult.agreementStatus === "missing" ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[21][0]++, "unauthorized_access") :
          /* istanbul ignore next */
          (cov_233juid8vi().b[21][1]++, complianceResult.agreementStatus === "expired" ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[22][0]++, "agreement_expired") :
          /* istanbul ignore next */
          (cov_233juid8vi().b[22][1]++, "training_detected")),
          severity: "high",
          description: `AI request blocked due to compliance violation`,
          evidence: `Request ID: ${requestId}, Violations: ${complianceResult.violations.join(", ")}`
        });
        /* istanbul ignore next */
        cov_233juid8vi().s[68]++;
        throw new Error(errorMessage);
      } else
      /* istanbul ignore next */
      {
        cov_233juid8vi().b[20][1]++;
      }
      // Log warnings if any
      cov_233juid8vi().s[69]++;
      if (complianceResult.warnings.length > 0) {
        /* istanbul ignore next */
        cov_233juid8vi().b[23][0]++;
        cov_233juid8vi().s[70]++;
        this.logger.warn("Compliance warnings detected", {
          requestId,
          provider,
          warnings: complianceResult.warnings
        });
      } else
      /* istanbul ignore next */
      {
        cov_233juid8vi().b[23][1]++;
      }
    });
  }
  /**
   * Wrap AI response with compliance metadata
   */
  wrapResponseWithCompliance(response, complianceResult) {
    /* istanbul ignore next */
    cov_233juid8vi().f[5]++;
    cov_233juid8vi().s[71]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_233juid8vi().f[6]++;
      cov_233juid8vi().s[72]++;
      return Object.assign(Object.assign({}, response), {
        metadata: Object.assign(Object.assign({}, response.metadata), {
          compliance: {
            checked: true,
            score: complianceResult.complianceScore,
            agreementStatus: complianceResult.agreementStatus,
            lastVerified: complianceResult.lastVerified,
            violations: complianceResult.violations.length,
            warnings: complianceResult.warnings.length
          }
        })
      });
    });
  }
  /**
   * Get compliance summary for monitoring
   */
  getComplianceSummary() {
    /* istanbul ignore next */
    cov_233juid8vi().f[7]++;
    cov_233juid8vi().s[73]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_233juid8vi().f[8]++;
      const providers =
      /* istanbul ignore next */
      (cov_233juid8vi().s[74]++, ["bedrock", "google", "meta"]);
      const providerSummaries =
      /* istanbul ignore next */
      (cov_233juid8vi().s[75]++, []);
      let totalScore =
      /* istanbul ignore next */
      (cov_233juid8vi().s[76]++, 0);
      let compliantProviders =
      /* istanbul ignore next */
      (cov_233juid8vi().s[77]++, 0);
      /* istanbul ignore next */
      cov_233juid8vi().s[78]++;
      for (const provider of providers) {
        const complianceResult =
        /* istanbul ignore next */
        (cov_233juid8vi().s[79]++, yield this.providerCompliance.verifyProviderCompliance(provider));
        const agreement =
        /* istanbul ignore next */
        (cov_233juid8vi().s[80]++, complianceResult.agreement);
        let score =
        /* istanbul ignore next */
        (cov_233juid8vi().s[81]++, 100);
        /* istanbul ignore next */
        cov_233juid8vi().s[82]++;
        if (complianceResult.violations.length > 0) {
          /* istanbul ignore next */
          cov_233juid8vi().b[24][0]++;
          cov_233juid8vi().s[83]++;
          score = Math.max(0, 100 - complianceResult.violations.length * 25);
        } else
        /* istanbul ignore next */
        {
          cov_233juid8vi().b[24][1]++;
        }
        cov_233juid8vi().s[84]++;
        if (complianceResult.warnings.length > 0) {
          /* istanbul ignore next */
          cov_233juid8vi().b[25][0]++;
          cov_233juid8vi().s[85]++;
          score = Math.max(0, score - complianceResult.warnings.length * 10);
        } else
        /* istanbul ignore next */
        {
          cov_233juid8vi().b[25][1]++;
        }
        const compliant =
        /* istanbul ignore next */
        (cov_233juid8vi().s[86]++,
        /* istanbul ignore next */
        (cov_233juid8vi().b[26][0]++, complianceResult.compliant) &&
        /* istanbul ignore next */
        (cov_233juid8vi().b[26][1]++, score >= 80));
        /* istanbul ignore next */
        cov_233juid8vi().s[87]++;
        if (compliant) {
          /* istanbul ignore next */
          cov_233juid8vi().b[27][0]++;
          cov_233juid8vi().s[88]++;
          compliantProviders++;
        } else
        /* istanbul ignore next */
        {
          cov_233juid8vi().b[27][1]++;
        }
        cov_233juid8vi().s[89]++;
        totalScore += score;
        /* istanbul ignore next */
        cov_233juid8vi().s[90]++;
        providerSummaries.push({
          provider,
          compliant,
          score,
          agreementStatus: agreement ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[28][0]++, new Date() > new Date(agreement.expiryDate) ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[29][0]++, "expired") :
          /* istanbul ignore next */
          (cov_233juid8vi().b[29][1]++, "active")) :
          /* istanbul ignore next */
          (cov_233juid8vi().b[28][1]++, "missing"),
          lastVerified:
          /* istanbul ignore next */
          (cov_233juid8vi().b[30][0]++,
          /* istanbul ignore next */
          (cov_233juid8vi().b[32][0]++, agreement === null) ||
          /* istanbul ignore next */
          (cov_233juid8vi().b[32][1]++, agreement === void 0) ?
          /* istanbul ignore next */
          (cov_233juid8vi().b[31][0]++, void 0) :
          /* istanbul ignore next */
          (cov_233juid8vi().b[31][1]++, agreement.lastVerified)) ||
          /* istanbul ignore next */
          (cov_233juid8vi().b[30][1]++, "never")
        });
      }
      const averageScore =
      /* istanbul ignore next */
      (cov_233juid8vi().s[91]++, totalScore / providers.length);
      const overallCompliance =
      /* istanbul ignore next */
      (cov_233juid8vi().s[92]++, averageScore >= 95 ?
      /* istanbul ignore next */
      (cov_233juid8vi().b[33][0]++, "compliant") :
      /* istanbul ignore next */
      (cov_233juid8vi().b[33][1]++, averageScore >= 80 ?
      /* istanbul ignore next */
      (cov_233juid8vi().b[34][0]++, "warning") :
      /* istanbul ignore next */
      (cov_233juid8vi().b[34][1]++, "non_compliant")));
      // Get recent violations (last 7 days)
      const violations =
      /* istanbul ignore next */
      (cov_233juid8vi().s[93]++, this.providerCompliance.getAllViolations());
      const recentViolations =
      /* istanbul ignore next */
      (cov_233juid8vi().s[94]++, violations.filter(v => {
        /* istanbul ignore next */
        cov_233juid8vi().f[9]++;
        const violationDate =
        /* istanbul ignore next */
        (cov_233juid8vi().s[95]++, new Date(v.timestamp));
        const weekAgo =
        /* istanbul ignore next */
        (cov_233juid8vi().s[96]++, new Date(Date.now() - 7 * 24 * 60 * 60 * 1000));
        /* istanbul ignore next */
        cov_233juid8vi().s[97]++;
        return /* istanbul ignore next */(cov_233juid8vi().b[35][0]++, violationDate > weekAgo) &&
        /* istanbul ignore next */
        (cov_233juid8vi().b[35][1]++, v.status === "open");
      }).length);
      // Count pending actions (expiring agreements)
      const agreements =
      /* istanbul ignore next */
      (cov_233juid8vi().s[98]++, this.providerCompliance.getAllAgreements());
      const pendingActions =
      /* istanbul ignore next */
      (cov_233juid8vi().s[99]++, agreements.filter(a => {
        /* istanbul ignore next */
        cov_233juid8vi().f[10]++;
        const expiryDate =
        /* istanbul ignore next */
        (cov_233juid8vi().s[100]++, new Date(a.expiryDate));
        const daysUntilExpiry =
        /* istanbul ignore next */
        (cov_233juid8vi().s[101]++, (expiryDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24));
        /* istanbul ignore next */
        cov_233juid8vi().s[102]++;
        return /* istanbul ignore next */(cov_233juid8vi().b[36][0]++, daysUntilExpiry <= 90) &&
        /* istanbul ignore next */
        (cov_233juid8vi().b[36][1]++, daysUntilExpiry > 0);
      }).length);
      /* istanbul ignore next */
      cov_233juid8vi().s[103]++;
      return {
        overallCompliance,
        providers: providerSummaries,
        recentViolations,
        pendingActions
      };
    });
  }
  /**
   * Update configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_233juid8vi().f[11]++;
    cov_233juid8vi().s[104]++;
    this.config = Object.assign(Object.assign({}, this.config), newConfig);
    /* istanbul ignore next */
    cov_233juid8vi().s[105]++;
    this.logger.info("Compliance configuration updated", {
      config: this.config
    });
  }
  /**
   * Get current configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_233juid8vi().f[12]++;
    cov_233juid8vi().s[106]++;
    return Object.assign({}, this.config);
  }
}
/* istanbul ignore next */
cov_233juid8vi().s[107]++;
exports.ComplianceIntegration = ComplianceIntegration;
// Singleton instance
/* istanbul ignore next */
cov_233juid8vi().s[108]++;
exports.complianceIntegration = new ComplianceIntegration();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,