{"version":3,"names":["cov_233juid8vi","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","audit_trail_system_1","require","basic_logger_1","provider_agreement_compliance_1","ComplianceIntegration","constructor","config","logger","BasicLogger","auditTrail","AuditTrailSystem","complianceMode","enableIntegrityChecking","providerCompliance","ProviderAgreementCompliance","Object","assign","enforceCompliance","blockOnViolations","blockOnExpiredAgreements","blockOnMissingAgreements","warningThresholdDays","maxVerificationAgeDays","performComplianceCheck","request","provider","requestId","startTime","Date","now","complianceResult","verifyProviderCompliance","agreement","violations","warnings","complianceScore","agreementStatus","expiryDate","daysUntilExpiry","getTime","push","Math","floor","lastVerified","daysSinceVerification","noTrainingOnCustomerData","dataProcessingAgreement","gdprCompliant","allowed","length","result","max","logEvent","eventType","complianceStatus","metadata","violationsCount","warningsCount","processingTimeMs","info","error","errorMessage","Error","message","String","join","recordViolation","providerId","violationType","severity","description","evidence","warn","wrapResponseWithCompliance","response","compliance","checked","score","getComplianceSummary","providers","providerSummaries","totalScore","compliantProviders","compliant","averageScore","overallCompliance","getAllViolations","recentViolations","filter","v","violationDate","timestamp","weekAgo","status","agreements","getAllAgreements","pendingActions","a","updateConfig","newConfig","getConfig","exports","complianceIntegration"],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts"],"sourcesContent":["/**\n * Compliance Integration for AI Orchestrator\n *\n * Integrates provider agreement compliance checks into the AI request flow\n * Ensures all AI requests are validated against provider agreements\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { BasicLogger } from \"./basic-logger\";\nimport { ProviderAgreementCompliance } from \"./provider-agreement-compliance\";\nimport { AiRequest, AiResponse, Provider } from \"./types\";\n\nexport interface ComplianceCheckResult {\n  allowed: boolean;\n  provider: Provider;\n  violations: string[];\n  warnings: string[];\n  complianceScore: number;\n  agreementStatus: \"active\" | \"expired\" | \"missing\";\n  lastVerified: string;\n}\n\nexport interface ComplianceEnforcementConfig {\n  enforceCompliance: boolean;\n  blockOnViolations: boolean;\n  blockOnExpiredAgreements: boolean;\n  blockOnMissingAgreements: boolean;\n  warningThresholdDays: number; // Days before agreement expiry to warn\n  maxVerificationAgeDays: number; // Max days since last verification\n}\n\n/**\n * Compliance Integration Manager\n */\nexport class ComplianceIntegration {\n  private logger: BasicLogger;\n  private auditTrail: AuditTrailSystem;\n  private config: ComplianceEnforcementConfig;\n  private providerCompliance: ProviderAgreementCompliance;\n\n  constructor(config: Partial<ComplianceEnforcementConfig> = {}) {\n    this.logger = new BasicLogger(\"compliance-integration\");\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n    });\n    this.providerCompliance = new ProviderAgreementCompliance();\n\n    this.config = {\n      enforceCompliance: true,\n      blockOnViolations: true,\n      blockOnExpiredAgreements: true,\n      blockOnMissingAgreements: true,\n      warningThresholdDays: 30,\n      maxVerificationAgeDays: 90,\n      ...config,\n    };\n  }\n\n  /**\n   * Perform compliance check before AI request\n   */\n  async performComplianceCheck(\n    request: AiRequest,\n    provider: Provider,\n    requestId: string\n  ): Promise<ComplianceCheckResult> {\n    const startTime = Date.now();\n\n    try {\n      // Get provider compliance status\n      const complianceResult =\n        await this.providerCompliance.verifyProviderCompliance(provider);\n\n      const agreement = complianceResult.agreement;\n      const violations = [...complianceResult.violations];\n      const warnings = [...complianceResult.warnings];\n\n      // Additional compliance checks\n      let complianceScore = 100;\n      let agreementStatus: ComplianceCheckResult[\"agreementStatus\"] = \"missing\";\n\n      if (agreement) {\n        // Check agreement expiry\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        const daysUntilExpiry =\n          (expiryDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24);\n\n        if (now > expiryDate) {\n          agreementStatus = \"expired\";\n          violations.push(\n            `Agreement expired ${Math.floor(-daysUntilExpiry)} days ago`\n          );\n          complianceScore -= 50;\n        } else {\n          agreementStatus = \"active\";\n\n          // Warn if expiring soon\n          if (daysUntilExpiry <= this.config.warningThresholdDays) {\n            warnings.push(\n              `Agreement expires in ${Math.floor(daysUntilExpiry)} days`\n            );\n            complianceScore -= 10;\n          }\n        }\n\n        // Check verification age\n        const lastVerified = new Date(agreement.lastVerified);\n        const daysSinceVerification =\n          (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24);\n\n        if (daysSinceVerification > this.config.maxVerificationAgeDays) {\n          warnings.push(\n            `Agreement not verified in ${Math.floor(\n              daysSinceVerification\n            )} days`\n          );\n          complianceScore -= 15;\n        }\n\n        // Check core compliance requirements\n        if (!agreement.noTrainingOnCustomerData) {\n          violations.push(\n            \"Provider does not guarantee no training on customer data\"\n          );\n          complianceScore -= 40;\n        }\n\n        if (!agreement.dataProcessingAgreement) {\n          violations.push(\"No valid Data Processing Agreement\");\n          complianceScore -= 30;\n        }\n\n        if (!agreement.gdprCompliant) {\n          violations.push(\"Provider is not GDPR compliant\");\n          complianceScore -= 25;\n        }\n      } else {\n        violations.push(`No agreement found for provider: ${provider}`);\n        complianceScore = 0;\n      }\n\n      // Determine if request should be allowed\n      let allowed = true;\n\n      if (this.config.enforceCompliance) {\n        if (\n          this.config.blockOnMissingAgreements &&\n          agreementStatus === \"missing\"\n        ) {\n          allowed = false;\n        }\n\n        if (\n          this.config.blockOnExpiredAgreements &&\n          agreementStatus === \"expired\"\n        ) {\n          allowed = false;\n        }\n\n        if (this.config.blockOnViolations && violations.length > 0) {\n          allowed = false;\n        }\n      }\n\n      const result: ComplianceCheckResult = {\n        allowed,\n        provider,\n        violations,\n        warnings,\n        complianceScore: Math.max(0, complianceScore),\n        agreementStatus,\n        lastVerified: agreement?.lastVerified || \"never\",\n      };\n\n      // Log compliance check to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"compliance_check\",\n        requestId,\n        provider,\n        complianceStatus: allowed ? \"compliant\" : \"violation\",\n        metadata: {\n          complianceScore: result.complianceScore,\n          agreementStatus: result.agreementStatus,\n          violationsCount: violations.length,\n          warningsCount: warnings.length,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      this.logger.info(\"Compliance check completed\", {\n        requestId,\n        provider,\n        allowed,\n        complianceScore: result.complianceScore,\n        violations: violations.length,\n        warnings: warnings.length,\n        processingTimeMs: Date.now() - startTime,\n      });\n\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      this.logger.error(\"Compliance check failed\", {\n        requestId,\n        provider,\n        error: errorMessage,\n      });\n\n      // Log error to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"compliance_check\",\n        requestId,\n        provider,\n        complianceStatus: \"violation\",\n        error: {\n          type: \"compliance_check_error\",\n          message: errorMessage,\n        },\n      });\n\n      // Return restrictive result on error\n      return {\n        allowed: false,\n        provider,\n        violations: [`Compliance check failed: ${errorMessage}`],\n        warnings: [],\n        complianceScore: 0,\n        agreementStatus: \"missing\",\n        lastVerified: \"never\",\n      };\n    }\n  }\n\n  /**\n   * Enforce compliance for AI request\n   */\n  async enforceCompliance(\n    request: AiRequest,\n    provider: Provider,\n    requestId: string\n  ): Promise<void> {\n    const complianceResult = await this.performComplianceCheck(\n      request,\n      provider,\n      requestId\n    );\n\n    if (!complianceResult.allowed) {\n      const errorMessage = `Compliance violation prevents AI request: ${complianceResult.violations.join(\n        \", \"\n      )}`;\n\n      // Record compliance violation\n      await this.providerCompliance.recordViolation({\n        providerId: provider,\n        violationType:\n          complianceResult.agreementStatus === \"missing\"\n            ? \"unauthorized_access\"\n            : complianceResult.agreementStatus === \"expired\"\n            ? \"agreement_expired\"\n            : \"training_detected\",\n        severity: \"high\",\n        description: `AI request blocked due to compliance violation`,\n        evidence: `Request ID: ${requestId}, Violations: ${complianceResult.violations.join(\n          \", \"\n        )}`,\n      });\n\n      throw new Error(errorMessage);\n    }\n\n    // Log warnings if any\n    if (complianceResult.warnings.length > 0) {\n      this.logger.warn(\"Compliance warnings detected\", {\n        requestId,\n        provider,\n        warnings: complianceResult.warnings,\n      });\n    }\n  }\n\n  /**\n   * Wrap AI response with compliance metadata\n   */\n  async wrapResponseWithCompliance(\n    response: AiResponse,\n    complianceResult: ComplianceCheckResult\n  ): Promise<AiResponse> {\n    return {\n      ...response,\n      metadata: {\n        ...response.metadata,\n        compliance: {\n          checked: true,\n          score: complianceResult.complianceScore,\n          agreementStatus: complianceResult.agreementStatus,\n          lastVerified: complianceResult.lastVerified,\n          violations: complianceResult.violations.length,\n          warnings: complianceResult.warnings.length,\n        },\n      },\n    };\n  }\n\n  /**\n   * Get compliance summary for monitoring\n   */\n  async getComplianceSummary(): Promise<{\n    overallCompliance: \"compliant\" | \"warning\" | \"non_compliant\";\n    providers: Array<{\n      provider: Provider;\n      compliant: boolean;\n      score: number;\n      agreementStatus: string;\n      lastVerified: string;\n    }>;\n    recentViolations: number;\n    pendingActions: number;\n  }> {\n    const providers: Provider[] = [\"bedrock\", \"google\", \"meta\"];\n    const providerSummaries = [];\n    let totalScore = 0;\n    let compliantProviders = 0;\n\n    for (const provider of providers) {\n      const complianceResult =\n        await this.providerCompliance.verifyProviderCompliance(provider);\n      const agreement = complianceResult.agreement;\n\n      let score = 100;\n      if (complianceResult.violations.length > 0) {\n        score = Math.max(0, 100 - complianceResult.violations.length * 25);\n      }\n      if (complianceResult.warnings.length > 0) {\n        score = Math.max(0, score - complianceResult.warnings.length * 10);\n      }\n\n      const compliant = complianceResult.compliant && score >= 80;\n      if (compliant) compliantProviders++;\n      totalScore += score;\n\n      providerSummaries.push({\n        provider,\n        compliant,\n        score,\n        agreementStatus: agreement\n          ? new Date() > new Date(agreement.expiryDate)\n            ? \"expired\"\n            : \"active\"\n          : \"missing\",\n        lastVerified: agreement?.lastVerified || \"never\",\n      });\n    }\n\n    const averageScore = totalScore / providers.length;\n    const overallCompliance =\n      averageScore >= 95\n        ? \"compliant\"\n        : averageScore >= 80\n        ? \"warning\"\n        : \"non_compliant\";\n\n    // Get recent violations (last 7 days)\n    const violations = this.providerCompliance.getAllViolations();\n    const recentViolations = violations.filter((v) => {\n      const violationDate = new Date(v.timestamp);\n      const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n      return violationDate > weekAgo && v.status === \"open\";\n    }).length;\n\n    // Count pending actions (expiring agreements)\n    const agreements = this.providerCompliance.getAllAgreements();\n    const pendingActions = agreements.filter((a) => {\n      const expiryDate = new Date(a.expiryDate);\n      const daysUntilExpiry =\n        (expiryDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24);\n      return daysUntilExpiry <= 90 && daysUntilExpiry > 0;\n    }).length;\n\n    return {\n      overallCompliance,\n      providers: providerSummaries,\n      recentViolations,\n      pendingActions,\n    };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(newConfig: Partial<ComplianceEnforcementConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n\n    this.logger.info(\"Compliance configuration updated\", {\n      config: this.config,\n    });\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): ComplianceEnforcementConfig {\n    return { ...this.config };\n  }\n}\n\n// Singleton instance\nexport const complianceIntegration = new ComplianceIntegration();\n"],"mappings":"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","ignoreList":[]}