{"version":3,"names":["cov_2g5rrd0boy","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","url_1","require","DEFAULT_ALLOWED_DOMAINS","SSRFProtectionValidator","constructor","config","Object","assign","allowedDomains","allowedProtocols","blockMetadataEndpoints","blockPrivateIPs","blockLocalhost","blockIPv6Private","blockDangerousProtocols","enableDNSRebindingProtection","enableRedirectionProtection","maxRedirects","auditTrail","validateUrl","url","requestId","timestamp","Date","parsedUrl","URL","hostname","toLowerCase","protocol","includes","result","allowed","reason","join","blockedCategory","logSSRFViolation","metadataCheck","checkMetadataEndpoint","localhostCheck","checkLocalhost","privateIPCheck","checkPrivateIPRange","ipv6Check","checkIPv6Private","dangerousProtocolCheck","checkDangerousProtocols","dnsRebindingCheck","checkDNSRebinding","domainCheck","checkDomainWhitelist","logSSRFValidation","error","Error","message","metadataEndpoints","ipv4Regex","ipMatch","match","a","c","d","map","Number","localhostPatterns","startsWith","dangerousProtocols","isAllowed","some","allowedDomain","endsWith","slice","suspiciousPatterns","pattern","test","logEvent","eventType","provider","complianceStatus","metadata","toISOString","updateConfig","getConfig","addAllowedDomain","domain","push","removeAllowedDomain","filter","getAllowedDomains","exports"],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/ssrf-protection-validator.ts"],"sourcesContent":["/**\n * SSRF Protection Validator for Direct Bedrock Client\n *\n * This module provides comprehensive Server-Side Request Forgery (SSRF) protection\n * for the Direct Bedrock Client, ensuring that all external requests are validated\n * against security policies and blocked if they pose SSRF risks.\n *\n * Security Features:\n * - Protocol validation (HTTPS only)\n * - Metadata endpoint blocking (169.254.169.254, metadata.google.internal)\n * - Private IP range blocking (RFC1918: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16)\n * - Localhost blocking (127.0.0.0/8, ::1)\n * - IPv6 private range blocking (fc00::/7, fd00::/8)\n * - Dangerous protocol detection (file://, gopher://, ftp://)\n * - Domain whitelist enforcement\n * - URL redirection protection\n * - DNS rebinding protection\n */\n\nimport { URL } from \"url\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\n\n// SSRF Validation Result\nexport interface SSRFValidationResult {\n  allowed: boolean;\n  reason?: string;\n  blockedCategory?:\n    | \"protocol\"\n    | \"metadata\"\n    | \"private_ip\"\n    | \"localhost\"\n    | \"ipv6_private\"\n    | \"dangerous_protocol\"\n    | \"domain_not_allowed\"\n    | \"invalid_url\"\n    | \"dns_rebinding\"\n    | \"url_redirection\";\n  url: string;\n  hostname: string;\n  protocol: string;\n  timestamp: Date;\n}\n\n// SSRF Protection Configuration\nexport interface SSRFProtectionConfig {\n  allowedDomains: string[];\n  allowedProtocols: string[];\n  blockMetadataEndpoints: boolean;\n  blockPrivateIPs: boolean;\n  blockLocalhost: boolean;\n  blockIPv6Private: boolean;\n  blockDangerousProtocols: boolean;\n  enableDNSRebindingProtection: boolean;\n  enableRedirectionProtection: boolean;\n  maxRedirects: number;\n  auditTrail?: AuditTrailSystem;\n}\n\n// Default allowed domains for Bedrock operations\nconst DEFAULT_ALLOWED_DOMAINS = [\n  // AWS Bedrock endpoints\n  \"bedrock-runtime.eu-central-1.amazonaws.com\",\n  \"bedrock-runtime.us-east-1.amazonaws.com\",\n  \"bedrock-runtime.us-west-2.amazonaws.com\",\n  \"bedrock.eu-central-1.amazonaws.com\",\n  \"bedrock.us-east-1.amazonaws.com\",\n  \"bedrock.us-west-2.amazonaws.com\",\n\n  // Google APIs (for integration)\n  \"google.com\",\n  \"www.google.com\",\n  \"googleapis.com\",\n  \"trends.google.com\",\n  \"maps.googleapis.com\",\n  \"places.googleapis.com\",\n\n  // Social Media APIs (for integration)\n  \"instagram.com\",\n  \"www.instagram.com\",\n  \"facebook.com\",\n  \"www.facebook.com\",\n  \"graph.facebook.com\",\n\n  // Review Platforms (for integration)\n  \"tripadvisor.com\",\n  \"www.tripadvisor.com\",\n  \"yelp.com\",\n  \"www.yelp.com\",\n];\n\n/**\n * SSRF Protection Validator\n */\nexport class SSRFProtectionValidator {\n  private config: SSRFProtectionConfig;\n  private auditTrail?: AuditTrailSystem;\n\n  constructor(config?: Partial<SSRFProtectionConfig>) {\n    this.config = {\n      allowedDomains: DEFAULT_ALLOWED_DOMAINS,\n      allowedProtocols: [\"https:\"],\n      blockMetadataEndpoints: true,\n      blockPrivateIPs: true,\n      blockLocalhost: true,\n      blockIPv6Private: true,\n      blockDangerousProtocols: true,\n      enableDNSRebindingProtection: true,\n      enableRedirectionProtection: true,\n      maxRedirects: 3,\n      ...config,\n    };\n\n    this.auditTrail = this.config.auditTrail;\n  }\n\n  /**\n   * Validate URL against SSRF protection rules\n   */\n  async validateUrl(\n    url: string,\n    requestId?: string\n  ): Promise<SSRFValidationResult> {\n    const timestamp = new Date();\n\n    try {\n      // Parse URL\n      const parsedUrl = new URL(url);\n      const hostname = parsedUrl.hostname.toLowerCase();\n      const protocol = parsedUrl.protocol;\n\n      // 1. Protocol Validation\n      if (!this.config.allowedProtocols.includes(protocol)) {\n        const result: SSRFValidationResult = {\n          allowed: false,\n          reason: `Protocol ${protocol} is not allowed. Only ${this.config.allowedProtocols.join(\n            \", \"\n          )} are permitted.`,\n          blockedCategory: \"protocol\",\n          url,\n          hostname,\n          protocol,\n          timestamp,\n        };\n\n        await this.logSSRFViolation(result, requestId);\n        return result;\n      }\n\n      // 2. Metadata Endpoint Protection\n      if (this.config.blockMetadataEndpoints) {\n        const metadataCheck = this.checkMetadataEndpoint(hostname);\n        if (!metadataCheck.allowed) {\n          const result: SSRFValidationResult = {\n            allowed: false,\n            reason: metadataCheck.reason,\n            blockedCategory: \"metadata\",\n            url,\n            hostname,\n            protocol,\n            timestamp,\n          };\n\n          await this.logSSRFViolation(result, requestId);\n          return result;\n        }\n      }\n\n      // 3. Localhost Protection (check before private IP to catch 0.0.0.0 and 127.0.0.0/8)\n      if (this.config.blockLocalhost) {\n        const localhostCheck = this.checkLocalhost(hostname);\n        if (!localhostCheck.allowed) {\n          const result: SSRFValidationResult = {\n            allowed: false,\n            reason: localhostCheck.reason,\n            blockedCategory: \"localhost\",\n            url,\n            hostname,\n            protocol,\n            timestamp,\n          };\n\n          await this.logSSRFViolation(result, requestId);\n          return result;\n        }\n      }\n\n      // 4. Private IP Range Protection\n      if (this.config.blockPrivateIPs) {\n        const privateIPCheck = this.checkPrivateIPRange(hostname);\n        if (!privateIPCheck.allowed) {\n          const result: SSRFValidationResult = {\n            allowed: false,\n            reason: privateIPCheck.reason,\n            blockedCategory: \"private_ip\",\n            url,\n            hostname,\n            protocol,\n            timestamp,\n          };\n\n          await this.logSSRFViolation(result, requestId);\n          return result;\n        }\n      }\n\n      // 5. IPv6 Private Range Protection\n      if (this.config.blockIPv6Private) {\n        const ipv6Check = this.checkIPv6Private(hostname);\n        if (!ipv6Check.allowed) {\n          const result: SSRFValidationResult = {\n            allowed: false,\n            reason: ipv6Check.reason,\n            blockedCategory: \"ipv6_private\",\n            url,\n            hostname,\n            protocol,\n            timestamp,\n          };\n\n          await this.logSSRFViolation(result, requestId);\n          return result;\n        }\n      }\n\n      // 6. Dangerous Protocol Detection\n      if (this.config.blockDangerousProtocols) {\n        const dangerousProtocolCheck = this.checkDangerousProtocols(\n          hostname,\n          url\n        );\n        if (!dangerousProtocolCheck.allowed) {\n          const result: SSRFValidationResult = {\n            allowed: false,\n            reason: dangerousProtocolCheck.reason,\n            blockedCategory: \"dangerous_protocol\",\n            url,\n            hostname,\n            protocol,\n            timestamp,\n          };\n\n          await this.logSSRFViolation(result, requestId);\n          return result;\n        }\n      }\n\n      // 7. DNS Rebinding Protection (check before domain whitelist)\n      if (this.config.enableDNSRebindingProtection) {\n        const dnsRebindingCheck = await this.checkDNSRebinding(hostname);\n        if (!dnsRebindingCheck.allowed) {\n          const result: SSRFValidationResult = {\n            allowed: false,\n            reason: dnsRebindingCheck.reason,\n            blockedCategory: \"dns_rebinding\",\n            url,\n            hostname,\n            protocol,\n            timestamp,\n          };\n\n          await this.logSSRFViolation(result, requestId);\n          return result;\n        }\n      }\n\n      // 8. Domain Whitelist Enforcement (last check)\n      const domainCheck = this.checkDomainWhitelist(hostname);\n      if (!domainCheck.allowed) {\n        const result: SSRFValidationResult = {\n          allowed: false,\n          reason: domainCheck.reason,\n          blockedCategory: \"domain_not_allowed\",\n          url,\n          hostname,\n          protocol,\n          timestamp,\n        };\n\n        await this.logSSRFViolation(result, requestId);\n        return result;\n      }\n\n      // All checks passed\n      const result: SSRFValidationResult = {\n        allowed: true,\n        url,\n        hostname,\n        protocol,\n        timestamp,\n      };\n\n      await this.logSSRFValidation(result, requestId);\n      return result;\n    } catch (error) {\n      const result: SSRFValidationResult = {\n        allowed: false,\n        reason: `Invalid URL format: ${\n          error instanceof Error ? error.message : \"Unknown error\"\n        }`,\n        blockedCategory: \"invalid_url\",\n        url,\n        hostname: \"\",\n        protocol: \"\",\n        timestamp,\n      };\n\n      await this.logSSRFViolation(result, requestId);\n      return result;\n    }\n  }\n\n  /**\n   * Check for metadata endpoints\n   */\n  private checkMetadataEndpoint(hostname: string): {\n    allowed: boolean;\n    reason?: string;\n  } {\n    const metadataEndpoints = [\n      \"169.254.169.254\", // AWS/Azure/GCP metadata\n      \"metadata.google.internal\", // GCP metadata\n      \"metadata\", // Generic metadata\n      \"169.254.169.253\", // AWS Time Sync Service\n    ];\n\n    if (metadataEndpoints.includes(hostname)) {\n      return {\n        allowed: false,\n        reason: `Metadata endpoint ${hostname} is blocked for security reasons`,\n      };\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Check for private IP ranges (RFC1918)\n   */\n  private checkPrivateIPRange(hostname: string): {\n    allowed: boolean;\n    reason?: string;\n  } {\n    const ipv4Regex = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\n    const ipMatch = hostname.match(ipv4Regex);\n\n    if (ipMatch) {\n      const [, a, b, c, d] = ipMatch.map(Number);\n\n      // Validate IP octets\n      if (a > 255 || b > 255 || c > 255 || d > 255) {\n        return { allowed: false, reason: \"Invalid IP address format\" };\n      }\n\n      // 10.0.0.0/8\n      if (a === 10) {\n        return {\n          allowed: false,\n          reason: \"Private IP range 10.0.0.0/8 is blocked\",\n        };\n      }\n\n      // 172.16.0.0/12\n      if (a === 172 && b >= 16 && b <= 31) {\n        return {\n          allowed: false,\n          reason: \"Private IP range 172.16.0.0/12 is blocked\",\n        };\n      }\n\n      // 192.168.0.0/16\n      if (a === 192 && b === 168) {\n        return {\n          allowed: false,\n          reason: \"Private IP range 192.168.0.0/16 is blocked\",\n        };\n      }\n\n      // 100.64.0.0/10 (Carrier-grade NAT)\n      if (a === 100 && b >= 64 && b <= 127) {\n        return {\n          allowed: false,\n          reason: \"Carrier-grade NAT range 100.64.0.0/10 is blocked\",\n        };\n      }\n\n      // 169.254.0.0/16 (Link-local)\n      if (a === 169 && b === 254) {\n        return {\n          allowed: false,\n          reason: \"Link-local range 169.254.0.0/16 is blocked\",\n        };\n      }\n\n      // 224.0.0.0/4 (Multicast)\n      if (a >= 224 && a <= 239) {\n        return {\n          allowed: false,\n          reason: \"Multicast range 224.0.0.0/4 is blocked\",\n        };\n      }\n\n      // 240.0.0.0/4 (Reserved)\n      if (a >= 240) {\n        return {\n          allowed: false,\n          reason: \"Reserved range 240.0.0.0/4 is blocked\",\n        };\n      }\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Check for localhost\n   */\n  private checkLocalhost(hostname: string): {\n    allowed: boolean;\n    reason?: string;\n  } {\n    const localhostPatterns = [\n      \"localhost\",\n      \"127.0.0.1\",\n      \"0.0.0.0\",\n      \"::1\",\n      \"0:0:0:0:0:0:0:1\",\n    ];\n\n    // Check exact matches\n    if (localhostPatterns.includes(hostname)) {\n      return { allowed: false, reason: `Localhost ${hostname} is blocked` };\n    }\n\n    // Check 127.0.0.0/8 range\n    const ipv4Regex = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\n    const ipMatch = hostname.match(ipv4Regex);\n    if (ipMatch) {\n      const [, a] = ipMatch.map(Number);\n      if (a === 127) {\n        return {\n          allowed: false,\n          reason: \"Localhost range 127.0.0.0/8 is blocked\",\n        };\n      }\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Check for IPv6 private ranges\n   */\n  private checkIPv6Private(hostname: string): {\n    allowed: boolean;\n    reason?: string;\n  } {\n    // IPv6 localhost\n    if (hostname === \"::1\" || hostname === \"0:0:0:0:0:0:0:1\") {\n      return { allowed: false, reason: \"IPv6 localhost is blocked\" };\n    }\n\n    // IPv6 private ranges (fc00::/7 and fd00::/8)\n    if (hostname.startsWith(\"fc00:\") || hostname.startsWith(\"fd00:\")) {\n      return { allowed: false, reason: \"IPv6 private range is blocked\" };\n    }\n\n    // IPv6 link-local (fe80::/10)\n    if (hostname.startsWith(\"fe80:\")) {\n      return { allowed: false, reason: \"IPv6 link-local range is blocked\" };\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Check for dangerous protocols\n   */\n  private checkDangerousProtocols(\n    hostname: string,\n    url: string\n  ): { allowed: boolean; reason?: string } {\n    const dangerousProtocols = [\n      \"file:\",\n      \"gopher:\",\n      \"ftp:\",\n      \"dict:\",\n      \"ldap:\",\n      \"tftp:\",\n    ];\n\n    // Check hostname for embedded protocols\n    for (const protocol of dangerousProtocols) {\n      if (hostname.includes(protocol) || url.toLowerCase().includes(protocol)) {\n        return {\n          allowed: false,\n          reason: `Dangerous protocol ${protocol} detected and blocked`,\n        };\n      }\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Check domain whitelist\n   */\n  private checkDomainWhitelist(hostname: string): {\n    allowed: boolean;\n    reason?: string;\n  } {\n    const isAllowed = this.config.allowedDomains.some((allowedDomain) => {\n      return (\n        hostname === allowedDomain || hostname.endsWith(\".\" + allowedDomain)\n      );\n    });\n\n    if (!isAllowed) {\n      return {\n        allowed: false,\n        reason: `Domain ${hostname} is not in the allowed list. Allowed domains: ${this.config.allowedDomains\n          .slice(0, 5)\n          .join(\", \")}...`,\n      };\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Check for DNS rebinding attacks\n   */\n  private async checkDNSRebinding(\n    hostname: string\n  ): Promise<{ allowed: boolean; reason?: string }> {\n    // DNS rebinding protection: ensure hostname doesn't resolve to private IPs\n    // This is a simplified check - in production, you'd want to perform actual DNS resolution\n    // and verify the resolved IP addresses\n\n    // For now, we'll do basic pattern matching\n    const suspiciousPatterns = [\n      /\\d+\\.\\d+\\.\\d+\\.\\d+\\.xip\\.io$/,\n      /\\d+\\.\\d+\\.\\d+\\.\\d+\\.nip\\.io$/,\n      /\\d+\\.\\d+\\.\\d+\\.\\d+\\.sslip\\.io$/,\n    ];\n\n    for (const pattern of suspiciousPatterns) {\n      if (pattern.test(hostname)) {\n        return {\n          allowed: false,\n          reason: `Potential DNS rebinding attack detected: ${hostname}`,\n        };\n      }\n    }\n\n    return { allowed: true };\n  }\n\n  /**\n   * Log SSRF violation to audit trail\n   */\n  private async logSSRFViolation(\n    result: SSRFValidationResult,\n    requestId?: string\n  ): Promise<void> {\n    if (!this.auditTrail) return;\n\n    await this.auditTrail.logEvent({\n      eventType: \"ssrf_violation\",\n      requestId: requestId || \"unknown\",\n      provider: \"bedrock\",\n      complianceStatus: \"violation\",\n      metadata: {\n        url: result.url,\n        hostname: result.hostname,\n        protocol: result.protocol,\n        blockedCategory: result.blockedCategory,\n        reason: result.reason,\n        timestamp: result.timestamp.toISOString(),\n      },\n    });\n  }\n\n  /**\n   * Log successful SSRF validation to audit trail\n   */\n  private async logSSRFValidation(\n    result: SSRFValidationResult,\n    requestId?: string\n  ): Promise<void> {\n    if (!this.auditTrail) return;\n\n    await this.auditTrail.logEvent({\n      eventType: \"ssrf_validation\",\n      requestId: requestId || \"unknown\",\n      provider: \"bedrock\",\n      complianceStatus: \"compliant\",\n      metadata: {\n        url: result.url,\n        hostname: result.hostname,\n        protocol: result.protocol,\n        timestamp: result.timestamp.toISOString(),\n      },\n    });\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(config: Partial<SSRFProtectionConfig>): void {\n    this.config = { ...this.config, ...config };\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): SSRFProtectionConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Add allowed domain\n   */\n  addAllowedDomain(domain: string): void {\n    if (!this.config.allowedDomains.includes(domain)) {\n      this.config.allowedDomains.push(domain);\n    }\n  }\n\n  /**\n   * Remove allowed domain\n   */\n  removeAllowedDomain(domain: string): void {\n    this.config.allowedDomains = this.config.allowedDomains.filter(\n      (d) => d !== domain\n    );\n  }\n\n  /**\n   * Get allowed domains\n   */\n  getAllowedDomains(): string[] {\n    return [...this.config.allowedDomains];\n  }\n}\n"],"mappings":"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","ignoreList":[]}