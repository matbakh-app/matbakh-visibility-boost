{"file":"/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/audit-trail-system.ts","mappings":"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","names":[],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/audit-trail-system.ts"],"sourcesContent":["/**\n * AI Operations Audit Trail System\n *\n * Comprehensive audit logging for all AI operations with GDPR compliance\n * Provides structured audit logs for compliance reporting and security monitoring\n */\n\nimport { BasicLogger } from \"./basic-logger\";\nimport { SafetyCheckResult } from \"./safety/guardrails-service\";\nimport { AiRequest, AiResponse, Provider, RouterInputContext } from \"./types\";\n\nexport type AuditEventType =\n  | \"ai_request_start\"\n  | \"ai_request_complete\"\n  | \"ai_request_error\"\n  | \"provider_selection\"\n  | \"provider_fallback\"\n  | \"safety_check\"\n  | \"pii_detection\"\n  | \"content_filtering\"\n  | \"cache_operation\"\n  | \"cost_tracking\"\n  | \"cost_optimization\"\n  | \"cost_aware_routing\"\n  | \"performance_metrics\"\n  | \"compliance_violation\"\n  | \"data_retention\"\n  | \"user_consent\"\n  // Hybrid routing specific events\n  | \"hybrid_routing_decision\"\n  | \"direct_bedrock_operation\"\n  | \"mcp_routing_operation\"\n  | \"intelligent_routing_fallback\"\n  | \"route_health_check\"\n  | \"routing_optimization\"\n  | \"hybrid_compliance_validation\"\n  | \"emergency_pii_redaction\"\n  | \"gdpr_compliance_validation\"\n  | \"pii_redaction\"\n  // MCP fallback reliability events\n  | \"mcp_fallback_initiation\"\n  | \"mcp_fallback_completion\"\n  | \"mcp_fallback_reliability_issue\";\n\nexport type ComplianceStatus =\n  | \"compliant\"\n  | \"violation\"\n  | \"warning\"\n  | \"pending\";\n\nexport interface AuditEvent {\n  // Core identification\n  eventId: string;\n  timestamp: string;\n  eventType: AuditEventType;\n  requestId: string;\n\n  // User and context\n  userId?: string;\n  tenantId?: string;\n  sessionId?: string;\n\n  // AI operation details\n  provider?: Provider;\n  modelId?: string;\n  operation?: string;\n\n  // Content metadata (no actual content for privacy)\n  contentHash?: string;\n  contentLength?: number;\n  contentType?: \"prompt\" | \"response\" | \"tool_call\" | \"system_message\";\n\n  // Performance and cost\n  latencyMs?: number;\n  costEuro?: number;\n  tokensUsed?: {\n    input: number;\n    output: number;\n  };\n\n  // Safety and compliance\n  safetyCheckResult?: {\n    allowed: boolean;\n    confidence: number;\n    violationTypes: string[];\n    processingTimeMs: number;\n  };\n\n  // PII and data protection\n  piiDetected?: boolean;\n  piiTypes?: string[];\n  dataClassification?: \"public\" | \"internal\" | \"confidential\" | \"restricted\";\n  retentionPolicy?: string;\n\n  // Compliance tracking\n  complianceStatus: ComplianceStatus;\n  gdprLawfulBasis?: string;\n  consentId?: string;\n  dataProcessingPurpose?: string;\n\n  // Error handling\n  error?: {\n    type: string;\n    message: string;\n    code?: string;\n  };\n\n  // Hybrid routing specific fields\n  routingDecision?: {\n    selectedRoute: \"direct\" | \"mcp\";\n    reason: string;\n    fallbackAvailable: boolean;\n    estimatedLatency: number;\n    correlationId: string;\n    primaryRouteHealth?: boolean;\n    fallbackRouteHealth?: boolean;\n  };\n\n  // Route health information\n  routeHealth?: {\n    route: \"direct\" | \"mcp\";\n    isHealthy: boolean;\n    latencyMs: number;\n    successRate: number;\n    consecutiveFailures: number;\n  };\n\n  // Additional metadata\n  metadata?: Record<string, any>;\n\n  // Audit trail integrity\n  previousEventHash?: string;\n  eventHash: string;\n}\n\nexport interface AuditTrailConfig {\n  enableAuditTrail: boolean;\n  enableIntegrityChecking: boolean;\n  enablePIILogging: boolean;\n  retentionDays: number;\n  complianceMode: \"strict\" | \"standard\" | \"minimal\";\n  encryptionEnabled: boolean;\n  anonymizationEnabled: boolean;\n}\n\nexport interface ComplianceReport {\n  reportId: string;\n  generatedAt: string;\n  timeRange: {\n    start: string;\n    end: string;\n  };\n  summary: {\n    totalEvents: number;\n    complianceViolations: number;\n    piiDetections: number;\n    safetyBlocks: number;\n    averageLatency: number;\n    totalCost: number;\n  };\n  violations: AuditEvent[];\n  recommendations: string[];\n}\n\n/**\n * Audit Trail System for AI Operations\n */\nexport class AuditTrailSystem {\n  private logger: BasicLogger;\n  private config: AuditTrailConfig;\n  private lastEventHash: string = \"\";\n  private eventCounter: number = 0;\n\n  constructor(config: Partial<AuditTrailConfig> = {}) {\n    this.config = {\n      enableAuditTrail: true,\n      enableIntegrityChecking: true,\n      enablePIILogging: false, // GDPR compliance - no PII in logs by default\n      retentionDays: 90,\n      complianceMode: \"standard\",\n      encryptionEnabled: true,\n      anonymizationEnabled: true,\n      ...config,\n    };\n\n    this.logger = new BasicLogger(\"audit-trail-system\");\n  }\n\n  /**\n   * Log AI request start\n   */\n  async logRequestStart(\n    requestId: string,\n    request: AiRequest,\n    userId?: string,\n    tenantId?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"ai_request_start\",\n      requestId,\n      userId: this.config.anonymizationEnabled\n        ? this.hashUserId(userId)\n        : userId,\n      tenantId,\n      contentHash: await this.hashContent(request.prompt),\n      contentLength: request.prompt.length,\n      contentType: \"prompt\",\n      dataClassification: this.classifyContent(request.context),\n      complianceStatus: \"pending\",\n      gdprLawfulBasis: this.determineLawfulBasis(request.context),\n      dataProcessingPurpose: \"ai_analysis\",\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"AI request audit logged\", {\n      requestId,\n      eventId: event.eventId,\n      eventType: event.eventType,\n    });\n  }\n\n  /**\n   * Log provider selection decision\n   */\n  async logProviderSelection(\n    requestId: string,\n    selectedProvider: Provider,\n    modelId: string,\n    reason: string,\n    alternatives?: Provider[]\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"provider_selection\",\n      requestId,\n      provider: selectedProvider,\n      modelId,\n      operation: \"provider_routing\",\n      complianceStatus: \"compliant\",\n      metadata: {\n        selectionReason: reason,\n        alternativeProviders: alternatives,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log safety check results\n   */\n  async logSafetyCheck(\n    requestId: string,\n    provider: Provider,\n    safetyResult: SafetyCheckResult,\n    contentType: \"prompt\" | \"response\"\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"safety_check\",\n      requestId,\n      provider,\n      contentType,\n      safetyCheckResult: {\n        allowed: safetyResult.allowed,\n        confidence: safetyResult.confidence,\n        violationTypes: safetyResult.violations.map((v) => v.type),\n        processingTimeMs: safetyResult.processingTimeMs,\n      },\n      complianceStatus: safetyResult.allowed ? \"compliant\" : \"violation\",\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    // Log PII detection if found\n    const piiViolations = safetyResult.violations.filter(\n      (v) => v.type === \"PII\"\n    );\n    if (piiViolations.length > 0) {\n      event.piiDetected = true;\n      event.piiTypes = piiViolations.map((v) => v.details);\n      event.eventType = \"pii_detection\";\n    }\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    // Log compliance violation if safety check failed\n    if (!safetyResult.allowed) {\n      await this.logComplianceViolation(requestId, \"safety_violation\", {\n        violations: safetyResult.violations,\n        provider,\n      });\n    }\n  }\n\n  /**\n   * Log AI request completion\n   */\n  async logRequestComplete(\n    requestId: string,\n    response: AiResponse,\n    userId?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"ai_request_complete\",\n      requestId,\n      userId: this.config.anonymizationEnabled\n        ? this.hashUserId(userId)\n        : userId,\n      provider: response.provider,\n      modelId: response.modelId,\n      contentHash: response.text\n        ? await this.hashContent(response.text)\n        : undefined,\n      contentLength: response.text?.length,\n      contentType: \"response\",\n      latencyMs: response.latencyMs,\n      costEuro: response.costEuro,\n      tokensUsed: response.success\n        ? {\n            input: 0, // Would need to be passed from request\n            output: response.text?.split(\" \").length || 0,\n          }\n        : undefined,\n      complianceStatus: response.success ? \"compliant\" : \"violation\",\n      error: response.error\n        ? {\n            type: \"ai_response_error\",\n            message: response.error,\n          }\n        : undefined,\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log provider fallback\n   */\n  async logProviderFallback(\n    requestId: string,\n    fromProvider: Provider,\n    toProvider: Provider,\n    reason: string,\n    error?: Error\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"provider_fallback\",\n      requestId,\n      provider: fromProvider,\n      operation: \"fallback_routing\",\n      complianceStatus: \"warning\",\n      error: error\n        ? {\n            type: error.name,\n            message: error.message,\n          }\n        : undefined,\n      metadata: {\n        fromProvider,\n        toProvider,\n        fallbackReason: reason,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log compliance violation\n   */\n  async logComplianceViolation(\n    requestId: string,\n    violationType: string,\n    details: Record<string, any>\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"compliance_violation\",\n      requestId,\n      complianceStatus: \"violation\",\n      metadata: {\n        violationType,\n        details,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    // Alert on compliance violations\n    this.logger.error(\"Compliance violation detected\", undefined, {\n      requestId,\n      violationType,\n      eventId: event.eventId,\n    });\n  }\n\n  /**\n   * Log cost tracking\n   */\n  async logCostTracking(\n    requestId: string,\n    provider: Provider,\n    modelId: string,\n    costEuro: number,\n    tokensUsed: { input: number; output: number }\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_tracking\",\n      requestId,\n      provider,\n      modelId,\n      costEuro,\n      tokensUsed,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log hybrid routing decision\n   */\n  async logHybridRoutingDecision(\n    requestId: string,\n    routingDecision: {\n      selectedRoute: \"direct\" | \"mcp\";\n      reason: string;\n      fallbackAvailable: boolean;\n      estimatedLatency: number;\n      correlationId: string;\n      primaryRouteHealth?: boolean;\n      fallbackRouteHealth?: boolean;\n    },\n    operationType: string,\n    priority: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"hybrid_routing_decision\",\n      requestId,\n      operation: \"hybrid_routing\",\n      routingDecision,\n      complianceStatus: \"compliant\",\n      metadata: {\n        operationType,\n        priority,\n        routingReason: routingDecision.reason,\n        selectedRoute: routingDecision.selectedRoute,\n        fallbackAvailable: routingDecision.fallbackAvailable,\n        estimatedLatency: routingDecision.estimatedLatency,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Hybrid routing decision logged\", {\n      requestId,\n      eventId: event.eventId,\n      selectedRoute: routingDecision.selectedRoute,\n      reason: routingDecision.reason,\n    });\n  }\n\n  /**\n   * Log direct Bedrock operation\n   */\n  async logDirectBedrockOperation(\n    requestId: string,\n    operationType: string,\n    priority: string,\n    latencyMs: number,\n    success: boolean,\n    tokensUsed?: { input: number; output: number },\n    costEuro?: number,\n    error?: string,\n    piiDetected?: boolean,\n    complianceValidation?: {\n      gdprCompliant: boolean;\n      piiRedacted: boolean;\n      auditLogged: boolean;\n    }\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"direct_bedrock_operation\",\n      requestId,\n      provider: \"bedrock\",\n      operation: operationType,\n      latencyMs,\n      tokensUsed,\n      costEuro,\n      piiDetected,\n      complianceStatus: success ? \"compliant\" : \"violation\",\n      error: error\n        ? {\n            type: \"direct_bedrock_error\",\n            message: error,\n          }\n        : undefined,\n      metadata: {\n        operationType,\n        priority,\n        routingPath: \"direct_bedrock\",\n        success,\n        gdprCompliant: complianceValidation?.gdprCompliant,\n        piiRedacted: complianceValidation?.piiRedacted,\n        auditLogged: complianceValidation?.auditLogged,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Direct Bedrock operation logged\", {\n      requestId,\n      eventId: event.eventId,\n      operationType,\n      success,\n      latencyMs,\n    });\n  }\n\n  /**\n   * Log MCP routing operation\n   */\n  async logMCPRoutingOperation(\n    requestId: string,\n    operationType: string,\n    priority: string,\n    latencyMs: number,\n    success: boolean,\n    queueSize?: number,\n    retryCount?: number,\n    error?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"mcp_routing_operation\",\n      requestId,\n      provider: \"bedrock\", // MCP routes to Bedrock\n      operation: operationType,\n      latencyMs,\n      complianceStatus: success ? \"compliant\" : \"violation\",\n      error: error\n        ? {\n            type: \"mcp_routing_error\",\n            message: error,\n          }\n        : undefined,\n      metadata: {\n        operationType,\n        priority,\n        routingPath: \"mcp_integration\",\n        success,\n        queueSize,\n        retryCount,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"MCP routing operation logged\", {\n      requestId,\n      eventId: event.eventId,\n      operationType,\n      success,\n      latencyMs,\n    });\n  }\n\n  /**\n   * Log intelligent routing fallback\n   */\n  async logIntelligentRoutingFallback(\n    requestId: string,\n    fromRoute: \"direct\" | \"mcp\",\n    toRoute: \"direct\" | \"mcp\",\n    reason: string,\n    operationType: string,\n    primaryError?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"intelligent_routing_fallback\",\n      requestId,\n      operation: \"routing_fallback\",\n      complianceStatus: \"warning\",\n      error: primaryError\n        ? {\n            type: \"primary_route_error\",\n            message: primaryError,\n          }\n        : undefined,\n      metadata: {\n        fromRoute,\n        toRoute,\n        fallbackReason: reason,\n        operationType,\n        primaryError,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.warn(\"Intelligent routing fallback logged\", {\n      requestId,\n      eventId: event.eventId,\n      fromRoute,\n      toRoute,\n      reason,\n    });\n  }\n\n  /**\n   * Log route health check\n   */\n  async logRouteHealthCheck(\n    route: \"direct\" | \"mcp\",\n    isHealthy: boolean,\n    latencyMs: number,\n    successRate: number,\n    consecutiveFailures: number,\n    error?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"route_health_check\",\n      requestId: `health-check-${route}-${Date.now()}`,\n      operation: \"health_monitoring\",\n      latencyMs,\n      routeHealth: {\n        route,\n        isHealthy,\n        latencyMs,\n        successRate,\n        consecutiveFailures,\n      },\n      complianceStatus: isHealthy ? \"compliant\" : \"warning\",\n      error: error\n        ? {\n            type: \"health_check_error\",\n            message: error,\n          }\n        : undefined,\n      metadata: {\n        route,\n        healthStatus: isHealthy ? \"healthy\" : \"unhealthy\",\n        successRate,\n        consecutiveFailures,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    if (!isHealthy) {\n      this.logger.warn(\"Route health check failed\", {\n        route,\n        eventId: event.eventId,\n        consecutiveFailures,\n        error,\n      });\n    }\n  }\n\n  /**\n   * Log routing optimization\n   */\n  async logRoutingOptimization(\n    recommendations: string[],\n    metrics: {\n      totalRequests: number;\n      directRouteUsage: number;\n      mcpRouteUsage: number;\n      fallbackUsage: number;\n      averageLatency: number;\n      successRate: number;\n    }\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"routing_optimization\",\n      requestId: `optimization-${Date.now()}`,\n      operation: \"routing_analysis\",\n      complianceStatus: \"compliant\",\n      metadata: {\n        recommendations,\n        totalRequests: metrics.totalRequests,\n        directRouteUsage: metrics.directRouteUsage,\n        mcpRouteUsage: metrics.mcpRouteUsage,\n        fallbackUsage: metrics.fallbackUsage,\n        averageLatency: metrics.averageLatency,\n        successRate: metrics.successRate,\n        directUsagePercent:\n          (metrics.directRouteUsage / metrics.totalRequests) * 100,\n        mcpUsagePercent: (metrics.mcpRouteUsage / metrics.totalRequests) * 100,\n        fallbackUsagePercent:\n          (metrics.fallbackUsage / metrics.totalRequests) * 100,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Routing optimization logged\", {\n      eventId: event.eventId,\n      recommendationsCount: recommendations.length,\n      totalRequests: metrics.totalRequests,\n    });\n  }\n\n  /**\n   * Log GDPR compliance validation for hybrid routing\n   */\n  async logGDPRComplianceValidation(\n    requestId: string,\n    routingPath: \"direct_bedrock\" | \"mcp_integration\",\n    operationType: string,\n    isCompliant: boolean,\n    reason?: string,\n    processingTimeMs?: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"gdpr_compliance_validation\",\n      requestId,\n      operation: \"gdpr_validation\",\n      complianceStatus: isCompliant ? \"compliant\" : \"violation\",\n      gdprLawfulBasis: isCompliant ? \"legitimate_interests\" : undefined,\n      error: !isCompliant\n        ? {\n            type: \"gdpr_compliance_error\",\n            message: reason || \"GDPR compliance validation failed\",\n          }\n        : undefined,\n      metadata: {\n        routingPath,\n        operationType,\n        gdprCompliant: isCompliant,\n        validationReason: reason,\n        processingTimeMs,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    if (!isCompliant) {\n      this.logger.error(\"GDPR compliance validation failed\", undefined, {\n        requestId,\n        eventId: event.eventId,\n        routingPath,\n        reason,\n      });\n    }\n  }\n\n  /**\n   * Log PII redaction for hybrid routing\n   */\n  async logPIIRedaction(\n    requestId: string,\n    routingPath: \"direct_bedrock\" | \"mcp_integration\",\n    operationType: string,\n    redactionApplied: boolean,\n    piiViolationsCount: number,\n    originalLength?: number,\n    redactedLength?: number,\n    isEmergencyRedaction?: boolean\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const eventType = isEmergencyRedaction\n      ? \"emergency_pii_redaction\"\n      : \"pii_redaction\";\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType,\n      requestId,\n      operation: \"pii_redaction\",\n      piiDetected: piiViolationsCount > 0,\n      complianceStatus: redactionApplied ? \"compliant\" : \"violation\",\n      gdprLawfulBasis: \"data_protection\",\n      metadata: {\n        routingPath,\n        operationType,\n        redactionApplied,\n        piiViolationsCount,\n        originalLength,\n        redactedLength,\n        isEmergencyRedaction,\n        redactionPercentage:\n          originalLength && redactedLength\n            ? ((originalLength - redactedLength) / originalLength) * 100\n            : 0,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"PII redaction logged\", {\n      requestId,\n      eventId: event.eventId,\n      routingPath,\n      redactionApplied,\n      piiViolationsCount,\n      isEmergencyRedaction,\n    });\n  }\n\n  /**\n   * Log MCP fallback initiation\n   */\n  async logMCPFallbackInitiation(\n    correlationId: string,\n    operation: string,\n    priority: string,\n    primaryFailureReason: string\n  ): Promise<void> {\n    const auditEvent = {\n      eventType: \"mcp_fallback_initiation\" as const,\n      requestId: correlationId,\n      timestamp: new Date(),\n      metadata: {\n        operation,\n        priority,\n        primaryFailureReason,\n        fallbackRoute: \"mcp\",\n      },\n    };\n\n    await this.logEvent(auditEvent);\n  }\n\n  /**\n   * Log MCP fallback completion\n   */\n  async logMCPFallbackCompletion(\n    correlationId: string,\n    success: boolean,\n    attempts: number,\n    totalLatency: number,\n    error?: string\n  ): Promise<void> {\n    const auditEvent = {\n      eventType: \"mcp_fallback_completion\" as const,\n      requestId: correlationId,\n      timestamp: new Date(),\n      metadata: {\n        success,\n        attempts,\n        totalLatency,\n        error,\n        fallbackRoute: \"mcp\",\n      },\n    };\n\n    await this.logEvent(auditEvent);\n  }\n\n  /**\n   * Log MCP fallback reliability issue\n   */\n  async logMCPFallbackReliabilityIssue(\n    currentSuccessRate: number,\n    targetSuccessRate: number,\n    recommendations: string[]\n  ): Promise<void> {\n    const auditEvent = {\n      eventType: \"mcp_fallback_reliability_issue\" as const,\n      requestId: this.generateCorrelationId(),\n      timestamp: new Date(),\n      metadata: {\n        currentSuccessRate,\n        targetSuccessRate,\n        recommendations,\n        severity: currentSuccessRate < 0.95 ? \"high\" : \"medium\",\n      },\n    };\n\n    await this.logEvent(auditEvent);\n  }\n\n  /**\n   * Log general event (flexible method for custom hybrid routing events)\n   */\n  async logEvent(eventData: {\n    eventType: AuditEventType;\n    requestId: string;\n    provider?: Provider;\n    complianceStatus: ComplianceStatus;\n    metadata?: Record<string, any>;\n    error?: {\n      type: string;\n      message: string;\n    };\n  }): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: eventData.eventType,\n      requestId: eventData.requestId,\n      provider: eventData.provider,\n      complianceStatus: eventData.complianceStatus,\n      error: eventData.error,\n      metadata: eventData.metadata,\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Custom audit event logged\", {\n      requestId: eventData.requestId,\n      eventId: event.eventId,\n      eventType: eventData.eventType,\n    });\n  }\n\n  /**\n   * Generate compliance report\n   */\n  async generateComplianceReport(\n    startDate: Date,\n    endDate: Date\n  ): Promise<ComplianceReport> {\n    // This would typically query a database\n    // For now, return a mock report structure\n    const reportId = this.generateEventId();\n\n    return {\n      reportId,\n      generatedAt: new Date().toISOString(),\n      timeRange: {\n        start: startDate.toISOString(),\n        end: endDate.toISOString(),\n      },\n      summary: {\n        totalEvents: 0,\n        complianceViolations: 0,\n        piiDetections: 0,\n        safetyBlocks: 0,\n        averageLatency: 0,\n        totalCost: 0,\n      },\n      violations: [],\n      recommendations: [\n        \"Implement regular compliance audits\",\n        \"Review PII detection accuracy\",\n        \"Monitor safety check performance\",\n        \"Optimize cost per request\",\n      ],\n    };\n  }\n\n  /**\n   * Verify audit trail integrity\n   */\n  async verifyIntegrity(events: AuditEvent[]): Promise<{\n    valid: boolean;\n    errors: string[];\n  }> {\n    if (!this.config.enableIntegrityChecking) {\n      return { valid: true, errors: [] };\n    }\n\n    const errors: string[] = [];\n\n    for (let i = 0; i < events.length; i++) {\n      const event = events[i];\n\n      // Verify event hash\n      const calculatedHash = await this.calculateEventHash({\n        ...event,\n        eventHash: \"\",\n      });\n\n      if (calculatedHash !== event.eventHash) {\n        errors.push(`Event ${event.eventId} has invalid hash`);\n      }\n\n      // Verify chain integrity\n      if (i > 0) {\n        const previousEvent = events[i - 1];\n        if (event.previousEventHash !== previousEvent.eventHash) {\n          errors.push(`Event ${event.eventId} has broken chain link`);\n        }\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Private helper methods\n   */\n  private generateEventId(): string {\n    this.eventCounter++;\n    return `audit_${Date.now()}_${this.eventCounter}`;\n  }\n\n  private async hashContent(content: string): Promise<string> {\n    // Simple hash for content identification (not for security)\n    let hash = 0;\n    for (let i = 0; i < content.length; i++) {\n      const char = content.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash).toString(16);\n  }\n\n  private hashUserId(userId?: string): string | undefined {\n    if (!userId) return undefined;\n    // Simple hash for user anonymization\n    return `user_${userId.split(\"\").reduce((a, b) => {\n      a = (a << 5) - a + b.charCodeAt(0);\n      return a & a;\n    }, 0)}`;\n  }\n\n  private classifyContent(\n    context: RouterInputContext\n  ): \"public\" | \"internal\" | \"confidential\" | \"restricted\" {\n    if (context.pii) return \"restricted\";\n    if (context.domain === \"legal\" || context.domain === \"medical\")\n      return \"confidential\";\n    if (context.tenant) return \"internal\";\n    return \"public\";\n  }\n\n  private determineLawfulBasis(context: RouterInputContext): string {\n    // GDPR Article 6 lawful basis\n    if (context.pii) return \"consent\"; // Article 6(1)(a)\n    if (context.domain === \"legal\") return \"legal_obligation\"; // Article 6(1)(c)\n    return \"legitimate_interests\"; // Article 6(1)(f)\n  }\n\n  private async calculateEventHash(\n    event: Omit<AuditEvent, \"eventHash\">\n  ): Promise<string> {\n    // Simple hash calculation for event integrity\n    const eventString = JSON.stringify(event, Object.keys(event).sort());\n    let hash = 0;\n    for (let i = 0; i < eventString.length; i++) {\n      const char = eventString.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash;\n    }\n    return Math.abs(hash).toString(16);\n  }\n\n  private async persistAuditEvent(event: AuditEvent): Promise<void> {\n    // In production, this would write to a secure audit database\n    // For now, use structured logging\n    this.logger.info(\"Audit event\", {\n      eventId: event.eventId,\n      eventType: event.eventType,\n      requestId: event.requestId,\n      complianceStatus: event.complianceStatus,\n      timestamp: event.timestamp,\n    });\n\n    // In strict compliance mode, also write to separate audit log\n    if (this.config.complianceMode === \"strict\") {\n      console.log(`AUDIT: ${JSON.stringify(event)}`);\n    }\n  }\n\n  /**\n   * Log cost optimization start\n   */\n  async logCostOptimizationStart(\n    strategy: string,\n    targetReduction: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      strategy,\n      targetReduction,\n      action: \"start\",\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost optimization stop\n   */\n  async logCostOptimizationStop(\n    achievedReduction: number,\n    totalSavings: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      achievedReduction,\n      totalSavings,\n      action: \"stop\",\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost-aware routing decision\n   */\n  async logCostAwareRoutingDecision(\n    correlationId: string,\n    decision: any,\n    operation: string,\n    priority: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_aware_routing\",\n      correlationId,\n      selectedRoute: decision.selectedRoute,\n      estimatedCost: decision.estimatedCost,\n      costSavings: decision.costSavings,\n      costEfficiencyScore: decision.costEfficiencyScore,\n      operation,\n      priority,\n      reason: decision.reason,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        alternativeRouteCosts: decision.alternativeRouteCosts\n          ? Object.fromEntries(decision.alternativeRouteCosts)\n          : {},\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost performance evaluation\n   */\n  async logCostPerformanceEvaluation(\n    costReductionPercentage: number,\n    totalSavings: number,\n    evaluationPeriod: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      action: \"performance_evaluation\",\n      costReductionPercentage,\n      totalSavings,\n      evaluationPeriod,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost optimization recommendation applied\n   */\n  async logCostOptimizationRecommendationApplied(\n    recommendationId: string,\n    type: string,\n    expectedSavings: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      action: \"recommendation_applied\",\n      recommendationId,\n      type,\n      expectedSavings,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost optimization effectiveness\n   */\n  async logCostOptimizationEffectiveness(\n    actualReduction: number,\n    totalSavings: number,\n    targetReduction: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      action: \"effectiveness_evaluation\",\n      actualReduction,\n      totalSavings,\n      targetReduction,\n      targetMet: actualReduction >= targetReduction,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n}\n\n/**\n * Default audit trail instance\n */\nexport const auditTrail = new AuditTrailSystem();\n\n/**\n * Create audit trail with custom config\n */\nexport const createAuditTrail = (\n  config: Partial<AuditTrailConfig>\n): AuditTrailSystem => {\n  return new AuditTrailSystem(config);\n};\n"],"version":3}