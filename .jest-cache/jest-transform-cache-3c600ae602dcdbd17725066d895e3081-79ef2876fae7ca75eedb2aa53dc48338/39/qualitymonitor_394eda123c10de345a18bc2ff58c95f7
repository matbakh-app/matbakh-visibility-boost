b571a9a71f1fc5db1bcfc3dc6e08c92b
"use strict";

/**
 * AI Quality Monitoring Service
 *
 * Provides comprehensive quality monitoring for AI models including:
 * - Real-time quality assessment
 * - Quality trend analysis
 * - Automated quality degradation detection
 * - Integration with drift monitoring
 */
/* istanbul ignore next */
function cov_e3cu4amr6() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/quality-monitor.ts";
  var hash = "c537b4dd2e34358ff2ff199754761f244b7ebdcf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/quality-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "2": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "9": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 68
        }
      },
      "10": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "11": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "12": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 77
        }
      },
      "13": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "14": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 56
        }
      },
      "15": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "16": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 63
        }
      },
      "17": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "18": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 57
        }
      },
      "19": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 57
        }
      },
      "20": {
        start: {
          line: 81,
          column: 27
        },
        end: {
          line: 81,
          column: 68
        }
      },
      "21": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "22": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "23": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 30
        }
      },
      "24": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "25": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 69
        }
      },
      "26": {
        start: {
          line: 94,
          column: 40
        },
        end: {
          line: 95,
          column: 54
        }
      },
      "27": {
        start: {
          line: 94,
          column: 71
        },
        end: {
          line: 95,
          column: 53
        }
      },
      "28": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "29": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 113
        }
      },
      "30": {
        start: {
          line: 100,
          column: 29
        },
        end: {
          line: 100,
          column: 96
        }
      },
      "31": {
        start: {
          line: 101,
          column: 40
        },
        end: {
          line: 101,
          column: 97
        }
      },
      "32": {
        start: {
          line: 101,
          column: 74
        },
        end: {
          line: 101,
          column: 96
        }
      },
      "33": {
        start: {
          line: 102,
          column: 39
        },
        end: {
          line: 102,
          column: 97
        }
      },
      "34": {
        start: {
          line: 102,
          column: 73
        },
        end: {
          line: 102,
          column: 96
        }
      },
      "35": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "36": {
        start: {
          line: 107,
          column: 86
        },
        end: {
          line: 107,
          column: 100
        }
      },
      "37": {
        start: {
          line: 107,
          column: 134
        },
        end: {
          line: 107,
          column: 148
        }
      },
      "38": {
        start: {
          line: 108,
          column: 81
        },
        end: {
          line: 108,
          column: 106
        }
      },
      "39": {
        start: {
          line: 108,
          column: 140
        },
        end: {
          line: 108,
          column: 165
        }
      },
      "40": {
        start: {
          line: 109,
          column: 81
        },
        end: {
          line: 109,
          column: 106
        }
      },
      "41": {
        start: {
          line: 109,
          column: 140
        },
        end: {
          line: 109,
          column: 165
        }
      },
      "42": {
        start: {
          line: 110,
          column: 82
        },
        end: {
          line: 110,
          column: 108
        }
      },
      "43": {
        start: {
          line: 110,
          column: 142
        },
        end: {
          line: 110,
          column: 168
        }
      },
      "44": {
        start: {
          line: 111,
          column: 80
        },
        end: {
          line: 111,
          column: 104
        }
      },
      "45": {
        start: {
          line: 111,
          column: 138
        },
        end: {
          line: 111,
          column: 162
        }
      },
      "46": {
        start: {
          line: 114,
          column: 39
        },
        end: {
          line: 114,
          column: 53
        }
      },
      "47": {
        start: {
          line: 115,
          column: 36
        },
        end: {
          line: 115,
          column: 57
        }
      },
      "48": {
        start: {
          line: 116,
          column: 39
        },
        end: {
          line: 116,
          column: 53
        }
      },
      "49": {
        start: {
          line: 117,
          column: 36
        },
        end: {
          line: 117,
          column: 57
        }
      },
      "50": {
        start: {
          line: 121,
          column: 89
        },
        end: {
          line: 121,
          column: 110
        }
      },
      "51": {
        start: {
          line: 122,
          column: 86
        },
        end: {
          line: 122,
          column: 104
        }
      },
      "52": {
        start: {
          line: 124,
          column: 72
        },
        end: {
          line: 124,
          column: 86
        }
      },
      "53": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 26
        }
      },
      "54": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "55": {
        start: {
          line: 136,
          column: 29
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "56": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 155,
          column: 79
        }
      },
      "57": {
        start: {
          line: 151,
          column: 33
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "58": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 155,
          column: 77
        }
      },
      "59": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 43
        }
      },
      "60": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "61": {
        start: {
          line: 170,
          column: 27
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "62": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 171,
          column: 55
        }
      },
      "63": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 177,
          column: 14
        }
      },
      "64": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "65": {
        start: {
          line: 186,
          column: 33
        },
        end: {
          line: 186,
          column: 46
        }
      },
      "66": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 44
        }
      },
      "67": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 195,
          column: 14
        }
      },
      "68": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "69": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 215,
          column: 75
        }
      },
      "70": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "71": {
        start: {
          line: 222,
          column: 27
        },
        end: {
          line: 222,
          column: 29
        }
      },
      "72": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "73": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 185
        }
      },
      "74": {
        start: {
          line: 227,
          column: 17
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "75": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 170
        }
      },
      "76": {
        start: {
          line: 231,
          column: 27
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "77": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 255,
          column: 13
        }
      },
      "78": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 254,
          column: 17
        }
      },
      "79": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 250,
          column: 165
        }
      },
      "80": {
        start: {
          line: 252,
          column: 21
        },
        end: {
          line: 254,
          column: 17
        }
      },
      "81": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 253,
          column: 160
        }
      },
      "82": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "83": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 185
        }
      },
      "84": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "85": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 177
        }
      },
      "86": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 26
        }
      },
      "87": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 281,
          column: 10
        }
      },
      "88": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 287,
          column: 34
        }
      },
      "89": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "90": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 73
        }
      },
      "91": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 78
        }
      },
      "92": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "93": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 83
        }
      },
      "94": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 80
        }
      },
      "95": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "96": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 71
        }
      },
      "97": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 77
        }
      },
      "98": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "99": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 73
        }
      },
      "100": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 75
        }
      },
      "101": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "102": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 76
        }
      },
      "103": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 75
        }
      },
      "104": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 31
        }
      },
      "105": {
        start: {
          line: 314,
          column: 24
        },
        end: {
          line: 314,
          column: 60
        }
      },
      "106": {
        start: {
          line: 315,
          column: 25
        },
        end: {
          line: 315,
          column: 62
        }
      },
      "107": {
        start: {
          line: 316,
          column: 23
        },
        end: {
          line: 316,
          column: 41
        }
      },
      "108": {
        start: {
          line: 318,
          column: 26
        },
        end: {
          line: 318,
          column: 30
        }
      },
      "109": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "110": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 29
        }
      },
      "111": {
        start: {
          line: 322,
          column: 13
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "112": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 59
        }
      },
      "113": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 59
        }
      },
      "114": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 52
        }
      },
      "115": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 335,
          column: 21
        }
      },
      "116": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 21
        }
      },
      "117": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 77
        }
      },
      "118": {
        start: {
          line: 336,
          column: 45
        },
        end: {
          line: 336,
          column: 56
        }
      },
      "119": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "120": {
        start: {
          line: 343,
          column: 28
        },
        end: {
          line: 354,
          column: 13
        }
      },
      "121": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "122": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 71
        }
      },
      "123": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 81
        }
      },
      "124": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 83
        }
      },
      "125": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 89
        }
      },
      "126": {
        start: {
          line: 361,
          column: 31
        },
        end: {
          line: 376,
          column: 15
        }
      },
      "127": {
        start: {
          line: 361,
          column: 79
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "128": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 380,
          column: 16
        }
      },
      "129": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      },
      "130": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "131": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 394,
          column: 17
        }
      },
      "132": {
        start: {
          line: 390,
          column: 20
        },
        end: {
          line: 390,
          column: 42
        }
      },
      "133": {
        start: {
          line: 393,
          column: 20
        },
        end: {
          line: 393,
          column: 74
        }
      },
      "134": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 406,
          column: 11
        }
      },
      "135": {
        start: {
          line: 404,
          column: 33
        },
        end: {
          line: 404,
          column: 119
        }
      },
      "136": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 47
        }
      },
      "137": {
        start: {
          line: 410,
          column: 27
        },
        end: {
          line: 410,
          column: 68
        }
      },
      "138": {
        start: {
          line: 411,
          column: 22
        },
        end: {
          line: 411,
          column: 53
        }
      },
      "139": {
        start: {
          line: 412,
          column: 27
        },
        end: {
          line: 412,
          column: 106
        }
      },
      "140": {
        start: {
          line: 412,
          column: 50
        },
        end: {
          line: 412,
          column: 98
        }
      },
      "141": {
        start: {
          line: 412,
          column: 77
        },
        end: {
          line: 412,
          column: 97
        }
      },
      "142": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 63
        }
      },
      "143": {
        start: {
          line: 416,
          column: 28
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "144": {
        start: {
          line: 421,
          column: 24
        },
        end: {
          line: 421,
          column: 82
        }
      },
      "145": {
        start: {
          line: 421,
          column: 56
        },
        end: {
          line: 421,
          column: 74
        }
      },
      "146": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 42
        }
      },
      "147": {
        start: {
          line: 426,
          column: 26
        },
        end: {
          line: 426,
          column: 81
        }
      },
      "148": {
        start: {
          line: 426,
          column: 61
        },
        end: {
          line: 426,
          column: 80
        }
      },
      "149": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 428,
          column: 21
        }
      },
      "150": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 21
        }
      },
      "151": {
        start: {
          line: 430,
          column: 34
        },
        end: {
          line: 430,
          column: 64
        }
      },
      "152": {
        start: {
          line: 431,
          column: 31
        },
        end: {
          line: 431,
          column: 106
        }
      },
      "153": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 30
        }
      },
      "154": {
        start: {
          line: 436,
          column: 27
        },
        end: {
          line: 436,
          column: 68
        }
      },
      "155": {
        start: {
          line: 437,
          column: 28
        },
        end: {
          line: 437,
          column: 61
        }
      },
      "156": {
        start: {
          line: 438,
          column: 30
        },
        end: {
          line: 438,
          column: 87
        }
      },
      "157": {
        start: {
          line: 438,
          column: 59
        },
        end: {
          line: 438,
          column: 79
        }
      },
      "158": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 82
        }
      },
      "159": {
        start: {
          line: 443,
          column: 33
        },
        end: {
          line: 443,
          column: 83
        }
      },
      "160": {
        start: {
          line: 444,
          column: 29
        },
        end: {
          line: 444,
          column: 80
        }
      },
      "161": {
        start: {
          line: 445,
          column: 22
        },
        end: {
          line: 445,
          column: 53
        }
      },
      "162": {
        start: {
          line: 446,
          column: 31
        },
        end: {
          line: 446,
          column: 93
        }
      },
      "163": {
        start: {
          line: 446,
          column: 54
        },
        end: {
          line: 446,
          column: 85
        }
      },
      "164": {
        start: {
          line: 447,
          column: 29
        },
        end: {
          line: 447,
          column: 87
        }
      },
      "165": {
        start: {
          line: 447,
          column: 52
        },
        end: {
          line: 447,
          column: 79
        }
      },
      "166": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 448,
          column: 105
        }
      },
      "167": {
        start: {
          line: 452,
          column: 26
        },
        end: {
          line: 452,
          column: 82
        }
      },
      "168": {
        start: {
          line: 453,
          column: 22
        },
        end: {
          line: 453,
          column: 53
        }
      },
      "169": {
        start: {
          line: 454,
          column: 26
        },
        end: {
          line: 454,
          column: 81
        }
      },
      "170": {
        start: {
          line: 454,
          column: 49
        },
        end: {
          line: 454,
          column: 73
        }
      },
      "171": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 61
        }
      },
      "172": {
        start: {
          line: 458,
          column: 0
        },
        end: {
          line: 458,
          column: 40
        }
      },
      "173": {
        start: {
          line: 459,
          column: 0
        },
        end: {
          line: 459,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 73
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 53
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 55
          },
          end: {
            line: 54,
            column: 56
          }
        },
        loc: {
          start: {
            line: 54,
            column: 68
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 92,
            column: 55
          },
          end: {
            line: 92,
            column: 56
          }
        },
        loc: {
          start: {
            line: 92,
            column: 68
          },
          end: {
            line: 129,
            column: 9
          }
        },
        line: 92
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 94,
            column: 56
          }
        },
        loc: {
          start: {
            line: 94,
            column: 71
          },
          end: {
            line: 95,
            column: 53
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 67
          },
          end: {
            line: 101,
            column: 68
          }
        },
        loc: {
          start: {
            line: 101,
            column: 74
          },
          end: {
            line: 101,
            column: 96
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 66
          },
          end: {
            line: 102,
            column: 67
          }
        },
        loc: {
          start: {
            line: 102,
            column: 73
          },
          end: {
            line: 102,
            column: 96
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 107,
            column: 79
          },
          end: {
            line: 107,
            column: 80
          }
        },
        loc: {
          start: {
            line: 107,
            column: 86
          },
          end: {
            line: 107,
            column: 100
          }
        },
        line: 107
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 107,
            column: 127
          },
          end: {
            line: 107,
            column: 128
          }
        },
        loc: {
          start: {
            line: 107,
            column: 134
          },
          end: {
            line: 107,
            column: 148
          }
        },
        line: 107
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 108,
            column: 74
          },
          end: {
            line: 108,
            column: 75
          }
        },
        loc: {
          start: {
            line: 108,
            column: 81
          },
          end: {
            line: 108,
            column: 106
          }
        },
        line: 108
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 108,
            column: 133
          },
          end: {
            line: 108,
            column: 134
          }
        },
        loc: {
          start: {
            line: 108,
            column: 140
          },
          end: {
            line: 108,
            column: 165
          }
        },
        line: 108
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 109,
            column: 74
          },
          end: {
            line: 109,
            column: 75
          }
        },
        loc: {
          start: {
            line: 109,
            column: 81
          },
          end: {
            line: 109,
            column: 106
          }
        },
        line: 109
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 133
          },
          end: {
            line: 109,
            column: 134
          }
        },
        loc: {
          start: {
            line: 109,
            column: 140
          },
          end: {
            line: 109,
            column: 165
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 110,
            column: 75
          },
          end: {
            line: 110,
            column: 76
          }
        },
        loc: {
          start: {
            line: 110,
            column: 82
          },
          end: {
            line: 110,
            column: 108
          }
        },
        line: 110
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 110,
            column: 135
          },
          end: {
            line: 110,
            column: 136
          }
        },
        loc: {
          start: {
            line: 110,
            column: 142
          },
          end: {
            line: 110,
            column: 168
          }
        },
        line: 110
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 111,
            column: 73
          },
          end: {
            line: 111,
            column: 74
          }
        },
        loc: {
          start: {
            line: 111,
            column: 80
          },
          end: {
            line: 111,
            column: 104
          }
        },
        line: 111
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 111,
            column: 131
          },
          end: {
            line: 111,
            column: 132
          }
        },
        loc: {
          start: {
            line: 111,
            column: 138
          },
          end: {
            line: 111,
            column: 162
          }
        },
        line: 111
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 33
          }
        },
        loc: {
          start: {
            line: 114,
            column: 39
          },
          end: {
            line: 114,
            column: 53
          }
        },
        line: 114
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 115,
            column: 30
          }
        },
        loc: {
          start: {
            line: 115,
            column: 36
          },
          end: {
            line: 115,
            column: 57
          }
        },
        line: 115
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 116,
            column: 32
          },
          end: {
            line: 116,
            column: 33
          }
        },
        loc: {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 116,
            column: 53
          }
        },
        line: 116
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 117,
            column: 30
          }
        },
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 57
          }
        },
        line: 117
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 121,
            column: 82
          },
          end: {
            line: 121,
            column: 83
          }
        },
        loc: {
          start: {
            line: 121,
            column: 89
          },
          end: {
            line: 121,
            column: 110
          }
        },
        line: 121
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 122,
            column: 79
          },
          end: {
            line: 122,
            column: 80
          }
        },
        loc: {
          start: {
            line: 122,
            column: 86
          },
          end: {
            line: 122,
            column: 104
          }
        },
        line: 122
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 124,
            column: 65
          },
          end: {
            line: 124,
            column: 66
          }
        },
        loc: {
          start: {
            line: 124,
            column: 72
          },
          end: {
            line: 124,
            column: 86
          }
        },
        line: 124
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 54
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 134
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 135,
            column: 55
          },
          end: {
            line: 135,
            column: 56
          }
        },
        loc: {
          start: {
            line: 135,
            column: 68
          },
          end: {
            line: 156,
            column: 9
          }
        },
        line: 135
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 151,
            column: 21
          },
          end: {
            line: 151,
            column: 22
          }
        },
        loc: {
          start: {
            line: 151,
            column: 33
          },
          end: {
            line: 154,
            column: 13
          }
        },
        line: 151
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 155,
            column: 22
          },
          end: {
            line: 155,
            column: 23
          }
        },
        loc: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 77
          }
        },
        line: 155
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 22
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 161
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 30
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 167
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 168,
            column: 55
          },
          end: {
            line: 168,
            column: 56
          }
        },
        loc: {
          start: {
            line: 168,
            column: 68
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 168
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 183
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 184,
            column: 55
          },
          end: {
            line: 184,
            column: 56
          }
        },
        loc: {
          start: {
            line: 184,
            column: 68
          },
          end: {
            line: 196,
            column: 9
          }
        },
        line: 184
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 38
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 201
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 35
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 220
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 221,
            column: 56
          }
        },
        loc: {
          start: {
            line: 221,
            column: 68
          },
          end: {
            line: 264,
            column: 9
          }
        },
        line: 221
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 60
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 269
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 42
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 286
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        loc: {
          start: {
            line: 313,
            column: 73
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 313
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 29
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 333
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 336,
            column: 29
          },
          end: {
            line: 336,
            column: 30
          }
        },
        loc: {
          start: {
            line: 336,
            column: 45
          },
          end: {
            line: 336,
            column: 56
          }
        },
        line: 336
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 38
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 341
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 342,
            column: 55
          },
          end: {
            line: 342,
            column: 56
          }
        },
        loc: {
          start: {
            line: 342,
            column: 68
          },
          end: {
            line: 381,
            column: 9
          }
        },
        line: 342
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 361,
            column: 59
          },
          end: {
            line: 361,
            column: 60
          }
        },
        loc: {
          start: {
            line: 361,
            column: 79
          },
          end: {
            line: 376,
            column: 13
          }
        },
        line: 361
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 21
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 386
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 387,
            column: 55
          },
          end: {
            line: 387,
            column: 56
          }
        },
        loc: {
          start: {
            line: 387,
            column: 68
          },
          end: {
            line: 396,
            column: 9
          }
        },
        line: 387
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 401,
            column: 5
          }
        },
        loc: {
          start: {
            line: 401,
            column: 33
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 401
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 402,
            column: 55
          },
          end: {
            line: 402,
            column: 56
          }
        },
        loc: {
          start: {
            line: 402,
            column: 68
          },
          end: {
            line: 406,
            column: 9
          }
        },
        line: 402
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 25
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 409
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 412,
            column: 40
          },
          end: {
            line: 412,
            column: 41
          }
        },
        loc: {
          start: {
            line: 412,
            column: 50
          },
          end: {
            line: 412,
            column: 98
          }
        },
        line: 412
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 412,
            column: 66
          },
          end: {
            line: 412,
            column: 67
          }
        },
        loc: {
          start: {
            line: 412,
            column: 77
          },
          end: {
            line: 412,
            column: 97
          }
        },
        line: 412
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        loc: {
          start: {
            line: 415,
            column: 24
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 415
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 421,
            column: 43
          },
          end: {
            line: 421,
            column: 44
          }
        },
        loc: {
          start: {
            line: 421,
            column: 56
          },
          end: {
            line: 421,
            column: 74
          }
        },
        line: 421
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 26
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 424
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 426,
            column: 54
          },
          end: {
            line: 426,
            column: 55
          }
        },
        loc: {
          start: {
            line: 426,
            column: 61
          },
          end: {
            line: 426,
            column: 80
          }
        },
        line: 426
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 35
          },
          end: {
            line: 440,
            column: 5
          }
        },
        line: 434
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 438,
            column: 49
          },
          end: {
            line: 438,
            column: 50
          }
        },
        loc: {
          start: {
            line: 438,
            column: 59
          },
          end: {
            line: 438,
            column: 79
          }
        },
        line: 438
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        loc: {
          start: {
            line: 441,
            column: 27
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 441
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 446,
            column: 44
          },
          end: {
            line: 446,
            column: 45
          }
        },
        loc: {
          start: {
            line: 446,
            column: 54
          },
          end: {
            line: 446,
            column: 85
          }
        },
        line: 446
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 447,
            column: 42
          },
          end: {
            line: 447,
            column: 43
          }
        },
        loc: {
          start: {
            line: 447,
            column: 52
          },
          end: {
            line: 447,
            column: 79
          }
        },
        line: 447
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 21
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 450
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 454,
            column: 39
          },
          end: {
            line: 454,
            column: 40
          }
        },
        loc: {
          start: {
            line: 454,
            column: 49
          },
          end: {
            line: 454,
            column: 73
          }
        },
        line: 454
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 24,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 22
          }
        }, {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 24,
            column: 18
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 50
          }
        }, {
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 68
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 63
          }
        }, {
          start: {
            line: 93,
            column: 67
          },
          end: {
            line: 93,
            column: 69
          }
        }],
        line: 93
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 71
          },
          end: {
            line: 95,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 71
          },
          end: {
            line: 94,
            column: 110
          }
        }, {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 53
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 150,
            column: 39
          }
        }, {
          start: {
            line: 150,
            column: 43
          },
          end: {
            line: 150,
            column: 45
          }
        }],
        line: 150
      },
      "8": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: 227,
            column: 17
          },
          end: {
            line: 229,
            column: 13
          }
        }],
        line: 224
      },
      "9": {
        loc: {
          start: {
            line: 227,
            column: 17
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 17
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "10": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 254,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 254,
            column: 17
          }
        }, {
          start: {
            line: 252,
            column: 21
          },
          end: {
            line: 254,
            column: 17
          }
        }],
        line: 249
      },
      "11": {
        loc: {
          start: {
            line: 252,
            column: 21
          },
          end: {
            line: 254,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 21
          },
          end: {
            line: 254,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "12": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "13": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "14": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "15": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "16": {
        loc: {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "17": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "18": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "19": {
        loc: {
          start: {
            line: 313,
            column: 50
          },
          end: {
            line: 313,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 313,
            column: 67
          },
          end: {
            line: 313,
            column: 71
          }
        }],
        line: 313
      },
      "20": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: 322,
            column: 13
          },
          end: {
            line: 327,
            column: 9
          }
        }],
        line: 319
      },
      "21": {
        loc: {
          start: {
            line: 322,
            column: 13
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 13
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: 325,
            column: 13
          },
          end: {
            line: 327,
            column: 9
          }
        }],
        line: 322
      },
      "22": {
        loc: {
          start: {
            line: 323,
            column: 20
          },
          end: {
            line: 323,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 323,
            column: 33
          },
          end: {
            line: 323,
            column: 44
          }
        }, {
          start: {
            line: 323,
            column: 47
          },
          end: {
            line: 323,
            column: 58
          }
        }],
        line: 323
      },
      "23": {
        loc: {
          start: {
            line: 326,
            column: 20
          },
          end: {
            line: 326,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 33
          },
          end: {
            line: 326,
            column: 44
          }
        }, {
          start: {
            line: 326,
            column: 47
          },
          end: {
            line: 326,
            column: 58
          }
        }],
        line: 326
      },
      "24": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 335,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 335,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "25": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "26": {
        loc: {
          start: {
            line: 357,
            column: 41
          },
          end: {
            line: 357,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 75
          },
          end: {
            line: 357,
            column: 76
          }
        }, {
          start: {
            line: 357,
            column: 79
          },
          end: {
            line: 357,
            column: 80
          }
        }],
        line: 357
      },
      "27": {
        loc: {
          start: {
            line: 358,
            column: 42
          },
          end: {
            line: 358,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 77
          },
          end: {
            line: 358,
            column: 78
          }
        }, {
          start: {
            line: 358,
            column: 81
          },
          end: {
            line: 358,
            column: 82
          }
        }],
        line: 358
      },
      "28": {
        loc: {
          start: {
            line: 359,
            column: 45
          },
          end: {
            line: 359,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 83
          },
          end: {
            line: 359,
            column: 84
          }
        }, {
          start: {
            line: 359,
            column: 87
          },
          end: {
            line: 359,
            column: 88
          }
        }],
        line: 359
      },
      "29": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 428,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 428,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/quality-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/quality-monitor.ts"],
      sourcesContent: ["/**\n * AI Quality Monitoring Service\n *\n * Provides comprehensive quality monitoring for AI models including:\n * - Real-time quality assessment\n * - Quality trend analysis\n * - Automated quality degradation detection\n * - Integration with drift monitoring\n */\n\nimport {\n  CloudWatchClient,\n  GetMetricStatisticsCommand,\n  PutMetricDataCommand,\n} from \"@aws-sdk/client-cloudwatch\";\nimport { DriftAlert, DriftMonitor } from \"./drift-monitor\";\n\nexport interface QualityAssessment {\n  timestamp: Date;\n  modelId: string;\n  provider: string;\n  requestId: string;\n\n  // Input quality\n  inputQuality: {\n    clarity: number;\n    complexity: number;\n    toxicity: number;\n    piiRisk: number;\n  };\n\n  // Output quality\n  outputQuality: {\n    coherence: number;\n    relevance: number;\n    factuality: number;\n    completeness: number;\n    toxicity: number;\n    bias: number;\n  };\n\n  // Performance metrics\n  performance: {\n    latency: number;\n    tokenCount: number;\n    cost: number;\n  };\n\n  // User feedback (if available)\n  userFeedback?: {\n    rating: number; // 1-5 scale\n    helpful: boolean;\n    accurate: boolean;\n    appropriate: boolean;\n  };\n\n  // Overall quality score\n  overallScore: number;\n}\n\nexport interface QualityTrends {\n  modelId: string;\n  timeRange: {\n    start: Date;\n    end: Date;\n  };\n\n  // Trend metrics\n  trends: {\n    overallQuality: {\n      current: number;\n      previous: number;\n      change: number;\n      trend: \"improving\" | \"stable\" | \"degrading\";\n    };\n    coherence: {\n      current: number;\n      previous: number;\n      change: number;\n      trend: \"improving\" | \"stable\" | \"degrading\";\n    };\n    relevance: {\n      current: number;\n      previous: number;\n      change: number;\n      trend: \"improving\" | \"stable\" | \"degrading\";\n    };\n    factuality: {\n      current: number;\n      previous: number;\n      change: number;\n      trend: \"improving\" | \"stable\" | \"degrading\";\n    };\n    toxicity: {\n      current: number;\n      previous: number;\n      change: number;\n      trend: \"improving\" | \"stable\" | \"degrading\";\n    };\n    userSatisfaction: {\n      current: number;\n      previous: number;\n      change: number;\n      trend: \"improving\" | \"stable\" | \"degrading\";\n    };\n  };\n\n  // Statistical analysis\n  statistics: {\n    totalAssessments: number;\n    averageLatency: number;\n    averageCost: number;\n    errorRate: number;\n    userFeedbackRate: number;\n  };\n}\n\nexport interface QualityAlert extends DriftAlert {\n  qualityAssessment?: QualityAssessment;\n  trends?: QualityTrends;\n}\n\nexport interface QualityThresholds {\n  overallScore: {\n    warning: number;\n    critical: number;\n  };\n  coherence: {\n    warning: number;\n    critical: number;\n  };\n  relevance: {\n    warning: number;\n    critical: number;\n  };\n  factuality: {\n    warning: number;\n    critical: number;\n  };\n  toxicity: {\n    warning: number;\n    critical: number;\n  };\n  bias: {\n    warning: number;\n    critical: number;\n  };\n  userSatisfaction: {\n    warning: number;\n    critical: number;\n  };\n}\n\nexport class QualityMonitor {\n  private cloudWatch: CloudWatchClient;\n  private driftMonitor: DriftMonitor;\n  private thresholds: QualityThresholds;\n  private assessmentHistory: Map<string, QualityAssessment[]> = new Map();\n  private alertCallbacks: Array<(alert: QualityAlert) => Promise<void>> = [];\n\n  constructor(\n    driftMonitor: DriftMonitor,\n    cloudWatch?: CloudWatchClient,\n    thresholds?: Partial<QualityThresholds>\n  ) {\n    this.driftMonitor = driftMonitor;\n    this.cloudWatch =\n      cloudWatch ||\n      new CloudWatchClient({\n        region: process.env.AWS_REGION || \"eu-central-1\",\n      });\n\n    this.thresholds = {\n      overallScore: {\n        warning: 0.7,\n        critical: 0.6,\n      },\n      coherence: {\n        warning: 0.7,\n        critical: 0.6,\n      },\n      relevance: {\n        warning: 0.7,\n        critical: 0.6,\n      },\n      factuality: {\n        warning: 0.7,\n        critical: 0.6,\n      },\n      toxicity: {\n        warning: 0.2,\n        critical: 0.3,\n      },\n      bias: {\n        warning: 0.2,\n        critical: 0.3,\n      },\n      userSatisfaction: {\n        warning: 3.0,\n        critical: 2.5,\n      },\n      ...thresholds,\n    };\n\n    // Register with drift monitor for integrated alerts\n    this.driftMonitor.onAlert(this.handleDriftAlert.bind(this));\n  }\n\n  /**\n   * Assess quality of an AI interaction\n   */\n  async assessQuality(\n    modelId: string,\n    provider: string,\n    requestId: string,\n    input: string,\n    output: string,\n    metadata: {\n      latency: number;\n      tokenCount: number;\n      cost: number;\n      userFeedback?: QualityAssessment[\"userFeedback\"];\n    }\n  ): Promise<QualityAssessment> {\n    const assessment: QualityAssessment = {\n      timestamp: new Date(),\n      modelId,\n      provider,\n      requestId,\n      inputQuality: await this.assessInputQuality(input),\n      outputQuality: await this.assessOutputQuality(output, input),\n      performance: metadata,\n      userFeedback: metadata.userFeedback,\n      overallScore: 0, // Will be calculated\n    };\n\n    // Calculate overall score\n    assessment.overallScore = this.calculateOverallScore(assessment);\n\n    // Store assessment\n    if (!this.assessmentHistory.has(modelId)) {\n      this.assessmentHistory.set(modelId, []);\n    }\n    this.assessmentHistory.get(modelId)!.push(assessment);\n\n    // Keep only last 1000 assessments per model\n    const history = this.assessmentHistory.get(modelId)!;\n    if (history.length > 1000) {\n      history.splice(0, history.length - 1000);\n    }\n\n    // Publish metrics to CloudWatch\n    await this.publishQualityMetrics(assessment);\n\n    // Check for quality alerts\n    const alerts = await this.checkQualityAlerts(assessment);\n    for (const alert of alerts) {\n      await this.sendAlert(alert);\n    }\n\n    return assessment;\n  }\n\n  /**\n   * Analyze quality trends for a model\n   */\n  async analyzeQualityTrends(\n    modelId: string,\n    timeRange: { start: Date; end: Date }\n  ): Promise<QualityTrends> {\n    const history = this.assessmentHistory.get(modelId) || [];\n    const relevantAssessments = history.filter(\n      (assessment) =>\n        assessment.timestamp >= timeRange.start &&\n        assessment.timestamp <= timeRange.end\n    );\n\n    if (relevantAssessments.length === 0) {\n      throw new Error(\n        `No quality assessments found for model ${modelId} in the specified time range`\n      );\n    }\n\n    // Split assessments into current and previous periods\n    const midpoint = new Date(\n      (timeRange.start.getTime() + timeRange.end.getTime()) / 2\n    );\n    const previousAssessments = relevantAssessments.filter(\n      (a) => a.timestamp < midpoint\n    );\n    const currentAssessments = relevantAssessments.filter(\n      (a) => a.timestamp >= midpoint\n    );\n\n    const trends: QualityTrends = {\n      modelId,\n      timeRange,\n      trends: {\n        overallQuality: this.calculateTrend(\n          currentAssessments.map((a) => a.overallScore),\n          previousAssessments.map((a) => a.overallScore)\n        ),\n        coherence: this.calculateTrend(\n          currentAssessments.map((a) => a.outputQuality.coherence),\n          previousAssessments.map((a) => a.outputQuality.coherence)\n        ),\n        relevance: this.calculateTrend(\n          currentAssessments.map((a) => a.outputQuality.relevance),\n          previousAssessments.map((a) => a.outputQuality.relevance)\n        ),\n        factuality: this.calculateTrend(\n          currentAssessments.map((a) => a.outputQuality.factuality),\n          previousAssessments.map((a) => a.outputQuality.factuality)\n        ),\n        toxicity: this.calculateTrend(\n          currentAssessments.map((a) => a.outputQuality.toxicity),\n          previousAssessments.map((a) => a.outputQuality.toxicity),\n          false // Lower is better for toxicity\n        ),\n        userSatisfaction: this.calculateTrend(\n          currentAssessments\n            .filter((a) => a.userFeedback)\n            .map((a) => a.userFeedback!.rating),\n          previousAssessments\n            .filter((a) => a.userFeedback)\n            .map((a) => a.userFeedback!.rating)\n        ),\n      },\n      statistics: {\n        totalAssessments: relevantAssessments.length,\n        averageLatency: this.calculateAverage(\n          relevantAssessments.map((a) => a.performance.latency)\n        ),\n        averageCost: this.calculateAverage(\n          relevantAssessments.map((a) => a.performance.cost)\n        ),\n        errorRate: 0, // Would need error tracking\n        userFeedbackRate:\n          relevantAssessments.filter((a) => a.userFeedback).length /\n          relevantAssessments.length,\n      },\n    };\n\n    return trends;\n  }\n\n  /**\n   * Get quality metrics from CloudWatch\n   */\n  async getQualityMetrics(\n    modelId: string,\n    metricName: string,\n    timeRange: { start: Date; end: Date }\n  ): Promise<Array<{ timestamp: Date; value: number }>> {\n    const response = await this.cloudWatch.send(\n      new GetMetricStatisticsCommand({\n        Namespace: \"AI/Quality\",\n        MetricName: metricName,\n        Dimensions: [\n          {\n            Name: \"ModelId\",\n            Value: modelId,\n          },\n        ],\n        StartTime: timeRange.start,\n        EndTime: timeRange.end,\n        Period: 300, // 5 minutes\n        Statistics: [\"Average\"],\n      })\n    );\n\n    return (response.Datapoints || [])\n      .map((point) => ({\n        timestamp: point.Timestamp!,\n        value: point.Average!,\n      }))\n      .sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n  }\n\n  /**\n   * Register alert callback\n   */\n  onAlert(callback: (alert: QualityAlert) => Promise<void>): void {\n    this.alertCallbacks.push(callback);\n  }\n\n  /**\n   * Assess input quality\n   */\n  private async assessInputQuality(\n    input: string\n  ): Promise<QualityAssessment[\"inputQuality\"]> {\n    // Simplified quality assessment - in production, use ML models\n    const length = input.length;\n    const wordCount = input.split(/\\s+/).length;\n\n    return {\n      clarity: Math.min(\n        1.0,\n        Math.max(0.0, 1.0 - Math.abs(wordCount - 50) / 100)\n      ), // Optimal around 50 words\n      complexity: Math.min(1.0, wordCount / 100), // More words = more complex\n      toxicity: this.assessToxicity(input),\n      piiRisk: this.assessPIIRisk(input),\n    };\n  }\n\n  /**\n   * Assess output quality\n   */\n  private async assessOutputQuality(\n    output: string,\n    input: string\n  ): Promise<QualityAssessment[\"outputQuality\"]> {\n    // Simplified quality assessment - in production, use ML models\n    const outputLength = output.length;\n    const inputLength = input.length;\n\n    return {\n      coherence: this.assessCoherence(output),\n      relevance: this.assessRelevance(output, input),\n      factuality: this.assessFactuality(output),\n      completeness: Math.min(1.0, outputLength / (inputLength * 2)), // Reasonable response length\n      toxicity: this.assessToxicity(output),\n      bias: this.assessBias(output),\n    };\n  }\n\n  /**\n   * Calculate overall quality score\n   */\n  private calculateOverallScore(assessment: QualityAssessment): number {\n    const weights = {\n      coherence: 0.2,\n      relevance: 0.25,\n      factuality: 0.2,\n      completeness: 0.1,\n      toxicity: -0.15, // Negative weight (lower toxicity is better)\n      bias: -0.1, // Negative weight (lower bias is better)\n    };\n\n    return Math.max(\n      0,\n      Math.min(\n        1,\n        assessment.outputQuality.coherence * weights.coherence +\n          assessment.outputQuality.relevance * weights.relevance +\n          assessment.outputQuality.factuality * weights.factuality +\n          assessment.outputQuality.completeness * weights.completeness +\n          (1 - assessment.outputQuality.toxicity) * Math.abs(weights.toxicity) +\n          (1 - assessment.outputQuality.bias) * Math.abs(weights.bias)\n      )\n    );\n  }\n\n  /**\n   * Check for quality alerts\n   */\n  private async checkQualityAlerts(\n    assessment: QualityAssessment\n  ): Promise<QualityAlert[]> {\n    const alerts: QualityAlert[] = [];\n\n    // Check overall score\n    if (assessment.overallScore <= this.thresholds.overallScore.critical) {\n      alerts.push(\n        this.createQualityAlert(\n          \"critical\",\n          \"quality_degradation\",\n          assessment,\n          `Critical quality degradation: overall score ${assessment.overallScore.toFixed(\n            3\n          )}`\n        )\n      );\n    } else if (\n      assessment.overallScore <= this.thresholds.overallScore.warning\n    ) {\n      alerts.push(\n        this.createQualityAlert(\n          \"medium\",\n          \"quality_degradation\",\n          assessment,\n          `Quality warning: overall score ${assessment.overallScore.toFixed(3)}`\n        )\n      );\n    }\n\n    // Check individual metrics\n    const checks = [\n      {\n        value: assessment.outputQuality.coherence,\n        threshold: this.thresholds.coherence,\n        name: \"coherence\",\n      },\n      {\n        value: assessment.outputQuality.relevance,\n        threshold: this.thresholds.relevance,\n        name: \"relevance\",\n      },\n      {\n        value: assessment.outputQuality.factuality,\n        threshold: this.thresholds.factuality,\n        name: \"factuality\",\n      },\n    ];\n\n    for (const check of checks) {\n      if (check.value <= check.threshold.critical) {\n        alerts.push(\n          this.createQualityAlert(\n            \"high\",\n            \"quality_degradation\",\n            assessment,\n            `Critical ${check.name} issue: score ${check.value.toFixed(3)}`\n          )\n        );\n      } else if (check.value <= check.threshold.warning) {\n        alerts.push(\n          this.createQualityAlert(\n            \"medium\",\n            \"quality_degradation\",\n            assessment,\n            `${check.name} warning: score ${check.value.toFixed(3)}`\n          )\n        );\n      }\n    }\n\n    // Check toxicity and bias (higher is worse)\n    if (\n      assessment.outputQuality.toxicity >= this.thresholds.toxicity.critical\n    ) {\n      alerts.push(\n        this.createQualityAlert(\n          \"critical\",\n          \"quality_degradation\",\n          assessment,\n          `Critical toxicity detected: score ${assessment.outputQuality.toxicity.toFixed(\n            3\n          )}`\n        )\n      );\n    }\n\n    if (assessment.outputQuality.bias >= this.thresholds.bias.critical) {\n      alerts.push(\n        this.createQualityAlert(\n          \"critical\",\n          \"quality_degradation\",\n          assessment,\n          `Critical bias detected: score ${assessment.outputQuality.bias.toFixed(\n            3\n          )}`\n        )\n      );\n    }\n\n    return alerts;\n  }\n\n  /**\n   * Create quality alert\n   */\n  private createQualityAlert(\n    severity: QualityAlert[\"severity\"],\n    type: QualityAlert[\"type\"],\n    assessment: QualityAssessment,\n    message: string\n  ): QualityAlert {\n    return {\n      id: `quality-${assessment.modelId}-${Date.now()}`,\n      timestamp: new Date(),\n      severity,\n      type,\n      modelId: assessment.modelId,\n      provider: assessment.provider,\n      message,\n      metrics: {},\n      recommendations: this.getQualityRecommendations(assessment),\n      qualityAssessment: assessment,\n    };\n  }\n\n  /**\n   * Get quality improvement recommendations\n   */\n  private getQualityRecommendations(assessment: QualityAssessment): string[] {\n    const recommendations: string[] = [];\n\n    if (assessment.outputQuality.coherence < 0.7) {\n      recommendations.push(\"Improve prompt clarity and structure\");\n      recommendations.push(\"Consider fine-tuning for better coherence\");\n    }\n\n    if (assessment.outputQuality.relevance < 0.7) {\n      recommendations.push(\"Review prompt engineering for better relevance\");\n      recommendations.push(\"Implement context-aware response generation\");\n    }\n\n    if (assessment.outputQuality.factuality < 0.7) {\n      recommendations.push(\"Implement fact-checking mechanisms\");\n      recommendations.push(\"Use retrieval-augmented generation (RAG)\");\n    }\n\n    if (assessment.outputQuality.toxicity > 0.2) {\n      recommendations.push(\"Implement stronger content filtering\");\n      recommendations.push(\"Review training data for toxic content\");\n    }\n\n    if (assessment.outputQuality.bias > 0.2) {\n      recommendations.push(\"Implement bias detection and mitigation\");\n      recommendations.push(\"Review training data for bias patterns\");\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Calculate trend between current and previous values\n   */\n  private calculateTrend(\n    currentValues: number[],\n    previousValues: number[],\n    higherIsBetter: boolean = true\n  ): QualityTrends[\"trends\"][\"overallQuality\"] {\n    const current = this.calculateAverage(currentValues);\n    const previous = this.calculateAverage(previousValues);\n    const change = current - previous;\n\n    let trend: \"improving\" | \"stable\" | \"degrading\";\n    const threshold = 0.05; // 5% change threshold\n\n    if (Math.abs(change) < threshold) {\n      trend = \"stable\";\n    } else if (higherIsBetter) {\n      trend = change > 0 ? \"improving\" : \"degrading\";\n    } else {\n      trend = change < 0 ? \"improving\" : \"degrading\";\n    }\n\n    return { current, previous, change, trend };\n  }\n\n  /**\n   * Calculate average of values\n   */\n  private calculateAverage(values: number[]): number {\n    if (values.length === 0) return 0;\n    return values.reduce((sum, value) => sum + value, 0) / values.length;\n  }\n\n  /**\n   * Publish quality metrics to CloudWatch\n   */\n  private async publishQualityMetrics(\n    assessment: QualityAssessment\n  ): Promise<void> {\n    const metrics = {\n      OverallScore: assessment.overallScore,\n      Coherence: assessment.outputQuality.coherence,\n      Relevance: assessment.outputQuality.relevance,\n      Factuality: assessment.outputQuality.factuality,\n      Completeness: assessment.outputQuality.completeness,\n      Toxicity: assessment.outputQuality.toxicity,\n      Bias: assessment.outputQuality.bias,\n      Latency: assessment.performance.latency,\n      TokenCount: assessment.performance.tokenCount,\n      Cost: assessment.performance.cost,\n    };\n\n    if (assessment.userFeedback) {\n      metrics[\"UserRating\"] = assessment.userFeedback.rating;\n      metrics[\"UserHelpful\"] = assessment.userFeedback.helpful ? 1 : 0;\n      metrics[\"UserAccurate\"] = assessment.userFeedback.accurate ? 1 : 0;\n      metrics[\"UserAppropriate\"] = assessment.userFeedback.appropriate ? 1 : 0;\n    }\n\n    const metricData = Object.entries(metrics).map(([name, value]) => ({\n      MetricName: name,\n      Value: value,\n      Unit: \"None\",\n      Dimensions: [\n        {\n          Name: \"ModelId\",\n          Value: assessment.modelId,\n        },\n        {\n          Name: \"Provider\",\n          Value: assessment.provider,\n        },\n      ],\n      Timestamp: assessment.timestamp,\n    }));\n\n    await this.cloudWatch.send(\n      new PutMetricDataCommand({\n        Namespace: \"AI/Quality\",\n        MetricData: metricData,\n      })\n    );\n  }\n\n  /**\n   * Send alert through registered callbacks\n   */\n  private async sendAlert(alert: QualityAlert): Promise<void> {\n    for (const callback of this.alertCallbacks) {\n      try {\n        await callback(alert);\n      } catch (error) {\n        console.error(\"Failed to send quality alert:\", error);\n      }\n    }\n  }\n\n  /**\n   * Handle drift alerts from drift monitor\n   */\n  private async handleDriftAlert(driftAlert: DriftAlert): Promise<void> {\n    // Convert drift alert to quality alert for unified handling\n    const qualityAlert: QualityAlert = {\n      ...driftAlert,\n      id: `drift-quality-${driftAlert.id}`,\n    };\n\n    await this.sendAlert(qualityAlert);\n  }\n\n  // Simplified quality assessment methods (in production, use ML models)\n  private assessToxicity(text: string): number {\n    const toxicWords = [\"hate\", \"toxic\", \"harmful\", \"offensive\"];\n    const words = text.toLowerCase().split(/\\s+/);\n    const toxicCount = words.filter((word) =>\n      toxicWords.some((toxic) => word.includes(toxic))\n    ).length;\n    return Math.min(1.0, (toxicCount / words.length) * 10);\n  }\n\n  private assessPIIRisk(text: string): number {\n    const piiPatterns = [\n      /\\b\\d{3}-\\d{2}-\\d{4}\\b/, // SSN\n      /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/, // Email\n      /\\b\\d{3}-\\d{3}-\\d{4}\\b/, // Phone\n    ];\n\n    const matches = piiPatterns.filter((pattern) => pattern.test(text)).length;\n    return Math.min(1.0, matches / 3);\n  }\n\n  private assessCoherence(text: string): number {\n    // Simplified coherence assessment\n    const sentences = text.split(/[.!?]+/).filter((s) => s.trim().length > 0);\n    if (sentences.length === 0) return 0;\n\n    // Check for reasonable sentence length and structure\n    const avgSentenceLength = text.length / sentences.length;\n    const coherenceScore = Math.min(\n      1.0,\n      Math.max(0.0, 1.0 - Math.abs(avgSentenceLength - 100) / 200)\n    );\n\n    return coherenceScore;\n  }\n\n  private assessRelevance(output: string, input: string): number {\n    // Simplified relevance assessment based on keyword overlap\n    const inputWords = new Set(input.toLowerCase().split(/\\s+/));\n    const outputWords = output.toLowerCase().split(/\\s+/);\n\n    const relevantWords = outputWords.filter((word) =>\n      inputWords.has(word)\n    ).length;\n    return Math.min(1.0, relevantWords / Math.max(1, outputWords.length / 2));\n  }\n\n  private assessFactuality(text: string): number {\n    // Simplified factuality assessment\n    const uncertaintyWords = [\"maybe\", \"possibly\", \"might\", \"could\", \"perhaps\"];\n    const factualWords = [\"is\", \"are\", \"was\", \"were\", \"will\", \"has\", \"have\"];\n\n    const words = text.toLowerCase().split(/\\s+/);\n    const uncertainCount = words.filter((word) =>\n      uncertaintyWords.includes(word)\n    ).length;\n    const factualCount = words.filter((word) =>\n      factualWords.includes(word)\n    ).length;\n\n    return Math.min(\n      1.0,\n      Math.max(0.0, ((factualCount - uncertainCount) / words.length) * 10 + 0.5)\n    );\n  }\n\n  private assessBias(text: string): number {\n    // Simplified bias assessment\n    const biasWords = [\"always\", \"never\", \"all\", \"none\", \"everyone\", \"nobody\"];\n    const words = text.toLowerCase().split(/\\s+/);\n    const biasCount = words.filter((word) => biasWords.includes(word)).length;\n\n    return Math.min(1.0, (biasCount / words.length) * 5);\n  }\n}\n\nexport default QualityMonitor;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c537b4dd2e34358ff2ff199754761f244b7ebdcf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_e3cu4amr6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_e3cu4amr6();
cov_e3cu4amr6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_e3cu4amr6().s[1]++;
exports.QualityMonitor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_e3cu4amr6().s[2]++, require("tslib"));
const client_cloudwatch_1 =
/* istanbul ignore next */
(cov_e3cu4amr6().s[3]++, require("@aws-sdk/client-cloudwatch"));
class QualityMonitor {
  constructor(driftMonitor, cloudWatch, thresholds) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[0]++;
    cov_e3cu4amr6().s[4]++;
    this.assessmentHistory = new Map();
    /* istanbul ignore next */
    cov_e3cu4amr6().s[5]++;
    this.alertCallbacks = [];
    /* istanbul ignore next */
    cov_e3cu4amr6().s[6]++;
    this.driftMonitor = driftMonitor;
    /* istanbul ignore next */
    cov_e3cu4amr6().s[7]++;
    this.cloudWatch =
    /* istanbul ignore next */
    (cov_e3cu4amr6().b[0][0]++, cloudWatch) ||
    /* istanbul ignore next */
    (cov_e3cu4amr6().b[0][1]++, new client_cloudwatch_1.CloudWatchClient({
      region:
      /* istanbul ignore next */
      (cov_e3cu4amr6().b[1][0]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_e3cu4amr6().b[1][1]++, "eu-central-1")
    }));
    /* istanbul ignore next */
    cov_e3cu4amr6().s[8]++;
    this.thresholds = Object.assign({
      overallScore: {
        warning: 0.7,
        critical: 0.6
      },
      coherence: {
        warning: 0.7,
        critical: 0.6
      },
      relevance: {
        warning: 0.7,
        critical: 0.6
      },
      factuality: {
        warning: 0.7,
        critical: 0.6
      },
      toxicity: {
        warning: 0.2,
        critical: 0.3
      },
      bias: {
        warning: 0.2,
        critical: 0.3
      },
      userSatisfaction: {
        warning: 3.0,
        critical: 2.5
      }
    }, thresholds);
    // Register with drift monitor for integrated alerts
    /* istanbul ignore next */
    cov_e3cu4amr6().s[9]++;
    this.driftMonitor.onAlert(this.handleDriftAlert.bind(this));
  }
  /**
   * Assess quality of an AI interaction
   */
  assessQuality(modelId, provider, requestId, input, output, metadata) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[1]++;
    cov_e3cu4amr6().s[10]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[2]++;
      const assessment =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[11]++, {
        timestamp: new Date(),
        modelId,
        provider,
        requestId,
        inputQuality: yield this.assessInputQuality(input),
        outputQuality: yield this.assessOutputQuality(output, input),
        performance: metadata,
        userFeedback: metadata.userFeedback,
        overallScore: 0 // Will be calculated
      });
      // Calculate overall score
      /* istanbul ignore next */
      cov_e3cu4amr6().s[12]++;
      assessment.overallScore = this.calculateOverallScore(assessment);
      // Store assessment
      /* istanbul ignore next */
      cov_e3cu4amr6().s[13]++;
      if (!this.assessmentHistory.has(modelId)) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[2][0]++;
        cov_e3cu4amr6().s[14]++;
        this.assessmentHistory.set(modelId, []);
      } else
      /* istanbul ignore next */
      {
        cov_e3cu4amr6().b[2][1]++;
      }
      cov_e3cu4amr6().s[15]++;
      this.assessmentHistory.get(modelId).push(assessment);
      // Keep only last 1000 assessments per model
      const history =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[16]++, this.assessmentHistory.get(modelId));
      /* istanbul ignore next */
      cov_e3cu4amr6().s[17]++;
      if (history.length > 1000) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[3][0]++;
        cov_e3cu4amr6().s[18]++;
        history.splice(0, history.length - 1000);
      } else
      /* istanbul ignore next */
      {
        cov_e3cu4amr6().b[3][1]++;
      }
      // Publish metrics to CloudWatch
      cov_e3cu4amr6().s[19]++;
      yield this.publishQualityMetrics(assessment);
      // Check for quality alerts
      const alerts =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[20]++, yield this.checkQualityAlerts(assessment));
      /* istanbul ignore next */
      cov_e3cu4amr6().s[21]++;
      for (const alert of alerts) {
        /* istanbul ignore next */
        cov_e3cu4amr6().s[22]++;
        yield this.sendAlert(alert);
      }
      /* istanbul ignore next */
      cov_e3cu4amr6().s[23]++;
      return assessment;
    });
  }
  /**
   * Analyze quality trends for a model
   */
  analyzeQualityTrends(modelId, timeRange) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[3]++;
    cov_e3cu4amr6().s[24]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[4]++;
      const history =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[25]++,
      /* istanbul ignore next */
      (cov_e3cu4amr6().b[4][0]++, this.assessmentHistory.get(modelId)) ||
      /* istanbul ignore next */
      (cov_e3cu4amr6().b[4][1]++, []));
      const relevantAssessments =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[26]++, history.filter(assessment => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[5]++;
        cov_e3cu4amr6().s[27]++;
        return /* istanbul ignore next */(cov_e3cu4amr6().b[5][0]++, assessment.timestamp >= timeRange.start) &&
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[5][1]++, assessment.timestamp <= timeRange.end);
      }));
      /* istanbul ignore next */
      cov_e3cu4amr6().s[28]++;
      if (relevantAssessments.length === 0) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[6][0]++;
        cov_e3cu4amr6().s[29]++;
        throw new Error(`No quality assessments found for model ${modelId} in the specified time range`);
      } else
      /* istanbul ignore next */
      {
        cov_e3cu4amr6().b[6][1]++;
      }
      // Split assessments into current and previous periods
      const midpoint =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[30]++, new Date((timeRange.start.getTime() + timeRange.end.getTime()) / 2));
      const previousAssessments =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[31]++, relevantAssessments.filter(a => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[6]++;
        cov_e3cu4amr6().s[32]++;
        return a.timestamp < midpoint;
      }));
      const currentAssessments =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[33]++, relevantAssessments.filter(a => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[7]++;
        cov_e3cu4amr6().s[34]++;
        return a.timestamp >= midpoint;
      }));
      const trends =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[35]++, {
        modelId,
        timeRange,
        trends: {
          overallQuality: this.calculateTrend(currentAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[8]++;
            cov_e3cu4amr6().s[36]++;
            return a.overallScore;
          }), previousAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[9]++;
            cov_e3cu4amr6().s[37]++;
            return a.overallScore;
          })),
          coherence: this.calculateTrend(currentAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[10]++;
            cov_e3cu4amr6().s[38]++;
            return a.outputQuality.coherence;
          }), previousAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[11]++;
            cov_e3cu4amr6().s[39]++;
            return a.outputQuality.coherence;
          })),
          relevance: this.calculateTrend(currentAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[12]++;
            cov_e3cu4amr6().s[40]++;
            return a.outputQuality.relevance;
          }), previousAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[13]++;
            cov_e3cu4amr6().s[41]++;
            return a.outputQuality.relevance;
          })),
          factuality: this.calculateTrend(currentAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[14]++;
            cov_e3cu4amr6().s[42]++;
            return a.outputQuality.factuality;
          }), previousAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[15]++;
            cov_e3cu4amr6().s[43]++;
            return a.outputQuality.factuality;
          })),
          toxicity: this.calculateTrend(currentAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[16]++;
            cov_e3cu4amr6().s[44]++;
            return a.outputQuality.toxicity;
          }), previousAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[17]++;
            cov_e3cu4amr6().s[45]++;
            return a.outputQuality.toxicity;
          }), false // Lower is better for toxicity
          ),
          userSatisfaction: this.calculateTrend(currentAssessments.filter(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[18]++;
            cov_e3cu4amr6().s[46]++;
            return a.userFeedback;
          }).map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[19]++;
            cov_e3cu4amr6().s[47]++;
            return a.userFeedback.rating;
          }), previousAssessments.filter(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[20]++;
            cov_e3cu4amr6().s[48]++;
            return a.userFeedback;
          }).map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[21]++;
            cov_e3cu4amr6().s[49]++;
            return a.userFeedback.rating;
          }))
        },
        statistics: {
          totalAssessments: relevantAssessments.length,
          averageLatency: this.calculateAverage(relevantAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[22]++;
            cov_e3cu4amr6().s[50]++;
            return a.performance.latency;
          })),
          averageCost: this.calculateAverage(relevantAssessments.map(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[23]++;
            cov_e3cu4amr6().s[51]++;
            return a.performance.cost;
          })),
          errorRate: 0,
          // Would need error tracking
          userFeedbackRate: relevantAssessments.filter(a => {
            /* istanbul ignore next */
            cov_e3cu4amr6().f[24]++;
            cov_e3cu4amr6().s[52]++;
            return a.userFeedback;
          }).length / relevantAssessments.length
        }
      });
      /* istanbul ignore next */
      cov_e3cu4amr6().s[53]++;
      return trends;
    });
  }
  /**
   * Get quality metrics from CloudWatch
   */
  getQualityMetrics(modelId, metricName, timeRange) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[25]++;
    cov_e3cu4amr6().s[54]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[26]++;
      const response =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[55]++, yield this.cloudWatch.send(new client_cloudwatch_1.GetMetricStatisticsCommand({
        Namespace: "AI/Quality",
        MetricName: metricName,
        Dimensions: [{
          Name: "ModelId",
          Value: modelId
        }],
        StartTime: timeRange.start,
        EndTime: timeRange.end,
        Period: 300,
        // 5 minutes
        Statistics: ["Average"]
      })));
      /* istanbul ignore next */
      cov_e3cu4amr6().s[56]++;
      return (
      /* istanbul ignore next */
      (cov_e3cu4amr6().b[7][0]++, response.Datapoints) ||
      /* istanbul ignore next */
      (cov_e3cu4amr6().b[7][1]++, [])).map(point => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[27]++;
        cov_e3cu4amr6().s[57]++;
        return {
          timestamp: point.Timestamp,
          value: point.Average
        };
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[28]++;
        cov_e3cu4amr6().s[58]++;
        return a.timestamp.getTime() - b.timestamp.getTime();
      });
    });
  }
  /**
   * Register alert callback
   */
  onAlert(callback) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[29]++;
    cov_e3cu4amr6().s[59]++;
    this.alertCallbacks.push(callback);
  }
  /**
   * Assess input quality
   */
  assessInputQuality(input) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[30]++;
    cov_e3cu4amr6().s[60]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[31]++;
      // Simplified quality assessment - in production, use ML models
      const length =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[61]++, input.length);
      const wordCount =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[62]++, input.split(/\s+/).length);
      /* istanbul ignore next */
      cov_e3cu4amr6().s[63]++;
      return {
        clarity: Math.min(1.0, Math.max(0.0, 1.0 - Math.abs(wordCount - 50) / 100)),
        // Optimal around 50 words
        complexity: Math.min(1.0, wordCount / 100),
        // More words = more complex
        toxicity: this.assessToxicity(input),
        piiRisk: this.assessPIIRisk(input)
      };
    });
  }
  /**
   * Assess output quality
   */
  assessOutputQuality(output, input) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[32]++;
    cov_e3cu4amr6().s[64]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[33]++;
      // Simplified quality assessment - in production, use ML models
      const outputLength =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[65]++, output.length);
      const inputLength =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[66]++, input.length);
      /* istanbul ignore next */
      cov_e3cu4amr6().s[67]++;
      return {
        coherence: this.assessCoherence(output),
        relevance: this.assessRelevance(output, input),
        factuality: this.assessFactuality(output),
        completeness: Math.min(1.0, outputLength / (inputLength * 2)),
        // Reasonable response length
        toxicity: this.assessToxicity(output),
        bias: this.assessBias(output)
      };
    });
  }
  /**
   * Calculate overall quality score
   */
  calculateOverallScore(assessment) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[34]++;
    const weights =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[68]++, {
      coherence: 0.2,
      relevance: 0.25,
      factuality: 0.2,
      completeness: 0.1,
      toxicity: -0.15,
      // Negative weight (lower toxicity is better)
      bias: -0.1 // Negative weight (lower bias is better)
    });
    /* istanbul ignore next */
    cov_e3cu4amr6().s[69]++;
    return Math.max(0, Math.min(1, assessment.outputQuality.coherence * weights.coherence + assessment.outputQuality.relevance * weights.relevance + assessment.outputQuality.factuality * weights.factuality + assessment.outputQuality.completeness * weights.completeness + (1 - assessment.outputQuality.toxicity) * Math.abs(weights.toxicity) + (1 - assessment.outputQuality.bias) * Math.abs(weights.bias)));
  }
  /**
   * Check for quality alerts
   */
  checkQualityAlerts(assessment) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[35]++;
    cov_e3cu4amr6().s[70]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[36]++;
      const alerts =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[71]++, []);
      // Check overall score
      /* istanbul ignore next */
      cov_e3cu4amr6().s[72]++;
      if (assessment.overallScore <= this.thresholds.overallScore.critical) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[8][0]++;
        cov_e3cu4amr6().s[73]++;
        alerts.push(this.createQualityAlert("critical", "quality_degradation", assessment, `Critical quality degradation: overall score ${assessment.overallScore.toFixed(3)}`));
      } else {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[8][1]++;
        cov_e3cu4amr6().s[74]++;
        if (assessment.overallScore <= this.thresholds.overallScore.warning) {
          /* istanbul ignore next */
          cov_e3cu4amr6().b[9][0]++;
          cov_e3cu4amr6().s[75]++;
          alerts.push(this.createQualityAlert("medium", "quality_degradation", assessment, `Quality warning: overall score ${assessment.overallScore.toFixed(3)}`));
        } else
        /* istanbul ignore next */
        {
          cov_e3cu4amr6().b[9][1]++;
        }
      }
      // Check individual metrics
      const checks =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[76]++, [{
        value: assessment.outputQuality.coherence,
        threshold: this.thresholds.coherence,
        name: "coherence"
      }, {
        value: assessment.outputQuality.relevance,
        threshold: this.thresholds.relevance,
        name: "relevance"
      }, {
        value: assessment.outputQuality.factuality,
        threshold: this.thresholds.factuality,
        name: "factuality"
      }]);
      /* istanbul ignore next */
      cov_e3cu4amr6().s[77]++;
      for (const check of checks) {
        /* istanbul ignore next */
        cov_e3cu4amr6().s[78]++;
        if (check.value <= check.threshold.critical) {
          /* istanbul ignore next */
          cov_e3cu4amr6().b[10][0]++;
          cov_e3cu4amr6().s[79]++;
          alerts.push(this.createQualityAlert("high", "quality_degradation", assessment, `Critical ${check.name} issue: score ${check.value.toFixed(3)}`));
        } else {
          /* istanbul ignore next */
          cov_e3cu4amr6().b[10][1]++;
          cov_e3cu4amr6().s[80]++;
          if (check.value <= check.threshold.warning) {
            /* istanbul ignore next */
            cov_e3cu4amr6().b[11][0]++;
            cov_e3cu4amr6().s[81]++;
            alerts.push(this.createQualityAlert("medium", "quality_degradation", assessment, `${check.name} warning: score ${check.value.toFixed(3)}`));
          } else
          /* istanbul ignore next */
          {
            cov_e3cu4amr6().b[11][1]++;
          }
        }
      }
      // Check toxicity and bias (higher is worse)
      /* istanbul ignore next */
      cov_e3cu4amr6().s[82]++;
      if (assessment.outputQuality.toxicity >= this.thresholds.toxicity.critical) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[12][0]++;
        cov_e3cu4amr6().s[83]++;
        alerts.push(this.createQualityAlert("critical", "quality_degradation", assessment, `Critical toxicity detected: score ${assessment.outputQuality.toxicity.toFixed(3)}`));
      } else
      /* istanbul ignore next */
      {
        cov_e3cu4amr6().b[12][1]++;
      }
      cov_e3cu4amr6().s[84]++;
      if (assessment.outputQuality.bias >= this.thresholds.bias.critical) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[13][0]++;
        cov_e3cu4amr6().s[85]++;
        alerts.push(this.createQualityAlert("critical", "quality_degradation", assessment, `Critical bias detected: score ${assessment.outputQuality.bias.toFixed(3)}`));
      } else
      /* istanbul ignore next */
      {
        cov_e3cu4amr6().b[13][1]++;
      }
      cov_e3cu4amr6().s[86]++;
      return alerts;
    });
  }
  /**
   * Create quality alert
   */
  createQualityAlert(severity, type, assessment, message) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[37]++;
    cov_e3cu4amr6().s[87]++;
    return {
      id: `quality-${assessment.modelId}-${Date.now()}`,
      timestamp: new Date(),
      severity,
      type,
      modelId: assessment.modelId,
      provider: assessment.provider,
      message,
      metrics: {},
      recommendations: this.getQualityRecommendations(assessment),
      qualityAssessment: assessment
    };
  }
  /**
   * Get quality improvement recommendations
   */
  getQualityRecommendations(assessment) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[38]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[88]++, []);
    /* istanbul ignore next */
    cov_e3cu4amr6().s[89]++;
    if (assessment.outputQuality.coherence < 0.7) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[14][0]++;
      cov_e3cu4amr6().s[90]++;
      recommendations.push("Improve prompt clarity and structure");
      /* istanbul ignore next */
      cov_e3cu4amr6().s[91]++;
      recommendations.push("Consider fine-tuning for better coherence");
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[14][1]++;
    }
    cov_e3cu4amr6().s[92]++;
    if (assessment.outputQuality.relevance < 0.7) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[15][0]++;
      cov_e3cu4amr6().s[93]++;
      recommendations.push("Review prompt engineering for better relevance");
      /* istanbul ignore next */
      cov_e3cu4amr6().s[94]++;
      recommendations.push("Implement context-aware response generation");
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[15][1]++;
    }
    cov_e3cu4amr6().s[95]++;
    if (assessment.outputQuality.factuality < 0.7) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[16][0]++;
      cov_e3cu4amr6().s[96]++;
      recommendations.push("Implement fact-checking mechanisms");
      /* istanbul ignore next */
      cov_e3cu4amr6().s[97]++;
      recommendations.push("Use retrieval-augmented generation (RAG)");
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[16][1]++;
    }
    cov_e3cu4amr6().s[98]++;
    if (assessment.outputQuality.toxicity > 0.2) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[17][0]++;
      cov_e3cu4amr6().s[99]++;
      recommendations.push("Implement stronger content filtering");
      /* istanbul ignore next */
      cov_e3cu4amr6().s[100]++;
      recommendations.push("Review training data for toxic content");
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[17][1]++;
    }
    cov_e3cu4amr6().s[101]++;
    if (assessment.outputQuality.bias > 0.2) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[18][0]++;
      cov_e3cu4amr6().s[102]++;
      recommendations.push("Implement bias detection and mitigation");
      /* istanbul ignore next */
      cov_e3cu4amr6().s[103]++;
      recommendations.push("Review training data for bias patterns");
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[18][1]++;
    }
    cov_e3cu4amr6().s[104]++;
    return recommendations;
  }
  /**
   * Calculate trend between current and previous values
   */
  calculateTrend(currentValues, previousValues, higherIsBetter =
  /* istanbul ignore next */
  (cov_e3cu4amr6().b[19][0]++, true)) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[39]++;
    const current =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[105]++, this.calculateAverage(currentValues));
    const previous =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[106]++, this.calculateAverage(previousValues));
    const change =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[107]++, current - previous);
    let trend;
    const threshold =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[108]++, 0.05); // 5% change threshold
    /* istanbul ignore next */
    cov_e3cu4amr6().s[109]++;
    if (Math.abs(change) < threshold) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[20][0]++;
      cov_e3cu4amr6().s[110]++;
      trend = "stable";
    } else {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[20][1]++;
      cov_e3cu4amr6().s[111]++;
      if (higherIsBetter) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[21][0]++;
        cov_e3cu4amr6().s[112]++;
        trend = change > 0 ?
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[22][0]++, "improving") :
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[22][1]++, "degrading");
      } else {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[21][1]++;
        cov_e3cu4amr6().s[113]++;
        trend = change < 0 ?
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[23][0]++, "improving") :
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[23][1]++, "degrading");
      }
    }
    /* istanbul ignore next */
    cov_e3cu4amr6().s[114]++;
    return {
      current,
      previous,
      change,
      trend
    };
  }
  /**
   * Calculate average of values
   */
  calculateAverage(values) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[40]++;
    cov_e3cu4amr6().s[115]++;
    if (values.length === 0) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[24][0]++;
      cov_e3cu4amr6().s[116]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[24][1]++;
    }
    cov_e3cu4amr6().s[117]++;
    return values.reduce((sum, value) => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[41]++;
      cov_e3cu4amr6().s[118]++;
      return sum + value;
    }, 0) / values.length;
  }
  /**
   * Publish quality metrics to CloudWatch
   */
  publishQualityMetrics(assessment) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[42]++;
    cov_e3cu4amr6().s[119]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[43]++;
      const metrics =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[120]++, {
        OverallScore: assessment.overallScore,
        Coherence: assessment.outputQuality.coherence,
        Relevance: assessment.outputQuality.relevance,
        Factuality: assessment.outputQuality.factuality,
        Completeness: assessment.outputQuality.completeness,
        Toxicity: assessment.outputQuality.toxicity,
        Bias: assessment.outputQuality.bias,
        Latency: assessment.performance.latency,
        TokenCount: assessment.performance.tokenCount,
        Cost: assessment.performance.cost
      });
      /* istanbul ignore next */
      cov_e3cu4amr6().s[121]++;
      if (assessment.userFeedback) {
        /* istanbul ignore next */
        cov_e3cu4amr6().b[25][0]++;
        cov_e3cu4amr6().s[122]++;
        metrics["UserRating"] = assessment.userFeedback.rating;
        /* istanbul ignore next */
        cov_e3cu4amr6().s[123]++;
        metrics["UserHelpful"] = assessment.userFeedback.helpful ?
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[26][0]++, 1) :
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[26][1]++, 0);
        /* istanbul ignore next */
        cov_e3cu4amr6().s[124]++;
        metrics["UserAccurate"] = assessment.userFeedback.accurate ?
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[27][0]++, 1) :
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[27][1]++, 0);
        /* istanbul ignore next */
        cov_e3cu4amr6().s[125]++;
        metrics["UserAppropriate"] = assessment.userFeedback.appropriate ?
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[28][0]++, 1) :
        /* istanbul ignore next */
        (cov_e3cu4amr6().b[28][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_e3cu4amr6().b[25][1]++;
      }
      const metricData =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[126]++, Object.entries(metrics).map(([name, value]) => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[44]++;
        cov_e3cu4amr6().s[127]++;
        return {
          MetricName: name,
          Value: value,
          Unit: "None",
          Dimensions: [{
            Name: "ModelId",
            Value: assessment.modelId
          }, {
            Name: "Provider",
            Value: assessment.provider
          }],
          Timestamp: assessment.timestamp
        };
      }));
      /* istanbul ignore next */
      cov_e3cu4amr6().s[128]++;
      yield this.cloudWatch.send(new client_cloudwatch_1.PutMetricDataCommand({
        Namespace: "AI/Quality",
        MetricData: metricData
      }));
    });
  }
  /**
   * Send alert through registered callbacks
   */
  sendAlert(alert) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[45]++;
    cov_e3cu4amr6().s[129]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[46]++;
      cov_e3cu4amr6().s[130]++;
      for (const callback of this.alertCallbacks) {
        /* istanbul ignore next */
        cov_e3cu4amr6().s[131]++;
        try {
          /* istanbul ignore next */
          cov_e3cu4amr6().s[132]++;
          yield callback(alert);
        } catch (error) {
          /* istanbul ignore next */
          cov_e3cu4amr6().s[133]++;
          console.error("Failed to send quality alert:", error);
        }
      }
    });
  }
  /**
   * Handle drift alerts from drift monitor
   */
  handleDriftAlert(driftAlert) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[47]++;
    cov_e3cu4amr6().s[134]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[48]++;
      // Convert drift alert to quality alert for unified handling
      const qualityAlert =
      /* istanbul ignore next */
      (cov_e3cu4amr6().s[135]++, Object.assign(Object.assign({}, driftAlert), {
        id: `drift-quality-${driftAlert.id}`
      }));
      /* istanbul ignore next */
      cov_e3cu4amr6().s[136]++;
      yield this.sendAlert(qualityAlert);
    });
  }
  // Simplified quality assessment methods (in production, use ML models)
  assessToxicity(text) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[49]++;
    const toxicWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[137]++, ["hate", "toxic", "harmful", "offensive"]);
    const words =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[138]++, text.toLowerCase().split(/\s+/));
    const toxicCount =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[139]++, words.filter(word => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[50]++;
      cov_e3cu4amr6().s[140]++;
      return toxicWords.some(toxic => {
        /* istanbul ignore next */
        cov_e3cu4amr6().f[51]++;
        cov_e3cu4amr6().s[141]++;
        return word.includes(toxic);
      });
    }).length);
    /* istanbul ignore next */
    cov_e3cu4amr6().s[142]++;
    return Math.min(1.0, toxicCount / words.length * 10);
  }
  assessPIIRisk(text) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[52]++;
    const piiPatterns =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[143]++, [/\b\d{3}-\d{2}-\d{4}\b/,
    // SSN
    /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/,
    // Email
    /\b\d{3}-\d{3}-\d{4}\b/ // Phone
    ]);
    const matches =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[144]++, piiPatterns.filter(pattern => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[53]++;
      cov_e3cu4amr6().s[145]++;
      return pattern.test(text);
    }).length);
    /* istanbul ignore next */
    cov_e3cu4amr6().s[146]++;
    return Math.min(1.0, matches / 3);
  }
  assessCoherence(text) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[54]++;
    // Simplified coherence assessment
    const sentences =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[147]++, text.split(/[.!?]+/).filter(s => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[55]++;
      cov_e3cu4amr6().s[148]++;
      return s.trim().length > 0;
    }));
    /* istanbul ignore next */
    cov_e3cu4amr6().s[149]++;
    if (sentences.length === 0) {
      /* istanbul ignore next */
      cov_e3cu4amr6().b[29][0]++;
      cov_e3cu4amr6().s[150]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_e3cu4amr6().b[29][1]++;
    }
    // Check for reasonable sentence length and structure
    const avgSentenceLength =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[151]++, text.length / sentences.length);
    const coherenceScore =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[152]++, Math.min(1.0, Math.max(0.0, 1.0 - Math.abs(avgSentenceLength - 100) / 200)));
    /* istanbul ignore next */
    cov_e3cu4amr6().s[153]++;
    return coherenceScore;
  }
  assessRelevance(output, input) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[56]++;
    // Simplified relevance assessment based on keyword overlap
    const inputWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[154]++, new Set(input.toLowerCase().split(/\s+/)));
    const outputWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[155]++, output.toLowerCase().split(/\s+/));
    const relevantWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[156]++, outputWords.filter(word => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[57]++;
      cov_e3cu4amr6().s[157]++;
      return inputWords.has(word);
    }).length);
    /* istanbul ignore next */
    cov_e3cu4amr6().s[158]++;
    return Math.min(1.0, relevantWords / Math.max(1, outputWords.length / 2));
  }
  assessFactuality(text) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[58]++;
    // Simplified factuality assessment
    const uncertaintyWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[159]++, ["maybe", "possibly", "might", "could", "perhaps"]);
    const factualWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[160]++, ["is", "are", "was", "were", "will", "has", "have"]);
    const words =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[161]++, text.toLowerCase().split(/\s+/));
    const uncertainCount =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[162]++, words.filter(word => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[59]++;
      cov_e3cu4amr6().s[163]++;
      return uncertaintyWords.includes(word);
    }).length);
    const factualCount =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[164]++, words.filter(word => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[60]++;
      cov_e3cu4amr6().s[165]++;
      return factualWords.includes(word);
    }).length);
    /* istanbul ignore next */
    cov_e3cu4amr6().s[166]++;
    return Math.min(1.0, Math.max(0.0, (factualCount - uncertainCount) / words.length * 10 + 0.5));
  }
  assessBias(text) {
    /* istanbul ignore next */
    cov_e3cu4amr6().f[61]++;
    // Simplified bias assessment
    const biasWords =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[167]++, ["always", "never", "all", "none", "everyone", "nobody"]);
    const words =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[168]++, text.toLowerCase().split(/\s+/));
    const biasCount =
    /* istanbul ignore next */
    (cov_e3cu4amr6().s[169]++, words.filter(word => {
      /* istanbul ignore next */
      cov_e3cu4amr6().f[62]++;
      cov_e3cu4amr6().s[170]++;
      return biasWords.includes(word);
    }).length);
    /* istanbul ignore next */
    cov_e3cu4amr6().s[171]++;
    return Math.min(1.0, biasCount / words.length * 5);
  }
}
/* istanbul ignore next */
cov_e3cu4amr6().s[172]++;
exports.QualityMonitor = QualityMonitor;
/* istanbul ignore next */
cov_e3cu4amr6().s[173]++;
exports.default = QualityMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZTNjdTRhbXI2IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiY2xpZW50X2Nsb3Vkd2F0Y2hfMSIsInJlcXVpcmUiLCJRdWFsaXR5TW9uaXRvciIsImNvbnN0cnVjdG9yIiwiZHJpZnRNb25pdG9yIiwiY2xvdWRXYXRjaCIsInRocmVzaG9sZHMiLCJhc3Nlc3NtZW50SGlzdG9yeSIsIk1hcCIsImFsZXJ0Q2FsbGJhY2tzIiwiQ2xvdWRXYXRjaENsaWVudCIsInJlZ2lvbiIsInByb2Nlc3MiLCJlbnYiLCJBV1NfUkVHSU9OIiwiT2JqZWN0IiwiYXNzaWduIiwib3ZlcmFsbFNjb3JlIiwid2FybmluZyIsImNyaXRpY2FsIiwiY29oZXJlbmNlIiwicmVsZXZhbmNlIiwiZmFjdHVhbGl0eSIsInRveGljaXR5IiwiYmlhcyIsInVzZXJTYXRpc2ZhY3Rpb24iLCJvbkFsZXJ0IiwiaGFuZGxlRHJpZnRBbGVydCIsImJpbmQiLCJhc3Nlc3NRdWFsaXR5IiwibW9kZWxJZCIsInByb3ZpZGVyIiwicmVxdWVzdElkIiwiaW5wdXQiLCJvdXRwdXQiLCJtZXRhZGF0YSIsImFzc2Vzc21lbnQiLCJ0aW1lc3RhbXAiLCJEYXRlIiwiaW5wdXRRdWFsaXR5IiwiYXNzZXNzSW5wdXRRdWFsaXR5Iiwib3V0cHV0UXVhbGl0eSIsImFzc2Vzc091dHB1dFF1YWxpdHkiLCJwZXJmb3JtYW5jZSIsInVzZXJGZWVkYmFjayIsImNhbGN1bGF0ZU92ZXJhbGxTY29yZSIsImhhcyIsInNldCIsImdldCIsInB1c2giLCJoaXN0b3J5IiwibGVuZ3RoIiwic3BsaWNlIiwicHVibGlzaFF1YWxpdHlNZXRyaWNzIiwiYWxlcnRzIiwiY2hlY2tRdWFsaXR5QWxlcnRzIiwiYWxlcnQiLCJzZW5kQWxlcnQiLCJhbmFseXplUXVhbGl0eVRyZW5kcyIsInRpbWVSYW5nZSIsInJlbGV2YW50QXNzZXNzbWVudHMiLCJmaWx0ZXIiLCJFcnJvciIsIm1pZHBvaW50IiwiZ2V0VGltZSIsInByZXZpb3VzQXNzZXNzbWVudHMiLCJhIiwiY3VycmVudEFzc2Vzc21lbnRzIiwidHJlbmRzIiwib3ZlcmFsbFF1YWxpdHkiLCJjYWxjdWxhdGVUcmVuZCIsIm1hcCIsInJhdGluZyIsInN0YXRpc3RpY3MiLCJ0b3RhbEFzc2Vzc21lbnRzIiwiYXZlcmFnZUxhdGVuY3kiLCJjYWxjdWxhdGVBdmVyYWdlIiwibGF0ZW5jeSIsImF2ZXJhZ2VDb3N0IiwiY29zdCIsImVycm9yUmF0ZSIsInVzZXJGZWVkYmFja1JhdGUiLCJnZXRRdWFsaXR5TWV0cmljcyIsIm1ldHJpY05hbWUiLCJyZXNwb25zZSIsInNlbmQiLCJHZXRNZXRyaWNTdGF0aXN0aWNzQ29tbWFuZCIsIk5hbWVzcGFjZSIsIk1ldHJpY05hbWUiLCJEaW1lbnNpb25zIiwiTmFtZSIsIlZhbHVlIiwiU3RhcnRUaW1lIiwiRW5kVGltZSIsIlBlcmlvZCIsIlN0YXRpc3RpY3MiLCJEYXRhcG9pbnRzIiwicG9pbnQiLCJUaW1lc3RhbXAiLCJ2YWx1ZSIsIkF2ZXJhZ2UiLCJzb3J0IiwiY2FsbGJhY2siLCJ3b3JkQ291bnQiLCJzcGxpdCIsImNsYXJpdHkiLCJNYXRoIiwibWluIiwibWF4IiwiYWJzIiwiY29tcGxleGl0eSIsImFzc2Vzc1RveGljaXR5IiwicGlpUmlzayIsImFzc2Vzc1BJSVJpc2siLCJvdXRwdXRMZW5ndGgiLCJpbnB1dExlbmd0aCIsImFzc2Vzc0NvaGVyZW5jZSIsImFzc2Vzc1JlbGV2YW5jZSIsImFzc2Vzc0ZhY3R1YWxpdHkiLCJjb21wbGV0ZW5lc3MiLCJhc3Nlc3NCaWFzIiwid2VpZ2h0cyIsImNyZWF0ZVF1YWxpdHlBbGVydCIsInRvRml4ZWQiLCJjaGVja3MiLCJ0aHJlc2hvbGQiLCJjaGVjayIsInNldmVyaXR5IiwibWVzc2FnZSIsImlkIiwibm93IiwibWV0cmljcyIsInJlY29tbWVuZGF0aW9ucyIsImdldFF1YWxpdHlSZWNvbW1lbmRhdGlvbnMiLCJxdWFsaXR5QXNzZXNzbWVudCIsImN1cnJlbnRWYWx1ZXMiLCJwcmV2aW91c1ZhbHVlcyIsImhpZ2hlcklzQmV0dGVyIiwiY3VycmVudCIsInByZXZpb3VzIiwiY2hhbmdlIiwidHJlbmQiLCJ2YWx1ZXMiLCJyZWR1Y2UiLCJzdW0iLCJPdmVyYWxsU2NvcmUiLCJDb2hlcmVuY2UiLCJSZWxldmFuY2UiLCJGYWN0dWFsaXR5IiwiQ29tcGxldGVuZXNzIiwiVG94aWNpdHkiLCJCaWFzIiwiTGF0ZW5jeSIsIlRva2VuQ291bnQiLCJ0b2tlbkNvdW50IiwiQ29zdCIsImhlbHBmdWwiLCJhY2N1cmF0ZSIsImFwcHJvcHJpYXRlIiwibWV0cmljRGF0YSIsImVudHJpZXMiLCJVbml0IiwiUHV0TWV0cmljRGF0YUNvbW1hbmQiLCJNZXRyaWNEYXRhIiwiZXJyb3IiLCJjb25zb2xlIiwiZHJpZnRBbGVydCIsInF1YWxpdHlBbGVydCIsInRleHQiLCJ0b3hpY1dvcmRzIiwid29yZHMiLCJ0b0xvd2VyQ2FzZSIsInRveGljQ291bnQiLCJ3b3JkIiwic29tZSIsInRveGljIiwiaW5jbHVkZXMiLCJwaWlQYXR0ZXJucyIsIm1hdGNoZXMiLCJwYXR0ZXJuIiwidGVzdCIsInNlbnRlbmNlcyIsInRyaW0iLCJhdmdTZW50ZW5jZUxlbmd0aCIsImNvaGVyZW5jZVNjb3JlIiwiaW5wdXRXb3JkcyIsIlNldCIsIm91dHB1dFdvcmRzIiwicmVsZXZhbnRXb3JkcyIsInVuY2VydGFpbnR5V29yZHMiLCJmYWN0dWFsV29yZHMiLCJ1bmNlcnRhaW5Db3VudCIsImZhY3R1YWxDb3VudCIsImJpYXNXb3JkcyIsImJpYXNDb3VudCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiL1VzZXJzL21hdGJha2gtdmlzaWJpbGl0eS1ib29zdC4yMDI1MDkyMC9zcmMvbGliL2FpLW9yY2hlc3RyYXRvci9xdWFsaXR5LW1vbml0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBSSBRdWFsaXR5IE1vbml0b3JpbmcgU2VydmljZVxuICpcbiAqIFByb3ZpZGVzIGNvbXByZWhlbnNpdmUgcXVhbGl0eSBtb25pdG9yaW5nIGZvciBBSSBtb2RlbHMgaW5jbHVkaW5nOlxuICogLSBSZWFsLXRpbWUgcXVhbGl0eSBhc3Nlc3NtZW50XG4gKiAtIFF1YWxpdHkgdHJlbmQgYW5hbHlzaXNcbiAqIC0gQXV0b21hdGVkIHF1YWxpdHkgZGVncmFkYXRpb24gZGV0ZWN0aW9uXG4gKiAtIEludGVncmF0aW9uIHdpdGggZHJpZnQgbW9uaXRvcmluZ1xuICovXG5cbmltcG9ydCB7XG4gIENsb3VkV2F0Y2hDbGllbnQsXG4gIEdldE1ldHJpY1N0YXRpc3RpY3NDb21tYW5kLFxuICBQdXRNZXRyaWNEYXRhQ29tbWFuZCxcbn0gZnJvbSBcIkBhd3Mtc2RrL2NsaWVudC1jbG91ZHdhdGNoXCI7XG5pbXBvcnQgeyBEcmlmdEFsZXJ0LCBEcmlmdE1vbml0b3IgfSBmcm9tIFwiLi9kcmlmdC1tb25pdG9yXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVhbGl0eUFzc2Vzc21lbnQge1xuICB0aW1lc3RhbXA6IERhdGU7XG4gIG1vZGVsSWQ6IHN0cmluZztcbiAgcHJvdmlkZXI6IHN0cmluZztcbiAgcmVxdWVzdElkOiBzdHJpbmc7XG5cbiAgLy8gSW5wdXQgcXVhbGl0eVxuICBpbnB1dFF1YWxpdHk6IHtcbiAgICBjbGFyaXR5OiBudW1iZXI7XG4gICAgY29tcGxleGl0eTogbnVtYmVyO1xuICAgIHRveGljaXR5OiBudW1iZXI7XG4gICAgcGlpUmlzazogbnVtYmVyO1xuICB9O1xuXG4gIC8vIE91dHB1dCBxdWFsaXR5XG4gIG91dHB1dFF1YWxpdHk6IHtcbiAgICBjb2hlcmVuY2U6IG51bWJlcjtcbiAgICByZWxldmFuY2U6IG51bWJlcjtcbiAgICBmYWN0dWFsaXR5OiBudW1iZXI7XG4gICAgY29tcGxldGVuZXNzOiBudW1iZXI7XG4gICAgdG94aWNpdHk6IG51bWJlcjtcbiAgICBiaWFzOiBudW1iZXI7XG4gIH07XG5cbiAgLy8gUGVyZm9ybWFuY2UgbWV0cmljc1xuICBwZXJmb3JtYW5jZToge1xuICAgIGxhdGVuY3k6IG51bWJlcjtcbiAgICB0b2tlbkNvdW50OiBudW1iZXI7XG4gICAgY29zdDogbnVtYmVyO1xuICB9O1xuXG4gIC8vIFVzZXIgZmVlZGJhY2sgKGlmIGF2YWlsYWJsZSlcbiAgdXNlckZlZWRiYWNrPzoge1xuICAgIHJhdGluZzogbnVtYmVyOyAvLyAxLTUgc2NhbGVcbiAgICBoZWxwZnVsOiBib29sZWFuO1xuICAgIGFjY3VyYXRlOiBib29sZWFuO1xuICAgIGFwcHJvcHJpYXRlOiBib29sZWFuO1xuICB9O1xuXG4gIC8vIE92ZXJhbGwgcXVhbGl0eSBzY29yZVxuICBvdmVyYWxsU2NvcmU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBRdWFsaXR5VHJlbmRzIHtcbiAgbW9kZWxJZDogc3RyaW5nO1xuICB0aW1lUmFuZ2U6IHtcbiAgICBzdGFydDogRGF0ZTtcbiAgICBlbmQ6IERhdGU7XG4gIH07XG5cbiAgLy8gVHJlbmQgbWV0cmljc1xuICB0cmVuZHM6IHtcbiAgICBvdmVyYWxsUXVhbGl0eToge1xuICAgICAgY3VycmVudDogbnVtYmVyO1xuICAgICAgcHJldmlvdXM6IG51bWJlcjtcbiAgICAgIGNoYW5nZTogbnVtYmVyO1xuICAgICAgdHJlbmQ6IFwiaW1wcm92aW5nXCIgfCBcInN0YWJsZVwiIHwgXCJkZWdyYWRpbmdcIjtcbiAgICB9O1xuICAgIGNvaGVyZW5jZToge1xuICAgICAgY3VycmVudDogbnVtYmVyO1xuICAgICAgcHJldmlvdXM6IG51bWJlcjtcbiAgICAgIGNoYW5nZTogbnVtYmVyO1xuICAgICAgdHJlbmQ6IFwiaW1wcm92aW5nXCIgfCBcInN0YWJsZVwiIHwgXCJkZWdyYWRpbmdcIjtcbiAgICB9O1xuICAgIHJlbGV2YW5jZToge1xuICAgICAgY3VycmVudDogbnVtYmVyO1xuICAgICAgcHJldmlvdXM6IG51bWJlcjtcbiAgICAgIGNoYW5nZTogbnVtYmVyO1xuICAgICAgdHJlbmQ6IFwiaW1wcm92aW5nXCIgfCBcInN0YWJsZVwiIHwgXCJkZWdyYWRpbmdcIjtcbiAgICB9O1xuICAgIGZhY3R1YWxpdHk6IHtcbiAgICAgIGN1cnJlbnQ6IG51bWJlcjtcbiAgICAgIHByZXZpb3VzOiBudW1iZXI7XG4gICAgICBjaGFuZ2U6IG51bWJlcjtcbiAgICAgIHRyZW5kOiBcImltcHJvdmluZ1wiIHwgXCJzdGFibGVcIiB8IFwiZGVncmFkaW5nXCI7XG4gICAgfTtcbiAgICB0b3hpY2l0eToge1xuICAgICAgY3VycmVudDogbnVtYmVyO1xuICAgICAgcHJldmlvdXM6IG51bWJlcjtcbiAgICAgIGNoYW5nZTogbnVtYmVyO1xuICAgICAgdHJlbmQ6IFwiaW1wcm92aW5nXCIgfCBcInN0YWJsZVwiIHwgXCJkZWdyYWRpbmdcIjtcbiAgICB9O1xuICAgIHVzZXJTYXRpc2ZhY3Rpb246IHtcbiAgICAgIGN1cnJlbnQ6IG51bWJlcjtcbiAgICAgIHByZXZpb3VzOiBudW1iZXI7XG4gICAgICBjaGFuZ2U6IG51bWJlcjtcbiAgICAgIHRyZW5kOiBcImltcHJvdmluZ1wiIHwgXCJzdGFibGVcIiB8IFwiZGVncmFkaW5nXCI7XG4gICAgfTtcbiAgfTtcblxuICAvLyBTdGF0aXN0aWNhbCBhbmFseXNpc1xuICBzdGF0aXN0aWNzOiB7XG4gICAgdG90YWxBc3Nlc3NtZW50czogbnVtYmVyO1xuICAgIGF2ZXJhZ2VMYXRlbmN5OiBudW1iZXI7XG4gICAgYXZlcmFnZUNvc3Q6IG51bWJlcjtcbiAgICBlcnJvclJhdGU6IG51bWJlcjtcbiAgICB1c2VyRmVlZGJhY2tSYXRlOiBudW1iZXI7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVhbGl0eUFsZXJ0IGV4dGVuZHMgRHJpZnRBbGVydCB7XG4gIHF1YWxpdHlBc3Nlc3NtZW50PzogUXVhbGl0eUFzc2Vzc21lbnQ7XG4gIHRyZW5kcz86IFF1YWxpdHlUcmVuZHM7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUXVhbGl0eVRocmVzaG9sZHMge1xuICBvdmVyYWxsU2NvcmU6IHtcbiAgICB3YXJuaW5nOiBudW1iZXI7XG4gICAgY3JpdGljYWw6IG51bWJlcjtcbiAgfTtcbiAgY29oZXJlbmNlOiB7XG4gICAgd2FybmluZzogbnVtYmVyO1xuICAgIGNyaXRpY2FsOiBudW1iZXI7XG4gIH07XG4gIHJlbGV2YW5jZToge1xuICAgIHdhcm5pbmc6IG51bWJlcjtcbiAgICBjcml0aWNhbDogbnVtYmVyO1xuICB9O1xuICBmYWN0dWFsaXR5OiB7XG4gICAgd2FybmluZzogbnVtYmVyO1xuICAgIGNyaXRpY2FsOiBudW1iZXI7XG4gIH07XG4gIHRveGljaXR5OiB7XG4gICAgd2FybmluZzogbnVtYmVyO1xuICAgIGNyaXRpY2FsOiBudW1iZXI7XG4gIH07XG4gIGJpYXM6IHtcbiAgICB3YXJuaW5nOiBudW1iZXI7XG4gICAgY3JpdGljYWw6IG51bWJlcjtcbiAgfTtcbiAgdXNlclNhdGlzZmFjdGlvbjoge1xuICAgIHdhcm5pbmc6IG51bWJlcjtcbiAgICBjcml0aWNhbDogbnVtYmVyO1xuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgUXVhbGl0eU1vbml0b3Ige1xuICBwcml2YXRlIGNsb3VkV2F0Y2g6IENsb3VkV2F0Y2hDbGllbnQ7XG4gIHByaXZhdGUgZHJpZnRNb25pdG9yOiBEcmlmdE1vbml0b3I7XG4gIHByaXZhdGUgdGhyZXNob2xkczogUXVhbGl0eVRocmVzaG9sZHM7XG4gIHByaXZhdGUgYXNzZXNzbWVudEhpc3Rvcnk6IE1hcDxzdHJpbmcsIFF1YWxpdHlBc3Nlc3NtZW50W10+ID0gbmV3IE1hcCgpO1xuICBwcml2YXRlIGFsZXJ0Q2FsbGJhY2tzOiBBcnJheTwoYWxlcnQ6IFF1YWxpdHlBbGVydCkgPT4gUHJvbWlzZTx2b2lkPj4gPSBbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBkcmlmdE1vbml0b3I6IERyaWZ0TW9uaXRvcixcbiAgICBjbG91ZFdhdGNoPzogQ2xvdWRXYXRjaENsaWVudCxcbiAgICB0aHJlc2hvbGRzPzogUGFydGlhbDxRdWFsaXR5VGhyZXNob2xkcz5cbiAgKSB7XG4gICAgdGhpcy5kcmlmdE1vbml0b3IgPSBkcmlmdE1vbml0b3I7XG4gICAgdGhpcy5jbG91ZFdhdGNoID1cbiAgICAgIGNsb3VkV2F0Y2ggfHxcbiAgICAgIG5ldyBDbG91ZFdhdGNoQ2xpZW50KHtcbiAgICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5BV1NfUkVHSU9OIHx8IFwiZXUtY2VudHJhbC0xXCIsXG4gICAgICB9KTtcblxuICAgIHRoaXMudGhyZXNob2xkcyA9IHtcbiAgICAgIG92ZXJhbGxTY29yZToge1xuICAgICAgICB3YXJuaW5nOiAwLjcsXG4gICAgICAgIGNyaXRpY2FsOiAwLjYsXG4gICAgICB9LFxuICAgICAgY29oZXJlbmNlOiB7XG4gICAgICAgIHdhcm5pbmc6IDAuNyxcbiAgICAgICAgY3JpdGljYWw6IDAuNixcbiAgICAgIH0sXG4gICAgICByZWxldmFuY2U6IHtcbiAgICAgICAgd2FybmluZzogMC43LFxuICAgICAgICBjcml0aWNhbDogMC42LFxuICAgICAgfSxcbiAgICAgIGZhY3R1YWxpdHk6IHtcbiAgICAgICAgd2FybmluZzogMC43LFxuICAgICAgICBjcml0aWNhbDogMC42LFxuICAgICAgfSxcbiAgICAgIHRveGljaXR5OiB7XG4gICAgICAgIHdhcm5pbmc6IDAuMixcbiAgICAgICAgY3JpdGljYWw6IDAuMyxcbiAgICAgIH0sXG4gICAgICBiaWFzOiB7XG4gICAgICAgIHdhcm5pbmc6IDAuMixcbiAgICAgICAgY3JpdGljYWw6IDAuMyxcbiAgICAgIH0sXG4gICAgICB1c2VyU2F0aXNmYWN0aW9uOiB7XG4gICAgICAgIHdhcm5pbmc6IDMuMCxcbiAgICAgICAgY3JpdGljYWw6IDIuNSxcbiAgICAgIH0sXG4gICAgICAuLi50aHJlc2hvbGRzLFxuICAgIH07XG5cbiAgICAvLyBSZWdpc3RlciB3aXRoIGRyaWZ0IG1vbml0b3IgZm9yIGludGVncmF0ZWQgYWxlcnRzXG4gICAgdGhpcy5kcmlmdE1vbml0b3Iub25BbGVydCh0aGlzLmhhbmRsZURyaWZ0QWxlcnQuYmluZCh0aGlzKSk7XG4gIH1cblxuICAvKipcbiAgICogQXNzZXNzIHF1YWxpdHkgb2YgYW4gQUkgaW50ZXJhY3Rpb25cbiAgICovXG4gIGFzeW5jIGFzc2Vzc1F1YWxpdHkoXG4gICAgbW9kZWxJZDogc3RyaW5nLFxuICAgIHByb3ZpZGVyOiBzdHJpbmcsXG4gICAgcmVxdWVzdElkOiBzdHJpbmcsXG4gICAgaW5wdXQ6IHN0cmluZyxcbiAgICBvdXRwdXQ6IHN0cmluZyxcbiAgICBtZXRhZGF0YToge1xuICAgICAgbGF0ZW5jeTogbnVtYmVyO1xuICAgICAgdG9rZW5Db3VudDogbnVtYmVyO1xuICAgICAgY29zdDogbnVtYmVyO1xuICAgICAgdXNlckZlZWRiYWNrPzogUXVhbGl0eUFzc2Vzc21lbnRbXCJ1c2VyRmVlZGJhY2tcIl07XG4gICAgfVxuICApOiBQcm9taXNlPFF1YWxpdHlBc3Nlc3NtZW50PiB7XG4gICAgY29uc3QgYXNzZXNzbWVudDogUXVhbGl0eUFzc2Vzc21lbnQgPSB7XG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXG4gICAgICBtb2RlbElkLFxuICAgICAgcHJvdmlkZXIsXG4gICAgICByZXF1ZXN0SWQsXG4gICAgICBpbnB1dFF1YWxpdHk6IGF3YWl0IHRoaXMuYXNzZXNzSW5wdXRRdWFsaXR5KGlucHV0KSxcbiAgICAgIG91dHB1dFF1YWxpdHk6IGF3YWl0IHRoaXMuYXNzZXNzT3V0cHV0UXVhbGl0eShvdXRwdXQsIGlucHV0KSxcbiAgICAgIHBlcmZvcm1hbmNlOiBtZXRhZGF0YSxcbiAgICAgIHVzZXJGZWVkYmFjazogbWV0YWRhdGEudXNlckZlZWRiYWNrLFxuICAgICAgb3ZlcmFsbFNjb3JlOiAwLCAvLyBXaWxsIGJlIGNhbGN1bGF0ZWRcbiAgICB9O1xuXG4gICAgLy8gQ2FsY3VsYXRlIG92ZXJhbGwgc2NvcmVcbiAgICBhc3Nlc3NtZW50Lm92ZXJhbGxTY29yZSA9IHRoaXMuY2FsY3VsYXRlT3ZlcmFsbFNjb3JlKGFzc2Vzc21lbnQpO1xuXG4gICAgLy8gU3RvcmUgYXNzZXNzbWVudFxuICAgIGlmICghdGhpcy5hc3Nlc3NtZW50SGlzdG9yeS5oYXMobW9kZWxJZCkpIHtcbiAgICAgIHRoaXMuYXNzZXNzbWVudEhpc3Rvcnkuc2V0KG1vZGVsSWQsIFtdKTtcbiAgICB9XG4gICAgdGhpcy5hc3Nlc3NtZW50SGlzdG9yeS5nZXQobW9kZWxJZCkhLnB1c2goYXNzZXNzbWVudCk7XG5cbiAgICAvLyBLZWVwIG9ubHkgbGFzdCAxMDAwIGFzc2Vzc21lbnRzIHBlciBtb2RlbFxuICAgIGNvbnN0IGhpc3RvcnkgPSB0aGlzLmFzc2Vzc21lbnRIaXN0b3J5LmdldChtb2RlbElkKSE7XG4gICAgaWYgKGhpc3RvcnkubGVuZ3RoID4gMTAwMCkge1xuICAgICAgaGlzdG9yeS5zcGxpY2UoMCwgaGlzdG9yeS5sZW5ndGggLSAxMDAwKTtcbiAgICB9XG5cbiAgICAvLyBQdWJsaXNoIG1ldHJpY3MgdG8gQ2xvdWRXYXRjaFxuICAgIGF3YWl0IHRoaXMucHVibGlzaFF1YWxpdHlNZXRyaWNzKGFzc2Vzc21lbnQpO1xuXG4gICAgLy8gQ2hlY2sgZm9yIHF1YWxpdHkgYWxlcnRzXG4gICAgY29uc3QgYWxlcnRzID0gYXdhaXQgdGhpcy5jaGVja1F1YWxpdHlBbGVydHMoYXNzZXNzbWVudCk7XG4gICAgZm9yIChjb25zdCBhbGVydCBvZiBhbGVydHMpIHtcbiAgICAgIGF3YWl0IHRoaXMuc2VuZEFsZXJ0KGFsZXJ0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXNzZXNzbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBbmFseXplIHF1YWxpdHkgdHJlbmRzIGZvciBhIG1vZGVsXG4gICAqL1xuICBhc3luYyBhbmFseXplUXVhbGl0eVRyZW5kcyhcbiAgICBtb2RlbElkOiBzdHJpbmcsXG4gICAgdGltZVJhbmdlOiB7IHN0YXJ0OiBEYXRlOyBlbmQ6IERhdGUgfVxuICApOiBQcm9taXNlPFF1YWxpdHlUcmVuZHM+IHtcbiAgICBjb25zdCBoaXN0b3J5ID0gdGhpcy5hc3Nlc3NtZW50SGlzdG9yeS5nZXQobW9kZWxJZCkgfHwgW107XG4gICAgY29uc3QgcmVsZXZhbnRBc3Nlc3NtZW50cyA9IGhpc3RvcnkuZmlsdGVyKFxuICAgICAgKGFzc2Vzc21lbnQpID0+XG4gICAgICAgIGFzc2Vzc21lbnQudGltZXN0YW1wID49IHRpbWVSYW5nZS5zdGFydCAmJlxuICAgICAgICBhc3Nlc3NtZW50LnRpbWVzdGFtcCA8PSB0aW1lUmFuZ2UuZW5kXG4gICAgKTtcblxuICAgIGlmIChyZWxldmFudEFzc2Vzc21lbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgTm8gcXVhbGl0eSBhc3Nlc3NtZW50cyBmb3VuZCBmb3IgbW9kZWwgJHttb2RlbElkfSBpbiB0aGUgc3BlY2lmaWVkIHRpbWUgcmFuZ2VgXG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIFNwbGl0IGFzc2Vzc21lbnRzIGludG8gY3VycmVudCBhbmQgcHJldmlvdXMgcGVyaW9kc1xuICAgIGNvbnN0IG1pZHBvaW50ID0gbmV3IERhdGUoXG4gICAgICAodGltZVJhbmdlLnN0YXJ0LmdldFRpbWUoKSArIHRpbWVSYW5nZS5lbmQuZ2V0VGltZSgpKSAvIDJcbiAgICApO1xuICAgIGNvbnN0IHByZXZpb3VzQXNzZXNzbWVudHMgPSByZWxldmFudEFzc2Vzc21lbnRzLmZpbHRlcihcbiAgICAgIChhKSA9PiBhLnRpbWVzdGFtcCA8IG1pZHBvaW50XG4gICAgKTtcbiAgICBjb25zdCBjdXJyZW50QXNzZXNzbWVudHMgPSByZWxldmFudEFzc2Vzc21lbnRzLmZpbHRlcihcbiAgICAgIChhKSA9PiBhLnRpbWVzdGFtcCA+PSBtaWRwb2ludFxuICAgICk7XG5cbiAgICBjb25zdCB0cmVuZHM6IFF1YWxpdHlUcmVuZHMgPSB7XG4gICAgICBtb2RlbElkLFxuICAgICAgdGltZVJhbmdlLFxuICAgICAgdHJlbmRzOiB7XG4gICAgICAgIG92ZXJhbGxRdWFsaXR5OiB0aGlzLmNhbGN1bGF0ZVRyZW5kKFxuICAgICAgICAgIGN1cnJlbnRBc3Nlc3NtZW50cy5tYXAoKGEpID0+IGEub3ZlcmFsbFNjb3JlKSxcbiAgICAgICAgICBwcmV2aW91c0Fzc2Vzc21lbnRzLm1hcCgoYSkgPT4gYS5vdmVyYWxsU2NvcmUpXG4gICAgICAgICksXG4gICAgICAgIGNvaGVyZW5jZTogdGhpcy5jYWxjdWxhdGVUcmVuZChcbiAgICAgICAgICBjdXJyZW50QXNzZXNzbWVudHMubWFwKChhKSA9PiBhLm91dHB1dFF1YWxpdHkuY29oZXJlbmNlKSxcbiAgICAgICAgICBwcmV2aW91c0Fzc2Vzc21lbnRzLm1hcCgoYSkgPT4gYS5vdXRwdXRRdWFsaXR5LmNvaGVyZW5jZSlcbiAgICAgICAgKSxcbiAgICAgICAgcmVsZXZhbmNlOiB0aGlzLmNhbGN1bGF0ZVRyZW5kKFxuICAgICAgICAgIGN1cnJlbnRBc3Nlc3NtZW50cy5tYXAoKGEpID0+IGEub3V0cHV0UXVhbGl0eS5yZWxldmFuY2UpLFxuICAgICAgICAgIHByZXZpb3VzQXNzZXNzbWVudHMubWFwKChhKSA9PiBhLm91dHB1dFF1YWxpdHkucmVsZXZhbmNlKVxuICAgICAgICApLFxuICAgICAgICBmYWN0dWFsaXR5OiB0aGlzLmNhbGN1bGF0ZVRyZW5kKFxuICAgICAgICAgIGN1cnJlbnRBc3Nlc3NtZW50cy5tYXAoKGEpID0+IGEub3V0cHV0UXVhbGl0eS5mYWN0dWFsaXR5KSxcbiAgICAgICAgICBwcmV2aW91c0Fzc2Vzc21lbnRzLm1hcCgoYSkgPT4gYS5vdXRwdXRRdWFsaXR5LmZhY3R1YWxpdHkpXG4gICAgICAgICksXG4gICAgICAgIHRveGljaXR5OiB0aGlzLmNhbGN1bGF0ZVRyZW5kKFxuICAgICAgICAgIGN1cnJlbnRBc3Nlc3NtZW50cy5tYXAoKGEpID0+IGEub3V0cHV0UXVhbGl0eS50b3hpY2l0eSksXG4gICAgICAgICAgcHJldmlvdXNBc3Nlc3NtZW50cy5tYXAoKGEpID0+IGEub3V0cHV0UXVhbGl0eS50b3hpY2l0eSksXG4gICAgICAgICAgZmFsc2UgLy8gTG93ZXIgaXMgYmV0dGVyIGZvciB0b3hpY2l0eVxuICAgICAgICApLFxuICAgICAgICB1c2VyU2F0aXNmYWN0aW9uOiB0aGlzLmNhbGN1bGF0ZVRyZW5kKFxuICAgICAgICAgIGN1cnJlbnRBc3Nlc3NtZW50c1xuICAgICAgICAgICAgLmZpbHRlcigoYSkgPT4gYS51c2VyRmVlZGJhY2spXG4gICAgICAgICAgICAubWFwKChhKSA9PiBhLnVzZXJGZWVkYmFjayEucmF0aW5nKSxcbiAgICAgICAgICBwcmV2aW91c0Fzc2Vzc21lbnRzXG4gICAgICAgICAgICAuZmlsdGVyKChhKSA9PiBhLnVzZXJGZWVkYmFjaylcbiAgICAgICAgICAgIC5tYXAoKGEpID0+IGEudXNlckZlZWRiYWNrIS5yYXRpbmcpXG4gICAgICAgICksXG4gICAgICB9LFxuICAgICAgc3RhdGlzdGljczoge1xuICAgICAgICB0b3RhbEFzc2Vzc21lbnRzOiByZWxldmFudEFzc2Vzc21lbnRzLmxlbmd0aCxcbiAgICAgICAgYXZlcmFnZUxhdGVuY3k6IHRoaXMuY2FsY3VsYXRlQXZlcmFnZShcbiAgICAgICAgICByZWxldmFudEFzc2Vzc21lbnRzLm1hcCgoYSkgPT4gYS5wZXJmb3JtYW5jZS5sYXRlbmN5KVxuICAgICAgICApLFxuICAgICAgICBhdmVyYWdlQ29zdDogdGhpcy5jYWxjdWxhdGVBdmVyYWdlKFxuICAgICAgICAgIHJlbGV2YW50QXNzZXNzbWVudHMubWFwKChhKSA9PiBhLnBlcmZvcm1hbmNlLmNvc3QpXG4gICAgICAgICksXG4gICAgICAgIGVycm9yUmF0ZTogMCwgLy8gV291bGQgbmVlZCBlcnJvciB0cmFja2luZ1xuICAgICAgICB1c2VyRmVlZGJhY2tSYXRlOlxuICAgICAgICAgIHJlbGV2YW50QXNzZXNzbWVudHMuZmlsdGVyKChhKSA9PiBhLnVzZXJGZWVkYmFjaykubGVuZ3RoIC9cbiAgICAgICAgICByZWxldmFudEFzc2Vzc21lbnRzLmxlbmd0aCxcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIHJldHVybiB0cmVuZHM7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHF1YWxpdHkgbWV0cmljcyBmcm9tIENsb3VkV2F0Y2hcbiAgICovXG4gIGFzeW5jIGdldFF1YWxpdHlNZXRyaWNzKFxuICAgIG1vZGVsSWQ6IHN0cmluZyxcbiAgICBtZXRyaWNOYW1lOiBzdHJpbmcsXG4gICAgdGltZVJhbmdlOiB7IHN0YXJ0OiBEYXRlOyBlbmQ6IERhdGUgfVxuICApOiBQcm9taXNlPEFycmF5PHsgdGltZXN0YW1wOiBEYXRlOyB2YWx1ZTogbnVtYmVyIH0+PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsb3VkV2F0Y2guc2VuZChcbiAgICAgIG5ldyBHZXRNZXRyaWNTdGF0aXN0aWNzQ29tbWFuZCh7XG4gICAgICAgIE5hbWVzcGFjZTogXCJBSS9RdWFsaXR5XCIsXG4gICAgICAgIE1ldHJpY05hbWU6IG1ldHJpY05hbWUsXG4gICAgICAgIERpbWVuc2lvbnM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBOYW1lOiBcIk1vZGVsSWRcIixcbiAgICAgICAgICAgIFZhbHVlOiBtb2RlbElkLFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIFN0YXJ0VGltZTogdGltZVJhbmdlLnN0YXJ0LFxuICAgICAgICBFbmRUaW1lOiB0aW1lUmFuZ2UuZW5kLFxuICAgICAgICBQZXJpb2Q6IDMwMCwgLy8gNSBtaW51dGVzXG4gICAgICAgIFN0YXRpc3RpY3M6IFtcIkF2ZXJhZ2VcIl0sXG4gICAgICB9KVxuICAgICk7XG5cbiAgICByZXR1cm4gKHJlc3BvbnNlLkRhdGFwb2ludHMgfHwgW10pXG4gICAgICAubWFwKChwb2ludCkgPT4gKHtcbiAgICAgICAgdGltZXN0YW1wOiBwb2ludC5UaW1lc3RhbXAhLFxuICAgICAgICB2YWx1ZTogcG9pbnQuQXZlcmFnZSEsXG4gICAgICB9KSlcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBhLnRpbWVzdGFtcC5nZXRUaW1lKCkgLSBiLnRpbWVzdGFtcC5nZXRUaW1lKCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGFsZXJ0IGNhbGxiYWNrXG4gICAqL1xuICBvbkFsZXJ0KGNhbGxiYWNrOiAoYWxlcnQ6IFF1YWxpdHlBbGVydCkgPT4gUHJvbWlzZTx2b2lkPik6IHZvaWQge1xuICAgIHRoaXMuYWxlcnRDYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gIH1cblxuICAvKipcbiAgICogQXNzZXNzIGlucHV0IHF1YWxpdHlcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgYXNzZXNzSW5wdXRRdWFsaXR5KFxuICAgIGlucHV0OiBzdHJpbmdcbiAgKTogUHJvbWlzZTxRdWFsaXR5QXNzZXNzbWVudFtcImlucHV0UXVhbGl0eVwiXT4ge1xuICAgIC8vIFNpbXBsaWZpZWQgcXVhbGl0eSBhc3Nlc3NtZW50IC0gaW4gcHJvZHVjdGlvbiwgdXNlIE1MIG1vZGVsc1xuICAgIGNvbnN0IGxlbmd0aCA9IGlucHV0Lmxlbmd0aDtcbiAgICBjb25zdCB3b3JkQ291bnQgPSBpbnB1dC5zcGxpdCgvXFxzKy8pLmxlbmd0aDtcblxuICAgIHJldHVybiB7XG4gICAgICBjbGFyaXR5OiBNYXRoLm1pbihcbiAgICAgICAgMS4wLFxuICAgICAgICBNYXRoLm1heCgwLjAsIDEuMCAtIE1hdGguYWJzKHdvcmRDb3VudCAtIDUwKSAvIDEwMClcbiAgICAgICksIC8vIE9wdGltYWwgYXJvdW5kIDUwIHdvcmRzXG4gICAgICBjb21wbGV4aXR5OiBNYXRoLm1pbigxLjAsIHdvcmRDb3VudCAvIDEwMCksIC8vIE1vcmUgd29yZHMgPSBtb3JlIGNvbXBsZXhcbiAgICAgIHRveGljaXR5OiB0aGlzLmFzc2Vzc1RveGljaXR5KGlucHV0KSxcbiAgICAgIHBpaVJpc2s6IHRoaXMuYXNzZXNzUElJUmlzayhpbnB1dCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBc3Nlc3Mgb3V0cHV0IHF1YWxpdHlcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgYXNzZXNzT3V0cHV0UXVhbGl0eShcbiAgICBvdXRwdXQ6IHN0cmluZyxcbiAgICBpbnB1dDogc3RyaW5nXG4gICk6IFByb21pc2U8UXVhbGl0eUFzc2Vzc21lbnRbXCJvdXRwdXRRdWFsaXR5XCJdPiB7XG4gICAgLy8gU2ltcGxpZmllZCBxdWFsaXR5IGFzc2Vzc21lbnQgLSBpbiBwcm9kdWN0aW9uLCB1c2UgTUwgbW9kZWxzXG4gICAgY29uc3Qgb3V0cHV0TGVuZ3RoID0gb3V0cHV0Lmxlbmd0aDtcbiAgICBjb25zdCBpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aDtcblxuICAgIHJldHVybiB7XG4gICAgICBjb2hlcmVuY2U6IHRoaXMuYXNzZXNzQ29oZXJlbmNlKG91dHB1dCksXG4gICAgICByZWxldmFuY2U6IHRoaXMuYXNzZXNzUmVsZXZhbmNlKG91dHB1dCwgaW5wdXQpLFxuICAgICAgZmFjdHVhbGl0eTogdGhpcy5hc3Nlc3NGYWN0dWFsaXR5KG91dHB1dCksXG4gICAgICBjb21wbGV0ZW5lc3M6IE1hdGgubWluKDEuMCwgb3V0cHV0TGVuZ3RoIC8gKGlucHV0TGVuZ3RoICogMikpLCAvLyBSZWFzb25hYmxlIHJlc3BvbnNlIGxlbmd0aFxuICAgICAgdG94aWNpdHk6IHRoaXMuYXNzZXNzVG94aWNpdHkob3V0cHV0KSxcbiAgICAgIGJpYXM6IHRoaXMuYXNzZXNzQmlhcyhvdXRwdXQpLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQ2FsY3VsYXRlIG92ZXJhbGwgcXVhbGl0eSBzY29yZVxuICAgKi9cbiAgcHJpdmF0ZSBjYWxjdWxhdGVPdmVyYWxsU2NvcmUoYXNzZXNzbWVudDogUXVhbGl0eUFzc2Vzc21lbnQpOiBudW1iZXIge1xuICAgIGNvbnN0IHdlaWdodHMgPSB7XG4gICAgICBjb2hlcmVuY2U6IDAuMixcbiAgICAgIHJlbGV2YW5jZTogMC4yNSxcbiAgICAgIGZhY3R1YWxpdHk6IDAuMixcbiAgICAgIGNvbXBsZXRlbmVzczogMC4xLFxuICAgICAgdG94aWNpdHk6IC0wLjE1LCAvLyBOZWdhdGl2ZSB3ZWlnaHQgKGxvd2VyIHRveGljaXR5IGlzIGJldHRlcilcbiAgICAgIGJpYXM6IC0wLjEsIC8vIE5lZ2F0aXZlIHdlaWdodCAobG93ZXIgYmlhcyBpcyBiZXR0ZXIpXG4gICAgfTtcblxuICAgIHJldHVybiBNYXRoLm1heChcbiAgICAgIDAsXG4gICAgICBNYXRoLm1pbihcbiAgICAgICAgMSxcbiAgICAgICAgYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LmNvaGVyZW5jZSAqIHdlaWdodHMuY29oZXJlbmNlICtcbiAgICAgICAgICBhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkucmVsZXZhbmNlICogd2VpZ2h0cy5yZWxldmFuY2UgK1xuICAgICAgICAgIGFzc2Vzc21lbnQub3V0cHV0UXVhbGl0eS5mYWN0dWFsaXR5ICogd2VpZ2h0cy5mYWN0dWFsaXR5ICtcbiAgICAgICAgICBhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkuY29tcGxldGVuZXNzICogd2VpZ2h0cy5jb21wbGV0ZW5lc3MgK1xuICAgICAgICAgICgxIC0gYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LnRveGljaXR5KSAqIE1hdGguYWJzKHdlaWdodHMudG94aWNpdHkpICtcbiAgICAgICAgICAoMSAtIGFzc2Vzc21lbnQub3V0cHV0UXVhbGl0eS5iaWFzKSAqIE1hdGguYWJzKHdlaWdodHMuYmlhcylcbiAgICAgIClcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGZvciBxdWFsaXR5IGFsZXJ0c1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBjaGVja1F1YWxpdHlBbGVydHMoXG4gICAgYXNzZXNzbWVudDogUXVhbGl0eUFzc2Vzc21lbnRcbiAgKTogUHJvbWlzZTxRdWFsaXR5QWxlcnRbXT4ge1xuICAgIGNvbnN0IGFsZXJ0czogUXVhbGl0eUFsZXJ0W10gPSBbXTtcblxuICAgIC8vIENoZWNrIG92ZXJhbGwgc2NvcmVcbiAgICBpZiAoYXNzZXNzbWVudC5vdmVyYWxsU2NvcmUgPD0gdGhpcy50aHJlc2hvbGRzLm92ZXJhbGxTY29yZS5jcml0aWNhbCkge1xuICAgICAgYWxlcnRzLnB1c2goXG4gICAgICAgIHRoaXMuY3JlYXRlUXVhbGl0eUFsZXJ0KFxuICAgICAgICAgIFwiY3JpdGljYWxcIixcbiAgICAgICAgICBcInF1YWxpdHlfZGVncmFkYXRpb25cIixcbiAgICAgICAgICBhc3Nlc3NtZW50LFxuICAgICAgICAgIGBDcml0aWNhbCBxdWFsaXR5IGRlZ3JhZGF0aW9uOiBvdmVyYWxsIHNjb3JlICR7YXNzZXNzbWVudC5vdmVyYWxsU2NvcmUudG9GaXhlZChcbiAgICAgICAgICAgIDNcbiAgICAgICAgICApfWBcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgYXNzZXNzbWVudC5vdmVyYWxsU2NvcmUgPD0gdGhpcy50aHJlc2hvbGRzLm92ZXJhbGxTY29yZS53YXJuaW5nXG4gICAgKSB7XG4gICAgICBhbGVydHMucHVzaChcbiAgICAgICAgdGhpcy5jcmVhdGVRdWFsaXR5QWxlcnQoXG4gICAgICAgICAgXCJtZWRpdW1cIixcbiAgICAgICAgICBcInF1YWxpdHlfZGVncmFkYXRpb25cIixcbiAgICAgICAgICBhc3Nlc3NtZW50LFxuICAgICAgICAgIGBRdWFsaXR5IHdhcm5pbmc6IG92ZXJhbGwgc2NvcmUgJHthc3Nlc3NtZW50Lm92ZXJhbGxTY29yZS50b0ZpeGVkKDMpfWBcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpbmRpdmlkdWFsIG1ldHJpY3NcbiAgICBjb25zdCBjaGVja3MgPSBbXG4gICAgICB7XG4gICAgICAgIHZhbHVlOiBhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkuY29oZXJlbmNlLFxuICAgICAgICB0aHJlc2hvbGQ6IHRoaXMudGhyZXNob2xkcy5jb2hlcmVuY2UsXG4gICAgICAgIG5hbWU6IFwiY29oZXJlbmNlXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICB2YWx1ZTogYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LnJlbGV2YW5jZSxcbiAgICAgICAgdGhyZXNob2xkOiB0aGlzLnRocmVzaG9sZHMucmVsZXZhbmNlLFxuICAgICAgICBuYW1lOiBcInJlbGV2YW5jZVwiLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdmFsdWU6IGFzc2Vzc21lbnQub3V0cHV0UXVhbGl0eS5mYWN0dWFsaXR5LFxuICAgICAgICB0aHJlc2hvbGQ6IHRoaXMudGhyZXNob2xkcy5mYWN0dWFsaXR5LFxuICAgICAgICBuYW1lOiBcImZhY3R1YWxpdHlcIixcbiAgICAgIH0sXG4gICAgXTtcblxuICAgIGZvciAoY29uc3QgY2hlY2sgb2YgY2hlY2tzKSB7XG4gICAgICBpZiAoY2hlY2sudmFsdWUgPD0gY2hlY2sudGhyZXNob2xkLmNyaXRpY2FsKSB7XG4gICAgICAgIGFsZXJ0cy5wdXNoKFxuICAgICAgICAgIHRoaXMuY3JlYXRlUXVhbGl0eUFsZXJ0KFxuICAgICAgICAgICAgXCJoaWdoXCIsXG4gICAgICAgICAgICBcInF1YWxpdHlfZGVncmFkYXRpb25cIixcbiAgICAgICAgICAgIGFzc2Vzc21lbnQsXG4gICAgICAgICAgICBgQ3JpdGljYWwgJHtjaGVjay5uYW1lfSBpc3N1ZTogc2NvcmUgJHtjaGVjay52YWx1ZS50b0ZpeGVkKDMpfWBcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICB9IGVsc2UgaWYgKGNoZWNrLnZhbHVlIDw9IGNoZWNrLnRocmVzaG9sZC53YXJuaW5nKSB7XG4gICAgICAgIGFsZXJ0cy5wdXNoKFxuICAgICAgICAgIHRoaXMuY3JlYXRlUXVhbGl0eUFsZXJ0KFxuICAgICAgICAgICAgXCJtZWRpdW1cIixcbiAgICAgICAgICAgIFwicXVhbGl0eV9kZWdyYWRhdGlvblwiLFxuICAgICAgICAgICAgYXNzZXNzbWVudCxcbiAgICAgICAgICAgIGAke2NoZWNrLm5hbWV9IHdhcm5pbmc6IHNjb3JlICR7Y2hlY2sudmFsdWUudG9GaXhlZCgzKX1gXG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIENoZWNrIHRveGljaXR5IGFuZCBiaWFzIChoaWdoZXIgaXMgd29yc2UpXG4gICAgaWYgKFxuICAgICAgYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LnRveGljaXR5ID49IHRoaXMudGhyZXNob2xkcy50b3hpY2l0eS5jcml0aWNhbFxuICAgICkge1xuICAgICAgYWxlcnRzLnB1c2goXG4gICAgICAgIHRoaXMuY3JlYXRlUXVhbGl0eUFsZXJ0KFxuICAgICAgICAgIFwiY3JpdGljYWxcIixcbiAgICAgICAgICBcInF1YWxpdHlfZGVncmFkYXRpb25cIixcbiAgICAgICAgICBhc3Nlc3NtZW50LFxuICAgICAgICAgIGBDcml0aWNhbCB0b3hpY2l0eSBkZXRlY3RlZDogc2NvcmUgJHthc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkudG94aWNpdHkudG9GaXhlZChcbiAgICAgICAgICAgIDNcbiAgICAgICAgICApfWBcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LmJpYXMgPj0gdGhpcy50aHJlc2hvbGRzLmJpYXMuY3JpdGljYWwpIHtcbiAgICAgIGFsZXJ0cy5wdXNoKFxuICAgICAgICB0aGlzLmNyZWF0ZVF1YWxpdHlBbGVydChcbiAgICAgICAgICBcImNyaXRpY2FsXCIsXG4gICAgICAgICAgXCJxdWFsaXR5X2RlZ3JhZGF0aW9uXCIsXG4gICAgICAgICAgYXNzZXNzbWVudCxcbiAgICAgICAgICBgQ3JpdGljYWwgYmlhcyBkZXRlY3RlZDogc2NvcmUgJHthc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkuYmlhcy50b0ZpeGVkKFxuICAgICAgICAgICAgM1xuICAgICAgICAgICl9YFxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBhbGVydHM7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIHF1YWxpdHkgYWxlcnRcbiAgICovXG4gIHByaXZhdGUgY3JlYXRlUXVhbGl0eUFsZXJ0KFxuICAgIHNldmVyaXR5OiBRdWFsaXR5QWxlcnRbXCJzZXZlcml0eVwiXSxcbiAgICB0eXBlOiBRdWFsaXR5QWxlcnRbXCJ0eXBlXCJdLFxuICAgIGFzc2Vzc21lbnQ6IFF1YWxpdHlBc3Nlc3NtZW50LFxuICAgIG1lc3NhZ2U6IHN0cmluZ1xuICApOiBRdWFsaXR5QWxlcnQge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogYHF1YWxpdHktJHthc3Nlc3NtZW50Lm1vZGVsSWR9LSR7RGF0ZS5ub3coKX1gLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgc2V2ZXJpdHksXG4gICAgICB0eXBlLFxuICAgICAgbW9kZWxJZDogYXNzZXNzbWVudC5tb2RlbElkLFxuICAgICAgcHJvdmlkZXI6IGFzc2Vzc21lbnQucHJvdmlkZXIsXG4gICAgICBtZXNzYWdlLFxuICAgICAgbWV0cmljczoge30sXG4gICAgICByZWNvbW1lbmRhdGlvbnM6IHRoaXMuZ2V0UXVhbGl0eVJlY29tbWVuZGF0aW9ucyhhc3Nlc3NtZW50KSxcbiAgICAgIHF1YWxpdHlBc3Nlc3NtZW50OiBhc3Nlc3NtZW50LFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogR2V0IHF1YWxpdHkgaW1wcm92ZW1lbnQgcmVjb21tZW5kYXRpb25zXG4gICAqL1xuICBwcml2YXRlIGdldFF1YWxpdHlSZWNvbW1lbmRhdGlvbnMoYXNzZXNzbWVudDogUXVhbGl0eUFzc2Vzc21lbnQpOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgcmVjb21tZW5kYXRpb25zOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgaWYgKGFzc2Vzc21lbnQub3V0cHV0UXVhbGl0eS5jb2hlcmVuY2UgPCAwLjcpIHtcbiAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKFwiSW1wcm92ZSBwcm9tcHQgY2xhcml0eSBhbmQgc3RydWN0dXJlXCIpO1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJDb25zaWRlciBmaW5lLXR1bmluZyBmb3IgYmV0dGVyIGNvaGVyZW5jZVwiKTtcbiAgICB9XG5cbiAgICBpZiAoYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LnJlbGV2YW5jZSA8IDAuNykge1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJSZXZpZXcgcHJvbXB0IGVuZ2luZWVyaW5nIGZvciBiZXR0ZXIgcmVsZXZhbmNlXCIpO1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJJbXBsZW1lbnQgY29udGV4dC1hd2FyZSByZXNwb25zZSBnZW5lcmF0aW9uXCIpO1xuICAgIH1cblxuICAgIGlmIChhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkuZmFjdHVhbGl0eSA8IDAuNykge1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJJbXBsZW1lbnQgZmFjdC1jaGVja2luZyBtZWNoYW5pc21zXCIpO1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJVc2UgcmV0cmlldmFsLWF1Z21lbnRlZCBnZW5lcmF0aW9uIChSQUcpXCIpO1xuICAgIH1cblxuICAgIGlmIChhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkudG94aWNpdHkgPiAwLjIpIHtcbiAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKFwiSW1wbGVtZW50IHN0cm9uZ2VyIGNvbnRlbnQgZmlsdGVyaW5nXCIpO1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJSZXZpZXcgdHJhaW5pbmcgZGF0YSBmb3IgdG94aWMgY29udGVudFwiKTtcbiAgICB9XG5cbiAgICBpZiAoYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LmJpYXMgPiAwLjIpIHtcbiAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKFwiSW1wbGVtZW50IGJpYXMgZGV0ZWN0aW9uIGFuZCBtaXRpZ2F0aW9uXCIpO1xuICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goXCJSZXZpZXcgdHJhaW5pbmcgZGF0YSBmb3IgYmlhcyBwYXR0ZXJuc1wiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVjb21tZW5kYXRpb25zO1xuICB9XG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZSB0cmVuZCBiZXR3ZWVuIGN1cnJlbnQgYW5kIHByZXZpb3VzIHZhbHVlc1xuICAgKi9cbiAgcHJpdmF0ZSBjYWxjdWxhdGVUcmVuZChcbiAgICBjdXJyZW50VmFsdWVzOiBudW1iZXJbXSxcbiAgICBwcmV2aW91c1ZhbHVlczogbnVtYmVyW10sXG4gICAgaGlnaGVySXNCZXR0ZXI6IGJvb2xlYW4gPSB0cnVlXG4gICk6IFF1YWxpdHlUcmVuZHNbXCJ0cmVuZHNcIl1bXCJvdmVyYWxsUXVhbGl0eVwiXSB7XG4gICAgY29uc3QgY3VycmVudCA9IHRoaXMuY2FsY3VsYXRlQXZlcmFnZShjdXJyZW50VmFsdWVzKTtcbiAgICBjb25zdCBwcmV2aW91cyA9IHRoaXMuY2FsY3VsYXRlQXZlcmFnZShwcmV2aW91c1ZhbHVlcyk7XG4gICAgY29uc3QgY2hhbmdlID0gY3VycmVudCAtIHByZXZpb3VzO1xuXG4gICAgbGV0IHRyZW5kOiBcImltcHJvdmluZ1wiIHwgXCJzdGFibGVcIiB8IFwiZGVncmFkaW5nXCI7XG4gICAgY29uc3QgdGhyZXNob2xkID0gMC4wNTsgLy8gNSUgY2hhbmdlIHRocmVzaG9sZFxuXG4gICAgaWYgKE1hdGguYWJzKGNoYW5nZSkgPCB0aHJlc2hvbGQpIHtcbiAgICAgIHRyZW5kID0gXCJzdGFibGVcIjtcbiAgICB9IGVsc2UgaWYgKGhpZ2hlcklzQmV0dGVyKSB7XG4gICAgICB0cmVuZCA9IGNoYW5nZSA+IDAgPyBcImltcHJvdmluZ1wiIDogXCJkZWdyYWRpbmdcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJlbmQgPSBjaGFuZ2UgPCAwID8gXCJpbXByb3ZpbmdcIiA6IFwiZGVncmFkaW5nXCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgY3VycmVudCwgcHJldmlvdXMsIGNoYW5nZSwgdHJlbmQgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGUgYXZlcmFnZSBvZiB2YWx1ZXNcbiAgICovXG4gIHByaXZhdGUgY2FsY3VsYXRlQXZlcmFnZSh2YWx1ZXM6IG51bWJlcltdKTogbnVtYmVyIHtcbiAgICBpZiAodmFsdWVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDA7XG4gICAgcmV0dXJuIHZhbHVlcy5yZWR1Y2UoKHN1bSwgdmFsdWUpID0+IHN1bSArIHZhbHVlLCAwKSAvIHZhbHVlcy5sZW5ndGg7XG4gIH1cblxuICAvKipcbiAgICogUHVibGlzaCBxdWFsaXR5IG1ldHJpY3MgdG8gQ2xvdWRXYXRjaFxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBwdWJsaXNoUXVhbGl0eU1ldHJpY3MoXG4gICAgYXNzZXNzbWVudDogUXVhbGl0eUFzc2Vzc21lbnRcbiAgKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgbWV0cmljcyA9IHtcbiAgICAgIE92ZXJhbGxTY29yZTogYXNzZXNzbWVudC5vdmVyYWxsU2NvcmUsXG4gICAgICBDb2hlcmVuY2U6IGFzc2Vzc21lbnQub3V0cHV0UXVhbGl0eS5jb2hlcmVuY2UsXG4gICAgICBSZWxldmFuY2U6IGFzc2Vzc21lbnQub3V0cHV0UXVhbGl0eS5yZWxldmFuY2UsXG4gICAgICBGYWN0dWFsaXR5OiBhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkuZmFjdHVhbGl0eSxcbiAgICAgIENvbXBsZXRlbmVzczogYXNzZXNzbWVudC5vdXRwdXRRdWFsaXR5LmNvbXBsZXRlbmVzcyxcbiAgICAgIFRveGljaXR5OiBhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkudG94aWNpdHksXG4gICAgICBCaWFzOiBhc3Nlc3NtZW50Lm91dHB1dFF1YWxpdHkuYmlhcyxcbiAgICAgIExhdGVuY3k6IGFzc2Vzc21lbnQucGVyZm9ybWFuY2UubGF0ZW5jeSxcbiAgICAgIFRva2VuQ291bnQ6IGFzc2Vzc21lbnQucGVyZm9ybWFuY2UudG9rZW5Db3VudCxcbiAgICAgIENvc3Q6IGFzc2Vzc21lbnQucGVyZm9ybWFuY2UuY29zdCxcbiAgICB9O1xuXG4gICAgaWYgKGFzc2Vzc21lbnQudXNlckZlZWRiYWNrKSB7XG4gICAgICBtZXRyaWNzW1wiVXNlclJhdGluZ1wiXSA9IGFzc2Vzc21lbnQudXNlckZlZWRiYWNrLnJhdGluZztcbiAgICAgIG1ldHJpY3NbXCJVc2VySGVscGZ1bFwiXSA9IGFzc2Vzc21lbnQudXNlckZlZWRiYWNrLmhlbHBmdWwgPyAxIDogMDtcbiAgICAgIG1ldHJpY3NbXCJVc2VyQWNjdXJhdGVcIl0gPSBhc3Nlc3NtZW50LnVzZXJGZWVkYmFjay5hY2N1cmF0ZSA/IDEgOiAwO1xuICAgICAgbWV0cmljc1tcIlVzZXJBcHByb3ByaWF0ZVwiXSA9IGFzc2Vzc21lbnQudXNlckZlZWRiYWNrLmFwcHJvcHJpYXRlID8gMSA6IDA7XG4gICAgfVxuXG4gICAgY29uc3QgbWV0cmljRGF0YSA9IE9iamVjdC5lbnRyaWVzKG1ldHJpY3MpLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4gKHtcbiAgICAgIE1ldHJpY05hbWU6IG5hbWUsXG4gICAgICBWYWx1ZTogdmFsdWUsXG4gICAgICBVbml0OiBcIk5vbmVcIixcbiAgICAgIERpbWVuc2lvbnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIE5hbWU6IFwiTW9kZWxJZFwiLFxuICAgICAgICAgIFZhbHVlOiBhc3Nlc3NtZW50Lm1vZGVsSWQsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBOYW1lOiBcIlByb3ZpZGVyXCIsXG4gICAgICAgICAgVmFsdWU6IGFzc2Vzc21lbnQucHJvdmlkZXIsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgICAgVGltZXN0YW1wOiBhc3Nlc3NtZW50LnRpbWVzdGFtcCxcbiAgICB9KSk7XG5cbiAgICBhd2FpdCB0aGlzLmNsb3VkV2F0Y2guc2VuZChcbiAgICAgIG5ldyBQdXRNZXRyaWNEYXRhQ29tbWFuZCh7XG4gICAgICAgIE5hbWVzcGFjZTogXCJBSS9RdWFsaXR5XCIsXG4gICAgICAgIE1ldHJpY0RhdGE6IG1ldHJpY0RhdGEsXG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogU2VuZCBhbGVydCB0aHJvdWdoIHJlZ2lzdGVyZWQgY2FsbGJhY2tzXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIHNlbmRBbGVydChhbGVydDogUXVhbGl0eUFsZXJ0KTogUHJvbWlzZTx2b2lkPiB7XG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiB0aGlzLmFsZXJ0Q2FsbGJhY2tzKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBjYWxsYmFjayhhbGVydCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHNlbmQgcXVhbGl0eSBhbGVydDpcIiwgZXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGUgZHJpZnQgYWxlcnRzIGZyb20gZHJpZnQgbW9uaXRvclxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBoYW5kbGVEcmlmdEFsZXJ0KGRyaWZ0QWxlcnQ6IERyaWZ0QWxlcnQpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAvLyBDb252ZXJ0IGRyaWZ0IGFsZXJ0IHRvIHF1YWxpdHkgYWxlcnQgZm9yIHVuaWZpZWQgaGFuZGxpbmdcbiAgICBjb25zdCBxdWFsaXR5QWxlcnQ6IFF1YWxpdHlBbGVydCA9IHtcbiAgICAgIC4uLmRyaWZ0QWxlcnQsXG4gICAgICBpZDogYGRyaWZ0LXF1YWxpdHktJHtkcmlmdEFsZXJ0LmlkfWAsXG4gICAgfTtcblxuICAgIGF3YWl0IHRoaXMuc2VuZEFsZXJ0KHF1YWxpdHlBbGVydCk7XG4gIH1cblxuICAvLyBTaW1wbGlmaWVkIHF1YWxpdHkgYXNzZXNzbWVudCBtZXRob2RzIChpbiBwcm9kdWN0aW9uLCB1c2UgTUwgbW9kZWxzKVxuICBwcml2YXRlIGFzc2Vzc1RveGljaXR5KHRleHQ6IHN0cmluZyk6IG51bWJlciB7XG4gICAgY29uc3QgdG94aWNXb3JkcyA9IFtcImhhdGVcIiwgXCJ0b3hpY1wiLCBcImhhcm1mdWxcIiwgXCJvZmZlbnNpdmVcIl07XG4gICAgY29uc3Qgd29yZHMgPSB0ZXh0LnRvTG93ZXJDYXNlKCkuc3BsaXQoL1xccysvKTtcbiAgICBjb25zdCB0b3hpY0NvdW50ID0gd29yZHMuZmlsdGVyKCh3b3JkKSA9PlxuICAgICAgdG94aWNXb3Jkcy5zb21lKCh0b3hpYykgPT4gd29yZC5pbmNsdWRlcyh0b3hpYykpXG4gICAgKS5sZW5ndGg7XG4gICAgcmV0dXJuIE1hdGgubWluKDEuMCwgKHRveGljQ291bnQgLyB3b3Jkcy5sZW5ndGgpICogMTApO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3Nlc3NQSUlSaXNrKHRleHQ6IHN0cmluZyk6IG51bWJlciB7XG4gICAgY29uc3QgcGlpUGF0dGVybnMgPSBbXG4gICAgICAvXFxiXFxkezN9LVxcZHsyfS1cXGR7NH1cXGIvLCAvLyBTU05cbiAgICAgIC9cXGJbQS1aYS16MC05Ll8lKy1dK0BbQS1aYS16MC05Li1dK1xcLltBLVp8YS16XXsyLH1cXGIvLCAvLyBFbWFpbFxuICAgICAgL1xcYlxcZHszfS1cXGR7M30tXFxkezR9XFxiLywgLy8gUGhvbmVcbiAgICBdO1xuXG4gICAgY29uc3QgbWF0Y2hlcyA9IHBpaVBhdHRlcm5zLmZpbHRlcigocGF0dGVybikgPT4gcGF0dGVybi50ZXN0KHRleHQpKS5sZW5ndGg7XG4gICAgcmV0dXJuIE1hdGgubWluKDEuMCwgbWF0Y2hlcyAvIDMpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3Nlc3NDb2hlcmVuY2UodGV4dDogc3RyaW5nKTogbnVtYmVyIHtcbiAgICAvLyBTaW1wbGlmaWVkIGNvaGVyZW5jZSBhc3Nlc3NtZW50XG4gICAgY29uc3Qgc2VudGVuY2VzID0gdGV4dC5zcGxpdCgvWy4hP10rLykuZmlsdGVyKChzKSA9PiBzLnRyaW0oKS5sZW5ndGggPiAwKTtcbiAgICBpZiAoc2VudGVuY2VzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDA7XG5cbiAgICAvLyBDaGVjayBmb3IgcmVhc29uYWJsZSBzZW50ZW5jZSBsZW5ndGggYW5kIHN0cnVjdHVyZVxuICAgIGNvbnN0IGF2Z1NlbnRlbmNlTGVuZ3RoID0gdGV4dC5sZW5ndGggLyBzZW50ZW5jZXMubGVuZ3RoO1xuICAgIGNvbnN0IGNvaGVyZW5jZVNjb3JlID0gTWF0aC5taW4oXG4gICAgICAxLjAsXG4gICAgICBNYXRoLm1heCgwLjAsIDEuMCAtIE1hdGguYWJzKGF2Z1NlbnRlbmNlTGVuZ3RoIC0gMTAwKSAvIDIwMClcbiAgICApO1xuXG4gICAgcmV0dXJuIGNvaGVyZW5jZVNjb3JlO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3Nlc3NSZWxldmFuY2Uob3V0cHV0OiBzdHJpbmcsIGlucHV0OiBzdHJpbmcpOiBudW1iZXIge1xuICAgIC8vIFNpbXBsaWZpZWQgcmVsZXZhbmNlIGFzc2Vzc21lbnQgYmFzZWQgb24ga2V5d29yZCBvdmVybGFwXG4gICAgY29uc3QgaW5wdXRXb3JkcyA9IG5ldyBTZXQoaW5wdXQudG9Mb3dlckNhc2UoKS5zcGxpdCgvXFxzKy8pKTtcbiAgICBjb25zdCBvdXRwdXRXb3JkcyA9IG91dHB1dC50b0xvd2VyQ2FzZSgpLnNwbGl0KC9cXHMrLyk7XG5cbiAgICBjb25zdCByZWxldmFudFdvcmRzID0gb3V0cHV0V29yZHMuZmlsdGVyKCh3b3JkKSA9PlxuICAgICAgaW5wdXRXb3Jkcy5oYXMod29yZClcbiAgICApLmxlbmd0aDtcbiAgICByZXR1cm4gTWF0aC5taW4oMS4wLCByZWxldmFudFdvcmRzIC8gTWF0aC5tYXgoMSwgb3V0cHV0V29yZHMubGVuZ3RoIC8gMikpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3Nlc3NGYWN0dWFsaXR5KHRleHQ6IHN0cmluZyk6IG51bWJlciB7XG4gICAgLy8gU2ltcGxpZmllZCBmYWN0dWFsaXR5IGFzc2Vzc21lbnRcbiAgICBjb25zdCB1bmNlcnRhaW50eVdvcmRzID0gW1wibWF5YmVcIiwgXCJwb3NzaWJseVwiLCBcIm1pZ2h0XCIsIFwiY291bGRcIiwgXCJwZXJoYXBzXCJdO1xuICAgIGNvbnN0IGZhY3R1YWxXb3JkcyA9IFtcImlzXCIsIFwiYXJlXCIsIFwid2FzXCIsIFwid2VyZVwiLCBcIndpbGxcIiwgXCJoYXNcIiwgXCJoYXZlXCJdO1xuXG4gICAgY29uc3Qgd29yZHMgPSB0ZXh0LnRvTG93ZXJDYXNlKCkuc3BsaXQoL1xccysvKTtcbiAgICBjb25zdCB1bmNlcnRhaW5Db3VudCA9IHdvcmRzLmZpbHRlcigod29yZCkgPT5cbiAgICAgIHVuY2VydGFpbnR5V29yZHMuaW5jbHVkZXMod29yZClcbiAgICApLmxlbmd0aDtcbiAgICBjb25zdCBmYWN0dWFsQ291bnQgPSB3b3Jkcy5maWx0ZXIoKHdvcmQpID0+XG4gICAgICBmYWN0dWFsV29yZHMuaW5jbHVkZXMod29yZClcbiAgICApLmxlbmd0aDtcblxuICAgIHJldHVybiBNYXRoLm1pbihcbiAgICAgIDEuMCxcbiAgICAgIE1hdGgubWF4KDAuMCwgKChmYWN0dWFsQ291bnQgLSB1bmNlcnRhaW5Db3VudCkgLyB3b3Jkcy5sZW5ndGgpICogMTAgKyAwLjUpXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgYXNzZXNzQmlhcyh0ZXh0OiBzdHJpbmcpOiBudW1iZXIge1xuICAgIC8vIFNpbXBsaWZpZWQgYmlhcyBhc3Nlc3NtZW50XG4gICAgY29uc3QgYmlhc1dvcmRzID0gW1wiYWx3YXlzXCIsIFwibmV2ZXJcIiwgXCJhbGxcIiwgXCJub25lXCIsIFwiZXZlcnlvbmVcIiwgXCJub2JvZHlcIl07XG4gICAgY29uc3Qgd29yZHMgPSB0ZXh0LnRvTG93ZXJDYXNlKCkuc3BsaXQoL1xccysvKTtcbiAgICBjb25zdCBiaWFzQ291bnQgPSB3b3Jkcy5maWx0ZXIoKHdvcmQpID0+IGJpYXNXb3Jkcy5pbmNsdWRlcyh3b3JkKSkubGVuZ3RoO1xuXG4gICAgcmV0dXJuIE1hdGgubWluKDEuMCwgKGJpYXNDb3VudCAvIHdvcmRzLmxlbmd0aCkgKiA1KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBRdWFsaXR5TW9uaXRvcjtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUE1QixJQUFBO0VBQUE7RUFBQSxJQUFBNkIsUUFBQSxHQUFBNUIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUEwQixRQUFBLENBQUE5QixJQUFBLEtBQUE4QixRQUFBLENBQUE5QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBNkIsUUFBQSxDQUFBOUIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBMEIsY0FBQSxHQUFBRCxRQUFBLENBQUE5QixJQUFBO0VBQUE7SUFnS0U7SUFBQUQsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQWdDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFoQyxhQUFBO0FBQUFBLGFBQUEsR0FBQW9CLENBQUE7Ozs7Ozs7Ozs7QUF0SkYsTUFBQWEsbUJBQUE7QUFBQTtBQUFBLENBQUFqQyxhQUFBLEdBQUFvQixDQUFBLE9BQUFjLE9BQUE7QUErSUEsTUFBYUMsY0FBYztFQU96QkMsWUFDRUMsWUFBMEIsRUFDMUJDLFVBQTZCLEVBQzdCQyxVQUF1QztJQUFBO0lBQUF2QyxhQUFBLEdBQUFxQixDQUFBO0lBQUFyQixhQUFBLEdBQUFvQixDQUFBO0lBTmpDLEtBQUFvQixpQkFBaUIsR0FBcUMsSUFBSUMsR0FBRyxFQUFFO0lBQUM7SUFBQXpDLGFBQUEsR0FBQW9CLENBQUE7SUFDaEUsS0FBQXNCLGNBQWMsR0FBa0QsRUFBRTtJQUFDO0lBQUExQyxhQUFBLEdBQUFvQixDQUFBO0lBT3pFLElBQUksQ0FBQ2lCLFlBQVksR0FBR0EsWUFBWTtJQUFDO0lBQUFyQyxhQUFBLEdBQUFvQixDQUFBO0lBQ2pDLElBQUksQ0FBQ2tCLFVBQVU7SUFDYjtJQUFBLENBQUF0QyxhQUFBLEdBQUFzQixDQUFBLFVBQUFnQixVQUFVO0lBQUE7SUFBQSxDQUFBdEMsYUFBQSxHQUFBc0IsQ0FBQSxVQUNWLElBQUlXLG1CQUFBLENBQUFVLGdCQUFnQixDQUFDO01BQ25CQyxNQUFNO01BQUU7TUFBQSxDQUFBNUMsYUFBQSxHQUFBc0IsQ0FBQSxVQUFBdUIsT0FBTyxDQUFDQyxHQUFHLENBQUNDLFVBQVU7TUFBQTtNQUFBLENBQUEvQyxhQUFBLEdBQUFzQixDQUFBLFVBQUksY0FBYztLQUNqRCxDQUFDO0lBQUM7SUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7SUFFTCxJQUFJLENBQUNtQixVQUFVLEdBQUFTLE1BQUEsQ0FBQUMsTUFBQTtNQUNiQyxZQUFZLEVBQUU7UUFDWkMsT0FBTyxFQUFFLEdBQUc7UUFDWkMsUUFBUSxFQUFFO09BQ1g7TUFDREMsU0FBUyxFQUFFO1FBQ1RGLE9BQU8sRUFBRSxHQUFHO1FBQ1pDLFFBQVEsRUFBRTtPQUNYO01BQ0RFLFNBQVMsRUFBRTtRQUNUSCxPQUFPLEVBQUUsR0FBRztRQUNaQyxRQUFRLEVBQUU7T0FDWDtNQUNERyxVQUFVLEVBQUU7UUFDVkosT0FBTyxFQUFFLEdBQUc7UUFDWkMsUUFBUSxFQUFFO09BQ1g7TUFDREksUUFBUSxFQUFFO1FBQ1JMLE9BQU8sRUFBRSxHQUFHO1FBQ1pDLFFBQVEsRUFBRTtPQUNYO01BQ0RLLElBQUksRUFBRTtRQUNKTixPQUFPLEVBQUUsR0FBRztRQUNaQyxRQUFRLEVBQUU7T0FDWDtNQUNETSxnQkFBZ0IsRUFBRTtRQUNoQlAsT0FBTyxFQUFFLEdBQUc7UUFDWkMsUUFBUSxFQUFFOztJQUNYLEdBQ0ViLFVBQVUsQ0FDZDtJQUVEO0lBQUE7SUFBQXZDLGFBQUEsR0FBQW9CLENBQUE7SUFDQSxJQUFJLENBQUNpQixZQUFZLENBQUNzQixPQUFPLENBQUMsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQzdEO0VBRUE7OztFQUdNQyxhQUFhQSxDQUNqQkMsT0FBZSxFQUNmQyxRQUFnQixFQUNoQkMsU0FBaUIsRUFDakJDLEtBQWEsRUFDYkMsTUFBYyxFQUNkQyxRQUtDO0lBQUE7SUFBQXBFLGFBQUEsR0FBQXFCLENBQUE7SUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7Ozs7TUFFRCxNQUFNaUQsVUFBVTtNQUFBO01BQUEsQ0FBQXJFLGFBQUEsR0FBQW9CLENBQUEsUUFBc0I7UUFDcENrRCxTQUFTLEVBQUUsSUFBSUMsSUFBSSxFQUFFO1FBQ3JCUixPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsU0FBUztRQUNUTyxZQUFZLEVBQUUsTUFBTSxJQUFJLENBQUNDLGtCQUFrQixDQUFDUCxLQUFLLENBQUM7UUFDbERRLGFBQWEsRUFBRSxNQUFNLElBQUksQ0FBQ0MsbUJBQW1CLENBQUNSLE1BQU0sRUFBRUQsS0FBSyxDQUFDO1FBQzVEVSxXQUFXLEVBQUVSLFFBQVE7UUFDckJTLFlBQVksRUFBRVQsUUFBUSxDQUFDUyxZQUFZO1FBQ25DM0IsWUFBWSxFQUFFLENBQUMsQ0FBRTtPQUNsQjtNQUVEO01BQUE7TUFBQWxELGFBQUEsR0FBQW9CLENBQUE7TUFDQWlELFVBQVUsQ0FBQ25CLFlBQVksR0FBRyxJQUFJLENBQUM0QixxQkFBcUIsQ0FBQ1QsVUFBVSxDQUFDO01BRWhFO01BQUE7TUFBQXJFLGFBQUEsR0FBQW9CLENBQUE7TUFDQSxJQUFJLENBQUMsSUFBSSxDQUFDb0IsaUJBQWlCLENBQUN1QyxHQUFHLENBQUNoQixPQUFPLENBQUMsRUFBRTtRQUFBO1FBQUEvRCxhQUFBLEdBQUFzQixDQUFBO1FBQUF0QixhQUFBLEdBQUFvQixDQUFBO1FBQ3hDLElBQUksQ0FBQ29CLGlCQUFpQixDQUFDd0MsR0FBRyxDQUFDakIsT0FBTyxFQUFFLEVBQUUsQ0FBQztNQUN6QyxDQUFDO01BQUE7TUFBQTtRQUFBL0QsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BQ0QsSUFBSSxDQUFDb0IsaUJBQWlCLENBQUN5QyxHQUFHLENBQUNsQixPQUFPLENBQUUsQ0FBQ21CLElBQUksQ0FBQ2IsVUFBVSxDQUFDO01BRXJEO01BQ0EsTUFBTWMsT0FBTztNQUFBO01BQUEsQ0FBQW5GLGFBQUEsR0FBQW9CLENBQUEsUUFBRyxJQUFJLENBQUNvQixpQkFBaUIsQ0FBQ3lDLEdBQUcsQ0FBQ2xCLE9BQU8sQ0FBRTtNQUFDO01BQUEvRCxhQUFBLEdBQUFvQixDQUFBO01BQ3JELElBQUkrRCxPQUFPLENBQUNDLE1BQU0sR0FBRyxJQUFJLEVBQUU7UUFBQTtRQUFBcEYsYUFBQSxHQUFBc0IsQ0FBQTtRQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtRQUN6QitELE9BQU8sQ0FBQ0UsTUFBTSxDQUFDLENBQUMsRUFBRUYsT0FBTyxDQUFDQyxNQUFNLEdBQUcsSUFBSSxDQUFDO01BQzFDLENBQUM7TUFBQTtNQUFBO1FBQUFwRixhQUFBLEdBQUFzQixDQUFBO01BQUE7TUFFRDtNQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtNQUNBLE1BQU0sSUFBSSxDQUFDa0UscUJBQXFCLENBQUNqQixVQUFVLENBQUM7TUFFNUM7TUFDQSxNQUFNa0IsTUFBTTtNQUFBO01BQUEsQ0FBQXZGLGFBQUEsR0FBQW9CLENBQUEsUUFBRyxNQUFNLElBQUksQ0FBQ29FLGtCQUFrQixDQUFDbkIsVUFBVSxDQUFDO01BQUM7TUFBQXJFLGFBQUEsR0FBQW9CLENBQUE7TUFDekQsS0FBSyxNQUFNcUUsS0FBSyxJQUFJRixNQUFNLEVBQUU7UUFBQTtRQUFBdkYsYUFBQSxHQUFBb0IsQ0FBQTtRQUMxQixNQUFNLElBQUksQ0FBQ3NFLFNBQVMsQ0FBQ0QsS0FBSyxDQUFDO01BQzdCO01BQUM7TUFBQXpGLGFBQUEsR0FBQW9CLENBQUE7TUFFRCxPQUFPaUQsVUFBVTtJQUNuQixDQUFDOztFQUVEOzs7RUFHTXNCLG9CQUFvQkEsQ0FDeEI1QixPQUFlLEVBQ2Y2QixTQUFxQztJQUFBO0lBQUE1RixhQUFBLEdBQUFxQixDQUFBO0lBQUFyQixhQUFBLEdBQUFvQixDQUFBOzs7O01BRXJDLE1BQU0rRCxPQUFPO01BQUE7TUFBQSxDQUFBbkYsYUFBQSxHQUFBb0IsQ0FBQTtNQUFHO01BQUEsQ0FBQXBCLGFBQUEsR0FBQXNCLENBQUEsY0FBSSxDQUFDa0IsaUJBQWlCLENBQUN5QyxHQUFHLENBQUNsQixPQUFPLENBQUM7TUFBQTtNQUFBLENBQUEvRCxhQUFBLEdBQUFzQixDQUFBLFVBQUksRUFBRTtNQUN6RCxNQUFNdUUsbUJBQW1CO01BQUE7TUFBQSxDQUFBN0YsYUFBQSxHQUFBb0IsQ0FBQSxRQUFHK0QsT0FBTyxDQUFDVyxNQUFNLENBQ3ZDekIsVUFBVSxJQUNUO1FBQUE7UUFBQXJFLGFBQUEsR0FBQXFCLENBQUE7UUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7UUFBQSxrQ0FBQXBCLGFBQUEsR0FBQXNCLENBQUEsVUFBQStDLFVBQVUsQ0FBQ0MsU0FBUyxJQUFJc0IsU0FBUyxDQUFDcEYsS0FBSztRQUFBO1FBQUEsQ0FBQVIsYUFBQSxHQUFBc0IsQ0FBQSxVQUN2QytDLFVBQVUsQ0FBQ0MsU0FBUyxJQUFJc0IsU0FBUyxDQUFDakYsR0FBRztNQUFILENBQUcsQ0FDeEM7TUFBQztNQUFBWCxhQUFBLEdBQUFvQixDQUFBO01BRUYsSUFBSXlFLG1CQUFtQixDQUFDVCxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQUE7UUFBQXBGLGFBQUEsR0FBQXNCLENBQUE7UUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7UUFDcEMsTUFBTSxJQUFJMkUsS0FBSyxDQUNiLDBDQUEwQ2hDLE9BQU8sOEJBQThCLENBQ2hGO01BQ0gsQ0FBQztNQUFBO01BQUE7UUFBQS9ELGFBQUEsR0FBQXNCLENBQUE7TUFBQTtNQUVEO01BQ0EsTUFBTTBFLFFBQVE7TUFBQTtNQUFBLENBQUFoRyxhQUFBLEdBQUFvQixDQUFBLFFBQUcsSUFBSW1ELElBQUksQ0FDdkIsQ0FBQ3FCLFNBQVMsQ0FBQ3BGLEtBQUssQ0FBQ3lGLE9BQU8sRUFBRSxHQUFHTCxTQUFTLENBQUNqRixHQUFHLENBQUNzRixPQUFPLEVBQUUsSUFBSSxDQUFDLENBQzFEO01BQ0QsTUFBTUMsbUJBQW1CO01BQUE7TUFBQSxDQUFBbEcsYUFBQSxHQUFBb0IsQ0FBQSxRQUFHeUUsbUJBQW1CLENBQUNDLE1BQU0sQ0FDbkRLLENBQUMsSUFBSztRQUFBO1FBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1FBQUFyQixhQUFBLEdBQUFvQixDQUFBO1FBQUEsT0FBQStFLENBQUMsQ0FBQzdCLFNBQVMsR0FBRzBCLFFBQVE7TUFBUixDQUFRLENBQzlCO01BQ0QsTUFBTUksa0JBQWtCO01BQUE7TUFBQSxDQUFBcEcsYUFBQSxHQUFBb0IsQ0FBQSxRQUFHeUUsbUJBQW1CLENBQUNDLE1BQU0sQ0FDbERLLENBQUMsSUFBSztRQUFBO1FBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1FBQUFyQixhQUFBLEdBQUFvQixDQUFBO1FBQUEsT0FBQStFLENBQUMsQ0FBQzdCLFNBQVMsSUFBSTBCLFFBQVE7TUFBUixDQUFRLENBQy9CO01BRUQsTUFBTUssTUFBTTtNQUFBO01BQUEsQ0FBQXJHLGFBQUEsR0FBQW9CLENBQUEsUUFBa0I7UUFDNUIyQyxPQUFPO1FBQ1A2QixTQUFTO1FBQ1RTLE1BQU0sRUFBRTtVQUNOQyxjQUFjLEVBQUUsSUFBSSxDQUFDQyxjQUFjLENBQ2pDSCxrQkFBa0IsQ0FBQ0ksR0FBRyxDQUFFTCxDQUFDLElBQUs7WUFBQTtZQUFBbkcsYUFBQSxHQUFBcUIsQ0FBQTtZQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtZQUFBLE9BQUErRSxDQUFDLENBQUNqRCxZQUFZO1VBQVosQ0FBWSxDQUFDLEVBQzdDZ0QsbUJBQW1CLENBQUNNLEdBQUcsQ0FBRUwsQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDakQsWUFBWTtVQUFaLENBQVksQ0FBQyxDQUMvQztVQUNERyxTQUFTLEVBQUUsSUFBSSxDQUFDa0QsY0FBYyxDQUM1Qkgsa0JBQWtCLENBQUNJLEdBQUcsQ0FBRUwsQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDekIsYUFBYSxDQUFDckIsU0FBUztVQUFULENBQVMsQ0FBQyxFQUN4RDZDLG1CQUFtQixDQUFDTSxHQUFHLENBQUVMLENBQUMsSUFBSztZQUFBO1lBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1lBQUFyQixhQUFBLEdBQUFvQixDQUFBO1lBQUEsT0FBQStFLENBQUMsQ0FBQ3pCLGFBQWEsQ0FBQ3JCLFNBQVM7VUFBVCxDQUFTLENBQUMsQ0FDMUQ7VUFDREMsU0FBUyxFQUFFLElBQUksQ0FBQ2lELGNBQWMsQ0FDNUJILGtCQUFrQixDQUFDSSxHQUFHLENBQUVMLENBQUMsSUFBSztZQUFBO1lBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1lBQUFyQixhQUFBLEdBQUFvQixDQUFBO1lBQUEsT0FBQStFLENBQUMsQ0FBQ3pCLGFBQWEsQ0FBQ3BCLFNBQVM7VUFBVCxDQUFTLENBQUMsRUFDeEQ0QyxtQkFBbUIsQ0FBQ00sR0FBRyxDQUFFTCxDQUFDLElBQUs7WUFBQTtZQUFBbkcsYUFBQSxHQUFBcUIsQ0FBQTtZQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtZQUFBLE9BQUErRSxDQUFDLENBQUN6QixhQUFhLENBQUNwQixTQUFTO1VBQVQsQ0FBUyxDQUFDLENBQzFEO1VBQ0RDLFVBQVUsRUFBRSxJQUFJLENBQUNnRCxjQUFjLENBQzdCSCxrQkFBa0IsQ0FBQ0ksR0FBRyxDQUFFTCxDQUFDLElBQUs7WUFBQTtZQUFBbkcsYUFBQSxHQUFBcUIsQ0FBQTtZQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtZQUFBLE9BQUErRSxDQUFDLENBQUN6QixhQUFhLENBQUNuQixVQUFVO1VBQVYsQ0FBVSxDQUFDLEVBQ3pEMkMsbUJBQW1CLENBQUNNLEdBQUcsQ0FBRUwsQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDekIsYUFBYSxDQUFDbkIsVUFBVTtVQUFWLENBQVUsQ0FBQyxDQUMzRDtVQUNEQyxRQUFRLEVBQUUsSUFBSSxDQUFDK0MsY0FBYyxDQUMzQkgsa0JBQWtCLENBQUNJLEdBQUcsQ0FBRUwsQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDekIsYUFBYSxDQUFDbEIsUUFBUTtVQUFSLENBQVEsQ0FBQyxFQUN2RDBDLG1CQUFtQixDQUFDTSxHQUFHLENBQUVMLENBQUMsSUFBSztZQUFBO1lBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1lBQUFyQixhQUFBLEdBQUFvQixDQUFBO1lBQUEsT0FBQStFLENBQUMsQ0FBQ3pCLGFBQWEsQ0FBQ2xCLFFBQVE7VUFBUixDQUFRLENBQUMsRUFDeEQsS0FBSyxDQUFDO1dBQ1A7VUFDREUsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDNkMsY0FBYyxDQUNuQ0gsa0JBQWtCLENBQ2ZOLE1BQU0sQ0FBRUssQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDdEIsWUFBWTtVQUFaLENBQVksQ0FBQyxDQUM3QjJCLEdBQUcsQ0FBRUwsQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDdEIsWUFBYSxDQUFDNEIsTUFBTTtVQUFOLENBQU0sQ0FBQyxFQUNyQ1AsbUJBQW1CLENBQ2hCSixNQUFNLENBQUVLLENBQUMsSUFBSztZQUFBO1lBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1lBQUFyQixhQUFBLEdBQUFvQixDQUFBO1lBQUEsT0FBQStFLENBQUMsQ0FBQ3RCLFlBQVk7VUFBWixDQUFZLENBQUMsQ0FDN0IyQixHQUFHLENBQUVMLENBQUMsSUFBSztZQUFBO1lBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1lBQUFyQixhQUFBLEdBQUFvQixDQUFBO1lBQUEsT0FBQStFLENBQUMsQ0FBQ3RCLFlBQWEsQ0FBQzRCLE1BQU07VUFBTixDQUFNLENBQUM7U0FFeEM7UUFDREMsVUFBVSxFQUFFO1VBQ1ZDLGdCQUFnQixFQUFFZCxtQkFBbUIsQ0FBQ1QsTUFBTTtVQUM1Q3dCLGNBQWMsRUFBRSxJQUFJLENBQUNDLGdCQUFnQixDQUNuQ2hCLG1CQUFtQixDQUFDVyxHQUFHLENBQUVMLENBQUMsSUFBSztZQUFBO1lBQUFuRyxhQUFBLEdBQUFxQixDQUFBO1lBQUFyQixhQUFBLEdBQUFvQixDQUFBO1lBQUEsT0FBQStFLENBQUMsQ0FBQ3ZCLFdBQVcsQ0FBQ2tDLE9BQU87VUFBUCxDQUFPLENBQUMsQ0FDdEQ7VUFDREMsV0FBVyxFQUFFLElBQUksQ0FBQ0YsZ0JBQWdCLENBQ2hDaEIsbUJBQW1CLENBQUNXLEdBQUcsQ0FBRUwsQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDdkIsV0FBVyxDQUFDb0MsSUFBSTtVQUFKLENBQUksQ0FBQyxDQUNuRDtVQUNEQyxTQUFTLEVBQUUsQ0FBQztVQUFFO1VBQ2RDLGdCQUFnQixFQUNkckIsbUJBQW1CLENBQUNDLE1BQU0sQ0FBRUssQ0FBQyxJQUFLO1lBQUE7WUFBQW5HLGFBQUEsR0FBQXFCLENBQUE7WUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7WUFBQSxPQUFBK0UsQ0FBQyxDQUFDdEIsWUFBWTtVQUFaLENBQVksQ0FBQyxDQUFDTyxNQUFNLEdBQ3hEUyxtQkFBbUIsQ0FBQ1Q7O09BRXpCO01BQUM7TUFBQXBGLGFBQUEsR0FBQW9CLENBQUE7TUFFRixPQUFPaUYsTUFBTTtJQUNmLENBQUM7O0VBRUQ7OztFQUdNYyxpQkFBaUJBLENBQ3JCcEQsT0FBZSxFQUNmcUQsVUFBa0IsRUFDbEJ4QixTQUFxQztJQUFBO0lBQUE1RixhQUFBLEdBQUFxQixDQUFBO0lBQUFyQixhQUFBLEdBQUFvQixDQUFBOzs7O01BRXJDLE1BQU1pRyxRQUFRO01BQUE7TUFBQSxDQUFBckgsYUFBQSxHQUFBb0IsQ0FBQSxRQUFHLE1BQU0sSUFBSSxDQUFDa0IsVUFBVSxDQUFDZ0YsSUFBSSxDQUN6QyxJQUFJckYsbUJBQUEsQ0FBQXNGLDBCQUEwQixDQUFDO1FBQzdCQyxTQUFTLEVBQUUsWUFBWTtRQUN2QkMsVUFBVSxFQUFFTCxVQUFVO1FBQ3RCTSxVQUFVLEVBQUUsQ0FDVjtVQUNFQyxJQUFJLEVBQUUsU0FBUztVQUNmQyxLQUFLLEVBQUU3RDtTQUNSLENBQ0Y7UUFDRDhELFNBQVMsRUFBRWpDLFNBQVMsQ0FBQ3BGLEtBQUs7UUFDMUJzSCxPQUFPLEVBQUVsQyxTQUFTLENBQUNqRixHQUFHO1FBQ3RCb0gsTUFBTSxFQUFFLEdBQUc7UUFBRTtRQUNiQyxVQUFVLEVBQUUsQ0FBQyxTQUFTO09BQ3ZCLENBQUMsQ0FDSDtNQUFDO01BQUFoSSxhQUFBLEdBQUFvQixDQUFBO01BRUYsT0FBTztNQUFDO01BQUEsQ0FBQXBCLGFBQUEsR0FBQXNCLENBQUEsVUFBQStGLFFBQVEsQ0FBQ1ksVUFBVTtNQUFBO01BQUEsQ0FBQWpJLGFBQUEsR0FBQXNCLENBQUEsVUFBSSxFQUFFLEdBQzlCa0YsR0FBRyxDQUFFMEIsS0FBSyxJQUFNO1FBQUE7UUFBQWxJLGFBQUEsR0FBQXFCLENBQUE7UUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7UUFBQTtVQUNma0QsU0FBUyxFQUFFNEQsS0FBSyxDQUFDQyxTQUFVO1VBQzNCQyxLQUFLLEVBQUVGLEtBQUssQ0FBQ0c7U0FDZDtPQUFDLENBQUMsQ0FDRkMsSUFBSSxDQUFDLENBQUNuQyxDQUFDLEVBQUU3RSxDQUFDLEtBQUs7UUFBQTtRQUFBdEIsYUFBQSxHQUFBcUIsQ0FBQTtRQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtRQUFBLE9BQUErRSxDQUFDLENBQUM3QixTQUFTLENBQUMyQixPQUFPLEVBQUUsR0FBRzNFLENBQUMsQ0FBQ2dELFNBQVMsQ0FBQzJCLE9BQU8sRUFBRTtNQUFGLENBQUUsQ0FBQztJQUNsRSxDQUFDOztFQUVEOzs7RUFHQXRDLE9BQU9BLENBQUM0RSxRQUFnRDtJQUFBO0lBQUF2SSxhQUFBLEdBQUFxQixDQUFBO0lBQUFyQixhQUFBLEdBQUFvQixDQUFBO0lBQ3RELElBQUksQ0FBQ3NCLGNBQWMsQ0FBQ3dDLElBQUksQ0FBQ3FELFFBQVEsQ0FBQztFQUNwQztFQUVBOzs7RUFHYzlELGtCQUFrQkEsQ0FDOUJQLEtBQWE7SUFBQTtJQUFBbEUsYUFBQSxHQUFBcUIsQ0FBQTtJQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTs7OztNQUViO01BQ0EsTUFBTWdFLE1BQU07TUFBQTtNQUFBLENBQUFwRixhQUFBLEdBQUFvQixDQUFBLFFBQUc4QyxLQUFLLENBQUNrQixNQUFNO01BQzNCLE1BQU1vRCxTQUFTO01BQUE7TUFBQSxDQUFBeEksYUFBQSxHQUFBb0IsQ0FBQSxRQUFHOEMsS0FBSyxDQUFDdUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDckQsTUFBTTtNQUFDO01BQUFwRixhQUFBLEdBQUFvQixDQUFBO01BRTVDLE9BQU87UUFDTHNILE9BQU8sRUFBRUMsSUFBSSxDQUFDQyxHQUFHLENBQ2YsR0FBRyxFQUNIRCxJQUFJLENBQUNFLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxHQUFHRixJQUFJLENBQUNHLEdBQUcsQ0FBQ04sU0FBUyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUNwRDtRQUFFO1FBQ0hPLFVBQVUsRUFBRUosSUFBSSxDQUFDQyxHQUFHLENBQUMsR0FBRyxFQUFFSixTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQUU7UUFDNUNoRixRQUFRLEVBQUUsSUFBSSxDQUFDd0YsY0FBYyxDQUFDOUUsS0FBSyxDQUFDO1FBQ3BDK0UsT0FBTyxFQUFFLElBQUksQ0FBQ0MsYUFBYSxDQUFDaEYsS0FBSztPQUNsQztJQUNILENBQUM7O0VBRUQ7OztFQUdjUyxtQkFBbUJBLENBQy9CUixNQUFjLEVBQ2RELEtBQWE7SUFBQTtJQUFBbEUsYUFBQSxHQUFBcUIsQ0FBQTtJQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTs7OztNQUViO01BQ0EsTUFBTStILFlBQVk7TUFBQTtNQUFBLENBQUFuSixhQUFBLEdBQUFvQixDQUFBLFFBQUcrQyxNQUFNLENBQUNpQixNQUFNO01BQ2xDLE1BQU1nRSxXQUFXO01BQUE7TUFBQSxDQUFBcEosYUFBQSxHQUFBb0IsQ0FBQSxRQUFHOEMsS0FBSyxDQUFDa0IsTUFBTTtNQUFDO01BQUFwRixhQUFBLEdBQUFvQixDQUFBO01BRWpDLE9BQU87UUFDTGlDLFNBQVMsRUFBRSxJQUFJLENBQUNnRyxlQUFlLENBQUNsRixNQUFNLENBQUM7UUFDdkNiLFNBQVMsRUFBRSxJQUFJLENBQUNnRyxlQUFlLENBQUNuRixNQUFNLEVBQUVELEtBQUssQ0FBQztRQUM5Q1gsVUFBVSxFQUFFLElBQUksQ0FBQ2dHLGdCQUFnQixDQUFDcEYsTUFBTSxDQUFDO1FBQ3pDcUYsWUFBWSxFQUFFYixJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEVBQUVPLFlBQVksSUFBSUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQUU7UUFDL0Q1RixRQUFRLEVBQUUsSUFBSSxDQUFDd0YsY0FBYyxDQUFDN0UsTUFBTSxDQUFDO1FBQ3JDVixJQUFJLEVBQUUsSUFBSSxDQUFDZ0csVUFBVSxDQUFDdEYsTUFBTTtPQUM3QjtJQUNILENBQUM7O0VBRUQ7OztFQUdRVyxxQkFBcUJBLENBQUNULFVBQTZCO0lBQUE7SUFBQXJFLGFBQUEsR0FBQXFCLENBQUE7SUFDekQsTUFBTXFJLE9BQU87SUFBQTtJQUFBLENBQUExSixhQUFBLEdBQUFvQixDQUFBLFFBQUc7TUFDZGlDLFNBQVMsRUFBRSxHQUFHO01BQ2RDLFNBQVMsRUFBRSxJQUFJO01BQ2ZDLFVBQVUsRUFBRSxHQUFHO01BQ2ZpRyxZQUFZLEVBQUUsR0FBRztNQUNqQmhHLFFBQVEsRUFBRSxDQUFDLElBQUk7TUFBRTtNQUNqQkMsSUFBSSxFQUFFLENBQUMsR0FBRyxDQUFFO0tBQ2I7SUFBQztJQUFBekQsYUFBQSxHQUFBb0IsQ0FBQTtJQUVGLE9BQU91SCxJQUFJLENBQUNFLEdBQUcsQ0FDYixDQUFDLEVBQ0RGLElBQUksQ0FBQ0MsR0FBRyxDQUNOLENBQUMsRUFDRHZFLFVBQVUsQ0FBQ0ssYUFBYSxDQUFDckIsU0FBUyxHQUFHcUcsT0FBTyxDQUFDckcsU0FBUyxHQUNwRGdCLFVBQVUsQ0FBQ0ssYUFBYSxDQUFDcEIsU0FBUyxHQUFHb0csT0FBTyxDQUFDcEcsU0FBUyxHQUN0RGUsVUFBVSxDQUFDSyxhQUFhLENBQUNuQixVQUFVLEdBQUdtRyxPQUFPLENBQUNuRyxVQUFVLEdBQ3hEYyxVQUFVLENBQUNLLGFBQWEsQ0FBQzhFLFlBQVksR0FBR0UsT0FBTyxDQUFDRixZQUFZLEdBQzVELENBQUMsQ0FBQyxHQUFHbkYsVUFBVSxDQUFDSyxhQUFhLENBQUNsQixRQUFRLElBQUltRixJQUFJLENBQUNHLEdBQUcsQ0FBQ1ksT0FBTyxDQUFDbEcsUUFBUSxDQUFDLEdBQ3BFLENBQUMsQ0FBQyxHQUFHYSxVQUFVLENBQUNLLGFBQWEsQ0FBQ2pCLElBQUksSUFBSWtGLElBQUksQ0FBQ0csR0FBRyxDQUFDWSxPQUFPLENBQUNqRyxJQUFJLENBQUMsQ0FDL0QsQ0FDRjtFQUNIO0VBRUE7OztFQUdjK0Isa0JBQWtCQSxDQUM5Qm5CLFVBQTZCO0lBQUE7SUFBQXJFLGFBQUEsR0FBQXFCLENBQUE7SUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7Ozs7TUFFN0IsTUFBTW1FLE1BQU07TUFBQTtNQUFBLENBQUF2RixhQUFBLEdBQUFvQixDQUFBLFFBQW1CLEVBQUU7TUFFakM7TUFBQTtNQUFBcEIsYUFBQSxHQUFBb0IsQ0FBQTtNQUNBLElBQUlpRCxVQUFVLENBQUNuQixZQUFZLElBQUksSUFBSSxDQUFDWCxVQUFVLENBQUNXLFlBQVksQ0FBQ0UsUUFBUSxFQUFFO1FBQUE7UUFBQXBELGFBQUEsR0FBQXNCLENBQUE7UUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7UUFDcEVtRSxNQUFNLENBQUNMLElBQUksQ0FDVCxJQUFJLENBQUN5RSxrQkFBa0IsQ0FDckIsVUFBVSxFQUNWLHFCQUFxQixFQUNyQnRGLFVBQVUsRUFDViwrQ0FBK0NBLFVBQVUsQ0FBQ25CLFlBQVksQ0FBQzBHLE9BQU8sQ0FDNUUsQ0FBQyxDQUNGLEVBQUUsQ0FDSixDQUNGO01BQ0gsQ0FBQyxNQUFNO1FBQUE7UUFBQTVKLGFBQUEsR0FBQXNCLENBQUE7UUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7UUFBQSxJQUNMaUQsVUFBVSxDQUFDbkIsWUFBWSxJQUFJLElBQUksQ0FBQ1gsVUFBVSxDQUFDVyxZQUFZLENBQUNDLE9BQU8sRUFDL0Q7VUFBQTtVQUFBbkQsYUFBQSxHQUFBc0IsQ0FBQTtVQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtVQUNBbUUsTUFBTSxDQUFDTCxJQUFJLENBQ1QsSUFBSSxDQUFDeUUsa0JBQWtCLENBQ3JCLFFBQVEsRUFDUixxQkFBcUIsRUFDckJ0RixVQUFVLEVBQ1Ysa0NBQWtDQSxVQUFVLENBQUNuQixZQUFZLENBQUMwRyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDdkUsQ0FDRjtRQUNILENBQUM7UUFBQTtRQUFBO1VBQUE1SixhQUFBLEdBQUFzQixDQUFBO1FBQUE7TUFBRDtNQUVBO01BQ0EsTUFBTXVJLE1BQU07TUFBQTtNQUFBLENBQUE3SixhQUFBLEdBQUFvQixDQUFBLFFBQUcsQ0FDYjtRQUNFZ0gsS0FBSyxFQUFFL0QsVUFBVSxDQUFDSyxhQUFhLENBQUNyQixTQUFTO1FBQ3pDeUcsU0FBUyxFQUFFLElBQUksQ0FBQ3ZILFVBQVUsQ0FBQ2MsU0FBUztRQUNwQ3hDLElBQUksRUFBRTtPQUNQLEVBQ0Q7UUFDRXVILEtBQUssRUFBRS9ELFVBQVUsQ0FBQ0ssYUFBYSxDQUFDcEIsU0FBUztRQUN6Q3dHLFNBQVMsRUFBRSxJQUFJLENBQUN2SCxVQUFVLENBQUNlLFNBQVM7UUFDcEN6QyxJQUFJLEVBQUU7T0FDUCxFQUNEO1FBQ0V1SCxLQUFLLEVBQUUvRCxVQUFVLENBQUNLLGFBQWEsQ0FBQ25CLFVBQVU7UUFDMUN1RyxTQUFTLEVBQUUsSUFBSSxDQUFDdkgsVUFBVSxDQUFDZ0IsVUFBVTtRQUNyQzFDLElBQUksRUFBRTtPQUNQLENBQ0Y7TUFBQztNQUFBYixhQUFBLEdBQUFvQixDQUFBO01BRUYsS0FBSyxNQUFNMkksS0FBSyxJQUFJRixNQUFNLEVBQUU7UUFBQTtRQUFBN0osYUFBQSxHQUFBb0IsQ0FBQTtRQUMxQixJQUFJMkksS0FBSyxDQUFDM0IsS0FBSyxJQUFJMkIsS0FBSyxDQUFDRCxTQUFTLENBQUMxRyxRQUFRLEVBQUU7VUFBQTtVQUFBcEQsYUFBQSxHQUFBc0IsQ0FBQTtVQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtVQUMzQ21FLE1BQU0sQ0FBQ0wsSUFBSSxDQUNULElBQUksQ0FBQ3lFLGtCQUFrQixDQUNyQixNQUFNLEVBQ04scUJBQXFCLEVBQ3JCdEYsVUFBVSxFQUNWLFlBQVkwRixLQUFLLENBQUNsSixJQUFJLGlCQUFpQmtKLEtBQUssQ0FBQzNCLEtBQUssQ0FBQ3dCLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUNoRSxDQUNGO1FBQ0gsQ0FBQyxNQUFNO1VBQUE7VUFBQTVKLGFBQUEsR0FBQXNCLENBQUE7VUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7VUFBQSxJQUFJMkksS0FBSyxDQUFDM0IsS0FBSyxJQUFJMkIsS0FBSyxDQUFDRCxTQUFTLENBQUMzRyxPQUFPLEVBQUU7WUFBQTtZQUFBbkQsYUFBQSxHQUFBc0IsQ0FBQTtZQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtZQUNqRG1FLE1BQU0sQ0FBQ0wsSUFBSSxDQUNULElBQUksQ0FBQ3lFLGtCQUFrQixDQUNyQixRQUFRLEVBQ1IscUJBQXFCLEVBQ3JCdEYsVUFBVSxFQUNWLEdBQUcwRixLQUFLLENBQUNsSixJQUFJLG1CQUFtQmtKLEtBQUssQ0FBQzNCLEtBQUssQ0FBQ3dCLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUN6RCxDQUNGO1VBQ0gsQ0FBQztVQUFBO1VBQUE7WUFBQTVKLGFBQUEsR0FBQXNCLENBQUE7VUFBQTtRQUFEO01BQ0Y7TUFFQTtNQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BQ0EsSUFDRWlELFVBQVUsQ0FBQ0ssYUFBYSxDQUFDbEIsUUFBUSxJQUFJLElBQUksQ0FBQ2pCLFVBQVUsQ0FBQ2lCLFFBQVEsQ0FBQ0osUUFBUSxFQUN0RTtRQUFBO1FBQUFwRCxhQUFBLEdBQUFzQixDQUFBO1FBQUF0QixhQUFBLEdBQUFvQixDQUFBO1FBQ0FtRSxNQUFNLENBQUNMLElBQUksQ0FDVCxJQUFJLENBQUN5RSxrQkFBa0IsQ0FDckIsVUFBVSxFQUNWLHFCQUFxQixFQUNyQnRGLFVBQVUsRUFDVixxQ0FBcUNBLFVBQVUsQ0FBQ0ssYUFBYSxDQUFDbEIsUUFBUSxDQUFDb0csT0FBTyxDQUM1RSxDQUFDLENBQ0YsRUFBRSxDQUNKLENBQ0Y7TUFDSCxDQUFDO01BQUE7TUFBQTtRQUFBNUosYUFBQSxHQUFBc0IsQ0FBQTtNQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BRUQsSUFBSWlELFVBQVUsQ0FBQ0ssYUFBYSxDQUFDakIsSUFBSSxJQUFJLElBQUksQ0FBQ2xCLFVBQVUsQ0FBQ2tCLElBQUksQ0FBQ0wsUUFBUSxFQUFFO1FBQUE7UUFBQXBELGFBQUEsR0FBQXNCLENBQUE7UUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7UUFDbEVtRSxNQUFNLENBQUNMLElBQUksQ0FDVCxJQUFJLENBQUN5RSxrQkFBa0IsQ0FDckIsVUFBVSxFQUNWLHFCQUFxQixFQUNyQnRGLFVBQVUsRUFDVixpQ0FBaUNBLFVBQVUsQ0FBQ0ssYUFBYSxDQUFDakIsSUFBSSxDQUFDbUcsT0FBTyxDQUNwRSxDQUFDLENBQ0YsRUFBRSxDQUNKLENBQ0Y7TUFDSCxDQUFDO01BQUE7TUFBQTtRQUFBNUosYUFBQSxHQUFBc0IsQ0FBQTtNQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BRUQsT0FBT21FLE1BQU07SUFDZixDQUFDOztFQUVEOzs7RUFHUW9FLGtCQUFrQkEsQ0FDeEJLLFFBQWtDLEVBQ2xDL0ksSUFBMEIsRUFDMUJvRCxVQUE2QixFQUM3QjRGLE9BQWU7SUFBQTtJQUFBakssYUFBQSxHQUFBcUIsQ0FBQTtJQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtJQUVmLE9BQU87TUFDTDhJLEVBQUUsRUFBRSxXQUFXN0YsVUFBVSxDQUFDTixPQUFPLElBQUlRLElBQUksQ0FBQzRGLEdBQUcsRUFBRSxFQUFFO01BQ2pEN0YsU0FBUyxFQUFFLElBQUlDLElBQUksRUFBRTtNQUNyQnlGLFFBQVE7TUFDUi9JLElBQUk7TUFDSjhDLE9BQU8sRUFBRU0sVUFBVSxDQUFDTixPQUFPO01BQzNCQyxRQUFRLEVBQUVLLFVBQVUsQ0FBQ0wsUUFBUTtNQUM3QmlHLE9BQU87TUFDUEcsT0FBTyxFQUFFLEVBQUU7TUFDWEMsZUFBZSxFQUFFLElBQUksQ0FBQ0MseUJBQXlCLENBQUNqRyxVQUFVLENBQUM7TUFDM0RrRyxpQkFBaUIsRUFBRWxHO0tBQ3BCO0VBQ0g7RUFFQTs7O0VBR1FpRyx5QkFBeUJBLENBQUNqRyxVQUE2QjtJQUFBO0lBQUFyRSxhQUFBLEdBQUFxQixDQUFBO0lBQzdELE1BQU1nSixlQUFlO0lBQUE7SUFBQSxDQUFBckssYUFBQSxHQUFBb0IsQ0FBQSxRQUFhLEVBQUU7SUFBQztJQUFBcEIsYUFBQSxHQUFBb0IsQ0FBQTtJQUVyQyxJQUFJaUQsVUFBVSxDQUFDSyxhQUFhLENBQUNyQixTQUFTLEdBQUcsR0FBRyxFQUFFO01BQUE7TUFBQXJELGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7TUFDNUNpSixlQUFlLENBQUNuRixJQUFJLENBQUMsc0NBQXNDLENBQUM7TUFBQztNQUFBbEYsYUFBQSxHQUFBb0IsQ0FBQTtNQUM3RGlKLGVBQWUsQ0FBQ25GLElBQUksQ0FBQywyQ0FBMkMsQ0FBQztJQUNuRSxDQUFDO0lBQUE7SUFBQTtNQUFBbEYsYUFBQSxHQUFBc0IsQ0FBQTtJQUFBO0lBQUF0QixhQUFBLEdBQUFvQixDQUFBO0lBRUQsSUFBSWlELFVBQVUsQ0FBQ0ssYUFBYSxDQUFDcEIsU0FBUyxHQUFHLEdBQUcsRUFBRTtNQUFBO01BQUF0RCxhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BQzVDaUosZUFBZSxDQUFDbkYsSUFBSSxDQUFDLGdEQUFnRCxDQUFDO01BQUM7TUFBQWxGLGFBQUEsR0FBQW9CLENBQUE7TUFDdkVpSixlQUFlLENBQUNuRixJQUFJLENBQUMsNkNBQTZDLENBQUM7SUFDckUsQ0FBQztJQUFBO0lBQUE7TUFBQWxGLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtJQUVELElBQUlpRCxVQUFVLENBQUNLLGFBQWEsQ0FBQ25CLFVBQVUsR0FBRyxHQUFHLEVBQUU7TUFBQTtNQUFBdkQsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtNQUM3Q2lKLGVBQWUsQ0FBQ25GLElBQUksQ0FBQyxvQ0FBb0MsQ0FBQztNQUFDO01BQUFsRixhQUFBLEdBQUFvQixDQUFBO01BQzNEaUosZUFBZSxDQUFDbkYsSUFBSSxDQUFDLDBDQUEwQyxDQUFDO0lBQ2xFLENBQUM7SUFBQTtJQUFBO01BQUFsRixhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7SUFFRCxJQUFJaUQsVUFBVSxDQUFDSyxhQUFhLENBQUNsQixRQUFRLEdBQUcsR0FBRyxFQUFFO01BQUE7TUFBQXhELGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7TUFDM0NpSixlQUFlLENBQUNuRixJQUFJLENBQUMsc0NBQXNDLENBQUM7TUFBQztNQUFBbEYsYUFBQSxHQUFBb0IsQ0FBQTtNQUM3RGlKLGVBQWUsQ0FBQ25GLElBQUksQ0FBQyx3Q0FBd0MsQ0FBQztJQUNoRSxDQUFDO0lBQUE7SUFBQTtNQUFBbEYsYUFBQSxHQUFBc0IsQ0FBQTtJQUFBO0lBQUF0QixhQUFBLEdBQUFvQixDQUFBO0lBRUQsSUFBSWlELFVBQVUsQ0FBQ0ssYUFBYSxDQUFDakIsSUFBSSxHQUFHLEdBQUcsRUFBRTtNQUFBO01BQUF6RCxhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BQ3ZDaUosZUFBZSxDQUFDbkYsSUFBSSxDQUFDLHlDQUF5QyxDQUFDO01BQUM7TUFBQWxGLGFBQUEsR0FBQW9CLENBQUE7TUFDaEVpSixlQUFlLENBQUNuRixJQUFJLENBQUMsd0NBQXdDLENBQUM7SUFDaEUsQ0FBQztJQUFBO0lBQUE7TUFBQWxGLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtJQUVELE9BQU9pSixlQUFlO0VBQ3hCO0VBRUE7OztFQUdROUQsY0FBY0EsQ0FDcEJpRSxhQUF1QixFQUN2QkMsY0FBd0IsRUFDeEJDLGNBQUE7RUFBQTtFQUFBLENBQUExSyxhQUFBLEdBQUFzQixDQUFBLFdBQTBCLElBQUk7SUFBQTtJQUFBdEIsYUFBQSxHQUFBcUIsQ0FBQTtJQUU5QixNQUFNc0osT0FBTztJQUFBO0lBQUEsQ0FBQTNLLGFBQUEsR0FBQW9CLENBQUEsU0FBRyxJQUFJLENBQUN5RixnQkFBZ0IsQ0FBQzJELGFBQWEsQ0FBQztJQUNwRCxNQUFNSSxRQUFRO0lBQUE7SUFBQSxDQUFBNUssYUFBQSxHQUFBb0IsQ0FBQSxTQUFHLElBQUksQ0FBQ3lGLGdCQUFnQixDQUFDNEQsY0FBYyxDQUFDO0lBQ3RELE1BQU1JLE1BQU07SUFBQTtJQUFBLENBQUE3SyxhQUFBLEdBQUFvQixDQUFBLFNBQUd1SixPQUFPLEdBQUdDLFFBQVE7SUFFakMsSUFBSUUsS0FBMkM7SUFDL0MsTUFBTWhCLFNBQVM7SUFBQTtJQUFBLENBQUE5SixhQUFBLEdBQUFvQixDQUFBLFNBQUcsSUFBSSxFQUFDLENBQUM7SUFBQTtJQUFBcEIsYUFBQSxHQUFBb0IsQ0FBQTtJQUV4QixJQUFJdUgsSUFBSSxDQUFDRyxHQUFHLENBQUMrQixNQUFNLENBQUMsR0FBR2YsU0FBUyxFQUFFO01BQUE7TUFBQTlKLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7TUFDaEMwSixLQUFLLEdBQUcsUUFBUTtJQUNsQixDQUFDLE1BQU07TUFBQTtNQUFBOUssYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtNQUFBLElBQUlzSixjQUFjLEVBQUU7UUFBQTtRQUFBMUssYUFBQSxHQUFBc0IsQ0FBQTtRQUFBdEIsYUFBQSxHQUFBb0IsQ0FBQTtRQUN6QjBKLEtBQUssR0FBR0QsTUFBTSxHQUFHLENBQUM7UUFBQTtRQUFBLENBQUE3SyxhQUFBLEdBQUFzQixDQUFBLFdBQUcsV0FBVztRQUFBO1FBQUEsQ0FBQXRCLGFBQUEsR0FBQXNCLENBQUEsV0FBRyxXQUFXO01BQ2hELENBQUMsTUFBTTtRQUFBO1FBQUF0QixhQUFBLEdBQUFzQixDQUFBO1FBQUF0QixhQUFBLEdBQUFvQixDQUFBO1FBQ0wwSixLQUFLLEdBQUdELE1BQU0sR0FBRyxDQUFDO1FBQUE7UUFBQSxDQUFBN0ssYUFBQSxHQUFBc0IsQ0FBQSxXQUFHLFdBQVc7UUFBQTtRQUFBLENBQUF0QixhQUFBLEdBQUFzQixDQUFBLFdBQUcsV0FBVztNQUNoRDtJQUFBO0lBQUM7SUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7SUFFRCxPQUFPO01BQUV1SixPQUFPO01BQUVDLFFBQVE7TUFBRUMsTUFBTTtNQUFFQztJQUFLLENBQUU7RUFDN0M7RUFFQTs7O0VBR1FqRSxnQkFBZ0JBLENBQUNrRSxNQUFnQjtJQUFBO0lBQUEvSyxhQUFBLEdBQUFxQixDQUFBO0lBQUFyQixhQUFBLEdBQUFvQixDQUFBO0lBQ3ZDLElBQUkySixNQUFNLENBQUMzRixNQUFNLEtBQUssQ0FBQyxFQUFFO01BQUE7TUFBQXBGLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7TUFBQSxPQUFPLENBQUM7SUFBQSxDQUFDO0lBQUE7SUFBQTtNQUFBcEIsYUFBQSxHQUFBc0IsQ0FBQTtJQUFBO0lBQUF0QixhQUFBLEdBQUFvQixDQUFBO0lBQ2xDLE9BQU8ySixNQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDQyxHQUFHLEVBQUU3QyxLQUFLLEtBQUs7TUFBQTtNQUFBcEksYUFBQSxHQUFBcUIsQ0FBQTtNQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtNQUFBLE9BQUE2SixHQUFHLEdBQUc3QyxLQUFLO0lBQUwsQ0FBSyxFQUFFLENBQUMsQ0FBQyxHQUFHMkMsTUFBTSxDQUFDM0YsTUFBTTtFQUN0RTtFQUVBOzs7RUFHY0UscUJBQXFCQSxDQUNqQ2pCLFVBQTZCO0lBQUE7SUFBQXJFLGFBQUEsR0FBQXFCLENBQUE7SUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7Ozs7TUFFN0IsTUFBTWdKLE9BQU87TUFBQTtNQUFBLENBQUFwSyxhQUFBLEdBQUFvQixDQUFBLFNBQUc7UUFDZDhKLFlBQVksRUFBRTdHLFVBQVUsQ0FBQ25CLFlBQVk7UUFDckNpSSxTQUFTLEVBQUU5RyxVQUFVLENBQUNLLGFBQWEsQ0FBQ3JCLFNBQVM7UUFDN0MrSCxTQUFTLEVBQUUvRyxVQUFVLENBQUNLLGFBQWEsQ0FBQ3BCLFNBQVM7UUFDN0MrSCxVQUFVLEVBQUVoSCxVQUFVLENBQUNLLGFBQWEsQ0FBQ25CLFVBQVU7UUFDL0MrSCxZQUFZLEVBQUVqSCxVQUFVLENBQUNLLGFBQWEsQ0FBQzhFLFlBQVk7UUFDbkQrQixRQUFRLEVBQUVsSCxVQUFVLENBQUNLLGFBQWEsQ0FBQ2xCLFFBQVE7UUFDM0NnSSxJQUFJLEVBQUVuSCxVQUFVLENBQUNLLGFBQWEsQ0FBQ2pCLElBQUk7UUFDbkNnSSxPQUFPLEVBQUVwSCxVQUFVLENBQUNPLFdBQVcsQ0FBQ2tDLE9BQU87UUFDdkM0RSxVQUFVLEVBQUVySCxVQUFVLENBQUNPLFdBQVcsQ0FBQytHLFVBQVU7UUFDN0NDLElBQUksRUFBRXZILFVBQVUsQ0FBQ08sV0FBVyxDQUFDb0M7T0FDOUI7TUFBQztNQUFBaEgsYUFBQSxHQUFBb0IsQ0FBQTtNQUVGLElBQUlpRCxVQUFVLENBQUNRLFlBQVksRUFBRTtRQUFBO1FBQUE3RSxhQUFBLEdBQUFzQixDQUFBO1FBQUF0QixhQUFBLEdBQUFvQixDQUFBO1FBQzNCZ0osT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHL0YsVUFBVSxDQUFDUSxZQUFZLENBQUM0QixNQUFNO1FBQUM7UUFBQXpHLGFBQUEsR0FBQW9CLENBQUE7UUFDdkRnSixPQUFPLENBQUMsYUFBYSxDQUFDLEdBQUcvRixVQUFVLENBQUNRLFlBQVksQ0FBQ2dILE9BQU87UUFBQTtRQUFBLENBQUE3TCxhQUFBLEdBQUFzQixDQUFBLFdBQUcsQ0FBQztRQUFBO1FBQUEsQ0FBQXRCLGFBQUEsR0FBQXNCLENBQUEsV0FBRyxDQUFDO1FBQUM7UUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7UUFDakVnSixPQUFPLENBQUMsY0FBYyxDQUFDLEdBQUcvRixVQUFVLENBQUNRLFlBQVksQ0FBQ2lILFFBQVE7UUFBQTtRQUFBLENBQUE5TCxhQUFBLEdBQUFzQixDQUFBLFdBQUcsQ0FBQztRQUFBO1FBQUEsQ0FBQXRCLGFBQUEsR0FBQXNCLENBQUEsV0FBRyxDQUFDO1FBQUM7UUFBQXRCLGFBQUEsR0FBQW9CLENBQUE7UUFDbkVnSixPQUFPLENBQUMsaUJBQWlCLENBQUMsR0FBRy9GLFVBQVUsQ0FBQ1EsWUFBWSxDQUFDa0gsV0FBVztRQUFBO1FBQUEsQ0FBQS9MLGFBQUEsR0FBQXNCLENBQUEsV0FBRyxDQUFDO1FBQUE7UUFBQSxDQUFBdEIsYUFBQSxHQUFBc0IsQ0FBQSxXQUFHLENBQUM7TUFDMUUsQ0FBQztNQUFBO01BQUE7UUFBQXRCLGFBQUEsR0FBQXNCLENBQUE7TUFBQTtNQUVELE1BQU0wSyxVQUFVO01BQUE7TUFBQSxDQUFBaE0sYUFBQSxHQUFBb0IsQ0FBQSxTQUFHNEIsTUFBTSxDQUFDaUosT0FBTyxDQUFDN0IsT0FBTyxDQUFDLENBQUM1RCxHQUFHLENBQUMsQ0FBQyxDQUFDM0YsSUFBSSxFQUFFdUgsS0FBSyxDQUFDLEtBQU07UUFBQTtRQUFBcEksYUFBQSxHQUFBcUIsQ0FBQTtRQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtRQUFBO1VBQ2pFcUcsVUFBVSxFQUFFNUcsSUFBSTtVQUNoQitHLEtBQUssRUFBRVEsS0FBSztVQUNaOEQsSUFBSSxFQUFFLE1BQU07VUFDWnhFLFVBQVUsRUFBRSxDQUNWO1lBQ0VDLElBQUksRUFBRSxTQUFTO1lBQ2ZDLEtBQUssRUFBRXZELFVBQVUsQ0FBQ047V0FDbkIsRUFDRDtZQUNFNEQsSUFBSSxFQUFFLFVBQVU7WUFDaEJDLEtBQUssRUFBRXZELFVBQVUsQ0FBQ0w7V0FDbkIsQ0FDRjtVQUNEbUUsU0FBUyxFQUFFOUQsVUFBVSxDQUFDQztTQUN2QjtPQUFDLENBQUM7TUFBQztNQUFBdEUsYUFBQSxHQUFBb0IsQ0FBQTtNQUVKLE1BQU0sSUFBSSxDQUFDa0IsVUFBVSxDQUFDZ0YsSUFBSSxDQUN4QixJQUFJckYsbUJBQUEsQ0FBQWtLLG9CQUFvQixDQUFDO1FBQ3ZCM0UsU0FBUyxFQUFFLFlBQVk7UUFDdkI0RSxVQUFVLEVBQUVKO09BQ2IsQ0FBQyxDQUNIO0lBQ0gsQ0FBQzs7RUFFRDs7O0VBR2N0RyxTQUFTQSxDQUFDRCxLQUFtQjtJQUFBO0lBQUF6RixhQUFBLEdBQUFxQixDQUFBO0lBQUFyQixhQUFBLEdBQUFvQixDQUFBOzs7OztNQUN6QyxLQUFLLE1BQU1tSCxRQUFRLElBQUksSUFBSSxDQUFDN0YsY0FBYyxFQUFFO1FBQUE7UUFBQTFDLGFBQUEsR0FBQW9CLENBQUE7UUFDMUMsSUFBSTtVQUFBO1VBQUFwQixhQUFBLEdBQUFvQixDQUFBO1VBQ0YsTUFBTW1ILFFBQVEsQ0FBQzlDLEtBQUssQ0FBQztRQUN2QixDQUFDLENBQUMsT0FBTzRHLEtBQUssRUFBRTtVQUFBO1VBQUFyTSxhQUFBLEdBQUFvQixDQUFBO1VBQ2RrTCxPQUFPLENBQUNELEtBQUssQ0FBQywrQkFBK0IsRUFBRUEsS0FBSyxDQUFDO1FBQ3ZEO01BQ0Y7SUFDRixDQUFDOztFQUVEOzs7RUFHY3pJLGdCQUFnQkEsQ0FBQzJJLFVBQXNCO0lBQUE7SUFBQXZNLGFBQUEsR0FBQXFCLENBQUE7SUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7Ozs7TUFDbkQ7TUFDQSxNQUFNb0wsWUFBWTtNQUFBO01BQUEsQ0FBQXhNLGFBQUEsR0FBQW9CLENBQUEsU0FBQTRCLE1BQUEsQ0FBQUMsTUFBQSxDQUFBRCxNQUFBLENBQUFDLE1BQUEsS0FDYnNKLFVBQVU7UUFDYnJDLEVBQUUsRUFBRSxpQkFBaUJxQyxVQUFVLENBQUNyQyxFQUFFO01BQUUsRUFDckM7TUFBQztNQUFBbEssYUFBQSxHQUFBb0IsQ0FBQTtNQUVGLE1BQU0sSUFBSSxDQUFDc0UsU0FBUyxDQUFDOEcsWUFBWSxDQUFDO0lBQ3BDLENBQUM7O0VBRUQ7RUFDUXhELGNBQWNBLENBQUN5RCxJQUFZO0lBQUE7SUFBQXpNLGFBQUEsR0FBQXFCLENBQUE7SUFDakMsTUFBTXFMLFVBQVU7SUFBQTtJQUFBLENBQUExTSxhQUFBLEdBQUFvQixDQUFBLFNBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLENBQUM7SUFDNUQsTUFBTXVMLEtBQUs7SUFBQTtJQUFBLENBQUEzTSxhQUFBLEdBQUFvQixDQUFBLFNBQUdxTCxJQUFJLENBQUNHLFdBQVcsRUFBRSxDQUFDbkUsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUM3QyxNQUFNb0UsVUFBVTtJQUFBO0lBQUEsQ0FBQTdNLGFBQUEsR0FBQW9CLENBQUEsU0FBR3VMLEtBQUssQ0FBQzdHLE1BQU0sQ0FBRWdILElBQUksSUFDbkM7TUFBQTtNQUFBOU0sYUFBQSxHQUFBcUIsQ0FBQTtNQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtNQUFBLE9BQUFzTCxVQUFVLENBQUNLLElBQUksQ0FBRUMsS0FBSyxJQUFLO1FBQUE7UUFBQWhOLGFBQUEsR0FBQXFCLENBQUE7UUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7UUFBQSxPQUFBMEwsSUFBSSxDQUFDRyxRQUFRLENBQUNELEtBQUssQ0FBQztNQUFELENBQUMsQ0FBQztJQUFELENBQUMsQ0FDakQsQ0FBQzVILE1BQU07SUFBQztJQUFBcEYsYUFBQSxHQUFBb0IsQ0FBQTtJQUNULE9BQU91SCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEVBQUdpRSxVQUFVLEdBQUdGLEtBQUssQ0FBQ3ZILE1BQU0sR0FBSSxFQUFFLENBQUM7RUFDeEQ7RUFFUThELGFBQWFBLENBQUN1RCxJQUFZO0lBQUE7SUFBQXpNLGFBQUEsR0FBQXFCLENBQUE7SUFDaEMsTUFBTTZMLFdBQVc7SUFBQTtJQUFBLENBQUFsTixhQUFBLEdBQUFvQixDQUFBLFNBQUcsQ0FDbEIsdUJBQXVCO0lBQUU7SUFDekIscURBQXFEO0lBQUU7SUFDdkQsdUJBQXVCLENBQUU7SUFBQSxDQUMxQjtJQUVELE1BQU0rTCxPQUFPO0lBQUE7SUFBQSxDQUFBbk4sYUFBQSxHQUFBb0IsQ0FBQSxTQUFHOEwsV0FBVyxDQUFDcEgsTUFBTSxDQUFFc0gsT0FBTyxJQUFLO01BQUE7TUFBQXBOLGFBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7TUFBQSxPQUFBZ00sT0FBTyxDQUFDQyxJQUFJLENBQUNaLElBQUksQ0FBQztJQUFELENBQUMsQ0FBQyxDQUFDckgsTUFBTTtJQUFDO0lBQUFwRixhQUFBLEdBQUFvQixDQUFBO0lBQzNFLE9BQU91SCxJQUFJLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEVBQUV1RSxPQUFPLEdBQUcsQ0FBQyxDQUFDO0VBQ25DO0VBRVE5RCxlQUFlQSxDQUFDb0QsSUFBWTtJQUFBO0lBQUF6TSxhQUFBLEdBQUFxQixDQUFBO0lBQ2xDO0lBQ0EsTUFBTWlNLFNBQVM7SUFBQTtJQUFBLENBQUF0TixhQUFBLEdBQUFvQixDQUFBLFNBQUdxTCxJQUFJLENBQUNoRSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMzQyxNQUFNLENBQUUxRSxDQUFDLElBQUs7TUFBQTtNQUFBcEIsYUFBQSxHQUFBcUIsQ0FBQTtNQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtNQUFBLE9BQUFBLENBQUMsQ0FBQ21NLElBQUksRUFBRSxDQUFDbkksTUFBTSxHQUFHLENBQUM7SUFBRCxDQUFDLENBQUM7SUFBQztJQUFBcEYsYUFBQSxHQUFBb0IsQ0FBQTtJQUMxRSxJQUFJa00sU0FBUyxDQUFDbEksTUFBTSxLQUFLLENBQUMsRUFBRTtNQUFBO01BQUFwRixhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFvQixDQUFBO01BQUEsT0FBTyxDQUFDO0lBQUEsQ0FBQztJQUFBO0lBQUE7TUFBQXBCLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUVyQztJQUNBLE1BQU1rTSxpQkFBaUI7SUFBQTtJQUFBLENBQUF4TixhQUFBLEdBQUFvQixDQUFBLFNBQUdxTCxJQUFJLENBQUNySCxNQUFNLEdBQUdrSSxTQUFTLENBQUNsSSxNQUFNO0lBQ3hELE1BQU1xSSxjQUFjO0lBQUE7SUFBQSxDQUFBek4sYUFBQSxHQUFBb0IsQ0FBQSxTQUFHdUgsSUFBSSxDQUFDQyxHQUFHLENBQzdCLEdBQUcsRUFDSEQsSUFBSSxDQUFDRSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsR0FBR0YsSUFBSSxDQUFDRyxHQUFHLENBQUMwRSxpQkFBaUIsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FDN0Q7SUFBQztJQUFBeE4sYUFBQSxHQUFBb0IsQ0FBQTtJQUVGLE9BQU9xTSxjQUFjO0VBQ3ZCO0VBRVFuRSxlQUFlQSxDQUFDbkYsTUFBYyxFQUFFRCxLQUFhO0lBQUE7SUFBQWxFLGFBQUEsR0FBQXFCLENBQUE7SUFDbkQ7SUFDQSxNQUFNcU0sVUFBVTtJQUFBO0lBQUEsQ0FBQTFOLGFBQUEsR0FBQW9CLENBQUEsU0FBRyxJQUFJdU0sR0FBRyxDQUFDekosS0FBSyxDQUFDMEksV0FBVyxFQUFFLENBQUNuRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDNUQsTUFBTW1GLFdBQVc7SUFBQTtJQUFBLENBQUE1TixhQUFBLEdBQUFvQixDQUFBLFNBQUcrQyxNQUFNLENBQUN5SSxXQUFXLEVBQUUsQ0FBQ25FLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFFckQsTUFBTW9GLGFBQWE7SUFBQTtJQUFBLENBQUE3TixhQUFBLEdBQUFvQixDQUFBLFNBQUd3TSxXQUFXLENBQUM5SCxNQUFNLENBQUVnSCxJQUFJLElBQzVDO01BQUE7TUFBQTlNLGFBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7TUFBQSxPQUFBc00sVUFBVSxDQUFDM0ksR0FBRyxDQUFDK0gsSUFBSSxDQUFDO0lBQUQsQ0FBQyxDQUNyQixDQUFDMUgsTUFBTTtJQUFDO0lBQUFwRixhQUFBLEdBQUFvQixDQUFBO0lBQ1QsT0FBT3VILElBQUksQ0FBQ0MsR0FBRyxDQUFDLEdBQUcsRUFBRWlGLGFBQWEsR0FBR2xGLElBQUksQ0FBQ0UsR0FBRyxDQUFDLENBQUMsRUFBRStFLFdBQVcsQ0FBQ3hJLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztFQUMzRTtFQUVRbUUsZ0JBQWdCQSxDQUFDa0QsSUFBWTtJQUFBO0lBQUF6TSxhQUFBLEdBQUFxQixDQUFBO0lBQ25DO0lBQ0EsTUFBTXlNLGdCQUFnQjtJQUFBO0lBQUEsQ0FBQTlOLGFBQUEsR0FBQW9CLENBQUEsU0FBRyxDQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLENBQUM7SUFDM0UsTUFBTTJNLFlBQVk7SUFBQTtJQUFBLENBQUEvTixhQUFBLEdBQUFvQixDQUFBLFNBQUcsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLENBQUM7SUFFeEUsTUFBTXVMLEtBQUs7SUFBQTtJQUFBLENBQUEzTSxhQUFBLEdBQUFvQixDQUFBLFNBQUdxTCxJQUFJLENBQUNHLFdBQVcsRUFBRSxDQUFDbkUsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUM3QyxNQUFNdUYsY0FBYztJQUFBO0lBQUEsQ0FBQWhPLGFBQUEsR0FBQW9CLENBQUEsU0FBR3VMLEtBQUssQ0FBQzdHLE1BQU0sQ0FBRWdILElBQUksSUFDdkM7TUFBQTtNQUFBOU0sYUFBQSxHQUFBcUIsQ0FBQTtNQUFBckIsYUFBQSxHQUFBb0IsQ0FBQTtNQUFBLE9BQUEwTSxnQkFBZ0IsQ0FBQ2IsUUFBUSxDQUFDSCxJQUFJLENBQUM7SUFBRCxDQUFDLENBQ2hDLENBQUMxSCxNQUFNO0lBQ1IsTUFBTTZJLFlBQVk7SUFBQTtJQUFBLENBQUFqTyxhQUFBLEdBQUFvQixDQUFBLFNBQUd1TCxLQUFLLENBQUM3RyxNQUFNLENBQUVnSCxJQUFJLElBQ3JDO01BQUE7TUFBQTlNLGFBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7TUFBQSxPQUFBMk0sWUFBWSxDQUFDZCxRQUFRLENBQUNILElBQUksQ0FBQztJQUFELENBQUMsQ0FDNUIsQ0FBQzFILE1BQU07SUFBQztJQUFBcEYsYUFBQSxHQUFBb0IsQ0FBQTtJQUVULE9BQU91SCxJQUFJLENBQUNDLEdBQUcsQ0FDYixHQUFHLEVBQ0hELElBQUksQ0FBQ0UsR0FBRyxDQUFDLEdBQUcsRUFBRyxDQUFDb0YsWUFBWSxHQUFHRCxjQUFjLElBQUlyQixLQUFLLENBQUN2SCxNQUFNLEdBQUksRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUMzRTtFQUNIO0VBRVFxRSxVQUFVQSxDQUFDZ0QsSUFBWTtJQUFBO0lBQUF6TSxhQUFBLEdBQUFxQixDQUFBO0lBQzdCO0lBQ0EsTUFBTTZNLFNBQVM7SUFBQTtJQUFBLENBQUFsTyxhQUFBLEdBQUFvQixDQUFBLFNBQUcsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFFBQVEsQ0FBQztJQUMxRSxNQUFNdUwsS0FBSztJQUFBO0lBQUEsQ0FBQTNNLGFBQUEsR0FBQW9CLENBQUEsU0FBR3FMLElBQUksQ0FBQ0csV0FBVyxFQUFFLENBQUNuRSxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQzdDLE1BQU0wRixTQUFTO0lBQUE7SUFBQSxDQUFBbk8sYUFBQSxHQUFBb0IsQ0FBQSxTQUFHdUwsS0FBSyxDQUFDN0csTUFBTSxDQUFFZ0gsSUFBSSxJQUFLO01BQUE7TUFBQTlNLGFBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGFBQUEsR0FBQW9CLENBQUE7TUFBQSxPQUFBOE0sU0FBUyxDQUFDakIsUUFBUSxDQUFDSCxJQUFJLENBQUM7SUFBRCxDQUFDLENBQUMsQ0FBQzFILE1BQU07SUFBQztJQUFBcEYsYUFBQSxHQUFBb0IsQ0FBQTtJQUUxRSxPQUFPdUgsSUFBSSxDQUFDQyxHQUFHLENBQUMsR0FBRyxFQUFHdUYsU0FBUyxHQUFHeEIsS0FBSyxDQUFDdkgsTUFBTSxHQUFJLENBQUMsQ0FBQztFQUN0RDs7QUFDRDtBQUFBcEYsYUFBQSxHQUFBb0IsQ0FBQTtBQTFvQkRnTixPQUFBLENBQUFqTSxjQUFBLEdBQUFBLGNBQUE7QUEwb0JDO0FBQUFuQyxhQUFBLEdBQUFvQixDQUFBO0FBRURnTixPQUFBLENBQUFDLE9BQUEsR0FBZWxNLGNBQWMiLCJpZ25vcmVMaXN0IjpbXX0=