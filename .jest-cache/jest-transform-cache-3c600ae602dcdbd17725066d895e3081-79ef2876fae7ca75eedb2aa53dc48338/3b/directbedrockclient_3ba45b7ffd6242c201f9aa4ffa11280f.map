{"file":"/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/direct-bedrock-client.ts","mappings":"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","names":[],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/direct-bedrock-client.ts"],"sourcesContent":["/**\n * Direct Bedrock Client - Bypasses MCP for Critical Support Operations\n *\n * This module provides direct AWS Bedrock SDK integration for time-critical\n * support operations that require < 5s (emergency) or < 10s (critical) latency.\n * It integrates with existing security, compliance, and circuit breaker systems.\n */\n\nimport {\n  BedrockRuntimeClient,\n  InvokeModelCommand,\n  InvokeModelWithResponseStreamCommand,\n} from \"@aws-sdk/client-bedrock-runtime\";\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { CircuitBreaker } from \"./circuit-breaker\";\nimport { EmergencyOperationsPerformanceMonitor } from \"./emergency-operations-performance-monitor\";\nimport {\n  GDPRHybridComplianceValidator,\n  HybridRoutingPath,\n} from \"./gdpr-hybrid-compliance-validator\";\nimport { KMSEncryptionService } from \"./kms-encryption-service\";\nimport {\n  PIIToxicityDetectionService,\n  SafetyCheckResult,\n} from \"./safety/pii-toxicity-detector\";\nimport { SSRFProtectionValidator } from \"./ssrf-protection-validator\";\nimport { ToolSpec } from \"./types\";\n\n// Direct Bedrock Client Configuration\nexport interface DirectBedrockConfig {\n  region: string;\n  maxRetries: number;\n  timeout: number;\n  emergencyTimeout: number; // < 5s for emergency operations\n  criticalTimeout: number; // < 10s for critical operations\n  enableCircuitBreaker: boolean;\n  enableHealthMonitoring: boolean;\n  enableComplianceChecks: boolean;\n}\n\n// Operation Types for Routing Decisions\nexport type OperationType =\n  | \"emergency\"\n  | \"infrastructure\"\n  | \"meta_monitor\"\n  | \"implementation\"\n  | \"standard\";\n\nexport type OperationPriority = \"critical\" | \"high\" | \"medium\" | \"low\";\n\n// Support Operation Request\nexport interface SupportOperationRequest {\n  operation: OperationType;\n  priority: OperationPriority;\n  prompt: string;\n  context?: {\n    userId?: string;\n    tenant?: string;\n    correlationId?: string;\n    metadata?: Record<string, any>;\n  };\n  tools?: ToolSpec[];\n  streaming?: boolean;\n  maxTokens?: number;\n  temperature?: number;\n}\n\n// Support Operation Response\nexport interface SupportOperationResponse {\n  success: boolean;\n  text?: string;\n  toolCalls?: Array<{ name: string; arguments: any }>;\n  latencyMs: number;\n  tokensUsed?: { input: number; output: number };\n  costEuro?: number;\n  error?: string;\n  operationId: string;\n  timestamp: Date;\n  piiDetectionResult?: SafetyCheckResult;\n  piiDetected?: boolean;\n  redactionApplied?: boolean;\n  response?: string;\n  complianceValidation?: {\n    gdprCompliant: boolean;\n    piiRedacted: boolean;\n    auditLogged: boolean;\n  };\n}\n\n// Health Check Result\nexport interface DirectBedrockHealthCheck {\n  isHealthy: boolean;\n  latencyMs: number;\n  lastCheck: Date;\n  consecutiveFailures: number;\n  circuitBreakerState: \"closed\" | \"open\" | \"half-open\";\n  error?: string;\n}\n\n/**\n * Direct Bedrock Client for Critical Support Operations\n */\nexport class DirectBedrockClient {\n  private client: BedrockRuntimeClient;\n  private config: DirectBedrockConfig;\n  private circuitBreaker: CircuitBreaker;\n  private featureFlags: AiFeatureFlags;\n  private healthStatus: DirectBedrockHealthCheck;\n  private healthCheckInterval?: NodeJS.Timeout;\n  private piiDetectionService: PIIToxicityDetectionService;\n  private gdprValidator: GDPRHybridComplianceValidator;\n  private auditTrail: AuditTrailSystem;\n  private kmsEncryption: KMSEncryptionService;\n  private ssrfValidator: SSRFProtectionValidator;\n  private performanceMonitor: EmergencyOperationsPerformanceMonitor;\n\n  // Default model configurations for different operation types\n  private readonly modelConfigs = {\n    emergency: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.1, // Low temperature for consistent emergency responses\n      maxTokens: 1024, // Smaller token limit for speed\n    },\n    infrastructure: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.2,\n      maxTokens: 2048,\n    },\n    meta_monitor: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.3,\n      maxTokens: 2048,\n    },\n    implementation: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.4,\n      maxTokens: 4096,\n    },\n    standard: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.7,\n      maxTokens: 4096,\n    },\n  };\n\n  constructor(config: Partial<DirectBedrockConfig> = {}) {\n    this.config = {\n      region: process.env.AWS_REGION || \"eu-central-1\",\n      maxRetries: 3,\n      timeout: 30000, // 30s default timeout\n      emergencyTimeout: 5000, // 5s for emergency operations\n      criticalTimeout: 10000, // 10s for critical operations\n      enableCircuitBreaker: true,\n      enableHealthMonitoring: true,\n      enableComplianceChecks: true,\n      ...config,\n    };\n\n    // Initialize AWS Bedrock Runtime Client\n    this.client = new BedrockRuntimeClient({\n      region: this.config.region,\n      maxAttempts: this.config.maxRetries,\n      requestHandler: {\n        requestTimeout: this.config.timeout,\n      },\n    });\n\n    // Initialize circuit breaker\n    this.circuitBreaker = new CircuitBreaker({\n      failureThreshold: 3, // Open after 3 failures\n      recoveryTimeout: 30000, // 30s recovery timeout\n      halfOpenMaxCalls: 2, // Max 2 calls in half-open state\n    });\n\n    // Initialize feature flags\n    this.featureFlags = new AiFeatureFlags();\n\n    // Initialize PII detection service with strict configuration for direct Bedrock\n    this.piiDetectionService = new PIIToxicityDetectionService({\n      enablePII: true,\n      enableToxicity: true,\n      enablePromptInjection: true,\n      strictMode: true, // Strict mode for direct Bedrock operations\n      redactionMode: \"MASK\", // Mask PII by default\n      confidenceThreshold: 0.7, // Lower threshold for better detection\n    });\n\n    // Initialize GDPR compliance validator\n    this.gdprValidator = new GDPRHybridComplianceValidator();\n\n    // Initialize audit trail system\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for GDPR compliance\n    });\n\n    // Initialize KMS encryption service\n    this.kmsEncryption = new KMSEncryptionService(\n      {\n        region: this.config.region,\n        keyAlias: process.env.KMS_KEY_ALIAS || \"alias/matbakh-ai\",\n        enableKeyRotation: true,\n      },\n      this.auditTrail\n    );\n\n    // Initialize SSRF protection validator\n    this.ssrfValidator = new SSRFProtectionValidator({\n      auditTrail: this.auditTrail,\n    });\n\n    // Initialize emergency operations performance monitor\n    this.performanceMonitor = new EmergencyOperationsPerformanceMonitor(\n      {\n        emergencySlaThresholdMs: this.config.emergencyTimeout, // 5 seconds for emergency\n        criticalSlaThresholdMs: this.config.criticalTimeout, // 10 seconds for critical\n        successRateThreshold: 95, // 95% success rate requirement\n        rollingWindowMinutes: 60, // 1 hour rolling window\n        alertingEnabled: true,\n        circuitBreakerEnabled: this.config.enableCircuitBreaker,\n      },\n      this.auditTrail,\n      this.circuitBreaker\n    );\n\n    // Initialize health status\n    this.healthStatus = {\n      isHealthy: true,\n      latencyMs: 0,\n      lastCheck: new Date(),\n      consecutiveFailures: 0,\n      circuitBreakerState: \"closed\",\n    };\n\n    // Start health monitoring if enabled\n    if (this.config.enableHealthMonitoring) {\n      this.startHealthMonitoring();\n    }\n  }\n\n  /**\n   * Execute support operation with direct Bedrock access\n   */\n  async executeSupportOperation(\n    request: SupportOperationRequest\n  ): Promise<SupportOperationResponse> {\n    const startTime = Date.now();\n    const operationId = this.generateOperationId();\n    let piiDetectionResult: SafetyCheckResult | undefined;\n    let complianceValidation: SupportOperationResponse[\"complianceValidation\"];\n\n    try {\n      // Check if direct Bedrock is enabled\n      if (!this.featureFlags.isEnabled(\"ENABLE_DIRECT_BEDROCK_FALLBACK\")) {\n        throw new Error(\"Direct Bedrock access is disabled\");\n      }\n\n      // Check circuit breaker\n      if (\n        this.config.enableCircuitBreaker &&\n        this.circuitBreaker.isOpen(\"bedrock\")\n      ) {\n        throw new Error(\"Circuit breaker is open for Bedrock\");\n      }\n\n      // Validate operation timeout requirements\n      this.validateOperationTimeout(request.operation);\n\n      // Perform enhanced PII detection and redaction\n      piiDetectionResult = await this.performPIIDetectionAndRedaction(\n        request,\n        operationId\n      );\n\n      // Perform comprehensive compliance checks if enabled\n      if (this.config.enableComplianceChecks) {\n        complianceValidation = await this.performEnhancedComplianceChecks(\n          request,\n          operationId\n        );\n      }\n\n      // Execute the operation with circuit breaker protection\n      const response = await this.circuitBreaker.execute(\n        \"bedrock\",\n        async () => {\n          return await this.executeBedrockRequest(request, operationId);\n        }\n      );\n\n      const latencyMs = Date.now() - startTime;\n\n      // Track operation performance based on priority\n      if (request.operation === \"emergency\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          true, // success\n          request.operation,\n          request.context?.correlationId,\n          undefined, // no error\n          \"emergency\" // priority\n        );\n      } else if (request.priority === \"critical\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          true, // success\n          request.operation,\n          request.context?.correlationId,\n          undefined, // no error\n          \"critical\" // priority\n        );\n      }\n\n      // Update health status on success\n      this.updateHealthStatus(true, latencyMs);\n\n      // Log successful operation to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"direct_bedrock_operation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"compliant\",\n        metadata: {\n          operation: request.operation,\n          priority: request.priority,\n          latencyMs,\n          tokensUsed: response.tokensUsed,\n          piiDetected: piiDetectionResult?.violations.length || 0,\n          piiRedacted: !!piiDetectionResult?.modifiedContent,\n          gdprCompliant: complianceValidation?.gdprCompliant || false,\n        },\n      });\n\n      return {\n        success: true,\n        text: response.text,\n        toolCalls: response.toolCalls,\n        latencyMs,\n        tokensUsed: response.tokensUsed,\n        costEuro: this.calculateCost(response.tokensUsed),\n        operationId,\n        timestamp: new Date(),\n        piiDetectionResult,\n        piiDetected: (piiDetectionResult?.violations.length || 0) > 0,\n        redactionApplied: !!piiDetectionResult?.modifiedContent,\n        response: response.text,\n        complianceValidation,\n      };\n    } catch (error) {\n      const latencyMs = Date.now() - startTime;\n\n      // Track operation performance based on priority\n      if (request.operation === \"emergency\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          false, // failure\n          request.operation,\n          request.context?.correlationId,\n          error instanceof Error ? error.message : \"Unknown error\",\n          \"emergency\" // priority\n        );\n      } else if (request.priority === \"critical\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          false, // failure\n          request.operation,\n          request.context?.correlationId,\n          error instanceof Error ? error.message : \"Unknown error\",\n          \"critical\" // priority\n        );\n      }\n\n      // Update health status on failure\n      this.updateHealthStatus(false, latencyMs, error as Error);\n\n      // Log failed operation to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"direct_bedrock_operation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"operation_error\",\n          message: error instanceof Error ? error.message : \"Unknown error\",\n        },\n        metadata: {\n          operation: request.operation,\n          priority: request.priority,\n          latencyMs,\n          piiDetected: piiDetectionResult?.violations.length || 0,\n        },\n      });\n\n      return {\n        success: false,\n        latencyMs,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        operationId,\n        timestamp: new Date(),\n        piiDetectionResult,\n        complianceValidation,\n      };\n    }\n  }\n\n  /**\n   * Execute emergency operation (< 5s latency requirement)\n   */\n  async executeEmergencyOperation(\n    prompt: string,\n    context?: SupportOperationRequest[\"context\"]\n  ): Promise<SupportOperationResponse> {\n    return this.executeSupportOperation({\n      operation: \"emergency\",\n      priority: \"critical\",\n      prompt,\n      context,\n      maxTokens: 1024, // Limit tokens for speed\n      temperature: 0.1, // Low temperature for consistency\n    });\n  }\n\n  /**\n   * Execute critical support operation (< 10s latency requirement)\n   */\n  async executeCriticalOperation(\n    prompt: string,\n    context?: SupportOperationRequest[\"context\"],\n    tools?: ToolSpec[]\n  ): Promise<SupportOperationResponse> {\n    return this.executeSupportOperation({\n      operation: \"infrastructure\",\n      priority: \"critical\",\n      prompt,\n      context,\n      tools,\n      maxTokens: 2048,\n      temperature: 0.2,\n    });\n  }\n\n  /**\n   * Get current health status\n   */\n  getHealthStatus(): DirectBedrockHealthCheck {\n    return { ...this.healthStatus };\n  }\n\n  /**\n   * Get emergency operations performance statistics\n   */\n  getEmergencyPerformanceStats() {\n    return this.performanceMonitor.getCurrentPerformanceStats();\n  }\n\n  /**\n   * Check if emergency operations are meeting SLA requirements (>95% within 5s)\n   */\n  isEmergencyPerformanceWithinSLA(): boolean {\n    return this.performanceMonitor.isPerformanceWithinSLA();\n  }\n\n  /**\n   * Get detailed emergency operations performance report\n   */\n  getEmergencyPerformanceReport() {\n    return this.performanceMonitor.getPerformanceReport();\n  }\n\n  /**\n   * Get recent emergency operations performance alerts\n   */\n  getEmergencyPerformanceAlerts(limitHours: number = 24) {\n    return this.performanceMonitor.getRecentAlerts(limitHours);\n  }\n\n  /**\n   * Check if critical operations are meeting SLA requirements (>95% within 10s)\n   */\n  isCriticalOperationsPerformanceWithinSLA(): boolean {\n    return this.performanceMonitor.isCriticalOperationsPerformanceWithinSLA();\n  }\n\n  /**\n   * Check if emergency operations specifically are meeting SLA requirements (>95% within 5s)\n   */\n  isEmergencyOperationsPerformanceWithinSLA(): boolean {\n    return this.performanceMonitor.isEmergencyOperationsPerformanceWithinSLA();\n  }\n\n  /**\n   * Perform health check\n   */\n  async performHealthCheck(): Promise<DirectBedrockHealthCheck> {\n    const startTime = Date.now();\n\n    try {\n      // Development environment safety check\n      if (\n        !process.env.BEDROCK_ENDPOINT &&\n        process.env.NODE_ENV === \"development\"\n      ) {\n        const latencyMs = Date.now() - startTime;\n        this.updateHealthStatus(true, latencyMs);\n\n        return {\n          ...this.healthStatus,\n          lastCheck: new Date(),\n          details: \"Development mode - Bedrock endpoint skipped\",\n        };\n      }\n\n      // Simple health check with minimal prompt\n      const response = await this.executeBedrockRequest(\n        {\n          operation: \"standard\",\n          priority: \"low\",\n          prompt: \"Health check: respond with 'OK'\",\n          maxTokens: 10,\n          temperature: 0,\n        },\n        \"health-check\"\n      );\n\n      const latencyMs = Date.now() - startTime;\n\n      this.updateHealthStatus(true, latencyMs);\n\n      return this.healthStatus;\n    } catch (error) {\n      const latencyMs = Date.now() - startTime;\n\n      // In development, don't fail hard on connection issues\n      const isDev = process.env.NODE_ENV === \"development\";\n\n      this.updateHealthStatus(!isDev, latencyMs, error as Error);\n\n      return this.healthStatus;\n    }\n  }\n\n  /**\n   * Update PII detection configuration\n   */\n  updatePIIDetectionConfig(config: {\n    enablePII?: boolean;\n    enableToxicity?: boolean;\n    enablePromptInjection?: boolean;\n    strictMode?: boolean;\n    redactionMode?: \"MASK\" | \"REMOVE\" | \"REPLACE\";\n    confidenceThreshold?: number;\n  }): void {\n    this.piiDetectionService.updateConfig(config);\n  }\n\n  /**\n   * Test PII detection without processing\n   */\n  async testPIIDetection(text: string): Promise<{\n    piiFound: boolean;\n    piiTokens: any[];\n    toxicityScore: number;\n    promptInjectionDetected: boolean;\n  }> {\n    const piiTokens = this.piiDetectionService.testPIIDetection(text);\n    const toxicityViolations =\n      this.piiDetectionService.testToxicityDetection(text);\n    const promptInjectionViolations =\n      this.piiDetectionService.testPromptInjectionDetection(text);\n\n    return {\n      piiFound: piiTokens.length > 0,\n      piiTokens,\n      toxicityScore: toxicityViolations.length > 0 ? 0.8 : 0.0, // Simplified scoring\n      promptInjectionDetected: promptInjectionViolations.length > 0,\n    };\n  }\n\n  /**\n   * Detect PII in text with comprehensive analysis\n   */\n  async detectPii(\n    text: string,\n    options?: {\n      consentId?: string;\n      dataSubject?: string;\n      processingPurpose?: string;\n    }\n  ): Promise<{\n    hasPii: boolean;\n    piiTypes: string[];\n    detectedPii: Array<{\n      type: string;\n      value: string;\n      confidence: number;\n      startIndex: number;\n      endIndex: number;\n    }>;\n    processingRegion?: string;\n    gdprCompliant?: boolean;\n    consentTracking?: {\n      consentId: string;\n      dataSubject: string;\n      processingPurpose: string;\n      timestamp: Date;\n    };\n  }> {\n    // Check if PII detection is enabled\n    if (!this.featureFlags.isEnabled(\"pii_detection_enabled\", true)) {\n      return {\n        hasPii: false,\n        piiTypes: [],\n        detectedPii: [],\n        processingRegion: this.config.region,\n        gdprCompliant: true,\n      };\n    }\n\n    // Validate input\n    if (!text || typeof text !== \"string\" || text.trim().length === 0) {\n      return {\n        hasPii: false,\n        piiTypes: [],\n        detectedPii: [],\n        processingRegion: this.config.region,\n        gdprCompliant: true,\n      };\n    }\n\n    // Check GDPR compliance for EU regions\n    const isEuRegion = this.config.region.startsWith(\"eu-\");\n    if (\n      this.featureFlags.isEnabled(\"gdpr_compliance_enabled\", true) &&\n      !isEuRegion\n    ) {\n      throw new Error(\n        \"GDPR compliance violation: PII processing must occur in EU region\"\n      );\n    }\n\n    const detectedPii: Array<{\n      type: string;\n      value: string;\n      confidence: number;\n      startIndex: number;\n      endIndex: number;\n    }> = [];\n\n    // Define PII detection patterns\n    const piiPatterns = [\n      {\n        type: \"EMAIL\",\n        pattern: /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g,\n        confidence: 0.95,\n      },\n      {\n        type: \"PHONE\",\n        pattern:\n          /\\b\\+?1?[-.\\s]?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}\\b/g,\n        confidence: 0.85,\n      },\n      {\n        type: \"PHONE\",\n        pattern: /\\b\\+?[1-9]\\d{1,14}\\b/g,\n        confidence: 0.75,\n      },\n      {\n        type: \"CREDIT_CARD\",\n        pattern: /\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g,\n        confidence: 0.9,\n      },\n      {\n        type: \"SSN\",\n        pattern: /\\b\\d{3}-\\d{2}-\\d{4}\\b/g,\n        confidence: 0.95,\n      },\n      {\n        type: \"SSN\",\n        pattern: /\\b\\d{9}\\b/g,\n        confidence: 0.7,\n      },\n      {\n        type: \"IBAN\",\n        pattern: /\\b[A-Z]{2}\\d{2}[A-Z0-9]{4}\\d{7}([A-Z0-9]?){0,16}\\b/g,\n        confidence: 0.9,\n      },\n    ];\n\n    // Detect PII using patterns\n    for (const { type, pattern, confidence } of piiPatterns) {\n      let match;\n      const regex = new RegExp(pattern.source, pattern.flags);\n\n      while ((match = regex.exec(text)) !== null) {\n        detectedPii.push({\n          type,\n          value: match[0],\n          confidence,\n          startIndex: match.index,\n          endIndex: match.index + match[0].length,\n        });\n      }\n    }\n\n    // Get unique PII types\n    const piiTypes = [...new Set(detectedPii.map((pii) => pii.type))];\n\n    // Build result\n    const result = {\n      hasPii: detectedPii.length > 0,\n      piiTypes,\n      detectedPii,\n      processingRegion: this.config.region,\n      gdprCompliant: isEuRegion,\n    };\n\n    // Add consent tracking if provided\n    if (\n      options?.consentId &&\n      options?.dataSubject &&\n      options?.processingPurpose\n    ) {\n      (result as any).consentTracking = {\n        consentId: options.consentId,\n        dataSubject: options.dataSubject,\n        processingPurpose: options.processingPurpose,\n        timestamp: new Date(),\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * Redact PII from text\n   */\n  async redactPii(text: string): Promise<{\n    redactedText: string;\n    redactionMap: Array<{\n      original: string;\n      redacted: string;\n      type: string;\n      startIndex: number;\n      endIndex: number;\n    }>;\n  }> {\n    // Detect PII first\n    const detection = await this.detectPii(text);\n\n    if (!detection.hasPii) {\n      return {\n        redactedText: text,\n        redactionMap: [],\n      };\n    }\n\n    let redactedText = text;\n    const redactionMap: Array<{\n      original: string;\n      redacted: string;\n      type: string;\n      startIndex: number;\n      endIndex: number;\n    }> = [];\n\n    // Sort detected PII by start index in descending order to avoid index shifting\n    const sortedPii = detection.detectedPii.sort(\n      (a, b) => b.startIndex - a.startIndex\n    );\n\n    // Apply redactions\n    for (const pii of sortedPii) {\n      const redactedValue = this.getRedactionPlaceholder(pii.type);\n\n      redactedText =\n        redactedText.substring(0, pii.startIndex) +\n        redactedValue +\n        redactedText.substring(pii.endIndex);\n\n      redactionMap.unshift({\n        original: pii.value,\n        redacted: redactedValue,\n        type: pii.type,\n        startIndex: pii.startIndex,\n        endIndex: pii.startIndex + redactedValue.length,\n      });\n    }\n\n    return {\n      redactedText,\n      redactionMap,\n    };\n  }\n\n  /**\n   * Restore PII from redacted text using redaction map\n   */\n  async restorePii(\n    redactedText: string,\n    redactionMap: Array<{\n      original: string;\n      redacted: string;\n      type: string;\n      startIndex?: number;\n      endIndex?: number;\n    }>\n  ): Promise<string> {\n    let restoredText = redactedText;\n\n    // Apply restorations in reverse order to maintain text structure\n    for (const redaction of redactionMap.reverse()) {\n      restoredText = restoredText.replace(\n        redaction.redacted,\n        redaction.original\n      );\n    }\n\n    return restoredText;\n  }\n\n  /**\n   * Get redaction placeholder for PII type\n   */\n  private getRedactionPlaceholder(piiType: string): string {\n    const placeholders: Record<string, string> = {\n      EMAIL: \"[EMAIL_REDACTED]\",\n      PHONE: \"[PHONE_REDACTED]\",\n      CREDIT_CARD: \"[CREDIT_CARD_REDACTED]\",\n      SSN: \"[SSN_REDACTED]\",\n      IBAN: \"[IBAN_REDACTED]\",\n      NAME: \"[NAME_REDACTED]\",\n      ADDRESS: \"[ADDRESS_REDACTED]\",\n      IP: \"[IP_REDACTED]\",\n      API_KEY: \"[API_KEY_REDACTED]\",\n      TOKEN: \"[TOKEN_REDACTED]\",\n    };\n\n    return placeholders[piiType] || \"[PII_REDACTED]\";\n  }\n\n  /**\n   * Get PII detection statistics for monitoring\n   */\n  async getPIIDetectionStats(): Promise<{\n    totalChecks: number;\n    piiDetected: number;\n    redactionsApplied: number;\n    averageProcessingTime: number;\n  }> {\n    // This would typically be stored in a metrics service\n    // For now, return placeholder data\n    return {\n      totalChecks: 0,\n      piiDetected: 0,\n      redactionsApplied: 0,\n      averageProcessingTime: 0,\n    };\n  }\n\n  /**\n   * Encrypt sensitive operation data using KMS\n   */\n  async encryptSensitiveData(\n    data: string,\n    context: {\n      operationId: string;\n      dataType: \"pii\" | \"credentials\" | \"context\";\n      userId?: string;\n    }\n  ): Promise<string> {\n    try {\n      const encrypted = await this.kmsEncryption.encrypt(\n        {\n          plaintext: data,\n          encryptionContext: {\n            operationId: context.operationId,\n            dataType: context.dataType,\n            ...(context.userId && { userId: context.userId }),\n          },\n        },\n        context.dataType\n      );\n\n      return encrypted.ciphertext;\n    } catch (error) {\n      throw new Error(\n        `Failed to encrypt sensitive data: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Decrypt sensitive operation data using KMS\n   */\n  async decryptSensitiveData(\n    encryptedData: string,\n    context: {\n      operationId: string;\n      dataType: \"pii\" | \"credentials\" | \"context\";\n      userId?: string;\n    }\n  ): Promise<string> {\n    try {\n      const decrypted = await this.kmsEncryption.decrypt(\n        {\n          ciphertext: encryptedData,\n          encryptionContext: {\n            operationId: context.operationId,\n            dataType: context.dataType,\n            ...(context.userId && { userId: context.userId }),\n          },\n        },\n        context.dataType\n      );\n\n      return decrypted.plaintext;\n    } catch (error) {\n      throw new Error(\n        `Failed to decrypt sensitive data: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Encrypt PII data before storage\n   */\n  async encryptPIIForStorage(\n    piiData: string,\n    piiType: string,\n    operationId: string\n  ): Promise<string> {\n    try {\n      const encrypted = await this.kmsEncryption.encryptPII(piiData, {\n        piiType,\n        operationId,\n      });\n\n      return encrypted.ciphertext;\n    } catch (error) {\n      throw new Error(\n        `Failed to encrypt PII for storage: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Decrypt PII data from storage\n   */\n  async decryptPIIFromStorage(\n    encryptedPII: string,\n    piiType: string,\n    operationId: string\n  ): Promise<string> {\n    try {\n      const decrypted = await this.kmsEncryption.decryptPII(encryptedPII, {\n        piiType,\n        operationId,\n      });\n\n      return decrypted.plaintext;\n    } catch (error) {\n      throw new Error(\n        `Failed to decrypt PII from storage: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Encrypt operation context for secure audit trail\n   */\n  async encryptOperationContextForAudit(\n    context: Record<string, any>,\n    operationId: string\n  ): Promise<string> {\n    try {\n      const encrypted = await this.kmsEncryption.encryptOperationContext(\n        context,\n        operationId\n      );\n\n      return encrypted.ciphertext;\n    } catch (error) {\n      throw new Error(\n        `Failed to encrypt operation context: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Decrypt operation context from audit trail\n   */\n  async decryptOperationContextFromAudit(\n    encryptedContext: string,\n    operationId: string\n  ): Promise<Record<string, any>> {\n    try {\n      return await this.kmsEncryption.decryptOperationContext(\n        encryptedContext,\n        operationId\n      );\n    } catch (error) {\n      throw new Error(\n        `Failed to decrypt operation context: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Get KMS encryption service for advanced operations\n   */\n  getKMSEncryptionService(): KMSEncryptionService {\n    return this.kmsEncryption;\n  }\n\n  /**\n   * Validate URL against SSRF protection rules\n   */\n  async validateUrlForSSRF(\n    url: string,\n    operationId?: string\n  ): Promise<SSRFValidationResult> {\n    return await this.ssrfValidator.validateUrl(url, operationId);\n  }\n\n  /**\n   * Get SSRF protection validator for advanced operations\n   */\n  getSSRFProtectionValidator(): SSRFProtectionValidator {\n    return this.ssrfValidator;\n  }\n\n  /**\n   * Update SSRF protection configuration\n   */\n  updateSSRFProtectionConfig(config: {\n    allowedDomains?: string[];\n    allowedProtocols?: string[];\n    blockMetadataEndpoints?: boolean;\n    blockPrivateIPs?: boolean;\n    blockLocalhost?: boolean;\n    blockIPv6Private?: boolean;\n    blockDangerousProtocols?: boolean;\n    enableDNSRebindingProtection?: boolean;\n    enableRedirectionProtection?: boolean;\n    maxRedirects?: number;\n  }): void {\n    this.ssrfValidator.updateConfig(config);\n  }\n\n  /**\n   * Add allowed domain for SSRF protection\n   */\n  addAllowedDomain(domain: string): void {\n    this.ssrfValidator.addAllowedDomain(domain);\n  }\n\n  /**\n   * Remove allowed domain from SSRF protection\n   */\n  removeAllowedDomain(domain: string): void {\n    this.ssrfValidator.removeAllowedDomain(domain);\n  }\n\n  /**\n   * Get all allowed domains for SSRF protection\n   */\n  getAllowedDomains(): string[] {\n    return this.ssrfValidator.getAllowedDomains();\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n    }\n    this.kmsEncryption.destroy();\n  }\n\n  // Private Methods\n\n  /**\n   * Execute actual Bedrock request\n   */\n  private async executeBedrockRequest(\n    request: SupportOperationRequest,\n    operationId: string\n  ): Promise<{\n    text?: string;\n    toolCalls?: any[];\n    tokensUsed?: { input: number; output: number };\n  }> {\n    const modelConfig = this.modelConfigs[request.operation];\n    const timeout = this.getTimeoutForOperation(request.operation);\n\n    // Build request payload\n    const payload = {\n      anthropic_version: \"bedrock-2023-05-31\",\n      max_tokens: request.maxTokens || modelConfig.maxTokens,\n      temperature: request.temperature ?? modelConfig.temperature,\n      messages: [\n        {\n          role: \"user\",\n          content: [{ type: \"text\", text: request.prompt }],\n        },\n      ],\n      ...(request.tools && {\n        tools: this.mapToolsToBedrockFormat(request.tools),\n      }),\n    };\n\n    // Add system message for support operations\n    if (request.operation !== \"standard\") {\n      (payload as any).system = this.getSystemMessageForOperation(\n        request.operation\n      );\n    }\n\n    const command = request.streaming\n      ? new InvokeModelWithResponseStreamCommand({\n          modelId: modelConfig.modelId,\n          contentType: \"application/json\",\n          accept: \"application/vnd.amazon.eventstream\",\n          body: JSON.stringify(payload),\n        })\n      : new InvokeModelCommand({\n          modelId: modelConfig.modelId,\n          contentType: \"application/json\",\n          accept: \"application/json\",\n          body: JSON.stringify(payload),\n        });\n\n    // Set timeout for the operation\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(\n        () => reject(new Error(`Operation timeout after ${timeout}ms`)),\n        timeout\n      );\n    });\n\n    const response = await Promise.race([\n      this.client.send(command as any),\n      timeoutPromise,\n    ]);\n\n    // Parse response\n    return this.parseBedrockResponse(response, request.streaming);\n  }\n\n  /**\n   * Map tools to Bedrock format\n   */\n  private mapToolsToBedrockFormat(tools: ToolSpec[]): any[] {\n    return tools.map((tool) => ({\n      name: tool.name,\n      description: tool.description || \"\",\n      input_schema: {\n        type: \"object\",\n        properties: tool.parameters || {},\n        required: Object.keys(tool.parameters || {}),\n      },\n    }));\n  }\n\n  /**\n   * Get system message for operation type\n   */\n  private getSystemMessageForOperation(operation: OperationType): string {\n    const systemMessages = {\n      emergency:\n        \"You are an emergency support assistant. Provide immediate, actionable responses. Be concise and direct.\",\n      infrastructure:\n        \"You are an infrastructure support specialist. Analyze system issues and provide technical solutions.\",\n      meta_monitor:\n        \"You are a meta-monitoring assistant. Analyze execution patterns and provide diagnostic insights.\",\n      implementation:\n        \"You are an implementation support assistant. Help resolve incomplete modules and provide remediation steps.\",\n      standard: \"You are a helpful AI assistant.\",\n    };\n\n    return systemMessages[operation];\n  }\n\n  /**\n   * Parse Bedrock response\n   */\n  private parseBedrockResponse(\n    response: any,\n    streaming?: boolean\n  ): {\n    text?: string;\n    toolCalls?: any[];\n    tokensUsed?: { input: number; output: number };\n  } {\n    if (streaming) {\n      // Handle streaming response (simplified for now)\n      return {\n        text: \"Streaming response\",\n        tokensUsed: { input: 0, output: 0 },\n      };\n    }\n\n    const body = JSON.parse(new TextDecoder().decode(response.body));\n\n    const text = body.content?.map((c: any) => c.text).join(\"\\n\") || \"\";\n    const toolCalls =\n      body.content\n        ?.filter((c: any) => c.type === \"tool_use\")\n        ?.map((tc: any) => ({\n          name: tc.name,\n          arguments: tc.input,\n        })) || [];\n\n    const tokensUsed = {\n      input: body.usage?.input_tokens || 0,\n      output: body.usage?.output_tokens || 0,\n    };\n\n    return { text, toolCalls, tokensUsed };\n  }\n\n  /**\n   * Validate operation timeout requirements\n   */\n  private validateOperationTimeout(operation: OperationType): void {\n    const timeout = this.getTimeoutForOperation(operation);\n    const maxAllowed =\n      operation === \"emergency\"\n        ? 5000\n        : operation === \"infrastructure\"\n        ? 10000\n        : 30000;\n\n    if (timeout > maxAllowed) {\n      throw new Error(\n        `Operation ${operation} timeout ${timeout}ms exceeds maximum ${maxAllowed}ms`\n      );\n    }\n  }\n\n  /**\n   * Get timeout for operation type\n   */\n  private getTimeoutForOperation(operation: OperationType): number {\n    switch (operation) {\n      case \"emergency\":\n        return this.config.emergencyTimeout;\n      case \"infrastructure\":\n      case \"meta_monitor\":\n      case \"implementation\":\n        return this.config.criticalTimeout;\n      default:\n        return this.config.timeout;\n    }\n  }\n\n  /**\n   * Perform enhanced PII detection and redaction for direct Bedrock operations\n   */\n  private async performPIIDetectionAndRedaction(\n    request: SupportOperationRequest,\n    operationId: string\n  ): Promise<SafetyCheckResult> {\n    const startTime = Date.now();\n\n    try {\n      // Perform comprehensive PII and safety check\n      const safetyResult = await this.piiDetectionService.performSafetyCheck(\n        request.prompt,\n        operationId\n      );\n\n      // Log PII detection results\n      await this.auditTrail.logEvent({\n        eventType: \"pii_detection\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: safetyResult.allowed ? \"compliant\" : \"violation\",\n        metadata: {\n          operation: request.operation,\n          priority: request.priority,\n          piiViolations: safetyResult.violations.filter((v) => v.type === \"PII\")\n            .length,\n          toxicityViolations: safetyResult.violations.filter(\n            (v) => v.type === \"TOXICITY\"\n          ).length,\n          promptInjectionViolations: safetyResult.violations.filter(\n            (v) => v.type === \"CUSTOM\"\n          ).length,\n          confidence: safetyResult.confidence,\n          processingTimeMs: safetyResult.processingTimeMs,\n          contentModified: !!safetyResult.modifiedContent,\n        },\n      });\n\n      // If content was modified (PII redacted), update the request\n      if (safetyResult.modifiedContent) {\n        request.prompt = safetyResult.modifiedContent;\n\n        // Log the redaction action\n        await this.auditTrail.logEvent({\n          eventType: \"pii_redaction\",\n          requestId: operationId,\n          provider: \"bedrock\",\n          complianceStatus: \"compliant\",\n          metadata: {\n            operation: request.operation,\n            redactionApplied: true,\n            originalLength: request.prompt.length,\n            redactedLength: safetyResult.modifiedContent.length,\n            violationsRedacted: safetyResult.violations.length,\n          },\n        });\n      }\n\n      // For emergency operations, allow with redaction even if violations exist\n      if (request.operation === \"emergency\" && !safetyResult.allowed) {\n        // Force redaction for emergency operations\n        if (safetyResult.violations.some((v) => v.type === \"PII\")) {\n          const emergencyRedaction = this.piiDetectionService.testPIIDetection(\n            request.prompt\n          );\n          if (emergencyRedaction.length > 0) {\n            // Apply emergency redaction\n            request.prompt = this.redactPIIForEmergency(request.prompt);\n\n            await this.auditTrail.logEvent({\n              eventType: \"emergency_pii_redaction\",\n              requestId: operationId,\n              provider: \"bedrock\",\n              complianceStatus: \"compliant\",\n              metadata: {\n                operation: request.operation,\n                emergencyRedactionApplied: true,\n                piiTokensRedacted: emergencyRedaction.length,\n              },\n            });\n\n            // Return modified safety result for emergency\n            return {\n              ...safetyResult,\n              allowed: true,\n              modifiedContent: request.prompt,\n            };\n          }\n        }\n      }\n\n      // For non-emergency operations with critical violations, block the request\n      if (\n        !safetyResult.allowed &&\n        safetyResult.violations.some((v) => v.severity === \"CRITICAL\")\n      ) {\n        throw new Error(\n          `Critical safety violations detected: ${safetyResult.violations\n            .filter((v) => v.severity === \"CRITICAL\")\n            .map((v) => v.details)\n            .join(\", \")}`\n        );\n      }\n\n      return safetyResult;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      // Log PII detection error\n      await this.auditTrail.logEvent({\n        eventType: \"pii_detection\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"pii_detection_error\",\n          message: errorMessage,\n        },\n        metadata: {\n          operation: request.operation,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      // Return failed safety result\n      return {\n        allowed: false,\n        confidence: 0.0,\n        violations: [\n          {\n            type: \"CUSTOM\",\n            severity: \"CRITICAL\",\n            confidence: 1.0,\n            details: `PII detection failed: ${errorMessage}`,\n          },\n        ],\n        processingTimeMs: Date.now() - startTime,\n      };\n    }\n  }\n\n  /**\n   * Perform enhanced compliance checks with GDPR validation\n   */\n  private async performEnhancedComplianceChecks(\n    request: SupportOperationRequest,\n    operationId: string\n  ): Promise<SupportOperationResponse[\"complianceValidation\"]> {\n    const startTime = Date.now();\n\n    try {\n      // Create routing path for GDPR validation\n      const routingPath: HybridRoutingPath = {\n        routeType: \"direct_bedrock\",\n        provider: \"bedrock\",\n        operationType: request.operation,\n        priority: request.priority,\n      };\n\n      // Validate GDPR compliance before routing\n      const gdprValidation = await this.gdprValidator.validateBeforeRouting(\n        routingPath,\n        operationId\n      );\n\n      if (!gdprValidation.allowed) {\n        throw new Error(`GDPR compliance violation: ${gdprValidation.reason}`);\n      }\n\n      // Perform additional compliance checks\n      await this.performLegacyComplianceChecks(request);\n\n      // Log compliance validation success\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_compliance_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"compliant\",\n        metadata: {\n          operation: request.operation,\n          routingPath: \"direct_bedrock\",\n          gdprCompliant: true,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      return {\n        gdprCompliant: true,\n        piiRedacted: true, // PII redaction is always applied\n        auditLogged: true,\n      };\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      // Log compliance validation error\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_compliance_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"compliance_error\",\n          message: errorMessage,\n        },\n        metadata: {\n          operation: request.operation,\n          routingPath: \"direct_bedrock\",\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      throw error; // Re-throw to block the operation\n    }\n  }\n\n  /**\n   * Emergency PII redaction for critical operations\n   */\n  private redactPIIForEmergency(text: string): string {\n    // Use aggressive redaction patterns for emergency operations\n    let redactedText = text;\n\n    const emergencyRedactionPatterns = [\n      // Email addresses - complete redaction\n      {\n        pattern: /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g,\n        replacement: \"[EMAIL_REDACTED]\",\n      },\n\n      // Phone numbers - complete redaction\n      {\n        pattern:\n          /\\b\\+?1?[-.\\s]?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}\\b/g,\n        replacement: \"[PHONE_REDACTED]\",\n      },\n      { pattern: /\\b\\+?[1-9]\\d{1,14}\\b/g, replacement: \"[PHONE_REDACTED]\" },\n\n      // Credit card numbers - complete redaction\n      {\n        pattern: /\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g,\n        replacement: \"[CARD_REDACTED]\",\n      },\n\n      // Social Security Numbers - complete redaction\n      { pattern: /\\b\\d{3}-\\d{2}-\\d{4}\\b/g, replacement: \"[SSN_REDACTED]\" },\n      { pattern: /\\b\\d{9}\\b/g, replacement: \"[ID_REDACTED]\" },\n\n      // IBAN - complete redaction\n      {\n        pattern: /\\b[A-Z]{2}\\d{2}[A-Z0-9]{4}\\d{7}([A-Z0-9]?){0,16}\\b/g,\n        replacement: \"[IBAN_REDACTED]\",\n      },\n\n      // Names with titles - partial redaction\n      {\n        pattern: /\\b(Mr|Mrs|Ms|Dr|Prof)\\.?\\s+[A-Z][a-z]+\\s+[A-Z][a-z]+\\b/g,\n        replacement: \"$1. [NAME_REDACTED]\",\n      },\n\n      // IP addresses - complete redaction\n      {\n        pattern: /\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b/g,\n        replacement: \"[IP_REDACTED]\",\n      },\n\n      // API keys and tokens - complete redaction\n      { pattern: /\\bsk-[A-Za-z0-9]{48}\\b/g, replacement: \"[API_KEY_REDACTED]\" },\n      { pattern: /\\bAKIA[A-Z0-9]{16}\\b/g, replacement: \"[AWS_KEY_REDACTED]\" },\n\n      // Long alphanumeric strings (potential tokens)\n      { pattern: /\\b[A-Za-z0-9]{32,}\\b/g, replacement: \"[TOKEN_REDACTED]\" },\n    ];\n\n    // Apply all emergency redaction patterns\n    emergencyRedactionPatterns.forEach(({ pattern, replacement }) => {\n      redactedText = redactedText.replace(pattern, replacement);\n    });\n\n    return redactedText;\n  }\n\n  /**\n   * Legacy compliance checks (renamed from performComplianceChecks)\n   */\n  private async performLegacyComplianceChecks(\n    request: SupportOperationRequest\n  ): Promise<void> {\n    // Note: PII Detection and Redaction is now handled by performPIIDetectionAndRedaction method\n    // This method focuses on other compliance aspects\n\n    // 2. GDPR Compliance Checks\n    if (request.context?.userId) {\n      const consentValid = await this.validateGDPRConsent(\n        request.context.userId\n      );\n      if (!consentValid) {\n        throw new Error(\n          \"Missing or invalid GDPR consent for user data processing\"\n        );\n      }\n    }\n\n    // 3. Data Residency Compliance (EU)\n    if (request.context?.tenant) {\n      const isEUTenant = await this.isEUTenant(request.context.tenant);\n      if (\n        isEUTenant &&\n        this.config.region !== \"eu-central-1\" &&\n        this.config.region !== \"eu-west-1\"\n      ) {\n        throw new Error(\n          `EU data residency violation: operation must use EU region, current: ${this.config.region}`\n        );\n      }\n    }\n\n    // 4. Operation-specific compliance checks\n    await this.performOperationSpecificCompliance(request);\n\n    // 5. Audit trail logging\n    await this.logComplianceCheck(request);\n  }\n\n  /**\n   * Validate GDPR consent for user\n   */\n  private async validateGDPRConsent(userId: string): Promise<boolean> {\n    try {\n      // In real implementation, check consent database\n      // For now, we'll use a simple check\n\n      // Check if user has valid consent record\n      const consentRecord = await this.getConsentRecord(userId);\n\n      if (!consentRecord) {\n        return false;\n      }\n\n      // Check if consent is still valid (not expired)\n      const consentAge = Date.now() - consentRecord.timestamp.getTime();\n      const maxConsentAge = 365 * 24 * 60 * 60 * 1000; // 1 year\n\n      if (consentAge > maxConsentAge) {\n        return false;\n      }\n\n      // Check if consent covers AI processing\n      return consentRecord.aiProcessingConsent === true;\n    } catch (error) {\n      console.error(\"GDPR consent validation failed:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Get consent record for user (placeholder)\n   */\n  private async getConsentRecord(userId: string): Promise<{\n    userId: string;\n    timestamp: Date;\n    aiProcessingConsent: boolean;\n    dataRetentionConsent: boolean;\n  } | null> {\n    // In real implementation, query consent database\n    // For now, return a mock valid consent\n    return {\n      userId,\n      timestamp: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago\n      aiProcessingConsent: true,\n      dataRetentionConsent: true,\n    };\n  }\n\n  /**\n   * Check if tenant is EU-based\n   */\n  private async isEUTenant(tenantId: string): Promise<boolean> {\n    // In real implementation, check tenant database\n    // For now, simple heuristic based on tenant ID\n    const euTenantPatterns = [\n      /^eu-/,\n      /^de-/,\n      /^fr-/,\n      /^it-/,\n      /^es-/,\n      /^nl-/,\n      /^be-/,\n      /^at-/,\n      /^ch-/,\n    ];\n\n    return euTenantPatterns.some((pattern) => pattern.test(tenantId));\n  }\n\n  /**\n   * Perform operation-specific compliance checks\n   */\n  private async performOperationSpecificCompliance(\n    request: SupportOperationRequest\n  ): Promise<void> {\n    switch (request.operation) {\n      case \"emergency\":\n        // Emergency operations have relaxed compliance for speed\n        // but still require basic checks\n        break;\n\n      case \"infrastructure\":\n        // Infrastructure operations may access system data\n        // Ensure no customer data is included\n        if (this.containsCustomerData(request.prompt)) {\n          throw new Error(\"Customer data detected in infrastructure operation\");\n        }\n        break;\n\n      case \"meta_monitor\":\n        // Meta monitoring should not process personal data\n        if (this.containsPersonalData(request.prompt)) {\n          throw new Error(\n            \"Personal data detected in meta monitoring operation\"\n          );\n        }\n        break;\n\n      case \"implementation\":\n        // Implementation support should not access production data\n        if (this.containsProductionData(request.prompt)) {\n          throw new Error(\n            \"Production data detected in implementation operation\"\n          );\n        }\n        break;\n\n      default:\n        // Standard operations follow full compliance\n        break;\n    }\n  }\n\n  /**\n   * Check for customer data patterns\n   */\n  private containsCustomerData(text: string): boolean {\n    const customerDataPatterns = [\n      /customer_id:\\s*\\d+/i,\n      /user_id:\\s*\\d+/i,\n      /account_id:\\s*\\d+/i,\n      /order_id:\\s*\\d+/i,\n      /transaction_id:\\s*\\d+/i,\n    ];\n\n    return customerDataPatterns.some((pattern) => pattern.test(text));\n  }\n\n  /**\n   * Check for personal data patterns\n   */\n  private containsPersonalData(text: string): boolean {\n    const personalDataPatterns = [\n      /first_name:\\s*[A-Z][a-z]+/i,\n      /last_name:\\s*[A-Z][a-z]+/i,\n      /full_name:\\s*[A-Z][a-z]+\\s+[A-Z][a-z]+/i,\n      /date_of_birth:\\s*\\d{4}-\\d{2}-\\d{2}/i,\n      /address:\\s*.+/i,\n    ];\n\n    return personalDataPatterns.some((pattern) => pattern.test(text));\n  }\n\n  /**\n   * Check for production data patterns\n   */\n  private containsProductionData(text: string): boolean {\n    const productionDataPatterns = [\n      /prod_/i,\n      /production/i,\n      /live_/i,\n      /real_customer/i,\n      /actual_user/i,\n    ];\n\n    return productionDataPatterns.some((pattern) => pattern.test(text));\n  }\n\n  /**\n   * Log compliance check for audit trail\n   */\n  private async logComplianceCheck(\n    request: SupportOperationRequest\n  ): Promise<void> {\n    const auditEntry = {\n      timestamp: new Date().toISOString(),\n      operation: request.operation,\n      priority: request.priority,\n      userId: request.context?.userId,\n      tenantId: request.context?.tenant,\n      correlationId: request.context?.correlationId,\n      complianceChecks: {\n        piiDetection: await this.containsPII(request.prompt),\n        gdprConsent: request.context?.userId\n          ? await this.validateGDPRConsent(request.context.userId)\n          : null,\n        dataResidency: request.context?.tenant\n          ? await this.isEUTenant(request.context.tenant)\n          : null,\n        operationSpecific: true, // Passed if we reach this point\n      },\n      region: this.config.region,\n    };\n\n    // In real implementation, send to audit service\n    console.log(\"Compliance audit:\", JSON.stringify(auditEntry, null, 2));\n  }\n\n  /**\n   * Check if text contains PII using the comprehensive detection service\n   */\n  private async containsPII(text: string): Promise<boolean> {\n    try {\n      const piiTokens = this.piiDetectionService.testPIIDetection(text);\n      return piiTokens && piiTokens.length > 0;\n    } catch (error) {\n      console.warn(\"PII detection service error:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate GDPR consent using the enhanced compliance system\n   */\n  private async validateGDPRConsentEnhanced(\n    userId: string,\n    operationId: string\n  ): Promise<boolean> {\n    try {\n      const consentValid = await this.validateGDPRConsent(userId);\n\n      // Log consent validation to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_consent_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: consentValid ? \"compliant\" : \"violation\",\n        metadata: {\n          userId,\n          consentValid,\n          validationType: \"enhanced\",\n        },\n      });\n\n      return consentValid;\n    } catch (error) {\n      // Log consent validation error\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_consent_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"consent_validation_error\",\n          message: error instanceof Error ? error.message : String(error),\n        },\n        metadata: {\n          userId,\n        },\n      });\n\n      return false;\n    }\n  }\n\n  /**\n   * Calculate cost based on token usage\n   */\n  private calculateCost(tokensUsed?: {\n    input: number;\n    output: number;\n  }): number {\n    if (!tokensUsed) return 0;\n\n    // Claude 3.5 Sonnet pricing (approximate)\n    const inputCostPer1k = 0.003; // $0.003 per 1k input tokens\n    const outputCostPer1k = 0.015; // $0.015 per 1k output tokens\n\n    const inputCost = (tokensUsed.input / 1000) * inputCostPer1k;\n    const outputCost = (tokensUsed.output / 1000) * outputCostPer1k;\n\n    return inputCost + outputCost;\n  }\n\n  /**\n   * Update health status\n   */\n  private updateHealthStatus(\n    success: boolean,\n    latencyMs: number,\n    error?: Error\n  ): void {\n    this.healthStatus.lastCheck = new Date();\n    this.healthStatus.latencyMs = latencyMs;\n    this.healthStatus.circuitBreakerState = this.circuitBreaker.isOpen(\n      \"bedrock\"\n    )\n      ? \"open\"\n      : \"closed\";\n\n    if (success) {\n      this.healthStatus.isHealthy = true;\n      this.healthStatus.consecutiveFailures = 0;\n      delete this.healthStatus.error;\n\n      // Set development mode details if applicable\n      if (\n        process.env.NODE_ENV === \"development\" &&\n        !process.env.BEDROCK_ENDPOINT\n      ) {\n        this.healthStatus.details =\n          \"Development mode - Bedrock endpoint skipped\";\n      }\n    } else {\n      this.healthStatus.isHealthy = false;\n      this.healthStatus.consecutiveFailures++;\n\n      // In development, provide helpful error message\n      const isDev = process.env.NODE_ENV === \"development\";\n      if (isDev) {\n        this.healthStatus.error = `Development mode - Bedrock connection skipped: ${\n          error?.message || \"Unknown error\"\n        }`;\n      } else {\n        this.healthStatus.error = error?.message;\n      }\n    }\n  }\n\n  /**\n   * Start health monitoring\n   */\n  private startHealthMonitoring(): void {\n    this.healthCheckInterval = setInterval(async () => {\n      try {\n        await this.performHealthCheck();\n      } catch (error) {\n        console.error(\"Health check failed:\", error);\n      }\n    }, 30000); // Check every 30 seconds\n  }\n\n  /**\n   * Generate unique operation ID\n   */\n  private generateOperationId(): string {\n    return `direct-bedrock-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n\n  /**\n   * Get PII detection statistics\n   */\n  async getPIIDetectionStats(): Promise<{\n    totalDetections: number;\n    totalRedactions: number;\n    detectionsByType: Record<string, number>;\n    averageConfidence: number;\n    lastDetection?: Date;\n  }> {\n    // This would typically query a metrics store\n    // For now, return mock statistics\n    return {\n      totalDetections: 0,\n      totalRedactions: 0,\n      detectionsByType: {},\n      averageConfidence: 0,\n      lastDetection: undefined,\n    };\n  }\n\n  /**\n   * Get redaction placeholder for PII type\n   */\n  private getRedactionPlaceholder(piiType: string): string {\n    const placeholders: Record<string, string> = {\n      EMAIL: \"[EMAIL_REDACTED]\",\n      PHONE: \"[PHONE_REDACTED]\",\n      CREDIT_CARD: \"[CREDIT_CARD_REDACTED]\",\n      SSN: \"[SSN_REDACTED]\",\n      IBAN: \"[IBAN_REDACTED]\",\n    };\n\n    return placeholders[piiType] || \"[PII_REDACTED]\";\n  }\n\n  /**\n   * Cleanup resources\n   */\n  cleanup(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.healthCheckInterval = undefined;\n    }\n  }\n}\n\n// Types are already exported as interfaces above\n"],"version":3}