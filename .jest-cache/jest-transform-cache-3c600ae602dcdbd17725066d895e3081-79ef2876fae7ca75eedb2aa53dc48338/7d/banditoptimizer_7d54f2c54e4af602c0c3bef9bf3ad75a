617d3845750ccaf149ddf89f72fc23b2
"use strict";

/**
 * Bandit Optimizer for AI Model Selection
 *
 * Implements:
 * - UCB (Upper Confidence Bound) algorithm
 * - Thompson Sampling with Beta distribution
 * - Contextual bandits for persona-based routing
 * - Integration with Evidently experiments
 * - Automated optimization and learning
 */
/* istanbul ignore next */
function cov_2e38urcc7y() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/bandit-optimizer.ts";
  var hash = "3b68ad80fcbb673116d013626a05802925ee8257";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/bandit-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 55
        }
      },
      "2": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "3": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 58
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 73
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 178
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "9": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "10": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "11": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 92
        }
      },
      "12": {
        start: {
          line: 31,
          column: 71
        },
        end: {
          line: 31,
          column: 88
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "14": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 54
        }
      },
      "15": {
        start: {
          line: 35,
          column: 30
        },
        end: {
          line: 35,
          column: 75
        }
      },
      "16": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "17": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "18": {
        start: {
          line: 45,
          column: 22
        },
        end: {
          line: 45,
          column: 24
        }
      },
      "19": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 46,
          column: 27
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "21": {
        start: {
          line: 49,
          column: 29
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "22": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "23": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 127
        }
      },
      "24": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 35
        }
      },
      "26": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "27": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "28": {
        start: {
          line: 59,
          column: 37
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "29": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "30": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 63,
          column: 36
        }
      },
      "31": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "32": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "33": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "34": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "35": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "36": {
        start: {
          line: 73,
          column: 34
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "37": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "38": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 53
        }
      },
      "39": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 51
        }
      },
      "40": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 41
        }
      },
      "41": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 94,
          column: 45
        }
      },
      "42": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 95,
          column: 86
        }
      },
      "43": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "44": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 51
        }
      },
      "45": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 92
        }
      },
      "46": {
        start: {
          line: 109,
          column: 71
        },
        end: {
          line: 109,
          column: 88
        }
      },
      "47": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "48": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 46
        }
      },
      "49": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 47
        }
      },
      "50": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "51": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "52": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 138,
          column: 17
        }
      },
      "53": {
        start: {
          line: 125,
          column: 45
        },
        end: {
          line: 125,
          column: 101
        }
      },
      "54": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 134,
          column: 21
        }
      },
      "55": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 133,
          column: 26
        }
      },
      "56": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 104
        }
      },
      "57": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 49
        }
      },
      "58": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "59": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 75
        }
      },
      "60": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "61": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 164,
          column: 17
        }
      },
      "62": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 159,
          column: 23
        }
      },
      "63": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 80
        }
      },
      "64": {
        start: {
          line: 167,
          column: 37
        },
        end: {
          line: 167,
          column: 98
        }
      },
      "65": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "66": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 57
        }
      },
      "67": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 177,
          column: 49
        }
      },
      "68": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "69": {
        start: {
          line: 179,
          column: 28
        },
        end: {
          line: 179,
          column: 60
        }
      },
      "70": {
        start: {
          line: 180,
          column: 26
        },
        end: {
          line: 180,
          column: 55
        }
      },
      "71": {
        start: {
          line: 181,
          column: 35
        },
        end: {
          line: 181,
          column: 37
        }
      },
      "72": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 35
        }
      },
      "73": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 30
        }
      },
      "74": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 204,
          column: 15
        }
      },
      "75": {
        start: {
          line: 185,
          column: 33
        },
        end: {
          line: 185,
          column: 43
        }
      },
      "76": {
        start: {
          line: 186,
          column: 35
        },
        end: {
          line: 188,
          column: 53
        }
      },
      "77": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 192,
          column: 57
        }
      },
      "78": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 199,
          column: 18
        }
      },
      "79": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 203,
          column: 17
        }
      },
      "80": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 38
        }
      },
      "81": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 202,
          column: 34
        }
      },
      "82": {
        start: {
          line: 206,
          column: 32
        },
        end: {
          line: 206,
          column: 79
        }
      },
      "83": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 212,
          column: 14
        }
      },
      "84": {
        start: {
          line: 219,
          column: 32
        },
        end: {
          line: 219,
          column: 34
        }
      },
      "85": {
        start: {
          line: 220,
          column: 38
        },
        end: {
          line: 220,
          column: 73
        }
      },
      "86": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 221,
          column: 50
        }
      },
      "87": {
        start: {
          line: 223,
          column: 34
        },
        end: {
          line: 223,
          column: 136
        }
      },
      "88": {
        start: {
          line: 223,
          column: 75
        },
        end: {
          line: 223,
          column: 135
        }
      },
      "89": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "90": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 230,
          column: 15
        }
      },
      "91": {
        start: {
          line: 233,
          column: 39
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "92": {
        start: {
          line: 233,
          column: 77
        },
        end: {
          line: 233,
          column: 98
        }
      },
      "93": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "94": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "95": {
        start: {
          line: 240,
          column: 32
        },
        end: {
          line: 240,
          column: 41
        }
      },
      "96": {
        start: {
          line: 246,
          column: 39
        },
        end: {
          line: 247,
          column: 56
        }
      },
      "97": {
        start: {
          line: 246,
          column: 77
        },
        end: {
          line: 247,
          column: 55
        }
      },
      "98": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "99": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 254,
          column: 15
        }
      },
      "100": {
        start: {
          line: 257,
          column: 34
        },
        end: {
          line: 257,
          column: 141
        }
      },
      "101": {
        start: {
          line: 257,
          column: 72
        },
        end: {
          line: 257,
          column: 140
        }
      },
      "102": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "103": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 266,
          column: 15
        }
      },
      "104": {
        start: {
          line: 263,
          column: 32
        },
        end: {
          line: 263,
          column: 41
        }
      },
      "105": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 31
        }
      },
      "106": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 57
        }
      },
      "107": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 40
        }
      },
      "108": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 306,
          column: 11
        }
      },
      "109": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "110": {
        start: {
          line: 284,
          column: 40
        },
        end: {
          line: 284,
          column: 77
        }
      },
      "111": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 288,
          column: 17
        }
      },
      "112": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 89
        }
      },
      "113": {
        start: {
          line: 290,
          column: 41
        },
        end: {
          line: 290,
          column: 93
        }
      },
      "114": {
        start: {
          line: 290,
          column: 71
        },
        end: {
          line: 290,
          column: 92
        }
      },
      "115": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "116": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 296,
          column: 21
        }
      },
      "117": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 294,
          column: 103
        }
      },
      "118": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 295,
          column: 119
        }
      },
      "119": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 301,
          column: 35
        }
      },
      "120": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 300,
          column: 100
        }
      },
      "121": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 69
        }
      },
      "122": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 319,
          column: 10
        }
      },
      "123": {
        start: {
          line: 325,
          column: 44
        },
        end: {
          line: 325,
          column: 65
        }
      },
      "124": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 330,
          column: 10
        }
      },
      "125": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 46
        }
      },
      "126": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 77
        }
      },
      "127": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 45
        }
      },
      "128": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 63
        }
      },
      "129": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 38
        }
      },
      "130": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 365,
          column: 10
        }
      },
      "131": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 38
        }
      },
      "132": {
        start: {
          line: 378,
          column: 28
        },
        end: {
          line: 378,
          column: 50
        }
      },
      "133": {
        start: {
          line: 379,
          column: 28
        },
        end: {
          line: 379,
          column: 98
        }
      },
      "134": {
        start: {
          line: 379,
          column: 77
        },
        end: {
          line: 379,
          column: 94
        }
      },
      "135": {
        start: {
          line: 380,
          column: 32
        },
        end: {
          line: 380,
          column: 69
        }
      },
      "136": {
        start: {
          line: 381,
          column: 21
        },
        end: {
          line: 381,
          column: 30
        }
      },
      "137": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "138": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 31
        }
      },
      "139": {
        start: {
          line: 385,
          column: 35
        },
        end: {
          line: 385,
          column: 87
        }
      },
      "140": {
        start: {
          line: 385,
          column: 65
        },
        end: {
          line: 385,
          column: 86
        }
      },
      "141": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 388,
          column: 9
        }
      },
      "142": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 31
        }
      },
      "143": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 396,
          column: 10
        }
      },
      "144": {
        start: {
          line: 399,
          column: 0
        },
        end: {
          line: 399,
          column: 42
        }
      },
      "145": {
        start: {
          line: 401,
          column: 0
        },
        end: {
          line: 460,
          column: 2
        }
      },
      "146": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "147": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 81
        }
      },
      "148": {
        start: {
          line: 409,
          column: 19
        },
        end: {
          line: 409,
          column: 42
        }
      },
      "149": {
        start: {
          line: 410,
          column: 19
        },
        end: {
          line: 410,
          column: 42
        }
      },
      "150": {
        start: {
          line: 411,
          column: 21
        },
        end: {
          line: 411,
          column: 28
        }
      },
      "151": {
        start: {
          line: 413,
          column: 19
        },
        end: {
          line: 413,
          column: 91
        }
      },
      "152": {
        start: {
          line: 414,
          column: 18
        },
        end: {
          line: 414,
          column: 37
        }
      },
      "153": {
        start: {
          line: 415,
          column: 23
        },
        end: {
          line: 415,
          column: 50
        }
      },
      "154": {
        start: {
          line: 416,
          column: 23
        },
        end: {
          line: 416,
          column: 32
        }
      },
      "155": {
        start: {
          line: 417,
          column: 35
        },
        end: {
          line: 417,
          column: 65
        }
      },
      "156": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 422,
          column: 10
        }
      },
      "157": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 54
        }
      },
      "158": {
        start: {
          line: 435,
          column: 19
        },
        end: {
          line: 435,
          column: 30
        }
      },
      "159": {
        start: {
          line: 436,
          column: 19
        },
        end: {
          line: 436,
          column: 31
        }
      },
      "160": {
        start: {
          line: 437,
          column: 19
        },
        end: {
          line: 437,
          column: 30
        }
      },
      "161": {
        start: {
          line: 438,
          column: 19
        },
        end: {
          line: 438,
          column: 31
        }
      },
      "162": {
        start: {
          line: 439,
          column: 19
        },
        end: {
          line: 439,
          column: 30
        }
      },
      "163": {
        start: {
          line: 440,
          column: 18
        },
        end: {
          line: 440,
          column: 27
        }
      },
      "164": {
        start: {
          line: 441,
          column: 21
        },
        end: {
          line: 441,
          column: 36
        }
      },
      "165": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 24
        }
      },
      "166": {
        start: {
          line: 443,
          column: 18
        },
        end: {
          line: 443,
          column: 37
        }
      },
      "167": {
        start: {
          line: 444,
          column: 18
        },
        end: {
          line: 445,
          column: 81
        }
      },
      "168": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 24
        }
      },
      "169": {
        start: {
          line: 452,
          column: 30
        },
        end: {
          line: 452,
          column: 69
        }
      },
      "170": {
        start: {
          line: 453,
          column: 26
        },
        end: {
          line: 453,
          column: 27
        }
      },
      "171": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 457,
          column: 11
        }
      },
      "172": {
        start: {
          line: 455,
          column: 27
        },
        end: {
          line: 455,
          column: 69
        }
      },
      "173": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 34
        }
      },
      "174": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 56
          },
          end: {
            line: 31,
            column: 57
          }
        },
        loc: {
          start: {
            line: 31,
            column: 71
          },
          end: {
            line: 31,
            column: 88
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 36
          }
        },
        loc: {
          start: {
            line: 48,
            column: 44
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 31
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 88
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 29
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 107
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 109,
            column: 56
          },
          end: {
            line: 109,
            column: 57
          }
        },
        loc: {
          start: {
            line: 109,
            column: 71
          },
          end: {
            line: 109,
            column: 88
          }
        },
        line: 109
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 27
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 121,
            column: 55
          },
          end: {
            line: 121,
            column: 56
          }
        },
        loc: {
          start: {
            line: 121,
            column: 68
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 121
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 76
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 147
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 148,
            column: 55
          },
          end: {
            line: 148,
            column: 56
          }
        },
        loc: {
          start: {
            line: 148,
            column: 68
          },
          end: {
            line: 171,
            column: 9
          }
        },
        line: 148
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 35
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 176
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 178,
            column: 28
          },
          end: {
            line: 178,
            column: 29
          }
        },
        loc: {
          start: {
            line: 178,
            column: 44
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 178
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 184,
            column: 39
          },
          end: {
            line: 184,
            column: 40
          }
        },
        loc: {
          start: {
            line: 184,
            column: 48
          },
          end: {
            line: 204,
            column: 13
          }
        },
        line: 184
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 37
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 218
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 223,
            column: 66
          },
          end: {
            line: 223,
            column: 67
          }
        },
        loc: {
          start: {
            line: 223,
            column: 75
          },
          end: {
            line: 223,
            column: 135
          }
        },
        line: 223
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 233,
            column: 68
          },
          end: {
            line: 233,
            column: 69
          }
        },
        loc: {
          start: {
            line: 233,
            column: 77
          },
          end: {
            line: 233,
            column: 98
          }
        },
        line: 233
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 240,
            column: 25
          },
          end: {
            line: 240,
            column: 26
          }
        },
        loc: {
          start: {
            line: 240,
            column: 32
          },
          end: {
            line: 240,
            column: 41
          }
        },
        line: 240
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 246,
            column: 68
          },
          end: {
            line: 246,
            column: 69
          }
        },
        loc: {
          start: {
            line: 246,
            column: 77
          },
          end: {
            line: 247,
            column: 55
          }
        },
        line: 246
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 257,
            column: 63
          },
          end: {
            line: 257,
            column: 64
          }
        },
        loc: {
          start: {
            line: 257,
            column: 72
          },
          end: {
            line: 257,
            column: 140
          }
        },
        line: 257
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 263,
            column: 25
          },
          end: {
            line: 263,
            column: 26
          }
        },
        loc: {
          start: {
            line: 263,
            column: 32
          },
          end: {
            line: 263,
            column: 41
          }
        },
        line: 263
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 28
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 273
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 274,
            column: 20
          },
          end: {
            line: 274,
            column: 21
          }
        },
        loc: {
          start: {
            line: 274,
            column: 26
          },
          end: {
            line: 276,
            column: 9
          }
        },
        line: 274
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 27
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 281
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 282,
            column: 55
          },
          end: {
            line: 282,
            column: 56
          }
        },
        loc: {
          start: {
            line: 282,
            column: 68
          },
          end: {
            line: 306,
            column: 9
          }
        },
        line: 282
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 290,
            column: 64
          },
          end: {
            line: 290,
            column: 65
          }
        },
        loc: {
          start: {
            line: 290,
            column: 71
          },
          end: {
            line: 290,
            column: 92
          }
        },
        line: 290
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 299,
            column: 27
          },
          end: {
            line: 299,
            column: 28
          }
        },
        loc: {
          start: {
            line: 299,
            column: 33
          },
          end: {
            line: 301,
            column: 17
          }
        },
        line: 299
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 24
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 311
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 32
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 324
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        loc: {
          start: {
            line: 335,
            column: 16
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 335
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 26
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 341
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 29
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 347
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 353
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        loc: {
          start: {
            line: 360,
            column: 18
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 360
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 21
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 370
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 18
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 376
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 379,
            column: 62
          },
          end: {
            line: 379,
            column: 63
          }
        },
        loc: {
          start: {
            line: 379,
            column: 77
          },
          end: {
            line: 379,
            column: 94
          }
        },
        line: 379
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 385,
            column: 58
          },
          end: {
            line: 385,
            column: 59
          }
        },
        loc: {
          start: {
            line: 385,
            column: 65
          },
          end: {
            line: 385,
            column: 86
          }
        },
        line: 385
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 38
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 405
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 17
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 427
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 11
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 433
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        },
        loc: {
          start: {
            line: 451,
            column: 45
          },
          end: {
            line: 459,
            column: 5
          }
        },
        line: 451
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 454,
            column: 27
          },
          end: {
            line: 454,
            column: 28
          }
        },
        loc: {
          start: {
            line: 454,
            column: 42
          },
          end: {
            line: 457,
            column: 9
          }
        },
        line: 454
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 28
          }
        }, {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 19,
            column: 72
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 72,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 14
          },
          end: {
            line: 71,
            column: 53
          }
        }, {
          start: {
            line: 72,
            column: 14
          },
          end: {
            line: 72,
            column: 46
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 74,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 66
          }
        }, {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 65
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 80,
            column: 23
          },
          end: {
            line: 82,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 18
          },
          end: {
            line: 81,
            column: 126
          }
        }, {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 82,
            column: 143
          }
        }],
        line: 80
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 27
          },
          end: {
            line: 94,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 14
          },
          end: {
            line: 93,
            column: 52
          }
        }, {
          start: {
            line: 94,
            column: 14
          },
          end: {
            line: 94,
            column: 45
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 139,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "11": {
        loc: {
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 134,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 134,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "12": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "13": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "14": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 32
          }
        }, {
          start: {
            line: 168,
            column: 36
          },
          end: {
            line: 168,
            column: 67
          }
        }],
        line: 168
      },
      "15": {
        loc: {
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 188,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 22
          },
          end: {
            line: 187,
            column: 60
          }
        }, {
          start: {
            line: 188,
            column: 22
          },
          end: {
            line: 188,
            column: 53
          }
        }],
        line: 186
      },
      "16": {
        loc: {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 203,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 203,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "17": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "18": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "19": {
        loc: {
          start: {
            line: 246,
            column: 77
          },
          end: {
            line: 247,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 77
          },
          end: {
            line: 246,
            column: 125
          }
        }, {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 247,
            column: 55
          }
        }],
        line: 246
      },
      "20": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "21": {
        loc: {
          start: {
            line: 257,
            column: 72
          },
          end: {
            line: 257,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 72
          },
          end: {
            line: 257,
            column: 93
          }
        }, {
          start: {
            line: 257,
            column: 97
          },
          end: {
            line: 257,
            column: 140
          }
        }],
        line: 257
      },
      "22": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "23": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 40
          }
        }, {
          start: {
            line: 258,
            column: 44
          },
          end: {
            line: 258,
            column: 66
          }
        }],
        line: 258
      },
      "24": {
        loc: {
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "25": {
        loc: {
          start: {
            line: 292,
            column: 20
          },
          end: {
            line: 296,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 20
          },
          end: {
            line: 296,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "26": {
        loc: {
          start: {
            line: 327,
            column: 20
          },
          end: {
            line: 327,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 43
          },
          end: {
            line: 327,
            column: 52
          }
        }, {
          start: {
            line: 327,
            column: 55
          },
          end: {
            line: 327,
            column: 61
          }
        }],
        line: 327
      },
      "27": {
        loc: {
          start: {
            line: 328,
            column: 24
          },
          end: {
            line: 328,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 52
          },
          end: {
            line: 328,
            column: 61
          }
        }, {
          start: {
            line: 328,
            column: 64
          },
          end: {
            line: 328,
            column: 74
          }
        }],
        line: 328
      },
      "28": {
        loc: {
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "29": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 388,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 388,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "30": {
        loc: {
          start: {
            line: 394,
            column: 30
          },
          end: {
            line: 394,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 127
          },
          end: {
            line: 394,
            column: 133
          }
        }, {
          start: {
            line: 394,
            column: 136
          },
          end: {
            line: 394,
            column: 148
          }
        }],
        line: 394
      },
      "31": {
        loc: {
          start: {
            line: 394,
            column: 30
          },
          end: {
            line: 394,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 30
          },
          end: {
            line: 394,
            column: 107
          }
        }, {
          start: {
            line: 394,
            column: 111
          },
          end: {
            line: 394,
            column: 124
          }
        }],
        line: 394
      },
      "32": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "33": {
        loc: {
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 406,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 406,
            column: 29
          }
        }, {
          start: {
            line: 406,
            column: 33
          },
          end: {
            line: 406,
            column: 50
          }
        }],
        line: 406
      },
      "34": {
        loc: {
          start: {
            line: 441,
            column: 21
          },
          end: {
            line: 441,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 441,
            column: 30
          },
          end: {
            line: 441,
            column: 31
          }
        }, {
          start: {
            line: 441,
            column: 34
          },
          end: {
            line: 441,
            column: 36
          }
        }],
        line: 441
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/bandit-optimizer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/bandit-optimizer.ts"],
      sourcesContent: ["/**\n * Bandit Optimizer for AI Model Selection\n *\n * Implements:\n * - UCB (Upper Confidence Bound) algorithm\n * - Thompson Sampling with Beta distribution\n * - Contextual bandits for persona-based routing\n * - Integration with Evidently experiments\n * - Automated optimization and learning\n */\n\nimport {\n  Arm,\n  ArmStats,\n  BanditContext,\n  ThompsonBandit,\n} from \"./bandit-controller\";\nimport {\n  EvidentlyExperimentManager,\n  ExperimentContext,\n} from \"./evidently-experiments\";\n\nexport interface UCBStats extends ArmStats {\n  ucbScore: number;\n  confidenceRadius: number;\n}\n\nexport interface OptimizationConfig {\n  explorationRate: number; // 0-1, higher = more exploration\n  confidenceLevel: number; // 0-1, for UCB confidence intervals\n  minTrialsForConfidence: number; // Minimum trials before trusting results\n  autoOptimizationEnabled: boolean;\n  optimizationInterval: number; // Minutes between optimization runs\n}\n\nexport interface OptimizationResult {\n  recommendedArm: Arm;\n  confidence: number;\n  expectedReward: number;\n  explorationNeeded: boolean;\n  reasoning: string;\n}\n\nexport interface ContextualPerformance {\n  context: string;\n  armPerformance: Record<\n    Arm,\n    {\n      winRate: number;\n      avgLatency: number;\n      avgCost: number;\n      trials: number;\n      confidence: number;\n    }\n  >;\n  bestArm: Arm;\n  improvement: number;\n}\n\nexport class BanditOptimizer {\n  private bandit: ThompsonBandit;\n  private experimentManager?: EvidentlyExperimentManager;\n  private config: OptimizationConfig;\n  private optimizationHistory: Array<{\n    timestamp: Date;\n    context?: BanditContext;\n    result: OptimizationResult;\n    actualOutcome?: boolean;\n  }> = [];\n\n  constructor(\n    bandit?: ThompsonBandit,\n    experimentManager?: EvidentlyExperimentManager,\n    config?: Partial<OptimizationConfig>\n  ) {\n    this.bandit = bandit || new ThompsonBandit();\n    this.experimentManager = experimentManager;\n    this.config = {\n      explorationRate: 0.1,\n      confidenceLevel: 0.95,\n      minTrialsForConfidence: 20,\n      autoOptimizationEnabled: true,\n      optimizationInterval: 60, // 1 hour\n      ...config,\n    };\n\n    if (this.config.autoOptimizationEnabled) {\n      this.startAutoOptimization();\n    }\n  }\n\n  /**\n   * UCB (Upper Confidence Bound) algorithm for arm selection\n   */\n  selectArmUCB(context?: BanditContext): OptimizationResult {\n    const stats = this.bandit.getStats(context);\n    const totalTrials = Object.values(stats).reduce(\n      (sum, stat) => sum + stat.trials,\n      0\n    );\n\n    if (totalTrials === 0) {\n      // No data yet, return random arm\n      const arms: Arm[] = [\"bedrock\", \"google\", \"meta\"];\n      const randomArm = arms[Math.floor(Math.random() * arms.length)];\n      return {\n        recommendedArm: randomArm,\n        confidence: 0.33,\n        expectedReward: 0.5,\n        explorationNeeded: true,\n        reasoning: \"No historical data available, exploring randomly\",\n      };\n    }\n\n    let bestArm: Arm = \"bedrock\";\n    let bestUCB = -1;\n    const ucbStats: Record<Arm, UCBStats> = {} as any;\n\n    // Calculate UCB for each arm\n    (Object.keys(stats) as Arm[]).forEach((arm) => {\n      const armStats = stats[arm];\n\n      if (armStats.trials === 0) {\n        // Unplayed arm gets infinite UCB\n        ucbStats[arm] = {\n          ...armStats,\n          ucbScore: Infinity,\n          confidenceRadius: Infinity,\n        };\n        bestArm = arm;\n        bestUCB = Infinity;\n        return;\n      }\n\n      // UCB formula: mean + confidence_radius\n      const mean = armStats.winRate;\n      const confidenceRadius =\n        Math.sqrt((2 * Math.log(totalTrials)) / armStats.trials) *\n        this.config.explorationRate;\n\n      const ucbScore = mean + confidenceRadius;\n\n      ucbStats[arm] = {\n        ...armStats,\n        ucbScore,\n        confidenceRadius,\n      };\n\n      if (ucbScore > bestUCB) {\n        bestUCB = ucbScore;\n        bestArm = arm;\n      }\n    });\n\n    const bestStats = ucbStats[bestArm];\n    const confidence =\n      bestStats.trials >= this.config.minTrialsForConfidence\n        ? Math.min(0.95, bestStats.winRate + 0.1)\n        : Math.max(0.3, bestStats.winRate);\n\n    const explorationNeeded =\n      bestStats.confidenceRadius > 0.1 ||\n      bestStats.trials < this.config.minTrialsForConfidence;\n\n    return {\n      recommendedArm: bestArm,\n      confidence,\n      expectedReward: bestStats.winRate,\n      explorationNeeded,\n      reasoning: explorationNeeded\n        ? `Exploration needed: ${\n            bestStats.trials\n          } trials, confidence radius ${bestStats.confidenceRadius.toFixed(3)}`\n        : `Exploitation: High confidence in ${bestArm} (${\n            bestStats.trials\n          } trials, ${(bestStats.winRate * 100).toFixed(1)}% win rate)`,\n    };\n  }\n\n  /**\n   * Thompson Sampling with contextual information\n   */\n  selectArmThompson(context?: BanditContext): OptimizationResult {\n    const chosenArm = this.bandit.choose(context);\n    const stats = this.bandit.getStats(context);\n    const armStats = stats[chosenArm];\n\n    const confidence =\n      armStats.trials >= this.config.minTrialsForConfidence\n        ? Math.min(0.95, armStats.winRate + 0.1)\n        : Math.max(0.3, armStats.winRate);\n\n    const explorationNeeded =\n      armStats.trials < this.config.minTrialsForConfidence;\n\n    return {\n      recommendedArm: chosenArm,\n      confidence,\n      expectedReward: armStats.winRate,\n      explorationNeeded,\n      reasoning: `Thompson Sampling selected ${chosenArm} based on Beta(${\n        1 + armStats.wins\n      }, ${1 + armStats.trials - armStats.wins}) distribution`,\n    };\n  }\n\n  /**\n   * Hybrid approach: UCB for exploration, Thompson for exploitation\n   */\n  selectArmHybrid(context?: BanditContext): OptimizationResult {\n    const stats = this.bandit.getStats(context);\n    const totalTrials = Object.values(stats).reduce(\n      (sum, stat) => sum + stat.trials,\n      0\n    );\n\n    // Use UCB for early exploration\n    if (totalTrials < this.config.minTrialsForConfidence * 3) {\n      return this.selectArmUCB(context);\n    }\n\n    // Use Thompson Sampling for exploitation\n    return this.selectArmThompson(context);\n  }\n\n  /**\n   * Get optimal arm with experiment integration\n   */\n  async getOptimalArm(context: ExperimentContext): Promise<OptimizationResult> {\n    // Check if experiment manager is available and has active experiments\n    if (this.experimentManager) {\n      try {\n        const experimentResult =\n          await this.experimentManager.getOptimalProvider(context);\n\n        if (experimentResult.source === \"experiment\") {\n          return {\n            recommendedArm: experimentResult.provider,\n            confidence: experimentResult.confidence,\n            expectedReward: 0.8, // Assume experiments are well-designed\n            explorationNeeded: false,\n            reasoning: `Experiment assignment: ${experimentResult.experimentName}`,\n          };\n        }\n      } catch (error) {\n        console.warn(\n          \"Failed to get experiment assignment, falling back to bandit:\",\n          error\n        );\n      }\n    }\n\n    // Fall back to bandit optimization\n    return this.selectArmHybrid(context);\n  }\n\n  /**\n   * Record outcome and update optimization\n   */\n  async recordOutcome(\n    context: ExperimentContext,\n    arm: Arm,\n    success: boolean,\n    latencyMs: number,\n    costEuro: number,\n    qualityScore?: number\n  ): Promise<void> {\n    // Record in bandit\n    this.bandit.record(arm, success, costEuro, latencyMs, context);\n\n    // Record in experiment manager if available\n    if (this.experimentManager) {\n      try {\n        await this.experimentManager.recordExperimentOutcome(context, arm, {\n          success,\n          latencyMs,\n          costEuro,\n          qualityScore,\n        });\n      } catch (error) {\n        console.warn(\"Failed to record experiment outcome:\", error);\n        // Continue execution - bandit recording is more important\n      }\n    }\n\n    // Update optimization history\n    const lastOptimization =\n      this.optimizationHistory[this.optimizationHistory.length - 1];\n    if (lastOptimization && !lastOptimization.actualOutcome) {\n      lastOptimization.actualOutcome = success;\n    }\n  }\n\n  /**\n   * Analyze contextual performance across different contexts\n   */\n  analyzeContextualPerformance(): ContextualPerformance[] {\n    const contexts = this.getUniqueContexts();\n\n    return contexts.map((contextKey) => {\n      const context = this.parseContextKey(contextKey);\n      const stats = this.bandit.getStats(context);\n\n      const armPerformance: Record<Arm, any> = {} as any;\n      let bestArm: Arm = \"bedrock\";\n      let bestScore = -1;\n\n      (Object.keys(stats) as Arm[]).forEach((arm) => {\n        const armStats = stats[arm];\n        const confidence =\n          armStats.trials >= this.config.minTrialsForConfidence\n            ? Math.min(0.95, armStats.winRate + 0.1)\n            : Math.max(0.3, armStats.winRate);\n\n        // Composite score: win rate (50%) + latency (30%) + cost (20%)\n        const score =\n          armStats.winRate * 0.5 +\n          (1 / (armStats.avgLatency + 1)) * 0.3 +\n          (1 / (armStats.avgCost + 0.01)) * 0.2;\n\n        armPerformance[arm] = {\n          winRate: armStats.winRate,\n          avgLatency: armStats.avgLatency,\n          avgCost: armStats.avgCost,\n          trials: armStats.trials,\n          confidence,\n        };\n\n        if (score > bestScore) {\n          bestScore = score;\n          bestArm = arm;\n        }\n      });\n\n      // Calculate improvement over random baseline (33% win rate)\n      const improvement = (armPerformance[bestArm].winRate - 0.33) / 0.33;\n\n      return {\n        context: contextKey,\n        armPerformance,\n        bestArm,\n        improvement,\n      };\n    });\n  }\n\n  /**\n   * Get optimization recommendations based on current performance\n   */\n  getOptimizationRecommendations(): Array<{\n    type: \"exploration\" | \"exploitation\" | \"context_specific\" | \"experiment\";\n    priority: \"high\" | \"medium\" | \"low\";\n    description: string;\n    action: string;\n  }> {\n    const recommendations = [];\n    const contextualPerformance = this.analyzeContextualPerformance();\n    const globalStats = this.bandit.getStats();\n\n    // Check for under-explored arms\n    const underExploredArms = (Object.keys(globalStats) as Arm[]).filter(\n      (arm) => globalStats[arm].trials < this.config.minTrialsForConfidence\n    );\n\n    if (underExploredArms.length > 0) {\n      recommendations.push({\n        type: \"exploration\" as const,\n        priority: \"high\" as const,\n        description: `Arms ${underExploredArms.join(\n          \", \"\n        )} need more exploration`,\n        action: `Increase exploration rate or force exploration of ${underExploredArms.join(\n          \", \"\n        )}`,\n      });\n    }\n\n    // Check for contexts with poor performance\n    const poorPerformingContexts = contextualPerformance.filter(\n      (ctx) => ctx.improvement < 0.1 // Less than 10% improvement over random\n    );\n\n    if (poorPerformingContexts.length > 0) {\n      recommendations.push({\n        type: \"context_specific\" as const,\n        priority: \"medium\" as const,\n        description: `Poor performance in contexts: ${poorPerformingContexts\n          .map((c) => c.context)\n          .join(\", \")}`,\n        action: \"Consider context-specific optimization or feature engineering\",\n      });\n    }\n\n    // Check for high-confidence winners\n    const highConfidenceContexts = contextualPerformance.filter(\n      (ctx) =>\n        ctx.armPerformance[ctx.bestArm].confidence > 0.9 &&\n        ctx.armPerformance[ctx.bestArm].trials > 50\n    );\n\n    if (highConfidenceContexts.length > 0) {\n      recommendations.push({\n        type: \"exploitation\" as const,\n        priority: \"low\" as const,\n        description: `High confidence winners found in ${highConfidenceContexts.length} contexts`,\n        action: \"Consider reducing exploration rate for these contexts\",\n      });\n    }\n\n    // Suggest experiments for promising contexts\n    const promisingContexts = contextualPerformance.filter(\n      (ctx) =>\n        ctx.improvement > 0.2 && ctx.armPerformance[ctx.bestArm].trials > 30\n    );\n\n    if (promisingContexts.length > 0 && this.experimentManager) {\n      recommendations.push({\n        type: \"experiment\" as const,\n        priority: \"medium\" as const,\n        description: `Promising contexts found: ${promisingContexts\n          .map((c) => c.context)\n          .join(\", \")}`,\n        action: \"Consider running formal A/B experiments to validate findings\",\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Start automatic optimization process\n   */\n  private startAutoOptimization(): void {\n    setInterval(() => {\n      this.runOptimizationCycle();\n    }, this.config.optimizationInterval * 60 * 1000); // Convert minutes to ms\n  }\n\n  /**\n   * Run a single optimization cycle\n   */\n  private async runOptimizationCycle(): Promise<void> {\n    try {\n      const recommendations = this.getOptimizationRecommendations();\n\n      // Log recommendations\n      if (recommendations.length > 0) {\n        console.log(\"Bandit Optimization Recommendations:\", recommendations);\n      }\n\n      // Auto-apply low-risk optimizations\n      const highPriorityRecs = recommendations.filter(\n        (r) => r.priority === \"high\"\n      );\n\n      for (const rec of highPriorityRecs) {\n        if (rec.type === \"exploration\") {\n          // Temporarily increase exploration rate\n          this.config.explorationRate = Math.min(\n            0.3,\n            this.config.explorationRate * 1.2\n          );\n          console.log(\n            `Auto-optimization: Increased exploration rate to ${this.config.explorationRate}`\n          );\n        }\n      }\n\n      // Reset exploration rate after some time\n      setTimeout(() => {\n        this.config.explorationRate = Math.max(\n          0.05,\n          this.config.explorationRate * 0.9\n        );\n      }, 30 * 60 * 1000); // 30 minutes\n    } catch (error) {\n      console.error(\"Error in optimization cycle:\", error);\n    }\n  }\n\n  /**\n   * Get unique contexts from bandit history\n   */\n  private getUniqueContexts(): string[] {\n    // This would need to be implemented based on how contexts are stored\n    // For now, return some common contexts\n    return [\n      \"general|standard|no-tools\",\n      \"legal|premium|tools\",\n      \"culinary|standard|no-tools\",\n      \"medical|premium|tools\",\n    ];\n  }\n\n  /**\n   * Parse context key back to BanditContext\n   */\n  private parseContextKey(contextKey: string): BanditContext {\n    const [domain, budgetTier, tools] = contextKey.split(\"|\");\n    return {\n      domain: domain === \"general\" ? undefined : domain,\n      budgetTier: budgetTier === \"standard\" ? undefined : budgetTier,\n      requireTools: tools === \"tools\",\n    };\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): OptimizationConfig {\n    return { ...this.config };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(updates: Partial<OptimizationConfig>): void {\n    this.config = { ...this.config, ...updates };\n  }\n\n  /**\n   * Get optimization history\n   */\n  getOptimizationHistory(): typeof this.optimizationHistory {\n    return [...this.optimizationHistory];\n  }\n\n  /**\n   * Reset bandit and optimization history\n   */\n  reset(): void {\n    this.bandit = new ThompsonBandit();\n    this.optimizationHistory = [];\n  }\n\n  /**\n   * Export bandit state for persistence\n   */\n  exportState(): {\n    banditStats: ReturnType<ThompsonBandit[\"getStats\"]>;\n    config: OptimizationConfig;\n    optimizationHistory: typeof this.optimizationHistory;\n  } {\n    return {\n      banditStats: this.bandit.getStats(),\n      config: this.config,\n      optimizationHistory: this.optimizationHistory,\n    };\n  }\n\n  /**\n   * Get bandit statistics\n   */\n  getBanditStats(): ReturnType<ThompsonBandit[\"getStats\"]> {\n    return this.bandit.getStats();\n  }\n\n  /**\n   * Health check for the optimizer\n   */\n  healthCheck(): {\n    status: \"healthy\" | \"warning\" | \"error\";\n    totalTrials: number;\n    activeContexts: number;\n    autoOptimizationEnabled: boolean;\n    lastOptimization?: Date;\n    recommendations: number;\n  } {\n    const globalStats = this.bandit.getStats();\n    const totalTrials = Object.values(globalStats).reduce(\n      (sum, stat) => sum + stat.trials,\n      0\n    );\n    const recommendations = this.getOptimizationRecommendations();\n\n    let status: \"healthy\" | \"warning\" | \"error\" = \"healthy\";\n\n    if (totalTrials < 10) {\n      status = \"warning\"; // Not enough data\n    }\n\n    const highPriorityIssues = recommendations.filter(\n      (r) => r.priority === \"high\"\n    );\n    if (highPriorityIssues.length > 0) {\n      status = \"warning\";\n    }\n\n    return {\n      status,\n      totalTrials,\n      activeContexts: this.getUniqueContexts().length,\n      autoOptimizationEnabled: this.config.autoOptimizationEnabled,\n      lastOptimization:\n        this.optimizationHistory[this.optimizationHistory.length - 1]\n          ?.timestamp,\n      recommendations: recommendations.length,\n    };\n  }\n}\n\n// Utility functions for bandit optimization\nexport const BanditUtils = {\n  /**\n   * Calculate statistical significance between two arms\n   */\n  calculateSignificance(\n    arm1: { wins: number; trials: number },\n    arm2: { wins: number; trials: number }\n  ): {\n    significant: boolean;\n    pValue: number;\n    confidenceInterval: [number, number];\n  } {\n    if (arm1.trials === 0 || arm2.trials === 0) {\n      return { significant: false, pValue: 1, confidenceInterval: [0, 1] };\n    }\n\n    const p1 = arm1.wins / arm1.trials;\n    const p2 = arm2.wins / arm2.trials;\n    const diff = p1 - p2;\n\n    // Simple z-test approximation\n    const se = Math.sqrt(\n      (p1 * (1 - p1)) / arm1.trials + (p2 * (1 - p2)) / arm2.trials\n    );\n\n    const z = Math.abs(diff) / se;\n    const pValue = 2 * (1 - this.normalCDF(z)); // Two-tailed test\n\n    const margin = 1.96 * se; // 95% confidence interval\n    const confidenceInterval: [number, number] = [diff - margin, diff + margin];\n\n    return {\n      significant: pValue < 0.05,\n      pValue,\n      confidenceInterval,\n    };\n  },\n\n  /**\n   * Normal CDF approximation\n   */\n  normalCDF(x: number): number {\n    return 0.5 * (1 + this.erf(x / Math.sqrt(2)));\n  },\n\n  /**\n   * Error function approximation\n   */\n  erf(x: number): number {\n    // Abramowitz and Stegun approximation\n    const a1 = 0.254829592;\n    const a2 = -0.284496736;\n    const a3 = 1.421413741;\n    const a4 = -1.453152027;\n    const a5 = 1.061405429;\n    const p = 0.3275911;\n\n    const sign = x >= 0 ? 1 : -1;\n    x = Math.abs(x);\n\n    const t = 1.0 / (1.0 + p * x);\n    const y =\n      1.0 -\n      ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return sign * y;\n  },\n\n  /**\n   * Calculate expected regret for an arm selection strategy\n   */\n  calculateRegret(\n    trueRewards: Record<Arm, number>,\n    selections: Array<{ arm: Arm; reward: number }>\n  ): number {\n    const optimalReward = Math.max(...Object.values(trueRewards));\n    let totalRegret = 0;\n\n    selections.forEach((selection) => {\n      const regret = optimalReward - trueRewards[selection.arm];\n      totalRegret += regret;\n    });\n\n    return totalRegret / selections.length; // Average regret\n  },\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b68ad80fcbb673116d013626a05802925ee8257"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2e38urcc7y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2e38urcc7y();
cov_2e38urcc7y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2e38urcc7y().s[1]++;
exports.BanditUtils = exports.BanditOptimizer = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2e38urcc7y().s[2]++, require("tslib"));
const bandit_controller_1 =
/* istanbul ignore next */
(cov_2e38urcc7y().s[3]++, require("./bandit-controller"));
class BanditOptimizer {
  constructor(bandit, experimentManager, config) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[0]++;
    cov_2e38urcc7y().s[4]++;
    this.optimizationHistory = [];
    /* istanbul ignore next */
    cov_2e38urcc7y().s[5]++;
    this.bandit =
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[0][0]++, bandit) ||
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[0][1]++, new bandit_controller_1.ThompsonBandit());
    /* istanbul ignore next */
    cov_2e38urcc7y().s[6]++;
    this.experimentManager = experimentManager;
    /* istanbul ignore next */
    cov_2e38urcc7y().s[7]++;
    this.config = Object.assign({
      explorationRate: 0.1,
      confidenceLevel: 0.95,
      minTrialsForConfidence: 20,
      autoOptimizationEnabled: true,
      optimizationInterval: 60
    }, config);
    /* istanbul ignore next */
    cov_2e38urcc7y().s[8]++;
    if (this.config.autoOptimizationEnabled) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[1][0]++;
      cov_2e38urcc7y().s[9]++;
      this.startAutoOptimization();
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[1][1]++;
    }
  }
  /**
   * UCB (Upper Confidence Bound) algorithm for arm selection
   */
  selectArmUCB(context) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[1]++;
    const stats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[10]++, this.bandit.getStats(context));
    const totalTrials =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[11]++, Object.values(stats).reduce((sum, stat) => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[2]++;
      cov_2e38urcc7y().s[12]++;
      return sum + stat.trials;
    }, 0));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[13]++;
    if (totalTrials === 0) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[2][0]++;
      // No data yet, return random arm
      const arms =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[14]++, ["bedrock", "google", "meta"]);
      const randomArm =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[15]++, arms[Math.floor(Math.random() * arms.length)]);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[16]++;
      return {
        recommendedArm: randomArm,
        confidence: 0.33,
        expectedReward: 0.5,
        explorationNeeded: true,
        reasoning: "No historical data available, exploring randomly"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[2][1]++;
    }
    let bestArm =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[17]++, "bedrock");
    let bestUCB =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[18]++, -1);
    const ucbStats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[19]++, {});
    // Calculate UCB for each arm
    /* istanbul ignore next */
    cov_2e38urcc7y().s[20]++;
    Object.keys(stats).forEach(arm => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[3]++;
      const armStats =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[21]++, stats[arm]);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[22]++;
      if (armStats.trials === 0) {
        /* istanbul ignore next */
        cov_2e38urcc7y().b[3][0]++;
        cov_2e38urcc7y().s[23]++;
        // Unplayed arm gets infinite UCB
        ucbStats[arm] = Object.assign(Object.assign({}, armStats), {
          ucbScore: Infinity,
          confidenceRadius: Infinity
        });
        /* istanbul ignore next */
        cov_2e38urcc7y().s[24]++;
        bestArm = arm;
        /* istanbul ignore next */
        cov_2e38urcc7y().s[25]++;
        bestUCB = Infinity;
        /* istanbul ignore next */
        cov_2e38urcc7y().s[26]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2e38urcc7y().b[3][1]++;
      }
      // UCB formula: mean + confidence_radius
      const mean =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[27]++, armStats.winRate);
      const confidenceRadius =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[28]++, Math.sqrt(2 * Math.log(totalTrials) / armStats.trials) * this.config.explorationRate);
      const ucbScore =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[29]++, mean + confidenceRadius);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[30]++;
      ucbStats[arm] = Object.assign(Object.assign({}, armStats), {
        ucbScore,
        confidenceRadius
      });
      /* istanbul ignore next */
      cov_2e38urcc7y().s[31]++;
      if (ucbScore > bestUCB) {
        /* istanbul ignore next */
        cov_2e38urcc7y().b[4][0]++;
        cov_2e38urcc7y().s[32]++;
        bestUCB = ucbScore;
        /* istanbul ignore next */
        cov_2e38urcc7y().s[33]++;
        bestArm = arm;
      } else
      /* istanbul ignore next */
      {
        cov_2e38urcc7y().b[4][1]++;
      }
    });
    const bestStats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[34]++, ucbStats[bestArm]);
    const confidence =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[35]++, bestStats.trials >= this.config.minTrialsForConfidence ?
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[5][0]++, Math.min(0.95, bestStats.winRate + 0.1)) :
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[5][1]++, Math.max(0.3, bestStats.winRate)));
    const explorationNeeded =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[36]++,
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[6][0]++, bestStats.confidenceRadius > 0.1) ||
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[6][1]++, bestStats.trials < this.config.minTrialsForConfidence));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[37]++;
    return {
      recommendedArm: bestArm,
      confidence,
      expectedReward: bestStats.winRate,
      explorationNeeded,
      reasoning: explorationNeeded ?
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[7][0]++, `Exploration needed: ${bestStats.trials} trials, confidence radius ${bestStats.confidenceRadius.toFixed(3)}`) :
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[7][1]++, `Exploitation: High confidence in ${bestArm} (${bestStats.trials} trials, ${(bestStats.winRate * 100).toFixed(1)}% win rate)`)
    };
  }
  /**
   * Thompson Sampling with contextual information
   */
  selectArmThompson(context) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[4]++;
    const chosenArm =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[38]++, this.bandit.choose(context));
    const stats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[39]++, this.bandit.getStats(context));
    const armStats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[40]++, stats[chosenArm]);
    const confidence =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[41]++, armStats.trials >= this.config.minTrialsForConfidence ?
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[8][0]++, Math.min(0.95, armStats.winRate + 0.1)) :
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[8][1]++, Math.max(0.3, armStats.winRate)));
    const explorationNeeded =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[42]++, armStats.trials < this.config.minTrialsForConfidence);
    /* istanbul ignore next */
    cov_2e38urcc7y().s[43]++;
    return {
      recommendedArm: chosenArm,
      confidence,
      expectedReward: armStats.winRate,
      explorationNeeded,
      reasoning: `Thompson Sampling selected ${chosenArm} based on Beta(${1 + armStats.wins}, ${1 + armStats.trials - armStats.wins}) distribution`
    };
  }
  /**
   * Hybrid approach: UCB for exploration, Thompson for exploitation
   */
  selectArmHybrid(context) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[5]++;
    const stats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[44]++, this.bandit.getStats(context));
    const totalTrials =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[45]++, Object.values(stats).reduce((sum, stat) => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[6]++;
      cov_2e38urcc7y().s[46]++;
      return sum + stat.trials;
    }, 0));
    // Use UCB for early exploration
    /* istanbul ignore next */
    cov_2e38urcc7y().s[47]++;
    if (totalTrials < this.config.minTrialsForConfidence * 3) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[9][0]++;
      cov_2e38urcc7y().s[48]++;
      return this.selectArmUCB(context);
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[9][1]++;
    }
    // Use Thompson Sampling for exploitation
    cov_2e38urcc7y().s[49]++;
    return this.selectArmThompson(context);
  }
  /**
   * Get optimal arm with experiment integration
   */
  getOptimalArm(context) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[7]++;
    cov_2e38urcc7y().s[50]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[8]++;
      cov_2e38urcc7y().s[51]++;
      // Check if experiment manager is available and has active experiments
      if (this.experimentManager) {
        /* istanbul ignore next */
        cov_2e38urcc7y().b[10][0]++;
        cov_2e38urcc7y().s[52]++;
        try {
          const experimentResult =
          /* istanbul ignore next */
          (cov_2e38urcc7y().s[53]++, yield this.experimentManager.getOptimalProvider(context));
          /* istanbul ignore next */
          cov_2e38urcc7y().s[54]++;
          if (experimentResult.source === "experiment") {
            /* istanbul ignore next */
            cov_2e38urcc7y().b[11][0]++;
            cov_2e38urcc7y().s[55]++;
            return {
              recommendedArm: experimentResult.provider,
              confidence: experimentResult.confidence,
              expectedReward: 0.8,
              // Assume experiments are well-designed
              explorationNeeded: false,
              reasoning: `Experiment assignment: ${experimentResult.experimentName}`
            };
          } else
          /* istanbul ignore next */
          {
            cov_2e38urcc7y().b[11][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_2e38urcc7y().s[56]++;
          console.warn("Failed to get experiment assignment, falling back to bandit:", error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2e38urcc7y().b[10][1]++;
      }
      // Fall back to bandit optimization
      cov_2e38urcc7y().s[57]++;
      return this.selectArmHybrid(context);
    });
  }
  /**
   * Record outcome and update optimization
   */
  recordOutcome(context, arm, success, latencyMs, costEuro, qualityScore) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[9]++;
    cov_2e38urcc7y().s[58]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[10]++;
      cov_2e38urcc7y().s[59]++;
      // Record in bandit
      this.bandit.record(arm, success, costEuro, latencyMs, context);
      // Record in experiment manager if available
      /* istanbul ignore next */
      cov_2e38urcc7y().s[60]++;
      if (this.experimentManager) {
        /* istanbul ignore next */
        cov_2e38urcc7y().b[12][0]++;
        cov_2e38urcc7y().s[61]++;
        try {
          /* istanbul ignore next */
          cov_2e38urcc7y().s[62]++;
          yield this.experimentManager.recordExperimentOutcome(context, arm, {
            success,
            latencyMs,
            costEuro,
            qualityScore
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_2e38urcc7y().s[63]++;
          console.warn("Failed to record experiment outcome:", error);
          // Continue execution - bandit recording is more important
        }
      } else
      /* istanbul ignore next */
      {
        cov_2e38urcc7y().b[12][1]++;
      }
      // Update optimization history
      const lastOptimization =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[64]++, this.optimizationHistory[this.optimizationHistory.length - 1]);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[14][0]++, lastOptimization) &&
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[14][1]++, !lastOptimization.actualOutcome)) {
        /* istanbul ignore next */
        cov_2e38urcc7y().b[13][0]++;
        cov_2e38urcc7y().s[66]++;
        lastOptimization.actualOutcome = success;
      } else
      /* istanbul ignore next */
      {
        cov_2e38urcc7y().b[13][1]++;
      }
    });
  }
  /**
   * Analyze contextual performance across different contexts
   */
  analyzeContextualPerformance() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[11]++;
    const contexts =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[67]++, this.getUniqueContexts());
    /* istanbul ignore next */
    cov_2e38urcc7y().s[68]++;
    return contexts.map(contextKey => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[12]++;
      const context =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[69]++, this.parseContextKey(contextKey));
      const stats =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[70]++, this.bandit.getStats(context));
      const armPerformance =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[71]++, {});
      let bestArm =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[72]++, "bedrock");
      let bestScore =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[73]++, -1);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[74]++;
      Object.keys(stats).forEach(arm => {
        /* istanbul ignore next */
        cov_2e38urcc7y().f[13]++;
        const armStats =
        /* istanbul ignore next */
        (cov_2e38urcc7y().s[75]++, stats[arm]);
        const confidence =
        /* istanbul ignore next */
        (cov_2e38urcc7y().s[76]++, armStats.trials >= this.config.minTrialsForConfidence ?
        /* istanbul ignore next */
        (cov_2e38urcc7y().b[15][0]++, Math.min(0.95, armStats.winRate + 0.1)) :
        /* istanbul ignore next */
        (cov_2e38urcc7y().b[15][1]++, Math.max(0.3, armStats.winRate)));
        // Composite score: win rate (50%) + latency (30%) + cost (20%)
        const score =
        /* istanbul ignore next */
        (cov_2e38urcc7y().s[77]++, armStats.winRate * 0.5 + 1 / (armStats.avgLatency + 1) * 0.3 + 1 / (armStats.avgCost + 0.01) * 0.2);
        /* istanbul ignore next */
        cov_2e38urcc7y().s[78]++;
        armPerformance[arm] = {
          winRate: armStats.winRate,
          avgLatency: armStats.avgLatency,
          avgCost: armStats.avgCost,
          trials: armStats.trials,
          confidence
        };
        /* istanbul ignore next */
        cov_2e38urcc7y().s[79]++;
        if (score > bestScore) {
          /* istanbul ignore next */
          cov_2e38urcc7y().b[16][0]++;
          cov_2e38urcc7y().s[80]++;
          bestScore = score;
          /* istanbul ignore next */
          cov_2e38urcc7y().s[81]++;
          bestArm = arm;
        } else
        /* istanbul ignore next */
        {
          cov_2e38urcc7y().b[16][1]++;
        }
      });
      // Calculate improvement over random baseline (33% win rate)
      const improvement =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[82]++, (armPerformance[bestArm].winRate - 0.33) / 0.33);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[83]++;
      return {
        context: contextKey,
        armPerformance,
        bestArm,
        improvement
      };
    });
  }
  /**
   * Get optimization recommendations based on current performance
   */
  getOptimizationRecommendations() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[14]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[84]++, []);
    const contextualPerformance =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[85]++, this.analyzeContextualPerformance());
    const globalStats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[86]++, this.bandit.getStats());
    // Check for under-explored arms
    const underExploredArms =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[87]++, Object.keys(globalStats).filter(arm => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[15]++;
      cov_2e38urcc7y().s[88]++;
      return globalStats[arm].trials < this.config.minTrialsForConfidence;
    }));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[89]++;
    if (underExploredArms.length > 0) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[17][0]++;
      cov_2e38urcc7y().s[90]++;
      recommendations.push({
        type: "exploration",
        priority: "high",
        description: `Arms ${underExploredArms.join(", ")} need more exploration`,
        action: `Increase exploration rate or force exploration of ${underExploredArms.join(", ")}`
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[17][1]++;
    }
    // Check for contexts with poor performance
    const poorPerformingContexts =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[91]++, contextualPerformance.filter(ctx => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[16]++;
      cov_2e38urcc7y().s[92]++;
      return ctx.improvement < 0.1;
    } // Less than 10% improvement over random
    ));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[93]++;
    if (poorPerformingContexts.length > 0) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[18][0]++;
      cov_2e38urcc7y().s[94]++;
      recommendations.push({
        type: "context_specific",
        priority: "medium",
        description: `Poor performance in contexts: ${poorPerformingContexts.map(c => {
          /* istanbul ignore next */
          cov_2e38urcc7y().f[17]++;
          cov_2e38urcc7y().s[95]++;
          return c.context;
        }).join(", ")}`,
        action: "Consider context-specific optimization or feature engineering"
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[18][1]++;
    }
    // Check for high-confidence winners
    const highConfidenceContexts =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[96]++, contextualPerformance.filter(ctx => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[18]++;
      cov_2e38urcc7y().s[97]++;
      return /* istanbul ignore next */(cov_2e38urcc7y().b[19][0]++, ctx.armPerformance[ctx.bestArm].confidence > 0.9) &&
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[19][1]++, ctx.armPerformance[ctx.bestArm].trials > 50);
    }));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[98]++;
    if (highConfidenceContexts.length > 0) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[20][0]++;
      cov_2e38urcc7y().s[99]++;
      recommendations.push({
        type: "exploitation",
        priority: "low",
        description: `High confidence winners found in ${highConfidenceContexts.length} contexts`,
        action: "Consider reducing exploration rate for these contexts"
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[20][1]++;
    }
    // Suggest experiments for promising contexts
    const promisingContexts =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[100]++, contextualPerformance.filter(ctx => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[19]++;
      cov_2e38urcc7y().s[101]++;
      return /* istanbul ignore next */(cov_2e38urcc7y().b[21][0]++, ctx.improvement > 0.2) &&
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[21][1]++, ctx.armPerformance[ctx.bestArm].trials > 30);
    }));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[23][0]++, promisingContexts.length > 0) &&
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[23][1]++, this.experimentManager)) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[22][0]++;
      cov_2e38urcc7y().s[103]++;
      recommendations.push({
        type: "experiment",
        priority: "medium",
        description: `Promising contexts found: ${promisingContexts.map(c => {
          /* istanbul ignore next */
          cov_2e38urcc7y().f[20]++;
          cov_2e38urcc7y().s[104]++;
          return c.context;
        }).join(", ")}`,
        action: "Consider running formal A/B experiments to validate findings"
      });
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[22][1]++;
    }
    cov_2e38urcc7y().s[105]++;
    return recommendations;
  }
  /**
   * Start automatic optimization process
   */
  startAutoOptimization() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[21]++;
    cov_2e38urcc7y().s[106]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[22]++;
      cov_2e38urcc7y().s[107]++;
      this.runOptimizationCycle();
    }, this.config.optimizationInterval * 60 * 1000); // Convert minutes to ms
  }
  /**
   * Run a single optimization cycle
   */
  runOptimizationCycle() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[23]++;
    cov_2e38urcc7y().s[108]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[24]++;
      cov_2e38urcc7y().s[109]++;
      try {
        const recommendations =
        /* istanbul ignore next */
        (cov_2e38urcc7y().s[110]++, this.getOptimizationRecommendations());
        // Log recommendations
        /* istanbul ignore next */
        cov_2e38urcc7y().s[111]++;
        if (recommendations.length > 0) {
          /* istanbul ignore next */
          cov_2e38urcc7y().b[24][0]++;
          cov_2e38urcc7y().s[112]++;
          console.log("Bandit Optimization Recommendations:", recommendations);
        } else
        /* istanbul ignore next */
        {
          cov_2e38urcc7y().b[24][1]++;
        }
        // Auto-apply low-risk optimizations
        const highPriorityRecs =
        /* istanbul ignore next */
        (cov_2e38urcc7y().s[113]++, recommendations.filter(r => {
          /* istanbul ignore next */
          cov_2e38urcc7y().f[25]++;
          cov_2e38urcc7y().s[114]++;
          return r.priority === "high";
        }));
        /* istanbul ignore next */
        cov_2e38urcc7y().s[115]++;
        for (const rec of highPriorityRecs) {
          /* istanbul ignore next */
          cov_2e38urcc7y().s[116]++;
          if (rec.type === "exploration") {
            /* istanbul ignore next */
            cov_2e38urcc7y().b[25][0]++;
            cov_2e38urcc7y().s[117]++;
            // Temporarily increase exploration rate
            this.config.explorationRate = Math.min(0.3, this.config.explorationRate * 1.2);
            /* istanbul ignore next */
            cov_2e38urcc7y().s[118]++;
            console.log(`Auto-optimization: Increased exploration rate to ${this.config.explorationRate}`);
          } else
          /* istanbul ignore next */
          {
            cov_2e38urcc7y().b[25][1]++;
          }
        }
        // Reset exploration rate after some time
        /* istanbul ignore next */
        cov_2e38urcc7y().s[119]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2e38urcc7y().f[26]++;
          cov_2e38urcc7y().s[120]++;
          this.config.explorationRate = Math.max(0.05, this.config.explorationRate * 0.9);
        }, 30 * 60 * 1000); // 30 minutes
      } catch (error) {
        /* istanbul ignore next */
        cov_2e38urcc7y().s[121]++;
        console.error("Error in optimization cycle:", error);
      }
    });
  }
  /**
   * Get unique contexts from bandit history
   */
  getUniqueContexts() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[27]++;
    cov_2e38urcc7y().s[122]++;
    // This would need to be implemented based on how contexts are stored
    // For now, return some common contexts
    return ["general|standard|no-tools", "legal|premium|tools", "culinary|standard|no-tools", "medical|premium|tools"];
  }
  /**
   * Parse context key back to BanditContext
   */
  parseContextKey(contextKey) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[28]++;
    const [domain, budgetTier, tools] =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[123]++, contextKey.split("|"));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[124]++;
    return {
      domain: domain === "general" ?
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[26][0]++, undefined) :
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[26][1]++, domain),
      budgetTier: budgetTier === "standard" ?
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[27][0]++, undefined) :
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[27][1]++, budgetTier),
      requireTools: tools === "tools"
    };
  }
  /**
   * Get current configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[29]++;
    cov_2e38urcc7y().s[125]++;
    return Object.assign({}, this.config);
  }
  /**
   * Update configuration
   */
  updateConfig(updates) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[30]++;
    cov_2e38urcc7y().s[126]++;
    this.config = Object.assign(Object.assign({}, this.config), updates);
  }
  /**
   * Get optimization history
   */
  getOptimizationHistory() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[31]++;
    cov_2e38urcc7y().s[127]++;
    return [...this.optimizationHistory];
  }
  /**
   * Reset bandit and optimization history
   */
  reset() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[32]++;
    cov_2e38urcc7y().s[128]++;
    this.bandit = new bandit_controller_1.ThompsonBandit();
    /* istanbul ignore next */
    cov_2e38urcc7y().s[129]++;
    this.optimizationHistory = [];
  }
  /**
   * Export bandit state for persistence
   */
  exportState() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[33]++;
    cov_2e38urcc7y().s[130]++;
    return {
      banditStats: this.bandit.getStats(),
      config: this.config,
      optimizationHistory: this.optimizationHistory
    };
  }
  /**
   * Get bandit statistics
   */
  getBanditStats() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[34]++;
    cov_2e38urcc7y().s[131]++;
    return this.bandit.getStats();
  }
  /**
   * Health check for the optimizer
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[35]++;
    var _a;
    const globalStats =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[132]++, this.bandit.getStats());
    const totalTrials =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[133]++, Object.values(globalStats).reduce((sum, stat) => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[36]++;
      cov_2e38urcc7y().s[134]++;
      return sum + stat.trials;
    }, 0));
    const recommendations =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[135]++, this.getOptimizationRecommendations());
    let status =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[136]++, "healthy");
    /* istanbul ignore next */
    cov_2e38urcc7y().s[137]++;
    if (totalTrials < 10) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[28][0]++;
      cov_2e38urcc7y().s[138]++;
      status = "warning"; // Not enough data
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[28][1]++;
    }
    const highPriorityIssues =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[139]++, recommendations.filter(r => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[37]++;
      cov_2e38urcc7y().s[140]++;
      return r.priority === "high";
    }));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[141]++;
    if (highPriorityIssues.length > 0) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[29][0]++;
      cov_2e38urcc7y().s[142]++;
      status = "warning";
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[29][1]++;
    }
    cov_2e38urcc7y().s[143]++;
    return {
      status,
      totalTrials,
      activeContexts: this.getUniqueContexts().length,
      autoOptimizationEnabled: this.config.autoOptimizationEnabled,
      lastOptimization:
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[31][0]++, (_a = this.optimizationHistory[this.optimizationHistory.length - 1]) === null) ||
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[31][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[30][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2e38urcc7y().b[30][1]++, _a.timestamp),
      recommendations: recommendations.length
    };
  }
}
/* istanbul ignore next */
cov_2e38urcc7y().s[144]++;
exports.BanditOptimizer = BanditOptimizer;
// Utility functions for bandit optimization
/* istanbul ignore next */
cov_2e38urcc7y().s[145]++;
exports.BanditUtils = {
  /**
   * Calculate statistical significance between two arms
   */
  calculateSignificance(arm1, arm2) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[38]++;
    cov_2e38urcc7y().s[146]++;
    if (
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[33][0]++, arm1.trials === 0) ||
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[33][1]++, arm2.trials === 0)) {
      /* istanbul ignore next */
      cov_2e38urcc7y().b[32][0]++;
      cov_2e38urcc7y().s[147]++;
      return {
        significant: false,
        pValue: 1,
        confidenceInterval: [0, 1]
      };
    } else
    /* istanbul ignore next */
    {
      cov_2e38urcc7y().b[32][1]++;
    }
    const p1 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[148]++, arm1.wins / arm1.trials);
    const p2 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[149]++, arm2.wins / arm2.trials);
    const diff =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[150]++, p1 - p2);
    // Simple z-test approximation
    const se =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[151]++, Math.sqrt(p1 * (1 - p1) / arm1.trials + p2 * (1 - p2) / arm2.trials));
    const z =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[152]++, Math.abs(diff) / se);
    const pValue =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[153]++, 2 * (1 - this.normalCDF(z))); // Two-tailed test
    const margin =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[154]++, 1.96 * se); // 95% confidence interval
    const confidenceInterval =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[155]++, [diff - margin, diff + margin]);
    /* istanbul ignore next */
    cov_2e38urcc7y().s[156]++;
    return {
      significant: pValue < 0.05,
      pValue,
      confidenceInterval
    };
  },
  /**
   * Normal CDF approximation
   */
  normalCDF(x) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[39]++;
    cov_2e38urcc7y().s[157]++;
    return 0.5 * (1 + this.erf(x / Math.sqrt(2)));
  },
  /**
   * Error function approximation
   */
  erf(x) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[40]++;
    // Abramowitz and Stegun approximation
    const a1 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[158]++, 0.254829592);
    const a2 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[159]++, -0.284496736);
    const a3 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[160]++, 1.421413741);
    const a4 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[161]++, -1.453152027);
    const a5 =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[162]++, 1.061405429);
    const p =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[163]++, 0.3275911);
    const sign =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[164]++, x >= 0 ?
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[34][0]++, 1) :
    /* istanbul ignore next */
    (cov_2e38urcc7y().b[34][1]++, -1));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[165]++;
    x = Math.abs(x);
    const t =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[166]++, 1.0 / (1.0 + p * x));
    const y =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[167]++, 1.0 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-x * x));
    /* istanbul ignore next */
    cov_2e38urcc7y().s[168]++;
    return sign * y;
  },
  /**
   * Calculate expected regret for an arm selection strategy
   */
  calculateRegret(trueRewards, selections) {
    /* istanbul ignore next */
    cov_2e38urcc7y().f[41]++;
    const optimalReward =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[169]++, Math.max(...Object.values(trueRewards)));
    let totalRegret =
    /* istanbul ignore next */
    (cov_2e38urcc7y().s[170]++, 0);
    /* istanbul ignore next */
    cov_2e38urcc7y().s[171]++;
    selections.forEach(selection => {
      /* istanbul ignore next */
      cov_2e38urcc7y().f[42]++;
      const regret =
      /* istanbul ignore next */
      (cov_2e38urcc7y().s[172]++, optimalReward - trueRewards[selection.arm]);
      /* istanbul ignore next */
      cov_2e38urcc7y().s[173]++;
      totalRegret += regret;
    });
    /* istanbul ignore next */
    cov_2e38urcc7y().s[174]++;
    return totalRegret / selections.length; // Average regret
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,