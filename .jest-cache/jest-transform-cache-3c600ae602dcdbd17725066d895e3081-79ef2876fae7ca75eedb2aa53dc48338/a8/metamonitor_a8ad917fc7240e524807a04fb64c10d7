c6b273140f45bc80c40d59fcae5366ac
"use strict";

/**
 * Meta Monitor - Kiro Execution Analysis using Direct Bedrock
 *
 * This module implements meta-level monitoring of Kiro execution patterns,
 * failure detection, and feedback generation using direct Bedrock access
 * for time-critical analysis (< 15s latency requirement).
 */
/* istanbul ignore next */
function cov_2cdmk0xatw() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/meta-monitor.ts";
  var hash = "aab80816c10c42d017bd3c1c82e0e0a2c355f959";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/meta-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 29
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 68
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 239
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "14": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "16": {
        start: {
          line: 38,
          column: 30
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "17": {
        start: {
          line: 39,
          column: 34
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "19": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "20": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 64
        }
      },
      "21": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 55
        }
      },
      "22": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "23": {
        start: {
          line: 49,
          column: 37
        },
        end: {
          line: 49,
          column: 101
        }
      },
      "24": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 69
        }
      },
      "25": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "26": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 26
        }
      },
      "27": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 70
        }
      },
      "28": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "29": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 26
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "31": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 40
        }
      },
      "32": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "33": {
        start: {
          line: 71,
          column: 41
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "34": {
        start: {
          line: 72,
          column: 33
        },
        end: {
          line: 72,
          column: 120
        }
      },
      "35": {
        start: {
          line: 72,
          column: 67
        },
        end: {
          line: 72,
          column: 119
        }
      },
      "36": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "37": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 30
        }
      },
      "38": {
        start: {
          line: 77,
          column: 40
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "39": {
        start: {
          line: 92,
          column: 33
        },
        end: {
          line: 92,
          column: 102
        }
      },
      "40": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "41": {
        start: {
          line: 94,
          column: 37
        },
        end: {
          line: 94,
          column: 85
        }
      },
      "42": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "43": {
        start: {
          line: 97,
          column: 24
        },
        end: {
          line: 97,
          column: 78
        }
      },
      "44": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 69
        }
      },
      "45": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 36
        }
      },
      "46": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 26
        }
      },
      "47": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 66
        }
      },
      "48": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "49": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "50": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "51": {
        start: {
          line: 117,
          column: 40
        },
        end: {
          line: 130,
          column: 17
        }
      },
      "52": {
        start: {
          line: 132,
          column: 33
        },
        end: {
          line: 132,
          column: 102
        }
      },
      "53": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 138,
          column: 17
        }
      },
      "54": {
        start: {
          line: 134,
          column: 37
        },
        end: {
          line: 134,
          column: 93
        }
      },
      "55": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 136,
          column: 70
        }
      },
      "56": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 36
        }
      },
      "57": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 26
        }
      },
      "58": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 68
        }
      },
      "59": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 26
        }
      },
      "60": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "61": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 152,
          column: 40
        }
      },
      "62": {
        start: {
          line: 153,
          column: 31
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "63": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "64": {
        start: {
          line: 156,
          column: 41
        },
        end: {
          line: 156,
          column: 67
        }
      },
      "65": {
        start: {
          line: 157,
          column: 36
        },
        end: {
          line: 157,
          column: 79
        }
      },
      "66": {
        start: {
          line: 158,
          column: 39
        },
        end: {
          line: 158,
          column: 85
        }
      },
      "67": {
        start: {
          line: 160,
          column: 33
        },
        end: {
          line: 160,
          column: 67
        }
      },
      "68": {
        start: {
          line: 162,
          column: 36
        },
        end: {
          line: 162,
          column: 38
        }
      },
      "69": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "70": {
        start: {
          line: 164,
          column: 37
        },
        end: {
          line: 164,
          column: 94
        }
      },
      "71": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 50
        }
      },
      "72": {
        start: {
          line: 168,
          column: 40
        },
        end: {
          line: 168,
          column: 115
        }
      },
      "73": {
        start: {
          line: 170,
          column: 36
        },
        end: {
          line: 170,
          column: 100
        }
      },
      "74": {
        start: {
          line: 171,
          column: 31
        },
        end: {
          line: 182,
          column: 17
        }
      },
      "75": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 59
        }
      },
      "76": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 65
        }
      },
      "77": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 30
        }
      },
      "78": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 71
        }
      },
      "79": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 66
        }
      },
      "80": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 204,
          column: 18
        }
      },
      "81": {
        start: {
          line: 212,
          column: 33
        },
        end: {
          line: 212,
          column: 59
        }
      },
      "82": {
        start: {
          line: 213,
          column: 28
        },
        end: {
          line: 213,
          column: 71
        }
      },
      "83": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "84": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 211
        }
      },
      "85": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "86": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 49
        }
      },
      "87": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 46
        }
      },
      "88": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "89": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 48
        }
      },
      "90": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 45
        }
      },
      "91": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "92": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 34
        }
      },
      "93": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 36
        }
      },
      "94": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 38
        }
      },
      "95": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 38
        }
      },
      "96": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 35
        }
      },
      "97": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "98": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 272,
          column: 42
        }
      },
      "99": {
        start: {
          line: 265,
          column: 50
        },
        end: {
          line: 272,
          column: 10
        }
      },
      "100": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "101": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 58
        }
      },
      "102": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 66
        }
      },
      "103": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 44
        }
      },
      "104": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 34
        }
      },
      "105": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 76
        }
      },
      "106": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 291,
          column: 11
        }
      },
      "107": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "108": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 79
        }
      },
      "109": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 22
        }
      },
      "110": {
        start: {
          line: 294,
          column: 27
        },
        end: {
          line: 294,
          column: 67
        }
      },
      "111": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 114
        }
      },
      "112": {
        start: {
          line: 295,
          column: 75
        },
        end: {
          line: 295,
          column: 112
        }
      },
      "113": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 299,
          column: 23
        }
      },
      "114": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 23
        }
      },
      "115": {
        start: {
          line: 300,
          column: 29
        },
        end: {
          line: 300,
          column: 90
        }
      },
      "116": {
        start: {
          line: 300,
          column: 57
        },
        end: {
          line: 300,
          column: 82
        }
      },
      "117": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 48
        }
      },
      "118": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 305,
          column: 21
        }
      },
      "119": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 21
        }
      },
      "120": {
        start: {
          line: 306,
          column: 29
        },
        end: {
          line: 306,
          column: 86
        }
      },
      "121": {
        start: {
          line: 306,
          column: 62
        },
        end: {
          line: 306,
          column: 82
        }
      },
      "122": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 48
        }
      },
      "123": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 310,
          column: 23
        }
      },
      "124": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 40
        }
      },
      "125": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "126": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 96
        }
      },
      "127": {
        start: {
          line: 318,
          column: 33
        },
        end: {
          line: 318,
          column: 82
        }
      },
      "128": {
        start: {
          line: 318,
          column: 56
        },
        end: {
          line: 318,
          column: 81
        }
      },
      "129": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 46
        }
      },
      "130": {
        start: {
          line: 321,
          column: 29
        },
        end: {
          line: 321,
          column: 74
        }
      },
      "131": {
        start: {
          line: 321,
          column: 52
        },
        end: {
          line: 321,
          column: 73
        }
      },
      "132": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 42
        }
      },
      "133": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 46
        }
      },
      "134": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 362,
          column: 3
        }
      },
      "135": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 338,
          column: 2
        }
      },
      "136": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 398,
          column: 3
        }
      },
      "137": {
        start: {
          line: 376,
          column: 22
        },
        end: {
          line: 376,
          column: 59
        }
      },
      "138": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 461,
          column: 11
        }
      },
      "139": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "140": {
        start: {
          line: 403,
          column: 46
        },
        end: {
          line: 433,
          column: 17
        }
      },
      "141": {
        start: {
          line: 434,
          column: 33
        },
        end: {
          line: 434,
          column: 108
        }
      },
      "142": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 447,
          column: 17
        }
      },
      "143": {
        start: {
          line: 436,
          column: 20
        },
        end: {
          line: 446,
          column: 21
        }
      },
      "144": {
        start: {
          line: 437,
          column: 39
        },
        end: {
          line: 437,
          column: 64
        }
      },
      "145": {
        start: {
          line: 438,
          column: 24
        },
        end: {
          line: 442,
          column: 26
        }
      },
      "146": {
        start: {
          line: 445,
          column: 24
        },
        end: {
          line: 445,
          column: 86
        }
      },
      "147": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 74
        }
      },
      "148": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 460,
          column: 14
        }
      },
      "149": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "150": {
        start: {
          line: 465,
          column: 27
        },
        end: {
          line: 465,
          column: 47
        }
      },
      "151": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 477,
          column: 16
        }
      },
      "152": {
        start: {
          line: 466,
          column: 55
        },
        end: {
          line: 477,
          column: 13
        }
      },
      "153": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 79
        }
      },
      "154": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 22
        }
      },
      "155": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "156": {
        start: {
          line: 486,
          column: 27
        },
        end: {
          line: 486,
          column: 47
        }
      },
      "157": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 497,
          column: 16
        }
      },
      "158": {
        start: {
          line: 487,
          column: 55
        },
        end: {
          line: 497,
          column: 13
        }
      },
      "159": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 500,
          column: 71
        }
      },
      "160": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 22
        }
      },
      "161": {
        start: {
          line: 505,
          column: 27
        },
        end: {
          line: 505,
          column: 67
        }
      },
      "162": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "163": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 510,
          column: 13
        }
      },
      "164": {
        start: {
          line: 509,
          column: 16
        },
        end: {
          line: 509,
          column: 49
        }
      },
      "165": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 517,
          column: 9
        }
      },
      "166": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 516,
          column: 13
        }
      },
      "167": {
        start: {
          line: 515,
          column: 16
        },
        end: {
          line: 515,
          column: 46
        }
      },
      "168": {
        start: {
          line: 520,
          column: 25
        },
        end: {
          line: 520,
          column: 64
        }
      },
      "169": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 522,
          column: 24
        }
      },
      "170": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 24
        }
      },
      "171": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 135
        }
      },
      "172": {
        start: {
          line: 523,
          column: 53
        },
        end: {
          line: 523,
          column: 110
        }
      },
      "173": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 526,
          column: 37
        }
      },
      "174": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 532,
          column: 9
        }
      },
      "175": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 528,
          column: 46
        }
      },
      "176": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 531,
          column: 42
        }
      },
      "177": {
        start: {
          line: 534,
          column: 26
        },
        end: {
          line: 535,
          column: 21
        }
      },
      "178": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 82
        }
      },
      "179": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 83
        }
      },
      "180": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 544,
          column: 32
        }
      },
      "181": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 549,
          column: 32
        }
      },
      "182": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 554,
          column: 32
        }
      },
      "183": {
        start: {
          line: 557,
          column: 0
        },
        end: {
          line: 557,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 64
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 55
          },
          end: {
            line: 37,
            column: 56
          }
        },
        loc: {
          start: {
            line: 37,
            column: 68
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 66
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 55
          },
          end: {
            line: 67,
            column: 56
          }
        },
        loc: {
          start: {
            line: 67,
            column: 68
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 72,
            column: 57
          },
          end: {
            line: 72,
            column: 58
          }
        },
        loc: {
          start: {
            line: 72,
            column: 67
          },
          end: {
            line: 72,
            column: 119
          }
        },
        line: 72
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 38
          }
        },
        loc: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 98,
            column: 21
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 55
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 114
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 115,
            column: 55
          },
          end: {
            line: 115,
            column: 56
          }
        },
        loc: {
          start: {
            line: 115,
            column: 68
          },
          end: {
            line: 145,
            column: 9
          }
        },
        line: 115
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 35
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 150
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 151,
            column: 55
          },
          end: {
            line: 151,
            column: 56
          }
        },
        loc: {
          start: {
            line: 151,
            column: 68
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 151
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 211
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 17
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 226
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 232
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 243,
            column: 36
          },
          end: {
            line: 243,
            column: 37
          }
        },
        loc: {
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 245,
            column: 9
          }
        },
        line: 243
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 24
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 253
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 22
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 263
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 265,
            column: 44
          },
          end: {
            line: 265,
            column: 45
          }
        },
        loc: {
          start: {
            line: 265,
            column: 50
          },
          end: {
            line: 272,
            column: 10
          }
        },
        line: 265
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 265,
            column: 90
          },
          end: {
            line: 265,
            column: 91
          }
        },
        loc: {
          start: {
            line: 265,
            column: 103
          },
          end: {
            line: 272,
            column: 9
          }
        },
        line: 265
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 274,
            column: 43
          },
          end: {
            line: 274,
            column: 44
          }
        },
        loc: {
          start: {
            line: 274,
            column: 49
          },
          end: {
            line: 276,
            column: 9
          }
        },
        line: 274
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 38
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 278
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 58
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 281
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 282,
            column: 55
          },
          end: {
            line: 282,
            column: 56
          }
        },
        loc: {
          start: {
            line: 282,
            column: 68
          },
          end: {
            line: 291,
            column: 9
          }
        },
        line: 282
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 26
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 293
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 295,
            column: 65
          },
          end: {
            line: 295,
            column: 66
          }
        },
        loc: {
          start: {
            line: 295,
            column: 75
          },
          end: {
            line: 295,
            column: 112
          }
        },
        line: 295
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 297
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 300,
            column: 47
          },
          end: {
            line: 300,
            column: 48
          }
        },
        loc: {
          start: {
            line: 300,
            column: 57
          },
          end: {
            line: 300,
            column: 82
          }
        },
        line: 300
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 40
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 303
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 306,
            column: 47
          },
          end: {
            line: 306,
            column: 48
          }
        },
        loc: {
          start: {
            line: 306,
            column: 62
          },
          end: {
            line: 306,
            column: 82
          }
        },
        line: 306
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 64
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 309
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 318,
            column: 49
          },
          end: {
            line: 318,
            column: 50
          }
        },
        loc: {
          start: {
            line: 318,
            column: 56
          },
          end: {
            line: 318,
            column: 81
          }
        },
        line: 318
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 321,
            column: 45
          },
          end: {
            line: 321,
            column: 46
          }
        },
        loc: {
          start: {
            line: 321,
            column: 52
          },
          end: {
            line: 321,
            column: 73
          }
        },
        line: 321
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 41
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 325
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 329,
            column: 17
          },
          end: {
            line: 329,
            column: 18
          }
        },
        loc: {
          start: {
            line: 329,
            column: 27
          },
          end: {
            line: 339,
            column: 9
          }
        },
        line: 329
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        loc: {
          start: {
            line: 364,
            column: 59
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 364
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 376,
            column: 15
          },
          end: {
            line: 376,
            column: 16
          }
        },
        loc: {
          start: {
            line: 376,
            column: 22
          },
          end: {
            line: 376,
            column: 59
          }
        },
        line: 376
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 60
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 400
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 401,
            column: 55
          },
          end: {
            line: 401,
            column: 56
          }
        },
        loc: {
          start: {
            line: 401,
            column: 68
          },
          end: {
            line: 461,
            column: 9
          }
        },
        line: 401
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 5
          }
        },
        loc: {
          start: {
            line: 463,
            column: 43
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 463
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 466,
            column: 47
          },
          end: {
            line: 466,
            column: 48
          }
        },
        loc: {
          start: {
            line: 466,
            column: 55
          },
          end: {
            line: 477,
            column: 13
          }
        },
        line: 466
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 484,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        },
        loc: {
          start: {
            line: 484,
            column: 51
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 484
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 487,
            column: 47
          },
          end: {
            line: 487,
            column: 48
          }
        },
        loc: {
          start: {
            line: 487,
            column: 55
          },
          end: {
            line: 497,
            column: 13
          }
        },
        line: 487
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 21
          },
          end: {
            line: 518,
            column: 5
          }
        },
        line: 504
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 5
          }
        },
        loc: {
          start: {
            line: 519,
            column: 26
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 519
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 523,
            column: 31
          },
          end: {
            line: 523,
            column: 32
          }
        },
        loc: {
          start: {
            line: 523,
            column: 53
          },
          end: {
            line: 523,
            column: 110
          }
        },
        line: 523
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 38
          },
          end: {
            line: 537,
            column: 5
          }
        },
        line: 525
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 538,
            column: 4
          },
          end: {
            line: 538,
            column: 5
          }
        },
        loc: {
          start: {
            line: 538,
            column: 28
          },
          end: {
            line: 540,
            column: 5
          }
        },
        line: 538
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 541,
            column: 4
          },
          end: {
            line: 541,
            column: 5
          }
        },
        loc: {
          start: {
            line: 541,
            column: 25
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 541
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        loc: {
          start: {
            line: 546,
            column: 24
          },
          end: {
            line: 550,
            column: 5
          }
        },
        line: 546
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 551,
            column: 4
          },
          end: {
            line: 551,
            column: 5
          }
        },
        loc: {
          start: {
            line: 551,
            column: 25
          },
          end: {
            line: 555,
            column: 5
          }
        },
        line: 551
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 67
          },
          end: {
            line: 72,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 67
          },
          end: {
            line: 72,
            column: 92
          }
        }, {
          start: {
            line: 72,
            column: 96
          },
          end: {
            line: 72,
            column: 119
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 36
          }
        }, {
          start: {
            line: 93,
            column: 40
          },
          end: {
            line: 93,
            column: 53
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 20
          },
          end: {
            line: 133,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 20
          },
          end: {
            line: 133,
            column: 36
          }
        }, {
          start: {
            line: 133,
            column: 40
          },
          end: {
            line: 133,
            column: 53
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 215,
            column: 23
          },
          end: {
            line: 215,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 23
          },
          end: {
            line: 215,
            column: 40
          }
        }, {
          start: {
            line: 215,
            column: 44
          },
          end: {
            line: 215,
            column: 79
          }
        }],
        line: 215
      },
      "10": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "11": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "12": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 289,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 289,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "13": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 286,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 284,
            column: 50
          }
        }, {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 48
          }
        }, {
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 286,
            column: 74
          }
        }],
        line: 284
      },
      "14": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 299,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 299,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "15": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 305,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 305,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "16": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 316,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 316,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "17": {
        loc: {
          start: {
            line: 334,
            column: 11
          },
          end: {
            line: 334,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 54
          },
          end: {
            line: 334,
            column: 60
          }
        }, {
          start: {
            line: 334,
            column: 63
          },
          end: {
            line: 334,
            column: 70
          }
        }],
        line: 334
      },
      "18": {
        loc: {
          start: {
            line: 334,
            column: 11
          },
          end: {
            line: 334,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 11
          },
          end: {
            line: 334,
            column: 34
          }
        }, {
          start: {
            line: 334,
            column: 38
          },
          end: {
            line: 334,
            column: 51
          }
        }],
        line: 334
      },
      "19": {
        loc: {
          start: {
            line: 334,
            column: 76
          },
          end: {
            line: 334,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 119
          },
          end: {
            line: 334,
            column: 125
          }
        }, {
          start: {
            line: 334,
            column: 128
          },
          end: {
            line: 334,
            column: 138
          }
        }],
        line: 334
      },
      "20": {
        loc: {
          start: {
            line: 334,
            column: 76
          },
          end: {
            line: 334,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 76
          },
          end: {
            line: 334,
            column: 99
          }
        }, {
          start: {
            line: 334,
            column: 103
          },
          end: {
            line: 334,
            column: 116
          }
        }],
        line: 334
      },
      "21": {
        loc: {
          start: {
            line: 372,
            column: 11
          },
          end: {
            line: 372,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 86
          }
        }, {
          start: {
            line: 372,
            column: 91
          },
          end: {
            line: 372,
            column: 97
          }
        }],
        line: 372
      },
      "22": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 67
          },
          end: {
            line: 372,
            column: 73
          }
        }, {
          start: {
            line: 372,
            column: 76
          },
          end: {
            line: 372,
            column: 86
          }
        }],
        line: 372
      },
      "23": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 47
          }
        }, {
          start: {
            line: 372,
            column: 51
          },
          end: {
            line: 372,
            column: 64
          }
        }],
        line: 372
      },
      "24": {
        loc: {
          start: {
            line: 435,
            column: 16
          },
          end: {
            line: 447,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 16
          },
          end: {
            line: 447,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "25": {
        loc: {
          start: {
            line: 435,
            column: 20
          },
          end: {
            line: 435,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 20
          },
          end: {
            line: 435,
            column: 36
          }
        }, {
          start: {
            line: 435,
            column: 40
          },
          end: {
            line: 435,
            column: 53
          }
        }],
        line: 435
      },
      "26": {
        loc: {
          start: {
            line: 439,
            column: 39
          },
          end: {
            line: 439,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 39
          },
          end: {
            line: 439,
            column: 55
          }
        }, {
          start: {
            line: 439,
            column: 59
          },
          end: {
            line: 439,
            column: 61
          }
        }],
        line: 439
      },
      "27": {
        loc: {
          start: {
            line: 440,
            column: 39
          },
          end: {
            line: 440,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 39
          },
          end: {
            line: 440,
            column: 55
          }
        }, {
          start: {
            line: 440,
            column: 59
          },
          end: {
            line: 440,
            column: 61
          }
        }],
        line: 440
      },
      "28": {
        loc: {
          start: {
            line: 441,
            column: 38
          },
          end: {
            line: 441,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 38
          },
          end: {
            line: 441,
            column: 53
          }
        }, {
          start: {
            line: 441,
            column: 57
          },
          end: {
            line: 441,
            column: 59
          }
        }],
        line: 441
      },
      "29": {
        loc: {
          start: {
            line: 466,
            column: 20
          },
          end: {
            line: 466,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 20
          },
          end: {
            line: 466,
            column: 35
          }
        }, {
          start: {
            line: 466,
            column: 39
          },
          end: {
            line: 466,
            column: 41
          }
        }],
        line: 466
      },
      "30": {
        loc: {
          start: {
            line: 473,
            column: 36
          },
          end: {
            line: 473,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 473,
            column: 36
          },
          end: {
            line: 473,
            column: 56
          }
        }, {
          start: {
            line: 473,
            column: 60
          },
          end: {
            line: 473,
            column: 62
          }
        }],
        line: 473
      },
      "31": {
        loc: {
          start: {
            line: 474,
            column: 31
          },
          end: {
            line: 474,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 31
          },
          end: {
            line: 474,
            column: 46
          }
        }, {
          start: {
            line: 474,
            column: 50
          },
          end: {
            line: 474,
            column: 52
          }
        }],
        line: 474
      },
      "32": {
        loc: {
          start: {
            line: 475,
            column: 34
          },
          end: {
            line: 475,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 34
          },
          end: {
            line: 475,
            column: 52
          }
        }, {
          start: {
            line: 475,
            column: 56
          },
          end: {
            line: 475,
            column: 58
          }
        }],
        line: 475
      },
      "33": {
        loc: {
          start: {
            line: 476,
            column: 28
          },
          end: {
            line: 476,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 476,
            column: 28
          },
          end: {
            line: 476,
            column: 40
          }
        }, {
          start: {
            line: 476,
            column: 44
          },
          end: {
            line: 476,
            column: 47
          }
        }],
        line: 476
      },
      "34": {
        loc: {
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 487,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 487,
            column: 35
          }
        }, {
          start: {
            line: 487,
            column: 39
          },
          end: {
            line: 487,
            column: 41
          }
        }],
        line: 487
      },
      "35": {
        loc: {
          start: {
            line: 494,
            column: 28
          },
          end: {
            line: 494,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 494,
            column: 28
          },
          end: {
            line: 494,
            column: 40
          }
        }, {
          start: {
            line: 494,
            column: 44
          },
          end: {
            line: 494,
            column: 49
          }
        }],
        line: 494
      },
      "36": {
        loc: {
          start: {
            line: 508,
            column: 12
          },
          end: {
            line: 510,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 12
          },
          end: {
            line: 510,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "37": {
        loc: {
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 516,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 12
          },
          end: {
            line: 516,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "38": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 522,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 522,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "39": {
        loc: {
          start: {
            line: 523,
            column: 53
          },
          end: {
            line: 523,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 523,
            column: 83
          },
          end: {
            line: 523,
            column: 101
          }
        }, {
          start: {
            line: 523,
            column: 104
          },
          end: {
            line: 523,
            column: 110
          }
        }],
        line: 523
      },
      "40": {
        loc: {
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        }, {
          start: {
            line: 530,
            column: 13
          },
          end: {
            line: 532,
            column: 9
          }
        }],
        line: 527
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/meta-monitor.ts",
      mappings: ";AAAA;;;;;;GAMG;;;;AAEH,yDAAoD;AAuGpD;;GAEG;AACH,MAAa,WAAW;IA0BtB,YACE,mBAAwC,EACxC,iBAAoC,EACpC,MAAmC;QAvBrC,4BAA4B;QACpB,qBAAgB,GAAmC,IAAI,GAAG,EAAE,CAAC;QAC7D,qBAAgB,GAAgC,IAAI,GAAG,EAAE,CAAC;QAC1D,kBAAa,GAAyC,IAAI,GAAG,EAAE,CAAC;QAKhE,mBAAc,GAAwB,IAAI,GAAG,EAAE,CAAC;QAiBtD,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,iCAAc,EAAE,CAAC;QAEzC,IAAI,CAAC,MAAM,mBACT,gBAAgB,EAAE,MAAM,EACxB,gBAAgB,EAAE,CAAC,EACnB,oBAAoB,EAAE,IAAI,EAC1B,eAAe,EAAE,QAAQ,EACzB,sBAAsB,EAAE,IAAI,EAC5B,wBAAwB,EAAE,IAAI,EAC9B,kBAAkB,EAAE,KAAK,IACtB,MAAM,CACV,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAExC,8BAA8B;QAC9B,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC;YACvD,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED;;OAEG;IACG,oBAAoB,CACxB,aAAgC;;YAEhC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAEnD,IAAI,CAAC;gBACH,mCAAmC;gBACnC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC;oBACxD,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBAC9C,CAAC;gBAED,uBAAuB;gBACvB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;gBAEvC,wCAAwC;gBACxC,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAC;oBACvC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CACjD,aAAa,EACb,aAAa,CACd,CAAC;oBAEF,iBAAiB;oBACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;oBAEjD,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBAED,OAAO,EAAE,CAAC;YACZ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;gBAClD,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACG,qBAAqB;;YACzB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAE7B,IAAI,CAAC;gBACH,4BAA4B;gBAC5B,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBACpD,MAAM,QAAQ,GAAG,gBAAgB,CAAC,MAAM,CACtC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,CAC/D,CAAC;gBAEF,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;oBACnD,OAAO,EAAE,CAAC;gBACZ,CAAC;gBAED,0CAA0C;gBAC1C,MAAM,eAAe,GAA4B;oBAC/C,SAAS,EAAE,cAAc;oBACzB,QAAQ,EAAE,MAAM;oBAChB,MAAM,EAAE,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC;oBACjD,OAAO,EAAE;wBACP,aAAa,EAAE,IAAI,CAAC,qBAAqB,EAAE;wBAC3C,QAAQ,EAAE;4BACR,YAAY,EAAE,QAAQ,CAAC,MAAM;4BAC7B,YAAY,EAAE,mBAAmB;yBAClC;qBACF;oBACD,SAAS,EAAE,IAAI;oBACf,WAAW,EAAE,GAAG;iBACjB,CAAC;gBAEF,2DAA2D;gBAC3D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CACnE,eAAe,CAChB,CAAC;gBAEF,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAElE,0BAA0B;oBAC1B,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;wBAC3B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;oBACxD,CAAC,CAAC,CAAC;oBAEH,iBAAiB;oBACjB,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,QAAQ,CAAC,MAAM,CAAC;oBAEjD,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBAED,OAAO,EAAE,CAAC;YACZ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;gBAClD,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACG,yBAAyB,CAC7B,aAAgC,EAChC,QAA0B;;YAE1B,IAAI,CAAC;gBACH,MAAM,eAAe,GAA4B;oBAC/C,SAAS,EAAE,cAAc;oBACzB,QAAQ,EAAE,MAAM;oBAChB,MAAM,EAAE,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,QAAQ,CAAC;oBACnE,OAAO,EAAE;wBACP,aAAa,EAAE,aAAa,CAAC,aAAa;wBAC1C,QAAQ,EAAE;4BACR,WAAW,EAAE,aAAa,CAAC,WAAW;4BACtC,YAAY,EAAE,qBAAqB;yBACpC;qBACF;oBACD,SAAS,EAAE,IAAI;oBACf,WAAW,EAAE,GAAG;iBACjB,CAAC;gBAEF,mCAAmC;gBACnC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CACnE,eAAe,CAChB,CAAC;gBAEF,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CACzC,QAAQ,CAAC,IAAI,EACb,aAAa,CACd,CAAC;oBAEF,iBAAiB;oBACjB,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,QAAQ,CAAC,MAAM,CAAC;oBAElD,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBAED,OAAO,EAAE,CAAC;YACZ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;gBACpD,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACG,4BAA4B;;YAChC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE7C,IAAI,CAAC;gBACH,2BAA2B;gBAC3B,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBACpD,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;gBAChE,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;gBAEtE,kBAAkB;gBAClB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAEpD,kCAAkC;gBAClC,MAAM,WAAW,GAAwB,EAAE,CAAC;gBAC5C,KAAK,MAAM,SAAS,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;oBACpD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,yBAAyB,CACnD,SAAS,EACT,QAAQ,CACT,CAAC;oBACF,WAAW,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;gBAChC,CAAC;gBAED,gDAAgD;gBAChD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,uBAAuB,CACxD,gBAAgB,EAChB,QAAQ,EACR,WAAW,CACZ,CAAC;gBAEF,yBAAyB;gBACzB,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAC3C,WAAW,EACX,cAAc,EACd,QAAQ,CACT,CAAC;gBAEF,MAAM,MAAM,GAA4B;oBACtC,UAAU;oBACV,SAAS,EAAE,IAAI,IAAI,EAAE;oBACrB,cAAc,EAAE,gBAAgB,CAAC,MAAM;oBACvC,WAAW;oBACX,cAAc;oBACd,gBAAgB,EAAE,QAAQ;oBAC1B,iBAAiB,EAAE,WAAW;oBAC9B,eAAe;oBACf,WAAW;oBACX,iBAAiB,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;iBAC1C,CAAC;gBAEF,mBAAmB;gBACnB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;gBAE3C,iBAAiB;gBACjB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;gBAEjD,OAAO,MAAM,CAAC;YAChB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;gBACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;gBAElD,iCAAiC;gBACjC,OAAO;oBACL,UAAU;oBACV,SAAS,EAAE,IAAI,IAAI,EAAE;oBACrB,cAAc,EAAE,CAAC;oBACjB,WAAW,EAAE,CAAC;oBACd,cAAc,EAAE,CAAC;oBACjB,gBAAgB,EAAE,EAAE;oBACpB,iBAAiB,EAAE,EAAE;oBACrB,eAAe,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;oBAC/D,WAAW,EAAE,CAAC;oBACd,iBAAiB,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS;iBAC1C,CAAC;YACJ,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACH,eAAe;QACb,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpD,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QAEhE,OAAO;YACL,SAAS,EAAE,WAAW,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC;YACnE,cAAc,EAAE,gBAAgB,CAAC,MAAM;YACvC,WAAW;YACX,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI;YAC5C,YAAY,EAAE,IAAI,CAAC,mBAAmB,EAAE;YACxC,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,UAAU;QACR,uCACK,IAAI,CAAC,OAAO,KACf,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAChD,qBAAqB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,EACjD,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,IAC1C;IACJ,CAAC;IAED;;OAEG;IACH,OAAO;QACL,kBAAkB;QAClB,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACpC,CAAC;QACD,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACnC,CAAC;QAED,iBAAiB;QACjB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACtC,YAAY,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAE5B,aAAa;QACb,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED,iCAAiC;IAEzB,iBAAiB;QACvB,OAAO;YACL,aAAa,EAAE,CAAC;YAChB,gBAAgB,EAAE,CAAC;YACnB,iBAAiB,EAAE,CAAC;YACpB,mBAAmB,EAAE,CAAC;YACtB,kBAAkB,EAAE,CAAC;YACrB,cAAc,EAAE,CAAC;SAClB,CAAC;IACJ,CAAC;IAEO,eAAe;QACrB,0BAA0B;QAC1B,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC,GAAS,EAAE;YAC7C,IAAI,CAAC;gBACH,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;YAC5C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,CAAA,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAEjC,yBAAyB;QACzB,IAAI,CAAC,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE;YACtC,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,4CAA4C;IACnF,CAAC;IAEO,kBAAkB,CAAC,aAAgC;QACzD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACtE,CAAC;IAEa,uBAAuB,CACnC,aAAgC,EAChC,aAAqB;;YAErB,8CAA8C;YAC9C,IACE,aAAa,CAAC,MAAM,KAAK,SAAS;gBAClC,aAAa,CAAC,MAAM,KAAK,OAAO;gBAChC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAC1D,CAAC;gBACD,8BAA8B;gBAC9B,OAAO,MAAM,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YACjE,CAAC;YAED,OAAO,EAAE,CAAC;QACZ,CAAC;KAAA;IAEO,mBAAmB;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAC5D,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CACtD,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,UAAU,CAChD,CAAC;IACJ,CAAC;IAEO,oBAAoB,CAAC,UAA+B;QAC1D,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,GAAG,CAAC;QAExC,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CACpC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CACpC,CAAC,MAAM,CAAC;QACT,OAAO,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC;IAC1C,CAAC;IAEO,uBAAuB,CAAC,UAA+B;QAC7D,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC;QAEtC,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,CACpC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,EACnC,CAAC,CACF,CAAC;QACF,OAAO,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC;IAC1C,CAAC;IAEO,oBAAoB,CAC1B,WAAmB,EACnB,cAAsB,EACtB,QAA0B;QAE1B,IAAI,KAAK,GAAG,GAAG,CAAC;QAEhB,8BAA8B;QAC9B,KAAK,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAEhC,0BAA0B;QAC1B,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;YACtD,KAAK,IAAI,IAAI,CAAC,GAAG,CACf,EAAE,EACF,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,CAAC,CAAC,GAAG,EAAE,CAC7D,CAAC;QACJ,CAAC;QAED,+BAA+B;QAC/B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC;QAC3E,KAAK,IAAI,gBAAgB,CAAC,MAAM,GAAG,EAAE,CAAC;QAEtC,oCAAoC;QACpC,MAAM,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC;QACnE,KAAK,IAAI,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;QAElC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IAEO,0BAA0B,CAAC,QAA6B;QAC9D,OAAO;;EAET,QAAQ;aACP,GAAG,CACF,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;;YAAC,OAAA;UACJ,CAAC,GAAG,CAAC;eACA,CAAC,CAAC,SAAS;WACf,MAAA,CAAC,CAAC,KAAK,0CAAE,IAAI,MAAM,MAAA,CAAC,CAAC,KAAK,0CAAE,OAAO;aACjC,CAAC,CAAC,SAAS;aACX,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;eACvB,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE;CACvC,CAAA;SAAA,CACE;aACA,IAAI,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;EAsBX,CAAC;IACD,CAAC;IAEO,6BAA6B,CACnC,aAAgC,EAChC,QAA0B;;QAE1B,OAAO;;;eAGI,aAAa,CAAC,SAAS;YAC1B,aAAa,CAAC,MAAM;aACnB,aAAa,CAAC,SAAS;WACzB,CAAA,MAAA,aAAa,CAAC,KAAK,0CAAE,OAAO,KAAI,MAAM;aACpC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC;;;EAGhD,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,QAAQ,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;EAsBrE,CAAC;IACD,CAAC;IAEa,uBAAuB,CACnC,UAA+B,EAC/B,QAA0B,EAC1B,QAA6B;;YAE7B,IAAI,CAAC;gBACH,MAAM,qBAAqB,GAA4B;oBACrD,SAAS,EAAE,cAAc;oBACzB,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE;;;sBAGM,UAAU,CAAC,MAAM;kBACrB,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;qBAClC,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC;;qBAExC,QAAQ,CAAC,MAAM;sBACd,QAAQ,CAAC,MAAM;;;;;;;;;;;;EAYnC;oBACM,OAAO,EAAE;wBACP,aAAa,EAAE,IAAI,CAAC,qBAAqB,EAAE;wBAC3C,QAAQ,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE;qBAC9C;oBACD,SAAS,EAAE,IAAI;oBACf,WAAW,EAAE,GAAG;iBACjB,CAAC;gBAEF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CACnE,qBAAqB,CACtB,CAAC;gBAEF,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACtC,IAAI,CAAC;wBACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACzC,OAAO;4BACL,SAAS,EAAE,MAAM,CAAC,SAAS,IAAI,EAAE;4BACjC,SAAS,EAAE,MAAM,CAAC,SAAS,IAAI,EAAE;4BACjC,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAAI,EAAE;yBAChC,CAAC;oBACJ,CAAC;oBAAC,OAAO,UAAU,EAAE,CAAC;wBACpB,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,UAAU,CAAC,CAAC;oBAChE,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;YAC5D,CAAC;YAED,0CAA0C;YAC1C,OAAO;gBACL,SAAS,EAAE,CAAC,uBAAuB,EAAE,kBAAkB,CAAC;gBACxD,SAAS,EAAE,CAAC,kCAAkC,EAAE,wBAAwB,CAAC;gBACzE,QAAQ,EAAE;oBACR,iCAAiC;oBACjC,6BAA6B;iBAC9B;aACF,CAAC;QACJ,CAAC;KAAA;IAEO,4BAA4B,CAAC,QAAgB;QACnD,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC;gBAC9C,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAE;gBACnC,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,SAAS,EAAE,CAAC,EAAE,yCAAyC;gBACvD,eAAe,EAAE,IAAI,IAAI,EAAE;gBAC3B,cAAc,EAAE,IAAI,IAAI,EAAE;gBAC1B,kBAAkB,EAAE,CAAC,CAAC,kBAAkB,IAAI,EAAE;gBAC9C,aAAa,EAAE,CAAC,CAAC,aAAa,IAAI,EAAE;gBACpC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB,IAAI,EAAE;gBAC1C,UAAU,EAAE,CAAC,CAAC,UAAU,IAAI,GAAG;aAChC,CAAC,CAAC,CAAC;QACN,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,KAAK,CAAC,CAAC;YACnE,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAEO,qBAAqB,CAC3B,QAAgB,EAChB,aAAgC;QAEhC,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,CAAC,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC;gBAC9C,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE;gBACrC,WAAW,EAAE,aAAa,CAAC,WAAW;gBACtC,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,UAAU,EAAE,CAAC,CAAC,UAAU,IAAI,KAAK;gBACjC,YAAY,EAAE,CAAC,CAAC,YAAY;gBAC5B,aAAa,EAAE,aAAa,CAAC,aAAa;aAC3C,CAAC,CAAC,CAAC;QACN,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YAC3D,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAEO,cAAc;QACpB,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAE5D,0BAA0B;QAC1B,KAAK,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC;YAC9D,IAAI,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,UAAU,EAAE,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACnC,CAAC;QACH,CAAC;QAED,uBAAuB;QACvB,KAAK,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC;YAC1D,IAAI,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,UAAU,EAAE,CAAC;gBAC9C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAChC,CAAC;QACH,CAAC;IACH,CAAC;IAEO,mBAAmB;QACzB,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;QACzD,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAC;QAEvC,OAAO,QAAQ,CAAC,MAAM,CACpB,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,CACnB,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,EAC3D,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CACtB,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,OAAgB,EAAE,SAAiB;QACvD,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAE7B,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;QACpC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;QAChC,CAAC;QAED,+BAA+B;QAC/B,MAAM,SAAS,GACb,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;YACnE,SAAS,CAAC;QACZ,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;IAC5E,CAAC;IAEO,qBAAqB;QAC3B,OAAO,QAAQ,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;IAC7E,CAAC;IAEO,kBAAkB;QACxB,OAAO,YAAY,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;aAC3C,QAAQ,CAAC,EAAE,CAAC;aACZ,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;IACxB,CAAC;IAEO,iBAAiB;QACvB,OAAO,WAAW,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;aAC1C,QAAQ,CAAC,EAAE,CAAC;aACZ,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;IACxB,CAAC;IAEO,kBAAkB;QACxB,OAAO,YAAY,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;aAC3C,QAAQ,CAAC,EAAE,CAAC;aACZ,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;IACxB,CAAC;CACF;AAxrBD,kCAwrBC",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/meta-monitor.ts"],
      sourcesContent: ["/**\n * Meta Monitor - Kiro Execution Analysis using Direct Bedrock\n *\n * This module implements meta-level monitoring of Kiro execution patterns,\n * failure detection, and feedback generation using direct Bedrock access\n * for time-critical analysis (< 15s latency requirement).\n */\n\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport {\n  DirectBedrockClient,\n  SupportOperationRequest,\n} from \"./direct-bedrock-client\";\nimport { IntelligentRouter } from \"./intelligent-router\";\n\n// Kiro Execution Data Types\nexport interface KiroExecutionData {\n  executionId: string;\n  timestamp: Date;\n  operation: string;\n  status: \"success\" | \"failure\" | \"timeout\" | \"error\";\n  latencyMs: number;\n  context: {\n    userId?: string;\n    taskType?: string;\n    complexity?: \"simple\" | \"medium\" | \"complex\";\n    metadata?: Record<string, any>;\n  };\n  error?: {\n    type: string;\n    message: string;\n    stack?: string;\n    code?: string;\n  };\n  performance: {\n    memoryUsage?: number;\n    cpuUsage?: number;\n    networkLatency?: number;\n  };\n  correlationId: string;\n}\n\n// Failure Pattern Detection\nexport interface FailurePattern {\n  patternId: string;\n  type:\n    | \"recurring_error\"\n    | \"performance_degradation\"\n    | \"timeout_cluster\"\n    | \"resource_exhaustion\";\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  frequency: number;\n  firstOccurrence: Date;\n  lastOccurrence: Date;\n  affectedOperations: string[];\n  commonFactors: Record<string, any>;\n  suggestedActions: string[];\n  confidence: number; // 0-1 confidence score\n}\n\n// Execution Feedback\nexport interface ExecutionFeedback {\n  feedbackId: string;\n  executionId: string;\n  timestamp: Date;\n  type:\n    | \"optimization\"\n    | \"warning\"\n    | \"error_prevention\"\n    | \"performance_improvement\";\n  priority: \"low\" | \"medium\" | \"high\" | \"urgent\";\n  message: string;\n  actionable: boolean;\n  suggestedFix?: {\n    description: string;\n    code?: string;\n    configuration?: Record<string, any>;\n    estimatedImpact: string;\n  };\n  correlationId: string;\n}\n\n// Meta Monitor Configuration\nexport interface MetaMonitorConfig {\n  analysisInterval: number; // How often to analyze execution patterns\n  failureThreshold: number; // Number of failures before pattern detection\n  performanceThreshold: number; // Latency threshold for performance issues\n  retentionPeriod: number; // How long to keep execution data\n  enableRealTimeAnalysis: boolean;\n  enablePredictiveAnalysis: boolean;\n  maxAnalysisLatency: number; // 15s max for direct Bedrock analysis\n}\n\n// Analysis Results\nexport interface ExecutionAnalysisResult {\n  analysisId: string;\n  timestamp: Date;\n  executionCount: number;\n  successRate: number;\n  averageLatency: number;\n  detectedPatterns: FailurePattern[];\n  generatedFeedback: ExecutionFeedback[];\n  recommendations: {\n    immediate: string[];\n    shortTerm: string[];\n    longTerm: string[];\n  };\n  healthScore: number; // 0-100 overall health score\n  analysisLatencyMs: number;\n}\n\n/**\n * Meta Monitor for Kiro Execution Analysis\n */\nexport class MetaMonitor {\n  private config: MetaMonitorConfig;\n  private featureFlags: AiFeatureFlags;\n  private directBedrockClient: DirectBedrockClient;\n  private intelligentRouter: IntelligentRouter;\n\n  // Data storage and analysis\n  private executionHistory: Map<string, KiroExecutionData> = new Map();\n  private detectedPatterns: Map<string, FailurePattern> = new Map();\n  private analysisCache: Map<string, ExecutionAnalysisResult> = new Map();\n\n  // Monitoring and intervals\n  private analysisInterval?: NodeJS.Timeout;\n  private cleanupInterval?: NodeJS.Timeout;\n  private activeTimeouts: Set<NodeJS.Timeout> = new Set();\n\n  // Metrics\n  private metrics: {\n    totalAnalyses: number;\n    patternsDetected: number;\n    feedbackGenerated: number;\n    averageAnalysisTime: number;\n    successfulAnalyses: number;\n    failedAnalyses: number;\n  };\n\n  constructor(\n    directBedrockClient: DirectBedrockClient,\n    intelligentRouter: IntelligentRouter,\n    config?: Partial<MetaMonitorConfig>\n  ) {\n    this.directBedrockClient = directBedrockClient;\n    this.intelligentRouter = intelligentRouter;\n    this.featureFlags = new AiFeatureFlags();\n\n    this.config = {\n      analysisInterval: 300000, // 5 minutes\n      failureThreshold: 3, // 3 failures to detect pattern\n      performanceThreshold: 5000, // 5s latency threshold\n      retentionPeriod: 86400000, // 24 hours\n      enableRealTimeAnalysis: true,\n      enablePredictiveAnalysis: true,\n      maxAnalysisLatency: 15000, // 15s max analysis time\n      ...config,\n    };\n\n    this.metrics = this.initializeMetrics();\n\n    // Start monitoring if enabled\n    if (this.featureFlags.isEnabled(\"ENABLE_META_MONITOR\")) {\n      this.startMonitoring();\n    }\n  }\n\n  /**\n   * Analyze Kiro execution using direct Bedrock\n   */\n  async analyzeKiroExecution(\n    executionData: KiroExecutionData\n  ): Promise<ExecutionFeedback[]> {\n    const startTime = Date.now();\n    const correlationId = this.generateCorrelationId();\n\n    try {\n      // Check if meta monitor is enabled\n      if (!this.featureFlags.isEnabled(\"ENABLE_META_MONITOR\")) {\n        throw new Error(\"Meta monitor is disabled\");\n      }\n\n      // Store execution data\n      this.storeExecutionData(executionData);\n\n      // Perform real-time analysis if enabled\n      if (this.config.enableRealTimeAnalysis) {\n        const feedback = await this.performRealTimeAnalysis(\n          executionData,\n          correlationId\n        );\n\n        // Update metrics\n        this.updateMetrics(true, Date.now() - startTime);\n\n        return feedback;\n      }\n\n      return [];\n    } catch (error) {\n      console.error(\"Meta monitor analysis failed:\", error);\n      this.updateMetrics(false, Date.now() - startTime);\n      return [];\n    }\n  }\n\n  /**\n   * Detect failure patterns in execution history\n   */\n  async detectFailurePatterns(): Promise<FailurePattern[]> {\n    const startTime = Date.now();\n\n    try {\n      // Get recent execution data\n      const recentExecutions = this.getRecentExecutions();\n      const failures = recentExecutions.filter(\n        (exec) => exec.status === \"failure\" || exec.status === \"error\"\n      );\n\n      if (failures.length < this.config.failureThreshold) {\n        return [];\n      }\n\n      // Use direct Bedrock for pattern analysis\n      const analysisRequest: SupportOperationRequest = {\n        operation: \"meta_monitor\",\n        priority: \"high\",\n        prompt: this.buildPatternAnalysisPrompt(failures),\n        context: {\n          correlationId: this.generateCorrelationId(),\n          metadata: {\n            failureCount: failures.length,\n            analysisType: \"pattern_detection\",\n          },\n        },\n        maxTokens: 2048,\n        temperature: 0.2,\n      };\n\n      // Route through intelligent router for optimal performance\n      const response = await this.intelligentRouter.executeSupportOperation(\n        analysisRequest\n      );\n\n      if (response.success && response.text) {\n        const patterns = this.parsePatternAnalysisResponse(response.text);\n\n        // Store detected patterns\n        patterns.forEach((pattern) => {\n          this.detectedPatterns.set(pattern.patternId, pattern);\n        });\n\n        // Update metrics\n        this.metrics.patternsDetected += patterns.length;\n\n        return patterns;\n      }\n\n      return [];\n    } catch (error) {\n      console.error(\"Pattern detection failed:\", error);\n      return [];\n    }\n  }\n\n  /**\n   * Generate execution feedback using direct Bedrock\n   */\n  async generateExecutionFeedback(\n    executionData: KiroExecutionData,\n    patterns: FailurePattern[]\n  ): Promise<ExecutionFeedback[]> {\n    try {\n      const feedbackRequest: SupportOperationRequest = {\n        operation: \"meta_monitor\",\n        priority: \"high\",\n        prompt: this.buildFeedbackGenerationPrompt(executionData, patterns),\n        context: {\n          correlationId: executionData.correlationId,\n          metadata: {\n            executionId: executionData.executionId,\n            analysisType: \"feedback_generation\",\n          },\n        },\n        maxTokens: 1536,\n        temperature: 0.3,\n      };\n\n      // Route through intelligent router\n      const response = await this.intelligentRouter.executeSupportOperation(\n        feedbackRequest\n      );\n\n      if (response.success && response.text) {\n        const feedback = this.parseFeedbackResponse(\n          response.text,\n          executionData\n        );\n\n        // Update metrics\n        this.metrics.feedbackGenerated += feedback.length;\n\n        return feedback;\n      }\n\n      return [];\n    } catch (error) {\n      console.error(\"Feedback generation failed:\", error);\n      return [];\n    }\n  }\n\n  /**\n   * Perform comprehensive execution analysis\n   */\n  async performComprehensiveAnalysis(): Promise<ExecutionAnalysisResult> {\n    const startTime = Date.now();\n    const analysisId = this.generateAnalysisId();\n\n    try {\n      // Get execution statistics\n      const recentExecutions = this.getRecentExecutions();\n      const successRate = this.calculateSuccessRate(recentExecutions);\n      const averageLatency = this.calculateAverageLatency(recentExecutions);\n\n      // Detect patterns\n      const patterns = await this.detectFailurePatterns();\n\n      // Generate comprehensive feedback\n      const allFeedback: ExecutionFeedback[] = [];\n      for (const execution of recentExecutions.slice(-10)) {\n        const feedback = await this.generateExecutionFeedback(\n          execution,\n          patterns\n        );\n        allFeedback.push(...feedback);\n      }\n\n      // Generate recommendations using direct Bedrock\n      const recommendations = await this.generateRecommendations(\n        recentExecutions,\n        patterns,\n        allFeedback\n      );\n\n      // Calculate health score\n      const healthScore = this.calculateHealthScore(\n        successRate,\n        averageLatency,\n        patterns\n      );\n\n      const result: ExecutionAnalysisResult = {\n        analysisId,\n        timestamp: new Date(),\n        executionCount: recentExecutions.length,\n        successRate,\n        averageLatency,\n        detectedPatterns: patterns,\n        generatedFeedback: allFeedback,\n        recommendations,\n        healthScore,\n        analysisLatencyMs: Date.now() - startTime,\n      };\n\n      // Cache the result\n      this.analysisCache.set(analysisId, result);\n\n      // Update metrics\n      this.updateMetrics(true, Date.now() - startTime);\n\n      return result;\n    } catch (error) {\n      console.error(\"Comprehensive analysis failed:\", error);\n      this.updateMetrics(false, Date.now() - startTime);\n\n      // Return minimal result on error\n      return {\n        analysisId,\n        timestamp: new Date(),\n        executionCount: 0,\n        successRate: 0,\n        averageLatency: 0,\n        detectedPatterns: [],\n        generatedFeedback: [],\n        recommendations: { immediate: [], shortTerm: [], longTerm: [] },\n        healthScore: 0,\n        analysisLatencyMs: Date.now() - startTime,\n      };\n    }\n  }\n\n  /**\n   * Get meta monitor health status\n   */\n  getHealthStatus() {\n    const recentExecutions = this.getRecentExecutions();\n    const successRate = this.calculateSuccessRate(recentExecutions);\n\n    return {\n      isHealthy: successRate > 0.8 && this.metrics.successfulAnalyses > 0,\n      executionCount: recentExecutions.length,\n      successRate,\n      patternsDetected: this.detectedPatterns.size,\n      lastAnalysis: this.getLastAnalysisTime(),\n      metrics: this.metrics,\n    };\n  }\n\n  /**\n   * Get meta monitor metrics\n   */\n  getMetrics() {\n    return {\n      ...this.metrics,\n      executionHistorySize: this.executionHistory.size,\n      detectedPatternsCount: this.detectedPatterns.size,\n      analysisCacheSize: this.analysisCache.size,\n    };\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    // Clear intervals\n    if (this.analysisInterval) {\n      clearInterval(this.analysisInterval);\n      this.analysisInterval = undefined;\n    }\n    if (this.cleanupInterval) {\n      clearInterval(this.cleanupInterval);\n      this.cleanupInterval = undefined;\n    }\n\n    // Clear timeouts\n    this.activeTimeouts.forEach((timeout) => {\n      clearTimeout(timeout);\n    });\n    this.activeTimeouts.clear();\n\n    // Clear data\n    this.executionHistory.clear();\n    this.detectedPatterns.clear();\n    this.analysisCache.clear();\n  }\n\n  // Private implementation methods\n\n  private initializeMetrics() {\n    return {\n      totalAnalyses: 0,\n      patternsDetected: 0,\n      feedbackGenerated: 0,\n      averageAnalysisTime: 0,\n      successfulAnalyses: 0,\n      failedAnalyses: 0,\n    };\n  }\n\n  private startMonitoring(): void {\n    // Start periodic analysis\n    this.analysisInterval = setInterval(async () => {\n      try {\n        await this.performComprehensiveAnalysis();\n      } catch (error) {\n        console.error(\"Periodic analysis failed:\", error);\n      }\n    }, this.config.analysisInterval);\n\n    // Start cleanup interval\n    this.cleanupInterval = setInterval(() => {\n      this.cleanupOldData();\n    }, this.config.retentionPeriod / 4); // Cleanup every 6 hours if retention is 24h\n  }\n\n  private storeExecutionData(executionData: KiroExecutionData): void {\n    this.executionHistory.set(executionData.executionId, executionData);\n  }\n\n  private async performRealTimeAnalysis(\n    executionData: KiroExecutionData,\n    correlationId: string\n  ): Promise<ExecutionFeedback[]> {\n    // Check if this execution indicates a problem\n    if (\n      executionData.status === \"failure\" ||\n      executionData.status === \"error\" ||\n      executionData.latencyMs > this.config.performanceThreshold\n    ) {\n      // Generate immediate feedback\n      return await this.generateExecutionFeedback(executionData, []);\n    }\n\n    return [];\n  }\n\n  private getRecentExecutions(): KiroExecutionData[] {\n    const cutoffTime = Date.now() - this.config.retentionPeriod;\n    return Array.from(this.executionHistory.values()).filter(\n      (exec) => exec.timestamp.getTime() > cutoffTime\n    );\n  }\n\n  private calculateSuccessRate(executions: KiroExecutionData[]): number {\n    if (executions.length === 0) return 1.0;\n\n    const successCount = executions.filter(\n      (exec) => exec.status === \"success\"\n    ).length;\n    return successCount / executions.length;\n  }\n\n  private calculateAverageLatency(executions: KiroExecutionData[]): number {\n    if (executions.length === 0) return 0;\n\n    const totalLatency = executions.reduce(\n      (sum, exec) => sum + exec.latencyMs,\n      0\n    );\n    return totalLatency / executions.length;\n  }\n\n  private calculateHealthScore(\n    successRate: number,\n    averageLatency: number,\n    patterns: FailurePattern[]\n  ): number {\n    let score = 100;\n\n    // Deduct for low success rate\n    score -= (1 - successRate) * 50;\n\n    // Deduct for high latency\n    if (averageLatency > this.config.performanceThreshold) {\n      score -= Math.min(\n        30,\n        (averageLatency / this.config.performanceThreshold - 1) * 20\n      );\n    }\n\n    // Deduct for critical patterns\n    const criticalPatterns = patterns.filter((p) => p.severity === \"critical\");\n    score -= criticalPatterns.length * 15;\n\n    // Deduct for high severity patterns\n    const highPatterns = patterns.filter((p) => p.severity === \"high\");\n    score -= highPatterns.length * 10;\n\n    return Math.max(0, Math.round(score));\n  }\n\n  private buildPatternAnalysisPrompt(failures: KiroExecutionData[]): string {\n    return `Analyze the following Kiro execution failures to detect patterns:\n\n${failures\n  .map(\n    (f, i) => `\nFailure ${i + 1}:\n- Operation: ${f.operation}\n- Error: ${f.error?.type} - ${f.error?.message}\n- Latency: ${f.latencyMs}ms\n- Context: ${JSON.stringify(f.context)}\n- Timestamp: ${f.timestamp.toISOString()}\n`\n  )\n  .join(\"\\n\")}\n\nPlease identify:\n1. Recurring error patterns\n2. Performance degradation patterns\n3. Resource exhaustion patterns\n4. Common factors across failures\n5. Suggested remediation actions\n\nFormat your response as JSON with the following structure:\n{\n  \"patterns\": [\n    {\n      \"type\": \"recurring_error|performance_degradation|timeout_cluster|resource_exhaustion\",\n      \"severity\": \"low|medium|high|critical\",\n      \"description\": \"Pattern description\",\n      \"affectedOperations\": [\"operation1\", \"operation2\"],\n      \"commonFactors\": {\"factor\": \"value\"},\n      \"suggestedActions\": [\"action1\", \"action2\"],\n      \"confidence\": 0.85\n    }\n  ]\n}`;\n  }\n\n  private buildFeedbackGenerationPrompt(\n    executionData: KiroExecutionData,\n    patterns: FailurePattern[]\n  ): string {\n    return `Generate actionable feedback for this Kiro execution:\n\nExecution Details:\n- Operation: ${executionData.operation}\n- Status: ${executionData.status}\n- Latency: ${executionData.latencyMs}ms\n- Error: ${executionData.error?.message || \"None\"}\n- Context: ${JSON.stringify(executionData.context)}\n\nRelated Patterns:\n${patterns.map((p) => `- ${p.type}: ${p.severity} severity`).join(\"\\n\")}\n\nPlease provide:\n1. Immediate optimization suggestions\n2. Warning about potential issues\n3. Error prevention recommendations\n4. Performance improvement suggestions\n\nFormat as JSON:\n{\n  \"feedback\": [\n    {\n      \"type\": \"optimization|warning|error_prevention|performance_improvement\",\n      \"priority\": \"low|medium|high|urgent\",\n      \"message\": \"Feedback message\",\n      \"actionable\": true,\n      \"suggestedFix\": {\n        \"description\": \"Fix description\",\n        \"estimatedImpact\": \"Impact description\"\n      }\n    }\n  ]\n}`;\n  }\n\n  private async generateRecommendations(\n    executions: KiroExecutionData[],\n    patterns: FailurePattern[],\n    feedback: ExecutionFeedback[]\n  ): Promise<{ immediate: string[]; shortTerm: string[]; longTerm: string[] }> {\n    try {\n      const recommendationRequest: SupportOperationRequest = {\n        operation: \"meta_monitor\",\n        priority: \"medium\",\n        prompt: `Based on the execution analysis, generate strategic recommendations:\n\nExecution Summary:\n- Total executions: ${executions.length}\n- Success rate: ${this.calculateSuccessRate(executions)}\n- Average latency: ${this.calculateAverageLatency(executions)}ms\n\nDetected Patterns: ${patterns.length}\nGenerated Feedback: ${feedback.length}\n\nProvide recommendations in three categories:\n1. Immediate actions (can be done now)\n2. Short-term improvements (1-2 weeks)\n3. Long-term strategic changes (1+ months)\n\nFormat as JSON:\n{\n  \"immediate\": [\"action1\", \"action2\"],\n  \"shortTerm\": [\"improvement1\", \"improvement2\"],\n  \"longTerm\": [\"strategy1\", \"strategy2\"]\n}`,\n        context: {\n          correlationId: this.generateCorrelationId(),\n          metadata: { analysisType: \"recommendations\" },\n        },\n        maxTokens: 1024,\n        temperature: 0.4,\n      };\n\n      const response = await this.intelligentRouter.executeSupportOperation(\n        recommendationRequest\n      );\n\n      if (response.success && response.text) {\n        try {\n          const parsed = JSON.parse(response.text);\n          return {\n            immediate: parsed.immediate || [],\n            shortTerm: parsed.shortTerm || [],\n            longTerm: parsed.longTerm || [],\n          };\n        } catch (parseError) {\n          console.error(\"Failed to parse recommendations:\", parseError);\n        }\n      }\n    } catch (error) {\n      console.error(\"Recommendation generation failed:\", error);\n    }\n\n    // Return default recommendations on error\n    return {\n      immediate: [\"Monitor system health\", \"Check error logs\"],\n      shortTerm: [\"Optimize performance bottlenecks\", \"Improve error handling\"],\n      longTerm: [\n        \"Implement predictive monitoring\",\n        \"Enhance system architecture\",\n      ],\n    };\n  }\n\n  private parsePatternAnalysisResponse(response: string): FailurePattern[] {\n    try {\n      const parsed = JSON.parse(response);\n      return (parsed.patterns || []).map((p: any) => ({\n        patternId: this.generatePatternId(),\n        type: p.type,\n        severity: p.severity,\n        frequency: 1, // Will be updated as pattern is observed\n        firstOccurrence: new Date(),\n        lastOccurrence: new Date(),\n        affectedOperations: p.affectedOperations || [],\n        commonFactors: p.commonFactors || {},\n        suggestedActions: p.suggestedActions || [],\n        confidence: p.confidence || 0.5,\n      }));\n    } catch (error) {\n      console.error(\"Failed to parse pattern analysis response:\", error);\n      return [];\n    }\n  }\n\n  private parseFeedbackResponse(\n    response: string,\n    executionData: KiroExecutionData\n  ): ExecutionFeedback[] {\n    try {\n      const parsed = JSON.parse(response);\n      return (parsed.feedback || []).map((f: any) => ({\n        feedbackId: this.generateFeedbackId(),\n        executionId: executionData.executionId,\n        timestamp: new Date(),\n        type: f.type,\n        priority: f.priority,\n        message: f.message,\n        actionable: f.actionable || false,\n        suggestedFix: f.suggestedFix,\n        correlationId: executionData.correlationId,\n      }));\n    } catch (error) {\n      console.error(\"Failed to parse feedback response:\", error);\n      return [];\n    }\n  }\n\n  private cleanupOldData(): void {\n    const cutoffTime = Date.now() - this.config.retentionPeriod;\n\n    // Clean execution history\n    for (const [id, execution] of this.executionHistory.entries()) {\n      if (execution.timestamp.getTime() < cutoffTime) {\n        this.executionHistory.delete(id);\n      }\n    }\n\n    // Clean analysis cache\n    for (const [id, analysis] of this.analysisCache.entries()) {\n      if (analysis.timestamp.getTime() < cutoffTime) {\n        this.analysisCache.delete(id);\n      }\n    }\n  }\n\n  private getLastAnalysisTime(): Date | null {\n    const analyses = Array.from(this.analysisCache.values());\n    if (analyses.length === 0) return null;\n\n    return analyses.reduce(\n      (latest, analysis) =>\n        analysis.timestamp > latest ? analysis.timestamp : latest,\n      analyses[0].timestamp\n    );\n  }\n\n  private updateMetrics(success: boolean, latencyMs: number): void {\n    this.metrics.totalAnalyses++;\n\n    if (success) {\n      this.metrics.successfulAnalyses++;\n    } else {\n      this.metrics.failedAnalyses++;\n    }\n\n    // Update average analysis time\n    const totalTime =\n      this.metrics.averageAnalysisTime * (this.metrics.totalAnalyses - 1) +\n      latencyMs;\n    this.metrics.averageAnalysisTime = totalTime / this.metrics.totalAnalyses;\n  }\n\n  private generateCorrelationId(): string {\n    return `meta-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;\n  }\n\n  private generateAnalysisId(): string {\n    return `analysis-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n\n  private generatePatternId(): string {\n    return `pattern-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n\n  private generateFeedbackId(): string {\n    return `feedback-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n}\n\n// Export types for external use\nexport {\n  type ExecutionAnalysisResult,\n  type ExecutionFeedback,\n  type FailurePattern,\n  type KiroExecutionData,\n  type MetaMonitorConfig,\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aab80816c10c42d017bd3c1c82e0e0a2c355f959"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cdmk0xatw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cdmk0xatw();
cov_2cdmk0xatw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2cdmk0xatw().s[1]++;
exports.MetaMonitor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2cdmk0xatw().s[2]++, require("tslib"));
const ai_feature_flags_1 =
/* istanbul ignore next */
(cov_2cdmk0xatw().s[3]++, require("./ai-feature-flags"));
/**
 * Meta Monitor for Kiro Execution Analysis
 */
class MetaMonitor {
  constructor(directBedrockClient, intelligentRouter, config) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[0]++;
    cov_2cdmk0xatw().s[4]++;
    // Data storage and analysis
    this.executionHistory = new Map();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[5]++;
    this.detectedPatterns = new Map();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[6]++;
    this.analysisCache = new Map();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[7]++;
    this.activeTimeouts = new Set();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[8]++;
    this.directBedrockClient = directBedrockClient;
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[9]++;
    this.intelligentRouter = intelligentRouter;
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[10]++;
    this.featureFlags = new ai_feature_flags_1.AiFeatureFlags();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[11]++;
    this.config = Object.assign({
      analysisInterval: 300000,
      failureThreshold: 3,
      performanceThreshold: 5000,
      retentionPeriod: 86400000,
      enableRealTimeAnalysis: true,
      enablePredictiveAnalysis: true,
      maxAnalysisLatency: 15000
    }, config);
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[12]++;
    this.metrics = this.initializeMetrics();
    // Start monitoring if enabled
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[13]++;
    if (this.featureFlags.isEnabled("ENABLE_META_MONITOR")) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[0][0]++;
      cov_2cdmk0xatw().s[14]++;
      this.startMonitoring();
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[0][1]++;
    }
  }
  /**
   * Analyze Kiro execution using direct Bedrock
   */
  analyzeKiroExecution(executionData) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[1]++;
    cov_2cdmk0xatw().s[15]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[2]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[16]++, Date.now());
      const correlationId =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[17]++, this.generateCorrelationId());
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[18]++;
      try {
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[19]++;
        // Check if meta monitor is enabled
        if (!this.featureFlags.isEnabled("ENABLE_META_MONITOR")) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().b[1][0]++;
          cov_2cdmk0xatw().s[20]++;
          throw new Error("Meta monitor is disabled");
        } else
        /* istanbul ignore next */
        {
          cov_2cdmk0xatw().b[1][1]++;
        }
        // Store execution data
        cov_2cdmk0xatw().s[21]++;
        this.storeExecutionData(executionData);
        // Perform real-time analysis if enabled
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[22]++;
        if (this.config.enableRealTimeAnalysis) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().b[2][0]++;
          const feedback =
          /* istanbul ignore next */
          (cov_2cdmk0xatw().s[23]++, yield this.performRealTimeAnalysis(executionData, correlationId));
          // Update metrics
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[24]++;
          this.updateMetrics(true, Date.now() - startTime);
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[25]++;
          return feedback;
        } else
        /* istanbul ignore next */
        {
          cov_2cdmk0xatw().b[2][1]++;
        }
        cov_2cdmk0xatw().s[26]++;
        return [];
      } catch (error) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[27]++;
        console.error("Meta monitor analysis failed:", error);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[28]++;
        this.updateMetrics(false, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[29]++;
        return [];
      }
    });
  }
  /**
   * Detect failure patterns in execution history
   */
  detectFailurePatterns() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[3]++;
    cov_2cdmk0xatw().s[30]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[4]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[31]++, Date.now());
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[32]++;
      try {
        // Get recent execution data
        const recentExecutions =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[33]++, this.getRecentExecutions());
        const failures =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[34]++, recentExecutions.filter(exec => {
          /* istanbul ignore next */
          cov_2cdmk0xatw().f[5]++;
          cov_2cdmk0xatw().s[35]++;
          return /* istanbul ignore next */(cov_2cdmk0xatw().b[3][0]++, exec.status === "failure") ||
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[3][1]++, exec.status === "error");
        }));
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[36]++;
        if (failures.length < this.config.failureThreshold) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().b[4][0]++;
          cov_2cdmk0xatw().s[37]++;
          return [];
        } else
        /* istanbul ignore next */
        {
          cov_2cdmk0xatw().b[4][1]++;
        }
        // Use direct Bedrock for pattern analysis
        const analysisRequest =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[38]++, {
          operation: "meta_monitor",
          priority: "high",
          prompt: this.buildPatternAnalysisPrompt(failures),
          context: {
            correlationId: this.generateCorrelationId(),
            metadata: {
              failureCount: failures.length,
              analysisType: "pattern_detection"
            }
          },
          maxTokens: 2048,
          temperature: 0.2
        });
        // Route through intelligent router for optimal performance
        const response =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[39]++, yield this.intelligentRouter.executeSupportOperation(analysisRequest));
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[40]++;
        if (
        /* istanbul ignore next */
        (cov_2cdmk0xatw().b[6][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_2cdmk0xatw().b[6][1]++, response.text)) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().b[5][0]++;
          const patterns =
          /* istanbul ignore next */
          (cov_2cdmk0xatw().s[41]++, this.parsePatternAnalysisResponse(response.text));
          // Store detected patterns
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[42]++;
          patterns.forEach(pattern => {
            /* istanbul ignore next */
            cov_2cdmk0xatw().f[6]++;
            cov_2cdmk0xatw().s[43]++;
            this.detectedPatterns.set(pattern.patternId, pattern);
          });
          // Update metrics
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[44]++;
          this.metrics.patternsDetected += patterns.length;
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[45]++;
          return patterns;
        } else
        /* istanbul ignore next */
        {
          cov_2cdmk0xatw().b[5][1]++;
        }
        cov_2cdmk0xatw().s[46]++;
        return [];
      } catch (error) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[47]++;
        console.error("Pattern detection failed:", error);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[48]++;
        return [];
      }
    });
  }
  /**
   * Generate execution feedback using direct Bedrock
   */
  generateExecutionFeedback(executionData, patterns) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[7]++;
    cov_2cdmk0xatw().s[49]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[8]++;
      cov_2cdmk0xatw().s[50]++;
      try {
        const feedbackRequest =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[51]++, {
          operation: "meta_monitor",
          priority: "high",
          prompt: this.buildFeedbackGenerationPrompt(executionData, patterns),
          context: {
            correlationId: executionData.correlationId,
            metadata: {
              executionId: executionData.executionId,
              analysisType: "feedback_generation"
            }
          },
          maxTokens: 1536,
          temperature: 0.3
        });
        // Route through intelligent router
        const response =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[52]++, yield this.intelligentRouter.executeSupportOperation(feedbackRequest));
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[53]++;
        if (
        /* istanbul ignore next */
        (cov_2cdmk0xatw().b[8][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_2cdmk0xatw().b[8][1]++, response.text)) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().b[7][0]++;
          const feedback =
          /* istanbul ignore next */
          (cov_2cdmk0xatw().s[54]++, this.parseFeedbackResponse(response.text, executionData));
          // Update metrics
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[55]++;
          this.metrics.feedbackGenerated += feedback.length;
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[56]++;
          return feedback;
        } else
        /* istanbul ignore next */
        {
          cov_2cdmk0xatw().b[7][1]++;
        }
        cov_2cdmk0xatw().s[57]++;
        return [];
      } catch (error) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[58]++;
        console.error("Feedback generation failed:", error);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[59]++;
        return [];
      }
    });
  }
  /**
   * Perform comprehensive execution analysis
   */
  performComprehensiveAnalysis() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[9]++;
    cov_2cdmk0xatw().s[60]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[10]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[61]++, Date.now());
      const analysisId =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[62]++, this.generateAnalysisId());
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[63]++;
      try {
        // Get execution statistics
        const recentExecutions =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[64]++, this.getRecentExecutions());
        const successRate =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[65]++, this.calculateSuccessRate(recentExecutions));
        const averageLatency =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[66]++, this.calculateAverageLatency(recentExecutions));
        // Detect patterns
        const patterns =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[67]++, yield this.detectFailurePatterns());
        // Generate comprehensive feedback
        const allFeedback =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[68]++, []);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[69]++;
        for (const execution of recentExecutions.slice(-10)) {
          const feedback =
          /* istanbul ignore next */
          (cov_2cdmk0xatw().s[70]++, yield this.generateExecutionFeedback(execution, patterns));
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[71]++;
          allFeedback.push(...feedback);
        }
        // Generate recommendations using direct Bedrock
        const recommendations =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[72]++, yield this.generateRecommendations(recentExecutions, patterns, allFeedback));
        // Calculate health score
        const healthScore =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[73]++, this.calculateHealthScore(successRate, averageLatency, patterns));
        const result =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[74]++, {
          analysisId,
          timestamp: new Date(),
          executionCount: recentExecutions.length,
          successRate,
          averageLatency,
          detectedPatterns: patterns,
          generatedFeedback: allFeedback,
          recommendations,
          healthScore,
          analysisLatencyMs: Date.now() - startTime
        });
        // Cache the result
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[75]++;
        this.analysisCache.set(analysisId, result);
        // Update metrics
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[76]++;
        this.updateMetrics(true, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[77]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[78]++;
        console.error("Comprehensive analysis failed:", error);
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[79]++;
        this.updateMetrics(false, Date.now() - startTime);
        // Return minimal result on error
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[80]++;
        return {
          analysisId,
          timestamp: new Date(),
          executionCount: 0,
          successRate: 0,
          averageLatency: 0,
          detectedPatterns: [],
          generatedFeedback: [],
          recommendations: {
            immediate: [],
            shortTerm: [],
            longTerm: []
          },
          healthScore: 0,
          analysisLatencyMs: Date.now() - startTime
        };
      }
    });
  }
  /**
   * Get meta monitor health status
   */
  getHealthStatus() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[11]++;
    const recentExecutions =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[81]++, this.getRecentExecutions());
    const successRate =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[82]++, this.calculateSuccessRate(recentExecutions));
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[83]++;
    return {
      isHealthy:
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[9][0]++, successRate > 0.8) &&
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[9][1]++, this.metrics.successfulAnalyses > 0),
      executionCount: recentExecutions.length,
      successRate,
      patternsDetected: this.detectedPatterns.size,
      lastAnalysis: this.getLastAnalysisTime(),
      metrics: this.metrics
    };
  }
  /**
   * Get meta monitor metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[12]++;
    cov_2cdmk0xatw().s[84]++;
    return Object.assign(Object.assign({}, this.metrics), {
      executionHistorySize: this.executionHistory.size,
      detectedPatternsCount: this.detectedPatterns.size,
      analysisCacheSize: this.analysisCache.size
    });
  }
  /**
   * Cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[13]++;
    cov_2cdmk0xatw().s[85]++;
    // Clear intervals
    if (this.analysisInterval) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[10][0]++;
      cov_2cdmk0xatw().s[86]++;
      clearInterval(this.analysisInterval);
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[87]++;
      this.analysisInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[10][1]++;
    }
    cov_2cdmk0xatw().s[88]++;
    if (this.cleanupInterval) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[11][0]++;
      cov_2cdmk0xatw().s[89]++;
      clearInterval(this.cleanupInterval);
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[90]++;
      this.cleanupInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[11][1]++;
    }
    // Clear timeouts
    cov_2cdmk0xatw().s[91]++;
    this.activeTimeouts.forEach(timeout => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[14]++;
      cov_2cdmk0xatw().s[92]++;
      clearTimeout(timeout);
    });
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[93]++;
    this.activeTimeouts.clear();
    // Clear data
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[94]++;
    this.executionHistory.clear();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[95]++;
    this.detectedPatterns.clear();
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[96]++;
    this.analysisCache.clear();
  }
  // Private implementation methods
  initializeMetrics() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[15]++;
    cov_2cdmk0xatw().s[97]++;
    return {
      totalAnalyses: 0,
      patternsDetected: 0,
      feedbackGenerated: 0,
      averageAnalysisTime: 0,
      successfulAnalyses: 0,
      failedAnalyses: 0
    };
  }
  startMonitoring() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[16]++;
    cov_2cdmk0xatw().s[98]++;
    // Start periodic analysis
    this.analysisInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[17]++;
      cov_2cdmk0xatw().s[99]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2cdmk0xatw().f[18]++;
        cov_2cdmk0xatw().s[100]++;
        try {
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[101]++;
          yield this.performComprehensiveAnalysis();
        } catch (error) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().s[102]++;
          console.error("Periodic analysis failed:", error);
        }
      });
    }, this.config.analysisInterval);
    // Start cleanup interval
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[103]++;
    this.cleanupInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[19]++;
      cov_2cdmk0xatw().s[104]++;
      this.cleanupOldData();
    }, this.config.retentionPeriod / 4); // Cleanup every 6 hours if retention is 24h
  }
  storeExecutionData(executionData) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[20]++;
    cov_2cdmk0xatw().s[105]++;
    this.executionHistory.set(executionData.executionId, executionData);
  }
  performRealTimeAnalysis(executionData, correlationId) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[21]++;
    cov_2cdmk0xatw().s[106]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[22]++;
      cov_2cdmk0xatw().s[107]++;
      // Check if this execution indicates a problem
      if (
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[13][0]++, executionData.status === "failure") ||
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[13][1]++, executionData.status === "error") ||
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[13][2]++, executionData.latencyMs > this.config.performanceThreshold)) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().b[12][0]++;
        cov_2cdmk0xatw().s[108]++;
        // Generate immediate feedback
        return yield this.generateExecutionFeedback(executionData, []);
      } else
      /* istanbul ignore next */
      {
        cov_2cdmk0xatw().b[12][1]++;
      }
      cov_2cdmk0xatw().s[109]++;
      return [];
    });
  }
  getRecentExecutions() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[23]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[110]++, Date.now() - this.config.retentionPeriod);
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[111]++;
    return Array.from(this.executionHistory.values()).filter(exec => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[24]++;
      cov_2cdmk0xatw().s[112]++;
      return exec.timestamp.getTime() > cutoffTime;
    });
  }
  calculateSuccessRate(executions) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[25]++;
    cov_2cdmk0xatw().s[113]++;
    if (executions.length === 0) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[14][0]++;
      cov_2cdmk0xatw().s[114]++;
      return 1.0;
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[14][1]++;
    }
    const successCount =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[115]++, executions.filter(exec => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[26]++;
      cov_2cdmk0xatw().s[116]++;
      return exec.status === "success";
    }).length);
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[117]++;
    return successCount / executions.length;
  }
  calculateAverageLatency(executions) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[27]++;
    cov_2cdmk0xatw().s[118]++;
    if (executions.length === 0) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[15][0]++;
      cov_2cdmk0xatw().s[119]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[15][1]++;
    }
    const totalLatency =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[120]++, executions.reduce((sum, exec) => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[28]++;
      cov_2cdmk0xatw().s[121]++;
      return sum + exec.latencyMs;
    }, 0));
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[122]++;
    return totalLatency / executions.length;
  }
  calculateHealthScore(successRate, averageLatency, patterns) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[29]++;
    let score =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[123]++, 100);
    // Deduct for low success rate
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[124]++;
    score -= (1 - successRate) * 50;
    // Deduct for high latency
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[125]++;
    if (averageLatency > this.config.performanceThreshold) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[16][0]++;
      cov_2cdmk0xatw().s[126]++;
      score -= Math.min(30, (averageLatency / this.config.performanceThreshold - 1) * 20);
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[16][1]++;
    }
    // Deduct for critical patterns
    const criticalPatterns =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[127]++, patterns.filter(p => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[30]++;
      cov_2cdmk0xatw().s[128]++;
      return p.severity === "critical";
    }));
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[129]++;
    score -= criticalPatterns.length * 15;
    // Deduct for high severity patterns
    const highPatterns =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[130]++, patterns.filter(p => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[31]++;
      cov_2cdmk0xatw().s[131]++;
      return p.severity === "high";
    }));
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[132]++;
    score -= highPatterns.length * 10;
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[133]++;
    return Math.max(0, Math.round(score));
  }
  buildPatternAnalysisPrompt(failures) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[32]++;
    cov_2cdmk0xatw().s[134]++;
    return `Analyze the following Kiro execution failures to detect patterns:

${failures.map((f, i) => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[33]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[135]++;
      return `
Failure ${i + 1}:
- Operation: ${f.operation}
- Error: ${
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[18][0]++, (_a = f.error) === null) ||
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[18][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[17][1]++, _a.type)} - ${
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[20][0]++, (_b = f.error) === null) ||
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[20][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[19][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[19][1]++, _b.message)}
- Latency: ${f.latencyMs}ms
- Context: ${JSON.stringify(f.context)}
- Timestamp: ${f.timestamp.toISOString()}
`;
    }).join("\n")}

Please identify:
1. Recurring error patterns
2. Performance degradation patterns
3. Resource exhaustion patterns
4. Common factors across failures
5. Suggested remediation actions

Format your response as JSON with the following structure:
{
  "patterns": [
    {
      "type": "recurring_error|performance_degradation|timeout_cluster|resource_exhaustion",
      "severity": "low|medium|high|critical",
      "description": "Pattern description",
      "affectedOperations": ["operation1", "operation2"],
      "commonFactors": {"factor": "value"},
      "suggestedActions": ["action1", "action2"],
      "confidence": 0.85
    }
  ]
}`;
  }
  buildFeedbackGenerationPrompt(executionData, patterns) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[34]++;
    var _a;
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[136]++;
    return `Generate actionable feedback for this Kiro execution:

Execution Details:
- Operation: ${executionData.operation}
- Status: ${executionData.status}
- Latency: ${executionData.latencyMs}ms
- Error: ${
    /* istanbul ignore next */
    (cov_2cdmk0xatw().b[21][0]++,
    /* istanbul ignore next */
    (cov_2cdmk0xatw().b[23][0]++, (_a = executionData.error) === null) ||
    /* istanbul ignore next */
    (cov_2cdmk0xatw().b[23][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_2cdmk0xatw().b[22][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2cdmk0xatw().b[22][1]++, _a.message)) ||
    /* istanbul ignore next */
    (cov_2cdmk0xatw().b[21][1]++, "None")}
- Context: ${JSON.stringify(executionData.context)}

Related Patterns:
${patterns.map(p => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[35]++;
      cov_2cdmk0xatw().s[137]++;
      return `- ${p.type}: ${p.severity} severity`;
    }).join("\n")}

Please provide:
1. Immediate optimization suggestions
2. Warning about potential issues
3. Error prevention recommendations
4. Performance improvement suggestions

Format as JSON:
{
  "feedback": [
    {
      "type": "optimization|warning|error_prevention|performance_improvement",
      "priority": "low|medium|high|urgent",
      "message": "Feedback message",
      "actionable": true,
      "suggestedFix": {
        "description": "Fix description",
        "estimatedImpact": "Impact description"
      }
    }
  ]
}`;
  }
  generateRecommendations(executions, patterns, feedback) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[36]++;
    cov_2cdmk0xatw().s[138]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[37]++;
      cov_2cdmk0xatw().s[139]++;
      try {
        const recommendationRequest =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[140]++, {
          operation: "meta_monitor",
          priority: "medium",
          prompt: `Based on the execution analysis, generate strategic recommendations:

Execution Summary:
- Total executions: ${executions.length}
- Success rate: ${this.calculateSuccessRate(executions)}
- Average latency: ${this.calculateAverageLatency(executions)}ms

Detected Patterns: ${patterns.length}
Generated Feedback: ${feedback.length}

Provide recommendations in three categories:
1. Immediate actions (can be done now)
2. Short-term improvements (1-2 weeks)
3. Long-term strategic changes (1+ months)

Format as JSON:
{
  "immediate": ["action1", "action2"],
  "shortTerm": ["improvement1", "improvement2"],
  "longTerm": ["strategy1", "strategy2"]
}`,
          context: {
            correlationId: this.generateCorrelationId(),
            metadata: {
              analysisType: "recommendations"
            }
          },
          maxTokens: 1024,
          temperature: 0.4
        });
        const response =
        /* istanbul ignore next */
        (cov_2cdmk0xatw().s[141]++, yield this.intelligentRouter.executeSupportOperation(recommendationRequest));
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[142]++;
        if (
        /* istanbul ignore next */
        (cov_2cdmk0xatw().b[25][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_2cdmk0xatw().b[25][1]++, response.text)) {
          /* istanbul ignore next */
          cov_2cdmk0xatw().b[24][0]++;
          cov_2cdmk0xatw().s[143]++;
          try {
            const parsed =
            /* istanbul ignore next */
            (cov_2cdmk0xatw().s[144]++, JSON.parse(response.text));
            /* istanbul ignore next */
            cov_2cdmk0xatw().s[145]++;
            return {
              immediate:
              /* istanbul ignore next */
              (cov_2cdmk0xatw().b[26][0]++, parsed.immediate) ||
              /* istanbul ignore next */
              (cov_2cdmk0xatw().b[26][1]++, []),
              shortTerm:
              /* istanbul ignore next */
              (cov_2cdmk0xatw().b[27][0]++, parsed.shortTerm) ||
              /* istanbul ignore next */
              (cov_2cdmk0xatw().b[27][1]++, []),
              longTerm:
              /* istanbul ignore next */
              (cov_2cdmk0xatw().b[28][0]++, parsed.longTerm) ||
              /* istanbul ignore next */
              (cov_2cdmk0xatw().b[28][1]++, [])
            };
          } catch (parseError) {
            /* istanbul ignore next */
            cov_2cdmk0xatw().s[146]++;
            console.error("Failed to parse recommendations:", parseError);
          }
        } else
        /* istanbul ignore next */
        {
          cov_2cdmk0xatw().b[24][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().s[147]++;
        console.error("Recommendation generation failed:", error);
      }
      // Return default recommendations on error
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[148]++;
      return {
        immediate: ["Monitor system health", "Check error logs"],
        shortTerm: ["Optimize performance bottlenecks", "Improve error handling"],
        longTerm: ["Implement predictive monitoring", "Enhance system architecture"]
      };
    });
  }
  parsePatternAnalysisResponse(response) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[38]++;
    cov_2cdmk0xatw().s[149]++;
    try {
      const parsed =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[150]++, JSON.parse(response));
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[151]++;
      return (
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[29][0]++, parsed.patterns) ||
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[29][1]++, [])).map(p => {
        /* istanbul ignore next */
        cov_2cdmk0xatw().f[39]++;
        cov_2cdmk0xatw().s[152]++;
        return {
          patternId: this.generatePatternId(),
          type: p.type,
          severity: p.severity,
          frequency: 1,
          // Will be updated as pattern is observed
          firstOccurrence: new Date(),
          lastOccurrence: new Date(),
          affectedOperations:
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[30][0]++, p.affectedOperations) ||
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[30][1]++, []),
          commonFactors:
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[31][0]++, p.commonFactors) ||
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[31][1]++, {}),
          suggestedActions:
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[32][0]++, p.suggestedActions) ||
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[32][1]++, []),
          confidence:
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[33][0]++, p.confidence) ||
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[33][1]++, 0.5)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[153]++;
      console.error("Failed to parse pattern analysis response:", error);
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[154]++;
      return [];
    }
  }
  parseFeedbackResponse(response, executionData) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[40]++;
    cov_2cdmk0xatw().s[155]++;
    try {
      const parsed =
      /* istanbul ignore next */
      (cov_2cdmk0xatw().s[156]++, JSON.parse(response));
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[157]++;
      return (
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[34][0]++, parsed.feedback) ||
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[34][1]++, [])).map(f => {
        /* istanbul ignore next */
        cov_2cdmk0xatw().f[41]++;
        cov_2cdmk0xatw().s[158]++;
        return {
          feedbackId: this.generateFeedbackId(),
          executionId: executionData.executionId,
          timestamp: new Date(),
          type: f.type,
          priority: f.priority,
          message: f.message,
          actionable:
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[35][0]++, f.actionable) ||
          /* istanbul ignore next */
          (cov_2cdmk0xatw().b[35][1]++, false),
          suggestedFix: f.suggestedFix,
          correlationId: executionData.correlationId
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[159]++;
      console.error("Failed to parse feedback response:", error);
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[160]++;
      return [];
    }
  }
  cleanupOldData() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[42]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[161]++, Date.now() - this.config.retentionPeriod);
    // Clean execution history
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[162]++;
    for (const [id, execution] of this.executionHistory.entries()) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[163]++;
      if (execution.timestamp.getTime() < cutoffTime) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().b[36][0]++;
        cov_2cdmk0xatw().s[164]++;
        this.executionHistory.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_2cdmk0xatw().b[36][1]++;
      }
    }
    // Clean analysis cache
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[165]++;
    for (const [id, analysis] of this.analysisCache.entries()) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().s[166]++;
      if (analysis.timestamp.getTime() < cutoffTime) {
        /* istanbul ignore next */
        cov_2cdmk0xatw().b[37][0]++;
        cov_2cdmk0xatw().s[167]++;
        this.analysisCache.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_2cdmk0xatw().b[37][1]++;
      }
    }
  }
  getLastAnalysisTime() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[43]++;
    const analyses =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[168]++, Array.from(this.analysisCache.values()));
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[169]++;
    if (analyses.length === 0) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[38][0]++;
      cov_2cdmk0xatw().s[170]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2cdmk0xatw().b[38][1]++;
    }
    cov_2cdmk0xatw().s[171]++;
    return analyses.reduce((latest, analysis) => {
      /* istanbul ignore next */
      cov_2cdmk0xatw().f[44]++;
      cov_2cdmk0xatw().s[172]++;
      return analysis.timestamp > latest ?
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[39][0]++, analysis.timestamp) :
      /* istanbul ignore next */
      (cov_2cdmk0xatw().b[39][1]++, latest);
    }, analyses[0].timestamp);
  }
  updateMetrics(success, latencyMs) {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[45]++;
    cov_2cdmk0xatw().s[173]++;
    this.metrics.totalAnalyses++;
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[174]++;
    if (success) {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[40][0]++;
      cov_2cdmk0xatw().s[175]++;
      this.metrics.successfulAnalyses++;
    } else {
      /* istanbul ignore next */
      cov_2cdmk0xatw().b[40][1]++;
      cov_2cdmk0xatw().s[176]++;
      this.metrics.failedAnalyses++;
    }
    // Update average analysis time
    const totalTime =
    /* istanbul ignore next */
    (cov_2cdmk0xatw().s[177]++, this.metrics.averageAnalysisTime * (this.metrics.totalAnalyses - 1) + latencyMs);
    /* istanbul ignore next */
    cov_2cdmk0xatw().s[178]++;
    this.metrics.averageAnalysisTime = totalTime / this.metrics.totalAnalyses;
  }
  generateCorrelationId() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[46]++;
    cov_2cdmk0xatw().s[179]++;
    return `meta-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
  generateAnalysisId() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[47]++;
    cov_2cdmk0xatw().s[180]++;
    return `analysis-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
  generatePatternId() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[48]++;
    cov_2cdmk0xatw().s[181]++;
    return `pattern-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
  generateFeedbackId() {
    /* istanbul ignore next */
    cov_2cdmk0xatw().f[49]++;
    cov_2cdmk0xatw().s[182]++;
    return `feedback-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
}
/* istanbul ignore next */
cov_2cdmk0xatw().s[183]++;
exports.MetaMonitor = MetaMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,