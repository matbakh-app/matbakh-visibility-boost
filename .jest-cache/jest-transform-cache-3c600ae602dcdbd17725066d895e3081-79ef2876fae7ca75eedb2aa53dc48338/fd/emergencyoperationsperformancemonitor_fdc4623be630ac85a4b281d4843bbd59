e5c16e344cd90fc77015ce00c423656c
"use strict";

/**
 * Emergency Operations Performance Monitor
 *
 * Tracks and validates that emergency operations complete within 5 seconds
 * with a success rate > 95% as required by the Bedrock Activation specification.
 *
 * Key Requirements:
 * - Emergency operations must complete within 5 seconds
 * - Success rate must be > 95% over a rolling window
 * - Real-time monitoring and alerting
 * - Integration with existing monitoring systems
 */
/* istanbul ignore next */
function cov_1311ry6pn5() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/emergency-operations-performance-monitor.ts";
  var hash = "a3b3ba045af8186015942d4e7770f4baac34ab82";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/emergency-operations-performance-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "1": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 92
        }
      },
      "2": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "3": {
        start: {
          line: 17,
          column: 29
        },
        end: {
          line: 17,
          column: 60
        }
      },
      "4": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 26
        }
      },
      "5": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 25
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 241
        }
      },
      "7": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 84
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "10": {
        start: {
          line: 38,
          column: 33
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "11": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "12": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 38
        }
      },
      "13": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "14": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 84
        }
      },
      "15": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "16": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "17": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 83,
          column: 95
        }
      },
      "18": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 84,
          column: 84
        }
      },
      "19": {
        start: {
          line: 84,
          column: 57
        },
        end: {
          line: 84,
          column: 83
        }
      },
      "20": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "21": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "22": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 75
        }
      },
      "23": {
        start: {
          line: 100,
          column: 58
        },
        end: {
          line: 100,
          column: 67
        }
      },
      "24": {
        start: {
          line: 101,
          column: 32
        },
        end: {
          line: 101,
          column: 79
        }
      },
      "25": {
        start: {
          line: 101,
          column: 60
        },
        end: {
          line: 101,
          column: 71
        }
      },
      "26": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 104,
          column: 34
        }
      },
      "27": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 35
        }
      },
      "28": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 33
        }
      },
      "29": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 106,
          column: 84
        }
      },
      "30": {
        start: {
          line: 106,
          column: 57
        },
        end: {
          line: 106,
          column: 83
        }
      },
      "31": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 82
        }
      },
      "32": {
        start: {
          line: 107,
          column: 56
        },
        end: {
          line: 107,
          column: 81
        }
      },
      "33": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "34": {
        start: {
          line: 114,
          column: 61
        },
        end: {
          line: 114,
          column: 70
        }
      },
      "35": {
        start: {
          line: 120,
          column: 55
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "36": {
        start: {
          line: 121,
          column: 54
        },
        end: {
          line: 121,
          column: 65
        }
      },
      "37": {
        start: {
          line: 123,
          column: 54
        },
        end: {
          line: 123,
          column: 71
        }
      },
      "38": {
        start: {
          line: 129,
          column: 54
        },
        end: {
          line: 129,
          column: 63
        }
      },
      "39": {
        start: {
          line: 130,
          column: 53
        },
        end: {
          line: 130,
          column: 64
        }
      },
      "40": {
        start: {
          line: 132,
          column: 53
        },
        end: {
          line: 132,
          column: 70
        }
      },
      "41": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 21
        }
      },
      "42": {
        start: {
          line: 145,
          column: 22
        },
        end: {
          line: 145,
          column: 55
        }
      },
      "43": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "44": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 24
        }
      },
      "45": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 152,
          column: 73
        }
      },
      "46": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 158,
          column: 55
        }
      },
      "47": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "48": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 24
        }
      },
      "49": {
        start: {
          line: 163,
          column: 36
        },
        end: {
          line: 164,
          column: 15
        }
      },
      "50": {
        start: {
          line: 165,
          column: 42
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "51": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 169,
          column: 75
        }
      },
      "52": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 55
        }
      },
      "53": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "54": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 24
        }
      },
      "55": {
        start: {
          line: 180,
          column: 37
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "56": {
        start: {
          line: 182,
          column: 43
        },
        end: {
          line: 183,
          column: 15
        }
      },
      "57": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 186,
          column: 76
        }
      },
      "58": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 192,
          column: 73
        }
      },
      "59": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 72
        }
      },
      "60": {
        start: {
          line: 193,
          column: 45
        },
        end: {
          line: 193,
          column: 70
        }
      },
      "61": {
        start: {
          line: 199,
          column: 22
        },
        end: {
          line: 199,
          column: 55
        }
      },
      "62": {
        start: {
          line: 200,
          column: 28
        },
        end: {
          line: 200,
          column: 57
        }
      },
      "63": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 201,
          column: 51
        }
      },
      "64": {
        start: {
          line: 202,
          column: 32
        },
        end: {
          line: 202,
          column: 34
        }
      },
      "65": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "66": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 208
        }
      },
      "67": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "68": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 198
        }
      },
      "69": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "70": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 174
        }
      },
      "71": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "72": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 156
        }
      },
      "73": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 220,
          column: 10
        }
      },
      "74": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 26
        }
      },
      "75": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 25
        }
      },
      "76": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "77": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "78": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "79": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 23
        }
      },
      "80": {
        start: {
          line: 247,
          column: 26
        },
        end: {
          line: 247,
          column: 59
        }
      },
      "81": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "82": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 258,
          column: 19
        }
      },
      "83": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "84": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 270,
          column: 19
        }
      },
      "85": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "86": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 282,
          column: 19
        }
      },
      "87": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "88": {
        start: {
          line: 286,
          column: 32
        },
        end: {
          line: 286,
          column: 62
        }
      },
      "89": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "90": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 296,
          column: 23
        }
      },
      "91": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "92": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 36
        }
      },
      "93": {
        start: {
          line: 309,
          column: 27
        },
        end: {
          line: 309,
          column: 69
        }
      },
      "94": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 75
        }
      },
      "95": {
        start: {
          line: 310,
          column: 52
        },
        end: {
          line: 310,
          column: 73
        }
      },
      "96": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 328,
          column: 15
        }
      },
      "97": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 108
        }
      },
      "98": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 338,
          column: 21
        }
      },
      "99": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 21
        }
      },
      "100": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 339,
          column: 67
        }
      },
      "101": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 39
        }
      },
      "102": {
        start: {
          line: 341,
          column: 22
        },
        end: {
          line: 341,
          column: 38
        }
      },
      "103": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "104": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 38
        }
      },
      "105": {
        start: {
          line: 345,
          column: 23
        },
        end: {
          line: 345,
          column: 36
        }
      },
      "106": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 79
        }
      },
      "107": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 349,
          column: 86
        }
      },
      "108": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 353,
          column: 81
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 57
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 68
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 58
          },
          end: {
            line: 36,
            column: 59
          }
        },
        loc: {
          start: {
            line: 36,
            column: 177
          },
          end: {
            line: 77,
            column: 9
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 33
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 50
          },
          end: {
            line: 84,
            column: 51
          }
        },
        loc: {
          start: {
            line: 84,
            column: 57
          },
          end: {
            line: 84,
            column: 83
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 100,
            column: 52
          }
        },
        loc: {
          start: {
            line: 100,
            column: 58
          },
          end: {
            line: 100,
            column: 67
          }
        },
        line: 100
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 53
          },
          end: {
            line: 101,
            column: 54
          }
        },
        loc: {
          start: {
            line: 101,
            column: 60
          },
          end: {
            line: 101,
            column: 71
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 103,
            column: 17
          },
          end: {
            line: 103,
            column: 18
          }
        },
        loc: {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 35
          }
        },
        line: 103
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 18
          },
          end: {
            line: 104,
            column: 19
          }
        },
        loc: {
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 104,
            column: 33
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 106,
            column: 51
          }
        },
        loc: {
          start: {
            line: 106,
            column: 57
          },
          end: {
            line: 106,
            column: 83
          }
        },
        line: 106
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 107,
            column: 49
          },
          end: {
            line: 107,
            column: 50
          }
        },
        loc: {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 81
          }
        },
        line: 107
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 114,
            column: 47
          },
          end: {
            line: 114,
            column: 48
          }
        },
        loc: {
          start: {
            line: 114,
            column: 61
          },
          end: {
            line: 114,
            column: 70
          }
        },
        line: 114
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 120,
            column: 48
          },
          end: {
            line: 120,
            column: 49
          }
        },
        loc: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 120,
            column: 64
          }
        },
        line: 120
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 121,
            column: 47
          },
          end: {
            line: 121,
            column: 48
          }
        },
        loc: {
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 121,
            column: 65
          }
        },
        line: 121
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 42
          },
          end: {
            line: 123,
            column: 43
          }
        },
        loc: {
          start: {
            line: 123,
            column: 54
          },
          end: {
            line: 123,
            column: 71
          }
        },
        line: 123
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 129,
            column: 47
          },
          end: {
            line: 129,
            column: 48
          }
        },
        loc: {
          start: {
            line: 129,
            column: 54
          },
          end: {
            line: 129,
            column: 63
          }
        },
        line: 129
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 46
          },
          end: {
            line: 130,
            column: 47
          }
        },
        loc: {
          start: {
            line: 130,
            column: 53
          },
          end: {
            line: 130,
            column: 64
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 132,
            column: 41
          },
          end: {
            line: 132,
            column: 42
          }
        },
        loc: {
          start: {
            line: 132,
            column: 53
          },
          end: {
            line: 132,
            column: 70
          }
        },
        line: 132
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 144
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 157
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 48
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 174
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 191
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 193,
            column: 34
          },
          end: {
            line: 193,
            column: 35
          }
        },
        loc: {
          start: {
            line: 193,
            column: 45
          },
          end: {
            line: 193,
            column: 70
          }
        },
        line: 193
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 27
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 198
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        loc: {
          start: {
            line: 225,
            column: 19
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 225
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 20
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 232
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 33
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 242
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 243,
            column: 55
          },
          end: {
            line: 243,
            column: 56
          }
        },
        loc: {
          start: {
            line: 243,
            column: 68
          },
          end: {
            line: 299,
            column: 9
          }
        },
        line: 243
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 24
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 304
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 305,
            column: 55
          },
          end: {
            line: 305,
            column: 56
          }
        },
        loc: {
          start: {
            line: 305,
            column: 68
          },
          end: {
            line: 331,
            column: 9
          }
        },
        line: 305
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 310,
            column: 45
          },
          end: {
            line: 310,
            column: 46
          }
        },
        loc: {
          start: {
            line: 310,
            column: 52
          },
          end: {
            line: 310,
            column: 73
          }
        },
        line: 310
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 49
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 336
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 27
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 36
          }
        }, {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 29,
            column: 83
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 102
          },
          end: {
            line: 36,
            column: 129
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 118
          },
          end: {
            line: 36,
            column: 129
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 153
          },
          end: {
            line: 36,
            column: 175
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 164
          },
          end: {
            line: 36,
            column: 175
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 40,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 40,
            column: 52
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 34
          },
          end: {
            line: 125,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 124,
            column: 43
          }
        }, {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 23
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 134,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 22
          },
          end: {
            line: 133,
            column: 42
          }
        }, {
          start: {
            line: 134,
            column: 22
          },
          end: {
            line: 134,
            column: 23
          }
        }],
        line: 131
      },
      "9": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 152,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 151,
            column: 69
          }
        }, {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 71
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 169,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 71
          }
        }, {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 169,
            column: 73
          }
        }],
        line: 168
      },
      "13": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "14": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 186,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 72
          }
        }, {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 74
          }
        }],
        line: 185
      },
      "15": {
        loc: {
          start: {
            line: 191,
            column: 20
          },
          end: {
            line: 191,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 33
          },
          end: {
            line: 191,
            column: 35
          }
        }],
        line: 191
      },
      "16": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "17": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "18": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "19": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "20": {
        loc: {
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "21": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "22": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "23": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "24": {
        loc: {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "25": {
        loc: {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 35
          }
        }, {
          start: {
            line: 285,
            column: 39
          },
          end: {
            line: 285,
            column: 72
          }
        }],
        line: 285
      },
      "26": {
        loc: {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "27": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 338,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 338,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "28": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/emergency-operations-performance-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/emergency-operations-performance-monitor.ts"],
      sourcesContent: ["/**\n * Emergency Operations Performance Monitor\n *\n * Tracks and validates that emergency operations complete within 5 seconds\n * with a success rate > 95% as required by the Bedrock Activation specification.\n *\n * Key Requirements:\n * - Emergency operations must complete within 5 seconds\n * - Success rate must be > 95% over a rolling window\n * - Real-time monitoring and alerting\n * - Integration with existing monitoring systems\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { CircuitBreaker } from \"./circuit-breaker\";\n\n// Performance Metrics for Emergency and Critical Operations\nexport interface EmergencyOperationMetrics {\n  operationId: string;\n  timestamp: Date;\n  latencyMs: number;\n  success: boolean;\n  withinSLA: boolean; // < 5000ms for emergency, < 10000ms for critical\n  operationType: string;\n  priority: \"emergency\" | \"critical\"; // Track operation priority\n  correlationId?: string;\n  error?: string;\n}\n\n// Performance Statistics\nexport interface EmergencyPerformanceStats {\n  totalOperations: number;\n  successfulOperations: number;\n  operationsWithinSLA: number;\n  successRate: number; // percentage\n  slaComplianceRate: number; // percentage\n  averageLatencyMs: number;\n  p95LatencyMs: number;\n  p99LatencyMs: number;\n  lastUpdated: Date;\n  windowStartTime: Date;\n  windowEndTime: Date;\n  // Separate stats for emergency vs critical operations\n  emergencyOperations: {\n    total: number;\n    successful: number;\n    withinSLA: number;\n    averageLatencyMs: number;\n  };\n  criticalOperations: {\n    total: number;\n    successful: number;\n    withinSLA: number;\n    averageLatencyMs: number;\n  };\n}\n\n// Alert Configuration\nexport interface EmergencyPerformanceAlert {\n  type:\n    | \"SLA_BREACH\"\n    | \"SUCCESS_RATE_LOW\"\n    | \"LATENCY_HIGH\"\n    | \"CIRCUIT_BREAKER_OPEN\";\n  severity: \"WARNING\" | \"CRITICAL\";\n  message: string;\n  timestamp: Date;\n  metrics: EmergencyPerformanceStats;\n  threshold: number;\n  actualValue: number;\n}\n\n// Configuration for Performance Monitor\nexport interface EmergencyPerformanceConfig {\n  emergencySlaThresholdMs: number; // 5000ms for emergency operations\n  criticalSlaThresholdMs: number; // 10000ms for critical operations\n  successRateThreshold: number; // 95% minimum success rate\n  rollingWindowMinutes: number; // Time window for calculations\n  alertingEnabled: boolean;\n  circuitBreakerEnabled: boolean;\n  maxMetricsRetention: number; // Maximum metrics to keep in memory\n}\n\n/**\n * Emergency Operations Performance Monitor\n *\n * Provides real-time monitoring and validation of emergency operation performance\n * with automatic alerting when SLA thresholds are breached.\n */\nexport class EmergencyOperationsPerformanceMonitor {\n  private metrics: EmergencyOperationMetrics[] = [];\n  private alerts: EmergencyPerformanceAlert[] = [];\n  private auditTrail: AuditTrailSystem;\n  private circuitBreaker?: CircuitBreaker;\n  private config: EmergencyPerformanceConfig;\n\n  constructor(\n    config: Partial<EmergencyPerformanceConfig> = {},\n    auditTrail?: AuditTrailSystem,\n    circuitBreaker?: CircuitBreaker\n  ) {\n    this.config = {\n      emergencySlaThresholdMs: 5000, // 5 seconds for emergency operations\n      criticalSlaThresholdMs: 10000, // 10 seconds for critical operations\n      successRateThreshold: 95, // 95% minimum success rate\n      rollingWindowMinutes: 60, // 1 hour rolling window\n      alertingEnabled: true,\n      circuitBreakerEnabled: true,\n      maxMetricsRetention: 1000, // Keep last 1000 metrics\n      ...config,\n    };\n\n    this.auditTrail = auditTrail || new AuditTrailSystem();\n    this.circuitBreaker = circuitBreaker;\n  }\n\n  /**\n   * Record an emergency operation performance metric\n   */\n  async recordEmergencyOperation(\n    operationId: string,\n    latencyMs: number,\n    success: boolean,\n    operationType: string = \"emergency\",\n    correlationId?: string,\n    error?: string,\n    priority: \"emergency\" | \"critical\" = \"emergency\"\n  ): Promise<void> {\n    // Determine SLA threshold based on priority\n    const slaThreshold =\n      priority === \"emergency\"\n        ? this.config.emergencySlaThresholdMs\n        : this.config.criticalSlaThresholdMs;\n\n    const metric: EmergencyOperationMetrics = {\n      operationId,\n      timestamp: new Date(),\n      latencyMs,\n      success,\n      withinSLA: latencyMs < slaThreshold,\n      operationType,\n      priority,\n      correlationId,\n      error,\n    };\n\n    // Add to metrics collection\n    this.metrics.push(metric);\n\n    // Maintain metrics retention limit\n    if (this.metrics.length > this.config.maxMetricsRetention) {\n      this.metrics = this.metrics.slice(-this.config.maxMetricsRetention);\n    }\n\n    // Log to audit trail\n    await this.auditTrail.logEvent({\n      eventType: \"emergency_operation_performance\",\n      userId: \"system\",\n      action: \"record_metric\",\n      resource: `emergency_operation:${operationId}`,\n      metadata: {\n        latencyMs,\n        success,\n        withinSLA: metric.withinSLA,\n        operationType,\n        correlationId,\n      },\n      timestamp: new Date(),\n      ipAddress: \"127.0.0.1\",\n      userAgent: \"EmergencyOperationsPerformanceMonitor\",\n    });\n\n    // Check for SLA breaches and trigger alerts\n    await this.checkPerformanceThresholds();\n  }\n\n  /**\n   * Get current performance statistics for the rolling window\n   */\n  getCurrentPerformanceStats(): EmergencyPerformanceStats {\n    const windowStart = new Date(\n      Date.now() - this.config.rollingWindowMinutes * 60 * 1000\n    );\n    const windowMetrics = this.metrics.filter(\n      (m) => m.timestamp >= windowStart\n    );\n\n    if (windowMetrics.length === 0) {\n      return {\n        totalOperations: 0,\n        successfulOperations: 0,\n        operationsWithinSLA: 0,\n        successRate: 100,\n        slaComplianceRate: 100,\n        averageLatencyMs: 0,\n        p95LatencyMs: 0,\n        p99LatencyMs: 0,\n        lastUpdated: new Date(),\n        windowStartTime: windowStart,\n        windowEndTime: new Date(),\n      };\n    }\n\n    const successfulOps = windowMetrics.filter((m) => m.success).length;\n    const slaCompliantOps = windowMetrics.filter((m) => m.withinSLA).length;\n    const latencies = windowMetrics\n      .map((m) => m.latencyMs)\n      .sort((a, b) => a - b);\n\n    // Separate emergency and critical operations\n    const emergencyOps = windowMetrics.filter(\n      (m) => m.priority === \"emergency\"\n    );\n    const criticalOps = windowMetrics.filter((m) => m.priority === \"critical\");\n\n    const stats: EmergencyPerformanceStats = {\n      totalOperations: windowMetrics.length,\n      successfulOperations: successfulOps,\n      operationsWithinSLA: slaCompliantOps,\n      successRate: (successfulOps / windowMetrics.length) * 100,\n      slaComplianceRate: (slaCompliantOps / windowMetrics.length) * 100,\n      averageLatencyMs:\n        latencies.reduce((sum, lat) => sum + lat, 0) / latencies.length,\n      p95LatencyMs: this.calculatePercentile(latencies, 95),\n      p99LatencyMs: this.calculatePercentile(latencies, 99),\n      lastUpdated: new Date(),\n      emergencyOperations: {\n        total: emergencyOps.length,\n        successful: emergencyOps.filter((m) => m.success).length,\n        withinSLA: emergencyOps.filter((m) => m.withinSLA).length,\n        averageLatencyMs:\n          emergencyOps.length > 0\n            ? emergencyOps.reduce((sum, m) => sum + m.latencyMs, 0) /\n              emergencyOps.length\n            : 0,\n      },\n      criticalOperations: {\n        total: criticalOps.length,\n        successful: criticalOps.filter((m) => m.success).length,\n        withinSLA: criticalOps.filter((m) => m.withinSLA).length,\n        averageLatencyMs:\n          criticalOps.length > 0\n            ? criticalOps.reduce((sum, m) => sum + m.latencyMs, 0) /\n              criticalOps.length\n            : 0,\n      },\n      windowStartTime: windowStart,\n      windowEndTime: new Date(),\n    };\n\n    return stats;\n  }\n\n  /**\n   * Check if current performance meets SLA requirements\n   */\n  isPerformanceWithinSLA(): boolean {\n    const stats = this.getCurrentPerformanceStats();\n\n    // Must have at least some operations to validate\n    if (stats.totalOperations === 0) {\n      return true; // No operations = no violations\n    }\n\n    // Check both success rate and SLA compliance rate\n    return (\n      stats.successRate >= this.config.successRateThreshold &&\n      stats.slaComplianceRate >= this.config.successRateThreshold\n    );\n  }\n\n  /**\n   * Check if critical operations specifically meet SLA requirements (>95% within 10s)\n   */\n  isCriticalOperationsPerformanceWithinSLA(): boolean {\n    const stats = this.getCurrentPerformanceStats();\n\n    // Must have at least some critical operations to validate\n    if (stats.criticalOperations.total === 0) {\n      return true; // No critical operations = no violations\n    }\n\n    const criticalSuccessRate =\n      (stats.criticalOperations.successful / stats.criticalOperations.total) *\n      100;\n    const criticalSlaComplianceRate =\n      (stats.criticalOperations.withinSLA / stats.criticalOperations.total) *\n      100;\n\n    // Check both success rate and SLA compliance rate for critical operations\n    return (\n      criticalSuccessRate >= this.config.successRateThreshold &&\n      criticalSlaComplianceRate >= this.config.successRateThreshold\n    );\n  }\n\n  /**\n   * Check if emergency operations specifically meet SLA requirements (>95% within 5s)\n   */\n  isEmergencyOperationsPerformanceWithinSLA(): boolean {\n    const stats = this.getCurrentPerformanceStats();\n\n    // Must have at least some emergency operations to validate\n    if (stats.emergencyOperations.total === 0) {\n      return true; // No emergency operations = no violations\n    }\n\n    const emergencySuccessRate =\n      (stats.emergencyOperations.successful / stats.emergencyOperations.total) *\n      100;\n    const emergencySlaComplianceRate =\n      (stats.emergencyOperations.withinSLA / stats.emergencyOperations.total) *\n      100;\n\n    // Check both success rate and SLA compliance rate for emergency operations\n    return (\n      emergencySuccessRate >= this.config.successRateThreshold &&\n      emergencySlaComplianceRate >= this.config.successRateThreshold\n    );\n  }\n\n  /**\n   * Get recent alerts\n   */\n  getRecentAlerts(limitHours: number = 24): EmergencyPerformanceAlert[] {\n    const cutoff = new Date(Date.now() - limitHours * 60 * 60 * 1000);\n    return this.alerts.filter((alert) => alert.timestamp >= cutoff);\n  }\n\n  /**\n   * Get detailed performance report\n   */\n  getPerformanceReport(): {\n    stats: EmergencyPerformanceStats;\n    isWithinSLA: boolean;\n    recentAlerts: EmergencyPerformanceAlert[];\n    recommendations: string[];\n  } {\n    const stats = this.getCurrentPerformanceStats();\n    const isWithinSLA = this.isPerformanceWithinSLA();\n    const recentAlerts = this.getRecentAlerts();\n\n    const recommendations: string[] = [];\n\n    if (stats.slaComplianceRate < this.config.successRateThreshold) {\n      recommendations.push(\n        `SLA compliance rate (${stats.slaComplianceRate.toFixed(\n          1\n        )}%) is below threshold (${\n          this.config.successRateThreshold\n        }%). Consider optimizing emergency operation processing.`\n      );\n    }\n\n    if (stats.successRate < this.config.successRateThreshold) {\n      recommendations.push(\n        `Success rate (${stats.successRate.toFixed(1)}%) is below threshold (${\n          this.config.successRateThreshold\n        }%). Investigate error patterns and improve error handling.`\n      );\n    }\n\n    if (stats.p95LatencyMs > this.config.slaThresholdMs * 0.8) {\n      recommendations.push(\n        `P95 latency (${stats.p95LatencyMs}ms) is approaching SLA threshold (${this.config.slaThresholdMs}ms). Consider performance optimizations.`\n      );\n    }\n\n    if (stats.totalOperations < 10) {\n      recommendations.push(\n        \"Low operation volume may not provide statistically significant performance metrics. Consider longer monitoring periods.\"\n      );\n    }\n\n    return {\n      stats,\n      isWithinSLA,\n      recentAlerts,\n      recommendations,\n    };\n  }\n\n  /**\n   * Reset performance metrics (for testing or maintenance)\n   */\n  resetMetrics(): void {\n    this.metrics = [];\n    this.alerts = [];\n  }\n\n  /**\n   * Export performance data for external monitoring systems\n   */\n  exportMetrics(): {\n    metrics: EmergencyOperationMetrics[];\n    stats: EmergencyPerformanceStats;\n    config: EmergencyPerformanceConfig;\n  } {\n    return {\n      metrics: [...this.metrics],\n      stats: this.getCurrentPerformanceStats(),\n      config: { ...this.config },\n    };\n  }\n\n  /**\n   * Check performance thresholds and trigger alerts if necessary\n   */\n  private async checkPerformanceThresholds(): Promise<void> {\n    if (!this.config.alertingEnabled) {\n      return;\n    }\n\n    const stats = this.getCurrentPerformanceStats();\n\n    // Check SLA compliance rate\n    if (stats.slaComplianceRate < this.config.successRateThreshold) {\n      await this.triggerAlert({\n        type: \"SLA_BREACH\",\n        severity: \"CRITICAL\",\n        message: `Emergency operations SLA compliance rate (${stats.slaComplianceRate.toFixed(\n          1\n        )}%) is below threshold (${this.config.successRateThreshold}%)`,\n        timestamp: new Date(),\n        metrics: stats,\n        threshold: this.config.successRateThreshold,\n        actualValue: stats.slaComplianceRate,\n      });\n    }\n\n    // Check success rate\n    if (stats.successRate < this.config.successRateThreshold) {\n      await this.triggerAlert({\n        type: \"SUCCESS_RATE_LOW\",\n        severity: \"CRITICAL\",\n        message: `Emergency operations success rate (${stats.successRate.toFixed(\n          1\n        )}%) is below threshold (${this.config.successRateThreshold}%)`,\n        timestamp: new Date(),\n        metrics: stats,\n        threshold: this.config.successRateThreshold,\n        actualValue: stats.successRate,\n      });\n    }\n\n    // Check P95 latency\n    if (stats.p95LatencyMs > this.config.slaThresholdMs) {\n      await this.triggerAlert({\n        type: \"LATENCY_HIGH\",\n        severity: \"WARNING\",\n        message: `Emergency operations P95 latency (${stats.p95LatencyMs}ms) exceeds SLA threshold (${this.config.slaThresholdMs}ms)`,\n        timestamp: new Date(),\n        metrics: stats,\n        threshold: this.config.slaThresholdMs,\n        actualValue: stats.p95LatencyMs,\n      });\n    }\n\n    // Check circuit breaker state\n    if (this.circuitBreaker && this.config.circuitBreakerEnabled) {\n      const cbState = this.circuitBreaker.getState();\n      if (cbState === \"open\") {\n        await this.triggerAlert({\n          type: \"CIRCUIT_BREAKER_OPEN\",\n          severity: \"CRITICAL\",\n          message:\n            \"Emergency operations circuit breaker is open - operations are being blocked\",\n          timestamp: new Date(),\n          metrics: stats,\n          threshold: 0,\n          actualValue: 1,\n        });\n      }\n    }\n  }\n\n  /**\n   * Trigger a performance alert\n   */\n  private async triggerAlert(alert: EmergencyPerformanceAlert): Promise<void> {\n    // Add to alerts collection\n    this.alerts.push(alert);\n\n    // Keep only recent alerts (last 24 hours)\n    const cutoff = new Date(Date.now() - 24 * 60 * 60 * 1000);\n    this.alerts = this.alerts.filter((a) => a.timestamp >= cutoff);\n\n    // Log alert to audit trail\n    await this.auditTrail.logEvent({\n      eventType: \"emergency_performance_alert\",\n      userId: \"system\",\n      action: \"trigger_alert\",\n      resource: `alert:${alert.type}`,\n      metadata: {\n        alertType: alert.type,\n        severity: alert.severity,\n        message: alert.message,\n        threshold: alert.threshold,\n        actualValue: alert.actualValue,\n        stats: alert.metrics,\n      },\n      timestamp: new Date(),\n      ipAddress: \"127.0.0.1\",\n      userAgent: \"EmergencyOperationsPerformanceMonitor\",\n    });\n\n    // Log to console for immediate visibility\n    console.warn(\n      `\uD83D\uDEA8 Emergency Operations Performance Alert [${alert.severity}]: ${alert.message}`\n    );\n  }\n\n  /**\n   * Calculate percentile from sorted array\n   */\n  private calculatePercentile(\n    sortedArray: number[],\n    percentile: number\n  ): number {\n    if (sortedArray.length === 0) return 0;\n\n    const index = (percentile / 100) * (sortedArray.length - 1);\n    const lower = Math.floor(index);\n    const upper = Math.ceil(index);\n\n    if (lower === upper) {\n      return sortedArray[lower];\n    }\n\n    const weight = index - lower;\n    return sortedArray[lower] * (1 - weight) + sortedArray[upper] * weight;\n  }\n}\n\n/**\n * Singleton instance for global emergency operations monitoring\n */\nexport const emergencyOperationsMonitor =\n  new EmergencyOperationsPerformanceMonitor();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a3b3ba045af8186015942d4e7770f4baac34ab82"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1311ry6pn5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1311ry6pn5();
cov_1311ry6pn5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1311ry6pn5().s[1]++;
exports.emergencyOperationsMonitor = exports.EmergencyOperationsPerformanceMonitor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1311ry6pn5().s[2]++, require("tslib"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_1311ry6pn5().s[3]++, require("./audit-trail-system"));
/**
 * Emergency Operations Performance Monitor
 *
 * Provides real-time monitoring and validation of emergency operation performance
 * with automatic alerting when SLA thresholds are breached.
 */
class EmergencyOperationsPerformanceMonitor {
  constructor(config =
  /* istanbul ignore next */
  (cov_1311ry6pn5().b[0][0]++, {}), auditTrail, circuitBreaker) {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[0]++;
    cov_1311ry6pn5().s[4]++;
    this.metrics = [];
    /* istanbul ignore next */
    cov_1311ry6pn5().s[5]++;
    this.alerts = [];
    /* istanbul ignore next */
    cov_1311ry6pn5().s[6]++;
    this.config = Object.assign({
      emergencySlaThresholdMs: 5000,
      criticalSlaThresholdMs: 10000,
      successRateThreshold: 95,
      rollingWindowMinutes: 60,
      alertingEnabled: true,
      circuitBreakerEnabled: true,
      maxMetricsRetention: 1000
    }, config);
    /* istanbul ignore next */
    cov_1311ry6pn5().s[7]++;
    this.auditTrail =
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[1][0]++, auditTrail) ||
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[1][1]++, new audit_trail_system_1.AuditTrailSystem());
    /* istanbul ignore next */
    cov_1311ry6pn5().s[8]++;
    this.circuitBreaker = circuitBreaker;
  }
  /**
   * Record an emergency operation performance metric
   */
  recordEmergencyOperation(operationId_1, latencyMs_1, success_1) {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[1]++;
    cov_1311ry6pn5().s[9]++;
    return tslib_1.__awaiter(this, arguments, void 0, function* (operationId, latencyMs, success, operationType =
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[2][0]++, "emergency"), correlationId, error, priority =
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[3][0]++, "emergency")) {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[2]++;
      // Determine SLA threshold based on priority
      const slaThreshold =
      /* istanbul ignore next */
      (cov_1311ry6pn5().s[10]++, priority === "emergency" ?
      /* istanbul ignore next */
      (cov_1311ry6pn5().b[4][0]++, this.config.emergencySlaThresholdMs) :
      /* istanbul ignore next */
      (cov_1311ry6pn5().b[4][1]++, this.config.criticalSlaThresholdMs));
      const metric =
      /* istanbul ignore next */
      (cov_1311ry6pn5().s[11]++, {
        operationId,
        timestamp: new Date(),
        latencyMs,
        success,
        withinSLA: latencyMs < slaThreshold,
        operationType,
        priority,
        correlationId,
        error
      });
      // Add to metrics collection
      /* istanbul ignore next */
      cov_1311ry6pn5().s[12]++;
      this.metrics.push(metric);
      // Maintain metrics retention limit
      /* istanbul ignore next */
      cov_1311ry6pn5().s[13]++;
      if (this.metrics.length > this.config.maxMetricsRetention) {
        /* istanbul ignore next */
        cov_1311ry6pn5().b[5][0]++;
        cov_1311ry6pn5().s[14]++;
        this.metrics = this.metrics.slice(-this.config.maxMetricsRetention);
      } else
      /* istanbul ignore next */
      {
        cov_1311ry6pn5().b[5][1]++;
      }
      // Log to audit trail
      cov_1311ry6pn5().s[15]++;
      yield this.auditTrail.logEvent({
        eventType: "emergency_operation_performance",
        userId: "system",
        action: "record_metric",
        resource: `emergency_operation:${operationId}`,
        metadata: {
          latencyMs,
          success,
          withinSLA: metric.withinSLA,
          operationType,
          correlationId
        },
        timestamp: new Date(),
        ipAddress: "127.0.0.1",
        userAgent: "EmergencyOperationsPerformanceMonitor"
      });
      // Check for SLA breaches and trigger alerts
      /* istanbul ignore next */
      cov_1311ry6pn5().s[16]++;
      yield this.checkPerformanceThresholds();
    });
  }
  /**
   * Get current performance statistics for the rolling window
   */
  getCurrentPerformanceStats() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[3]++;
    const windowStart =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[17]++, new Date(Date.now() - this.config.rollingWindowMinutes * 60 * 1000));
    const windowMetrics =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[18]++, this.metrics.filter(m => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[4]++;
      cov_1311ry6pn5().s[19]++;
      return m.timestamp >= windowStart;
    }));
    /* istanbul ignore next */
    cov_1311ry6pn5().s[20]++;
    if (windowMetrics.length === 0) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[6][0]++;
      cov_1311ry6pn5().s[21]++;
      return {
        totalOperations: 0,
        successfulOperations: 0,
        operationsWithinSLA: 0,
        successRate: 100,
        slaComplianceRate: 100,
        averageLatencyMs: 0,
        p95LatencyMs: 0,
        p99LatencyMs: 0,
        lastUpdated: new Date(),
        windowStartTime: windowStart,
        windowEndTime: new Date()
      };
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[6][1]++;
    }
    const successfulOps =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[22]++, windowMetrics.filter(m => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[5]++;
      cov_1311ry6pn5().s[23]++;
      return m.success;
    }).length);
    const slaCompliantOps =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[24]++, windowMetrics.filter(m => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[6]++;
      cov_1311ry6pn5().s[25]++;
      return m.withinSLA;
    }).length);
    const latencies =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[26]++, windowMetrics.map(m => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[7]++;
      cov_1311ry6pn5().s[27]++;
      return m.latencyMs;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[8]++;
      cov_1311ry6pn5().s[28]++;
      return a - b;
    }));
    // Separate emergency and critical operations
    const emergencyOps =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[29]++, windowMetrics.filter(m => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[9]++;
      cov_1311ry6pn5().s[30]++;
      return m.priority === "emergency";
    }));
    const criticalOps =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[31]++, windowMetrics.filter(m => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[10]++;
      cov_1311ry6pn5().s[32]++;
      return m.priority === "critical";
    }));
    const stats =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[33]++, {
      totalOperations: windowMetrics.length,
      successfulOperations: successfulOps,
      operationsWithinSLA: slaCompliantOps,
      successRate: successfulOps / windowMetrics.length * 100,
      slaComplianceRate: slaCompliantOps / windowMetrics.length * 100,
      averageLatencyMs: latencies.reduce((sum, lat) => {
        /* istanbul ignore next */
        cov_1311ry6pn5().f[11]++;
        cov_1311ry6pn5().s[34]++;
        return sum + lat;
      }, 0) / latencies.length,
      p95LatencyMs: this.calculatePercentile(latencies, 95),
      p99LatencyMs: this.calculatePercentile(latencies, 99),
      lastUpdated: new Date(),
      emergencyOperations: {
        total: emergencyOps.length,
        successful: emergencyOps.filter(m => {
          /* istanbul ignore next */
          cov_1311ry6pn5().f[12]++;
          cov_1311ry6pn5().s[35]++;
          return m.success;
        }).length,
        withinSLA: emergencyOps.filter(m => {
          /* istanbul ignore next */
          cov_1311ry6pn5().f[13]++;
          cov_1311ry6pn5().s[36]++;
          return m.withinSLA;
        }).length,
        averageLatencyMs: emergencyOps.length > 0 ?
        /* istanbul ignore next */
        (cov_1311ry6pn5().b[7][0]++, emergencyOps.reduce((sum, m) => {
          /* istanbul ignore next */
          cov_1311ry6pn5().f[14]++;
          cov_1311ry6pn5().s[37]++;
          return sum + m.latencyMs;
        }, 0) / emergencyOps.length) :
        /* istanbul ignore next */
        (cov_1311ry6pn5().b[7][1]++, 0)
      },
      criticalOperations: {
        total: criticalOps.length,
        successful: criticalOps.filter(m => {
          /* istanbul ignore next */
          cov_1311ry6pn5().f[15]++;
          cov_1311ry6pn5().s[38]++;
          return m.success;
        }).length,
        withinSLA: criticalOps.filter(m => {
          /* istanbul ignore next */
          cov_1311ry6pn5().f[16]++;
          cov_1311ry6pn5().s[39]++;
          return m.withinSLA;
        }).length,
        averageLatencyMs: criticalOps.length > 0 ?
        /* istanbul ignore next */
        (cov_1311ry6pn5().b[8][0]++, criticalOps.reduce((sum, m) => {
          /* istanbul ignore next */
          cov_1311ry6pn5().f[17]++;
          cov_1311ry6pn5().s[40]++;
          return sum + m.latencyMs;
        }, 0) / criticalOps.length) :
        /* istanbul ignore next */
        (cov_1311ry6pn5().b[8][1]++, 0)
      },
      windowStartTime: windowStart,
      windowEndTime: new Date()
    });
    /* istanbul ignore next */
    cov_1311ry6pn5().s[41]++;
    return stats;
  }
  /**
   * Check if current performance meets SLA requirements
   */
  isPerformanceWithinSLA() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[18]++;
    const stats =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[42]++, this.getCurrentPerformanceStats());
    // Must have at least some operations to validate
    /* istanbul ignore next */
    cov_1311ry6pn5().s[43]++;
    if (stats.totalOperations === 0) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[9][0]++;
      cov_1311ry6pn5().s[44]++;
      return true; // No operations = no violations
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[9][1]++;
    }
    // Check both success rate and SLA compliance rate
    cov_1311ry6pn5().s[45]++;
    return /* istanbul ignore next */(cov_1311ry6pn5().b[10][0]++, stats.successRate >= this.config.successRateThreshold) &&
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[10][1]++, stats.slaComplianceRate >= this.config.successRateThreshold);
  }
  /**
   * Check if critical operations specifically meet SLA requirements (>95% within 10s)
   */
  isCriticalOperationsPerformanceWithinSLA() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[19]++;
    const stats =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[46]++, this.getCurrentPerformanceStats());
    // Must have at least some critical operations to validate
    /* istanbul ignore next */
    cov_1311ry6pn5().s[47]++;
    if (stats.criticalOperations.total === 0) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[11][0]++;
      cov_1311ry6pn5().s[48]++;
      return true; // No critical operations = no violations
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[11][1]++;
    }
    const criticalSuccessRate =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[49]++, stats.criticalOperations.successful / stats.criticalOperations.total * 100);
    const criticalSlaComplianceRate =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[50]++, stats.criticalOperations.withinSLA / stats.criticalOperations.total * 100);
    // Check both success rate and SLA compliance rate for critical operations
    /* istanbul ignore next */
    cov_1311ry6pn5().s[51]++;
    return /* istanbul ignore next */(cov_1311ry6pn5().b[12][0]++, criticalSuccessRate >= this.config.successRateThreshold) &&
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[12][1]++, criticalSlaComplianceRate >= this.config.successRateThreshold);
  }
  /**
   * Check if emergency operations specifically meet SLA requirements (>95% within 5s)
   */
  isEmergencyOperationsPerformanceWithinSLA() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[20]++;
    const stats =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[52]++, this.getCurrentPerformanceStats());
    // Must have at least some emergency operations to validate
    /* istanbul ignore next */
    cov_1311ry6pn5().s[53]++;
    if (stats.emergencyOperations.total === 0) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[13][0]++;
      cov_1311ry6pn5().s[54]++;
      return true; // No emergency operations = no violations
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[13][1]++;
    }
    const emergencySuccessRate =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[55]++, stats.emergencyOperations.successful / stats.emergencyOperations.total * 100);
    const emergencySlaComplianceRate =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[56]++, stats.emergencyOperations.withinSLA / stats.emergencyOperations.total * 100);
    // Check both success rate and SLA compliance rate for emergency operations
    /* istanbul ignore next */
    cov_1311ry6pn5().s[57]++;
    return /* istanbul ignore next */(cov_1311ry6pn5().b[14][0]++, emergencySuccessRate >= this.config.successRateThreshold) &&
    /* istanbul ignore next */
    (cov_1311ry6pn5().b[14][1]++, emergencySlaComplianceRate >= this.config.successRateThreshold);
  }
  /**
   * Get recent alerts
   */
  getRecentAlerts(limitHours =
  /* istanbul ignore next */
  (cov_1311ry6pn5().b[15][0]++, 24)) {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[21]++;
    const cutoff =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[58]++, new Date(Date.now() - limitHours * 60 * 60 * 1000));
    /* istanbul ignore next */
    cov_1311ry6pn5().s[59]++;
    return this.alerts.filter(alert => {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[22]++;
      cov_1311ry6pn5().s[60]++;
      return alert.timestamp >= cutoff;
    });
  }
  /**
   * Get detailed performance report
   */
  getPerformanceReport() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[23]++;
    const stats =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[61]++, this.getCurrentPerformanceStats());
    const isWithinSLA =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[62]++, this.isPerformanceWithinSLA());
    const recentAlerts =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[63]++, this.getRecentAlerts());
    const recommendations =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[64]++, []);
    /* istanbul ignore next */
    cov_1311ry6pn5().s[65]++;
    if (stats.slaComplianceRate < this.config.successRateThreshold) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[16][0]++;
      cov_1311ry6pn5().s[66]++;
      recommendations.push(`SLA compliance rate (${stats.slaComplianceRate.toFixed(1)}%) is below threshold (${this.config.successRateThreshold}%). Consider optimizing emergency operation processing.`);
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[16][1]++;
    }
    cov_1311ry6pn5().s[67]++;
    if (stats.successRate < this.config.successRateThreshold) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[17][0]++;
      cov_1311ry6pn5().s[68]++;
      recommendations.push(`Success rate (${stats.successRate.toFixed(1)}%) is below threshold (${this.config.successRateThreshold}%). Investigate error patterns and improve error handling.`);
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[17][1]++;
    }
    cov_1311ry6pn5().s[69]++;
    if (stats.p95LatencyMs > this.config.slaThresholdMs * 0.8) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[18][0]++;
      cov_1311ry6pn5().s[70]++;
      recommendations.push(`P95 latency (${stats.p95LatencyMs}ms) is approaching SLA threshold (${this.config.slaThresholdMs}ms). Consider performance optimizations.`);
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[18][1]++;
    }
    cov_1311ry6pn5().s[71]++;
    if (stats.totalOperations < 10) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[19][0]++;
      cov_1311ry6pn5().s[72]++;
      recommendations.push("Low operation volume may not provide statistically significant performance metrics. Consider longer monitoring periods.");
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[19][1]++;
    }
    cov_1311ry6pn5().s[73]++;
    return {
      stats,
      isWithinSLA,
      recentAlerts,
      recommendations
    };
  }
  /**
   * Reset performance metrics (for testing or maintenance)
   */
  resetMetrics() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[24]++;
    cov_1311ry6pn5().s[74]++;
    this.metrics = [];
    /* istanbul ignore next */
    cov_1311ry6pn5().s[75]++;
    this.alerts = [];
  }
  /**
   * Export performance data for external monitoring systems
   */
  exportMetrics() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[25]++;
    cov_1311ry6pn5().s[76]++;
    return {
      metrics: [...this.metrics],
      stats: this.getCurrentPerformanceStats(),
      config: Object.assign({}, this.config)
    };
  }
  /**
   * Check performance thresholds and trigger alerts if necessary
   */
  checkPerformanceThresholds() {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[26]++;
    cov_1311ry6pn5().s[77]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[27]++;
      cov_1311ry6pn5().s[78]++;
      if (!this.config.alertingEnabled) {
        /* istanbul ignore next */
        cov_1311ry6pn5().b[20][0]++;
        cov_1311ry6pn5().s[79]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1311ry6pn5().b[20][1]++;
      }
      const stats =
      /* istanbul ignore next */
      (cov_1311ry6pn5().s[80]++, this.getCurrentPerformanceStats());
      // Check SLA compliance rate
      /* istanbul ignore next */
      cov_1311ry6pn5().s[81]++;
      if (stats.slaComplianceRate < this.config.successRateThreshold) {
        /* istanbul ignore next */
        cov_1311ry6pn5().b[21][0]++;
        cov_1311ry6pn5().s[82]++;
        yield this.triggerAlert({
          type: "SLA_BREACH",
          severity: "CRITICAL",
          message: `Emergency operations SLA compliance rate (${stats.slaComplianceRate.toFixed(1)}%) is below threshold (${this.config.successRateThreshold}%)`,
          timestamp: new Date(),
          metrics: stats,
          threshold: this.config.successRateThreshold,
          actualValue: stats.slaComplianceRate
        });
      } else
      /* istanbul ignore next */
      {
        cov_1311ry6pn5().b[21][1]++;
      }
      // Check success rate
      cov_1311ry6pn5().s[83]++;
      if (stats.successRate < this.config.successRateThreshold) {
        /* istanbul ignore next */
        cov_1311ry6pn5().b[22][0]++;
        cov_1311ry6pn5().s[84]++;
        yield this.triggerAlert({
          type: "SUCCESS_RATE_LOW",
          severity: "CRITICAL",
          message: `Emergency operations success rate (${stats.successRate.toFixed(1)}%) is below threshold (${this.config.successRateThreshold}%)`,
          timestamp: new Date(),
          metrics: stats,
          threshold: this.config.successRateThreshold,
          actualValue: stats.successRate
        });
      } else
      /* istanbul ignore next */
      {
        cov_1311ry6pn5().b[22][1]++;
      }
      // Check P95 latency
      cov_1311ry6pn5().s[85]++;
      if (stats.p95LatencyMs > this.config.slaThresholdMs) {
        /* istanbul ignore next */
        cov_1311ry6pn5().b[23][0]++;
        cov_1311ry6pn5().s[86]++;
        yield this.triggerAlert({
          type: "LATENCY_HIGH",
          severity: "WARNING",
          message: `Emergency operations P95 latency (${stats.p95LatencyMs}ms) exceeds SLA threshold (${this.config.slaThresholdMs}ms)`,
          timestamp: new Date(),
          metrics: stats,
          threshold: this.config.slaThresholdMs,
          actualValue: stats.p95LatencyMs
        });
      } else
      /* istanbul ignore next */
      {
        cov_1311ry6pn5().b[23][1]++;
      }
      // Check circuit breaker state
      cov_1311ry6pn5().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_1311ry6pn5().b[25][0]++, this.circuitBreaker) &&
      /* istanbul ignore next */
      (cov_1311ry6pn5().b[25][1]++, this.config.circuitBreakerEnabled)) {
        /* istanbul ignore next */
        cov_1311ry6pn5().b[24][0]++;
        const cbState =
        /* istanbul ignore next */
        (cov_1311ry6pn5().s[88]++, this.circuitBreaker.getState());
        /* istanbul ignore next */
        cov_1311ry6pn5().s[89]++;
        if (cbState === "open") {
          /* istanbul ignore next */
          cov_1311ry6pn5().b[26][0]++;
          cov_1311ry6pn5().s[90]++;
          yield this.triggerAlert({
            type: "CIRCUIT_BREAKER_OPEN",
            severity: "CRITICAL",
            message: "Emergency operations circuit breaker is open - operations are being blocked",
            timestamp: new Date(),
            metrics: stats,
            threshold: 0,
            actualValue: 1
          });
        } else
        /* istanbul ignore next */
        {
          cov_1311ry6pn5().b[26][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1311ry6pn5().b[24][1]++;
      }
    });
  }
  /**
   * Trigger a performance alert
   */
  triggerAlert(alert) {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[28]++;
    cov_1311ry6pn5().s[91]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1311ry6pn5().f[29]++;
      cov_1311ry6pn5().s[92]++;
      // Add to alerts collection
      this.alerts.push(alert);
      // Keep only recent alerts (last 24 hours)
      const cutoff =
      /* istanbul ignore next */
      (cov_1311ry6pn5().s[93]++, new Date(Date.now() - 24 * 60 * 60 * 1000));
      /* istanbul ignore next */
      cov_1311ry6pn5().s[94]++;
      this.alerts = this.alerts.filter(a => {
        /* istanbul ignore next */
        cov_1311ry6pn5().f[30]++;
        cov_1311ry6pn5().s[95]++;
        return a.timestamp >= cutoff;
      });
      // Log alert to audit trail
      /* istanbul ignore next */
      cov_1311ry6pn5().s[96]++;
      yield this.auditTrail.logEvent({
        eventType: "emergency_performance_alert",
        userId: "system",
        action: "trigger_alert",
        resource: `alert:${alert.type}`,
        metadata: {
          alertType: alert.type,
          severity: alert.severity,
          message: alert.message,
          threshold: alert.threshold,
          actualValue: alert.actualValue,
          stats: alert.metrics
        },
        timestamp: new Date(),
        ipAddress: "127.0.0.1",
        userAgent: "EmergencyOperationsPerformanceMonitor"
      });
      // Log to console for immediate visibility
      /* istanbul ignore next */
      cov_1311ry6pn5().s[97]++;
      console.warn(`🚨 Emergency Operations Performance Alert [${alert.severity}]: ${alert.message}`);
    });
  }
  /**
   * Calculate percentile from sorted array
   */
  calculatePercentile(sortedArray, percentile) {
    /* istanbul ignore next */
    cov_1311ry6pn5().f[31]++;
    cov_1311ry6pn5().s[98]++;
    if (sortedArray.length === 0) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[27][0]++;
      cov_1311ry6pn5().s[99]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[27][1]++;
    }
    const index =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[100]++, percentile / 100 * (sortedArray.length - 1));
    const lower =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[101]++, Math.floor(index));
    const upper =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[102]++, Math.ceil(index));
    /* istanbul ignore next */
    cov_1311ry6pn5().s[103]++;
    if (lower === upper) {
      /* istanbul ignore next */
      cov_1311ry6pn5().b[28][0]++;
      cov_1311ry6pn5().s[104]++;
      return sortedArray[lower];
    } else
    /* istanbul ignore next */
    {
      cov_1311ry6pn5().b[28][1]++;
    }
    const weight =
    /* istanbul ignore next */
    (cov_1311ry6pn5().s[105]++, index - lower);
    /* istanbul ignore next */
    cov_1311ry6pn5().s[106]++;
    return sortedArray[lower] * (1 - weight) + sortedArray[upper] * weight;
  }
}
/* istanbul ignore next */
cov_1311ry6pn5().s[107]++;
exports.EmergencyOperationsPerformanceMonitor = EmergencyOperationsPerformanceMonitor;
/**
 * Singleton instance for global emergency operations monitoring
 */
/* istanbul ignore next */
cov_1311ry6pn5().s[108]++;
exports.emergencyOperationsMonitor = new EmergencyOperationsPerformanceMonitor();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,