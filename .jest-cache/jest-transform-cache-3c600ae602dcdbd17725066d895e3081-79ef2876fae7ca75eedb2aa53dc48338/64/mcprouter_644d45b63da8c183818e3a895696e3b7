14c9b4bfbd13f1b7dee3fe53b402f3e2
"use strict";

/**
 * MCP Router - Model Context Protocol Integration for Hybrid Bedrock Support
 *
 * This module implements MCP (Model Context Protocol) integration for the Bedrock
 * Support Mode, providing reliable communication between Bedrock and Kiro through
 * MCP with message queuing, retry logic, and health monitoring.
 */
/* istanbul ignore next */
function cov_1jps2o9q2k() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-router.ts";
  var hash = "0bc971a2899e7437284e79c064897dcd18eeda68";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-router.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 27
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 51
        }
      },
      "4": {
        start: {
          line: 13,
          column: 27
        },
        end: {
          line: 13,
          column: 56
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "6": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "7": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 260
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 58
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "21": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "22": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 40
        }
      },
      "23": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "24": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 58,
          column: 40
        }
      },
      "25": {
        start: {
          line: 59,
          column: 34
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "26": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "27": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 64,
          column: 17
        }
      },
      "28": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 67
        }
      },
      "29": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 68,
          column: 17
        }
      },
      "30": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 74
        }
      },
      "31": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 46
        }
      },
      "32": {
        start: {
          line: 72,
          column: 35
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "33": {
        start: {
          line: 89,
          column: 33
        },
        end: {
          line: 89,
          column: 72
        }
      },
      "34": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 65
        }
      },
      "35": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 94,
          column: 18
        }
      },
      "36": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 67
        }
      },
      "37": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 104,
          column: 18
        }
      },
      "38": {
        start: {
          line: 107,
          column: 34
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "39": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 53
        }
      },
      "40": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 112,
          column: 81
        }
      },
      "41": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 62
        }
      },
      "42": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "43": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "44": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 134,
          column: 67
        }
      },
      "45": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 76
        }
      },
      "46": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 53
        }
      },
      "47": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "48": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "49": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "50": {
        start: {
          line: 142,
          column: 17
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "51": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 66
        }
      },
      "52": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 52
        }
      },
      "53": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 150,
          column: 17
        }
      },
      "54": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 72
        }
      },
      "55": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 52
        }
      },
      "56": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "57": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 156,
          column: 77
        }
      },
      "58": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 70
        }
      },
      "59": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 56
        }
      },
      "60": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 48
        }
      },
      "61": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "62": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "63": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 63
        }
      },
      "64": {
        start: {
          line: 181,
          column: 34
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "65": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 60
        }
      },
      "66": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 207,
          column: 11
        }
      },
      "67": {
        start: {
          line: 197,
          column: 34
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "68": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 63
        }
      },
      "69": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 301
        }
      },
      "70": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 11
        }
      },
      "71": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 36
        }
      },
      "72": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 37
        }
      },
      "73": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "74": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 34
        }
      },
      "75": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 36
        }
      },
      "76": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "77": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 52
        }
      },
      "78": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 49
        }
      },
      "79": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "80": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 54
        }
      },
      "81": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 52
        }
      },
      "82": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 244,
          column: 11
        }
      },
      "83": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "84": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 54
        }
      },
      "85": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 68
        }
      },
      "86": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "87": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "88": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 54
        }
      },
      "89": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 68
        }
      },
      "90": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "91": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 36
        }
      },
      "92": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 35
        }
      },
      "93": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 34
        }
      },
      "94": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 37
        }
      },
      "95": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 32
        }
      },
      "96": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 276,
          column: 10
        }
      },
      "97": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "98": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "99": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "100": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 73
        }
      },
      "101": {
        start: {
          line: 292,
          column: 16
        },
        end: {
          line: 300,
          column: 18
        }
      },
      "102": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 62
        }
      },
      "103": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 294,
          column: 69
        }
      },
      "104": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 55
        }
      },
      "105": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 49
        }
      },
      "106": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 298,
          column: 52
        }
      },
      "107": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 48
        }
      },
      "108": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 303,
          column: 18
        }
      },
      "109": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 51
        }
      },
      "110": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 312,
          column: 18
        }
      },
      "111": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 57
        }
      },
      "112": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 309,
          column: 21
        }
      },
      "113": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 308,
          column: 76
        }
      },
      "114": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 310,
          column: 56
        }
      },
      "115": {
        start: {
          line: 311,
          column: 20
        },
        end: {
          line: 311,
          column: 48
        }
      },
      "116": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 320,
          column: 18
        }
      },
      "117": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 66
        }
      },
      "118": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 65
        }
      },
      "119": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 56
        }
      },
      "120": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 317,
          column: 52
        }
      },
      "121": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 77
        }
      },
      "122": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 44
        }
      },
      "123": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 362,
          column: 11
        }
      },
      "124": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 333,
          column: 13
        }
      },
      "125": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 23
        }
      },
      "126": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 361,
          column: 13
        }
      },
      "127": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 355,
          column: 19
        }
      },
      "128": {
        start: {
          line: 337,
          column: 36
        },
        end: {
          line: 339,
          column: 43
        }
      },
      "129": {
        start: {
          line: 338,
          column: 24
        },
        end: {
          line: 338,
          column: 64
        }
      },
      "130": {
        start: {
          line: 340,
          column: 44
        },
        end: {
          line: 353,
          column: 21
        }
      },
      "131": {
        start: {
          line: 342,
          column: 24
        },
        end: {
          line: 352,
          column: 25
        }
      },
      "132": {
        start: {
          line: 343,
          column: 28
        },
        end: {
          line: 343,
          column: 50
        }
      },
      "133": {
        start: {
          line: 344,
          column: 28
        },
        end: {
          line: 344,
          column: 44
        }
      },
      "134": {
        start: {
          line: 346,
          column: 29
        },
        end: {
          line: 352,
          column: 25
        }
      },
      "135": {
        start: {
          line: 347,
          column: 28
        },
        end: {
          line: 347,
          column: 50
        }
      },
      "136": {
        start: {
          line: 348,
          column: 28
        },
        end: {
          line: 348,
          column: 67
        }
      },
      "137": {
        start: {
          line: 351,
          column: 28
        },
        end: {
          line: 351,
          column: 61
        }
      },
      "138": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 38
        }
      },
      "139": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 50
        }
      },
      "140": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 46
        }
      },
      "141": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 382,
          column: 11
        }
      },
      "142": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 32
        }
      },
      "143": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "144": {
        start: {
          line: 367,
          column: 31
        },
        end: {
          line: 367,
          column: 32
        }
      },
      "145": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 379,
          column: 17
        }
      },
      "146": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 49
        }
      },
      "147": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 59
        }
      },
      "148": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 38
        }
      },
      "149": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 378,
          column: 21
        }
      },
      "150": {
        start: {
          line: 375,
          column: 38
        },
        end: {
          line: 375,
          column: 83
        }
      },
      "151": {
        start: {
          line: 376,
          column: 24
        },
        end: {
          line: 376,
          column: 135
        }
      },
      "152": {
        start: {
          line: 377,
          column: 24
        },
        end: {
          line: 377,
          column: 83
        }
      },
      "153": {
        start: {
          line: 377,
          column: 55
        },
        end: {
          line: 377,
          column: 81
        }
      },
      "154": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 83
        }
      },
      "155": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 423,
          column: 11
        }
      },
      "156": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 422,
          column: 15
        }
      },
      "157": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 393,
          column: 17
        }
      },
      "158": {
        start: {
          line: 390,
          column: 20
        },
        end: {
          line: 390,
          column: 50
        }
      },
      "159": {
        start: {
          line: 391,
          column: 20
        },
        end: {
          line: 391,
          column: 63
        }
      },
      "160": {
        start: {
          line: 392,
          column: 20
        },
        end: {
          line: 392,
          column: 27
        }
      },
      "161": {
        start: {
          line: 395,
          column: 38
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "162": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 402,
          column: 65
        }
      },
      "163": {
        start: {
          line: 404,
          column: 34
        },
        end: {
          line: 411,
          column: 58
        }
      },
      "164": {
        start: {
          line: 405,
          column: 20
        },
        end: {
          line: 410,
          column: 21
        }
      },
      "165": {
        start: {
          line: 406,
          column: 24
        },
        end: {
          line: 406,
          column: 64
        }
      },
      "166": {
        start: {
          line: 407,
          column: 24
        },
        end: {
          line: 407,
          column: 61
        }
      },
      "167": {
        start: {
          line: 408,
          column: 24
        },
        end: {
          line: 408,
          column: 62
        }
      },
      "168": {
        start: {
          line: 409,
          column: 24
        },
        end: {
          line: 409,
          column: 67
        }
      },
      "169": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 52
        }
      },
      "170": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 421,
          column: 17
        }
      },
      "171": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 416,
          column: 61
        }
      },
      "172": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 59
        }
      },
      "173": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "174": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 437,
          column: 13
        }
      },
      "175": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 432,
          column: 17
        }
      },
      "176": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 58
        }
      },
      "177": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 67
        }
      },
      "178": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 434,
          column: 46
        }
      },
      "179": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 435,
          column: 84
        }
      },
      "180": {
        start: {
          line: 436,
          column: 16
        },
        end: {
          line: 436,
          column: 23
        }
      },
      "181": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 78
        }
      },
      "182": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 72
        }
      },
      "183": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "184": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 54
        }
      },
      "185": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 63
        }
      },
      "186": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 66
        }
      },
      "187": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 40
        }
      },
      "188": {
        start: {
          line: 453,
          column: 30
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "189": {
        start: {
          line: 460,
          column: 32
        },
        end: {
          line: 460,
          column: 82
        }
      },
      "190": {
        start: {
          line: 461,
          column: 26
        },
        end: {
          line: 461,
          column: 51
        }
      },
      "191": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "192": {
        start: {
          line: 462,
          column: 21
        },
        end: {
          line: 462,
          column: 22
        }
      },
      "193": {
        start: {
          line: 463,
          column: 34
        },
        end: {
          line: 463,
          column: 92
        }
      },
      "194": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 467,
          column: 13
        }
      },
      "195": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 32
        }
      },
      "196": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 22
        }
      },
      "197": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 65
        }
      },
      "198": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "199": {
        start: {
          line: 475,
          column: 34
        },
        end: {
          line: 475,
          column: 60
        }
      },
      "200": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 53
        }
      },
      "201": {
        start: {
          line: 481,
          column: 27
        },
        end: {
          line: 481,
          column: 90
        }
      },
      "202": {
        start: {
          line: 481,
          column: 63
        },
        end: {
          line: 481,
          column: 89
        }
      },
      "203": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 484,
          column: 9
        }
      },
      "204": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 53
        }
      },
      "205": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "206": {
        start: {
          line: 489,
          column: 28
        },
        end: {
          line: 489,
          column: 44
        }
      },
      "207": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 515,
          column: 13
        }
      },
      "208": {
        start: {
          line: 492,
          column: 38
        },
        end: {
          line: 492,
          column: 74
        }
      },
      "209": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 496,
          column: 17
        }
      },
      "210": {
        start: {
          line: 495,
          column: 20
        },
        end: {
          line: 495,
          column: 58
        }
      },
      "211": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 56
        }
      },
      "212": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 53
        }
      },
      "213": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 514,
          column: 17
        }
      },
      "214": {
        start: {
          line: 500,
          column: 20
        },
        end: {
          line: 500,
          column: 75
        }
      },
      "215": {
        start: {
          line: 503,
          column: 45
        },
        end: {
          line: 505,
          column: 63
        }
      },
      "216": {
        start: {
          line: 506,
          column: 20
        },
        end: {
          line: 513,
          column: 23
        }
      },
      "217": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 519,
          column: 13
        }
      },
      "218": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 518,
          column: 53
        }
      },
      "219": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 66
        }
      },
      "220": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 552,
          column: 11
        }
      },
      "221": {
        start: {
          line: 528,
          column: 31
        },
        end: {
          line: 538,
          column: 13
        }
      },
      "222": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 551,
          column: 13
        }
      },
      "223": {
        start: {
          line: 542,
          column: 16
        },
        end: {
          line: 547,
          column: 17
        }
      },
      "224": {
        start: {
          line: 543,
          column: 20
        },
        end: {
          line: 543,
          column: 69
        }
      },
      "225": {
        start: {
          line: 546,
          column: 20
        },
        end: {
          line: 546,
          column: 84
        }
      },
      "226": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 550,
          column: 64
        }
      },
      "227": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 561,
          column: 11
        }
      },
      "228": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 557,
          column: 84
        }
      },
      "229": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 560,
          column: 58
        }
      },
      "230": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 564,
          column: 69
        }
      },
      "231": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 576,
          column: 9
        }
      },
      "232": {
        start: {
          line: 569,
          column: 16
        },
        end: {
          line: 569,
          column: 22
        }
      },
      "233": {
        start: {
          line: 572,
          column: 16
        },
        end: {
          line: 572,
          column: 51
        }
      },
      "234": {
        start: {
          line: 573,
          column: 16
        },
        end: {
          line: 573,
          column: 22
        }
      },
      "235": {
        start: {
          line: 575,
          column: 16
        },
        end: {
          line: 575,
          column: 78
        }
      },
      "236": {
        start: {
          line: 580,
          column: 25
        },
        end: {
          line: 593,
          column: 9
        }
      },
      "237": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 596,
          column: 9
        }
      },
      "238": {
        start: {
          line: 595,
          column: 12
        },
        end: {
          line: 595,
          column: 59
        }
      },
      "239": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 602,
          column: 9
        }
      },
      "240": {
        start: {
          line: 600,
          column: 12
        },
        end: {
          line: 600,
          column: 54
        }
      },
      "241": {
        start: {
          line: 601,
          column: 12
        },
        end: {
          line: 601,
          column: 68
        }
      },
      "242": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 606,
          column: 17
        }
      },
      "243": {
        start: {
          line: 604,
          column: 12
        },
        end: {
          line: 604,
          column: 58
        }
      },
      "244": {
        start: {
          line: 605,
          column: 12
        },
        end: {
          line: 605,
          column: 40
        }
      },
      "245": {
        start: {
          line: 607,
          column: 8
        },
        end: {
          line: 607,
          column: 61
        }
      },
      "246": {
        start: {
          line: 614,
          column: 31
        },
        end: {
          line: 614,
          column: 33
        }
      },
      "247": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 629,
          column: 11
        }
      },
      "248": {
        start: {
          line: 617,
          column: 12
        },
        end: {
          line: 628,
          column: 13
        }
      },
      "249": {
        start: {
          line: 618,
          column: 16
        },
        end: {
          line: 618,
          column: 41
        }
      },
      "250": {
        start: {
          line: 619,
          column: 16
        },
        end: {
          line: 619,
          column: 74
        }
      },
      "251": {
        start: {
          line: 620,
          column: 16
        },
        end: {
          line: 620,
          column: 51
        }
      },
      "252": {
        start: {
          line: 624,
          column: 16
        },
        end: {
          line: 626,
          column: 17
        }
      },
      "253": {
        start: {
          line: 625,
          column: 20
        },
        end: {
          line: 625,
          column: 58
        }
      },
      "254": {
        start: {
          line: 627,
          column: 16
        },
        end: {
          line: 627,
          column: 90
        }
      },
      "255": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 37
        }
      },
      "256": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 635,
          column: 11
        }
      },
      "257": {
        start: {
          line: 634,
          column: 12
        },
        end: {
          line: 634,
          column: 51
        }
      },
      "258": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 637,
          column: 36
        }
      },
      "259": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 643,
          column: 9
        }
      },
      "260": {
        start: {
          line: 641,
          column: 12
        },
        end: {
          line: 641,
          column: 52
        }
      },
      "261": {
        start: {
          line: 642,
          column: 12
        },
        end: {
          line: 642,
          column: 66
        }
      },
      "262": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 652,
          column: 45
        }
      },
      "263": {
        start: {
          line: 644,
          column: 53
        },
        end: {
          line: 652,
          column: 10
        }
      },
      "264": {
        start: {
          line: 645,
          column: 12
        },
        end: {
          line: 651,
          column: 13
        }
      },
      "265": {
        start: {
          line: 646,
          column: 16
        },
        end: {
          line: 646,
          column: 48
        }
      },
      "266": {
        start: {
          line: 649,
          column: 16
        },
        end: {
          line: 649,
          column: 65
        }
      },
      "267": {
        start: {
          line: 650,
          column: 16
        },
        end: {
          line: 650,
          column: 56
        }
      },
      "268": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 653,
          column: 59
        }
      },
      "269": {
        start: {
          line: 656,
          column: 8
        },
        end: {
          line: 677,
          column: 11
        }
      },
      "270": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 676,
          column: 13
        }
      },
      "271": {
        start: {
          line: 659,
          column: 38
        },
        end: {
          line: 667,
          column: 17
        }
      },
      "272": {
        start: {
          line: 668,
          column: 16
        },
        end: {
          line: 675,
          column: 17
        }
      },
      "273": {
        start: {
          line: 669,
          column: 20
        },
        end: {
          line: 669,
          column: 58
        }
      },
      "274": {
        start: {
          line: 670,
          column: 20
        },
        end: {
          line: 670,
          column: 62
        }
      },
      "275": {
        start: {
          line: 671,
          column: 20
        },
        end: {
          line: 671,
          column: 75
        }
      },
      "276": {
        start: {
          line: 674,
          column: 20
        },
        end: {
          line: 674,
          column: 60
        }
      },
      "277": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 37
        }
      },
      "278": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 686,
          column: 9
        }
      },
      "279": {
        start: {
          line: 682,
          column: 12
        },
        end: {
          line: 682,
          column: 46
        }
      },
      "280": {
        start: {
          line: 685,
          column: 12
        },
        end: {
          line: 685,
          column: 42
        }
      },
      "281": {
        start: {
          line: 688,
          column: 29
        },
        end: {
          line: 689,
          column: 21
        }
      },
      "282": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 690,
          column: 80
        }
      },
      "283": {
        start: {
          line: 693,
          column: 25
        },
        end: {
          line: 702,
          column: 9
        }
      },
      "284": {
        start: {
          line: 703,
          column: 8
        },
        end: {
          line: 703,
          column: 63
        }
      },
      "285": {
        start: {
          line: 706,
          column: 8
        },
        end: {
          line: 706,
          column: 82
        }
      },
      "286": {
        start: {
          line: 709,
          column: 8
        },
        end: {
          line: 711,
          column: 32
        }
      },
      "287": {
        start: {
          line: 714,
          column: 0
        },
        end: {
          line: 714,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 55
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 55
          },
          end: {
            line: 56,
            column: 56
          }
        },
        loc: {
          start: {
            line: 56,
            column: 68
          },
          end: {
            line: 124,
            column: 9
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 129
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 130,
            column: 56
          }
        },
        loc: {
          start: {
            line: 130,
            column: 68
          },
          end: {
            line: 161,
            column: 9
          }
        },
        line: 130
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 18
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 166
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 54
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 175
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 176,
            column: 55
          },
          end: {
            line: 176,
            column: 56
          }
        },
        loc: {
          start: {
            line: 176,
            column: 68
          },
          end: {
            line: 190,
            column: 9
          }
        },
        line: 176
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 59
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 195
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 196,
            column: 55
          },
          end: {
            line: 196,
            column: 56
          }
        },
        loc: {
          start: {
            line: 196,
            column: 68
          },
          end: {
            line: 207,
            column: 9
          }
        },
        line: 196
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 212
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 14
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 218
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 220,
            column: 37
          },
          end: {
            line: 220,
            column: 38
          }
        },
        loc: {
          start: {
            line: 220,
            column: 51
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 220
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 37
          }
        },
        loc: {
          start: {
            line: 225,
            column: 49
          },
          end: {
            line: 227,
            column: 9
          }
        },
        line: 225
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 239,
            column: 37
          },
          end: {
            line: 239,
            column: 38
          }
        },
        loc: {
          start: {
            line: 239,
            column: 56
          },
          end: {
            line: 244,
            column: 9
          }
        },
        line: 239
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 246,
            column: 35
          },
          end: {
            line: 246,
            column: 36
          }
        },
        loc: {
          start: {
            line: 246,
            column: 54
          },
          end: {
            line: 251,
            column: 9
          }
        },
        line: 246
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 29
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 263
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 278
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 288
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 289,
            column: 55
          },
          end: {
            line: 289,
            column: 56
          }
        },
        loc: {
          start: {
            line: 289,
            column: 68
          },
          end: {
            line: 326,
            column: 9
          }
        },
        line: 289
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 292,
            column: 41
          },
          end: {
            line: 292,
            column: 42
          }
        },
        loc: {
          start: {
            line: 292,
            column: 47
          },
          end: {
            line: 300,
            column: 17
          }
        },
        line: 292
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 301,
            column: 44
          },
          end: {
            line: 301,
            column: 45
          }
        },
        loc: {
          start: {
            line: 301,
            column: 55
          },
          end: {
            line: 303,
            column: 17
          }
        },
        line: 301
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 304,
            column: 42
          },
          end: {
            line: 304,
            column: 43
          }
        },
        loc: {
          start: {
            line: 304,
            column: 48
          },
          end: {
            line: 312,
            column: 17
          }
        },
        line: 304
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 313,
            column: 42
          },
          end: {
            line: 313,
            column: 43
          }
        },
        loc: {
          start: {
            line: 313,
            column: 53
          },
          end: {
            line: 320,
            column: 17
          }
        },
        line: 313
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 23
          },
          end: {
            line: 363,
            column: 5
          }
        },
        line: 328
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 329,
            column: 55
          },
          end: {
            line: 329,
            column: 56
          }
        },
        loc: {
          start: {
            line: 329,
            column: 68
          },
          end: {
            line: 362,
            column: 9
          }
        },
        line: 329
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 336,
            column: 34
          },
          end: {
            line: 336,
            column: 35
          }
        },
        loc: {
          start: {
            line: 336,
            column: 55
          },
          end: {
            line: 355,
            column: 17
          }
        },
        line: 336
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 337,
            column: 47
          },
          end: {
            line: 337,
            column: 48
          }
        },
        loc: {
          start: {
            line: 337,
            column: 53
          },
          end: {
            line: 339,
            column: 21
          }
        },
        line: 337
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 340,
            column: 44
          },
          end: {
            line: 340,
            column: 45
          }
        },
        loc: {
          start: {
            line: 340,
            column: 50
          },
          end: {
            line: 353,
            column: 21
          }
        },
        line: 340
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        loc: {
          start: {
            line: 364,
            column: 30
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 364
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 365,
            column: 55
          },
          end: {
            line: 365,
            column: 56
          }
        },
        loc: {
          start: {
            line: 365,
            column: 68
          },
          end: {
            line: 382,
            column: 9
          }
        },
        line: 365
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 377,
            column: 42
          },
          end: {
            line: 377,
            column: 43
          }
        },
        loc: {
          start: {
            line: 377,
            column: 55
          },
          end: {
            line: 377,
            column: 81
          }
        },
        line: 377
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 25
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 384
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 385,
            column: 55
          },
          end: {
            line: 385,
            column: 56
          }
        },
        loc: {
          start: {
            line: 385,
            column: 68
          },
          end: {
            line: 423,
            column: 9
          }
        },
        line: 385
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 386,
            column: 31
          },
          end: {
            line: 386,
            column: 32
          }
        },
        loc: {
          start: {
            line: 386,
            column: 52
          },
          end: {
            line: 422,
            column: 13
          }
        },
        line: 386
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 404,
            column: 45
          },
          end: {
            line: 404,
            column: 46
          }
        },
        loc: {
          start: {
            line: 404,
            column: 51
          },
          end: {
            line: 411,
            column: 17
          }
        },
        line: 404
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 40
          },
          end: {
            line: 450,
            column: 5
          }
        },
        line: 425
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        },
        loc: {
          start: {
            line: 451,
            column: 38
          },
          end: {
            line: 470,
            column: 5
          }
        },
        line: 451
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 471,
            column: 4
          },
          end: {
            line: 471,
            column: 5
          }
        },
        loc: {
          start: {
            line: 471,
            column: 27
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 471
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 479,
            column: 4
          },
          end: {
            line: 479,
            column: 5
          }
        },
        loc: {
          start: {
            line: 479,
            column: 36
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 479
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 481,
            column: 56
          },
          end: {
            line: 481,
            column: 57
          }
        },
        loc: {
          start: {
            line: 481,
            column: 63
          },
          end: {
            line: 481,
            column: 89
          }
        },
        line: 481
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        loc: {
          start: {
            line: 486,
            column: 24
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 486
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 35
          },
          end: {
            line: 553,
            column: 5
          }
        },
        line: 525
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 526,
            column: 55
          },
          end: {
            line: 526,
            column: 56
          }
        },
        loc: {
          start: {
            line: 526,
            column: 68
          },
          end: {
            line: 552,
            column: 9
          }
        },
        line: 526
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 554,
            column: 4
          },
          end: {
            line: 554,
            column: 5
          }
        },
        loc: {
          start: {
            line: 554,
            column: 38
          },
          end: {
            line: 562,
            column: 5
          }
        },
        line: 554
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 555,
            column: 55
          },
          end: {
            line: 555,
            column: 56
          }
        },
        loc: {
          start: {
            line: 555,
            column: 68
          },
          end: {
            line: 561,
            column: 9
          }
        },
        line: 555
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 563,
            column: 4
          },
          end: {
            line: 563,
            column: 5
          }
        },
        loc: {
          start: {
            line: 563,
            column: 36
          },
          end: {
            line: 577,
            column: 5
          }
        },
        line: 563
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 578,
            column: 4
          },
          end: {
            line: 578,
            column: 5
          }
        },
        loc: {
          start: {
            line: 578,
            column: 34
          },
          end: {
            line: 597,
            column: 5
          }
        },
        line: 578
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 598,
            column: 4
          },
          end: {
            line: 598,
            column: 5
          }
        },
        loc: {
          start: {
            line: 598,
            column: 27
          },
          end: {
            line: 608,
            column: 5
          }
        },
        line: 598
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 603,
            column: 49
          },
          end: {
            line: 603,
            column: 50
          }
        },
        loc: {
          start: {
            line: 603,
            column: 55
          },
          end: {
            line: 606,
            column: 9
          }
        },
        line: 603
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 612,
            column: 4
          },
          end: {
            line: 612,
            column: 5
          }
        },
        loc: {
          start: {
            line: 612,
            column: 31
          },
          end: {
            line: 638,
            column: 5
          }
        },
        line: 612
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 615,
            column: 37
          },
          end: {
            line: 615,
            column: 38
          }
        },
        loc: {
          start: {
            line: 615,
            column: 56
          },
          end: {
            line: 629,
            column: 9
          }
        },
        line: 615
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 633,
            column: 31
          },
          end: {
            line: 633,
            column: 32
          }
        },
        loc: {
          start: {
            line: 633,
            column: 50
          },
          end: {
            line: 635,
            column: 9
          }
        },
        line: 633
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 639,
            column: 4
          },
          end: {
            line: 639,
            column: 5
          }
        },
        loc: {
          start: {
            line: 639,
            column: 28
          },
          end: {
            line: 654,
            column: 5
          }
        },
        line: 639
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 644,
            column: 47
          },
          end: {
            line: 644,
            column: 48
          }
        },
        loc: {
          start: {
            line: 644,
            column: 53
          },
          end: {
            line: 652,
            column: 10
          }
        },
        line: 644
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 644,
            column: 93
          },
          end: {
            line: 644,
            column: 94
          }
        },
        loc: {
          start: {
            line: 644,
            column: 106
          },
          end: {
            line: 652,
            column: 9
          }
        },
        line: 644
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 655,
            column: 4
          },
          end: {
            line: 655,
            column: 5
          }
        },
        loc: {
          start: {
            line: 655,
            column: 25
          },
          end: {
            line: 678,
            column: 5
          }
        },
        line: 655
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 656,
            column: 55
          },
          end: {
            line: 656,
            column: 56
          }
        },
        loc: {
          start: {
            line: 656,
            column: 68
          },
          end: {
            line: 677,
            column: 9
          }
        },
        line: 656
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 679,
            column: 4
          },
          end: {
            line: 679,
            column: 5
          }
        },
        loc: {
          start: {
            line: 679,
            column: 38
          },
          end: {
            line: 691,
            column: 5
          }
        },
        line: 679
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 692,
            column: 4
          },
          end: {
            line: 692,
            column: 5
          }
        },
        loc: {
          start: {
            line: 692,
            column: 49
          },
          end: {
            line: 704,
            column: 5
          }
        },
        line: 692
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 705,
            column: 4
          },
          end: {
            line: 705,
            column: 5
          }
        },
        loc: {
          start: {
            line: 705,
            column: 24
          },
          end: {
            line: 707,
            column: 5
          }
        },
        line: 705
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 708,
            column: 4
          },
          end: {
            line: 708,
            column: 5
          }
        },
        loc: {
          start: {
            line: 708,
            column: 28
          },
          end: {
            line: 712,
            column: 5
          }
        },
        line: 708
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 72
          }
        }, {
          start: {
            line: 32,
            column: 76
          },
          end: {
            line: 32,
            column: 101
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 64,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 99,
            column: 53
          }
        }, {
          start: {
            line: 99,
            column: 57
          },
          end: {
            line: 99,
            column: 70
          }
        }],
        line: 99
      },
      "6": {
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 77
          },
          end: {
            line: 102,
            column: 83
          }
        }, {
          start: {
            line: 102,
            column: 86
          },
          end: {
            line: 102,
            column: 93
          }
        }],
        line: 102
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 102,
            column: 57
          }
        }, {
          start: {
            line: 102,
            column: 61
          },
          end: {
            line: 102,
            column: 74
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 82
          },
          end: {
            line: 103,
            column: 88
          }
        }, {
          start: {
            line: 103,
            column: 91
          },
          end: {
            line: 103,
            column: 103
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 62
          }
        }, {
          start: {
            line: 103,
            column: 66
          },
          end: {
            line: 103,
            column: 79
          }
        }],
        line: 103
      },
      "10": {
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 41
          },
          end: {
            line: 112,
            column: 54
          }
        }, {
          start: {
            line: 112,
            column: 57
          },
          end: {
            line: 112,
            column: 79
          }
        }],
        line: 112
      },
      "11": {
        loc: {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 121,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 52
          },
          end: {
            line: 121,
            column: 65
          }
        }, {
          start: {
            line: 121,
            column: 68
          },
          end: {
            line: 121,
            column: 90
          }
        }],
        line: 121
      },
      "12": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: 142,
            column: 17
          },
          end: {
            line: 152,
            column: 13
          }
        }],
        line: 138
      },
      "13": {
        loc: {
          start: {
            line: 138,
            column: 17
          },
          end: {
            line: 138,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 68
          },
          end: {
            line: 138,
            column: 74
          }
        }, {
          start: {
            line: 138,
            column: 77
          },
          end: {
            line: 138,
            column: 90
          }
        }],
        line: 138
      },
      "14": {
        loc: {
          start: {
            line: 138,
            column: 17
          },
          end: {
            line: 138,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 17
          },
          end: {
            line: 138,
            column: 48
          }
        }, {
          start: {
            line: 138,
            column: 52
          },
          end: {
            line: 138,
            column: 65
          }
        }],
        line: 138
      },
      "15": {
        loc: {
          start: {
            line: 142,
            column: 17
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 17
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: 146,
            column: 17
          },
          end: {
            line: 152,
            column: 13
          }
        }],
        line: 142
      },
      "16": {
        loc: {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 73
          },
          end: {
            line: 142,
            column: 79
          }
        }, {
          start: {
            line: 142,
            column: 82
          },
          end: {
            line: 142,
            column: 95
          }
        }],
        line: 142
      },
      "17": {
        loc: {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 53
          }
        }, {
          start: {
            line: 142,
            column: 57
          },
          end: {
            line: 142,
            column: 70
          }
        }],
        line: 142
      },
      "18": {
        loc: {
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 16
          },
          end: {
            line: 150,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "19": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 170,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 69
          }
        }, {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 169,
            column: 109
          }
        }, {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 170,
            column: 46
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 169,
            column: 13
          },
          end: {
            line: 169,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 64
          },
          end: {
            line: 169,
            column: 70
          }
        }, {
          start: {
            line: 169,
            column: 73
          },
          end: {
            line: 169,
            column: 86
          }
        }],
        line: 169
      },
      "22": {
        loc: {
          start: {
            line: 169,
            column: 13
          },
          end: {
            line: 169,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 13
          },
          end: {
            line: 169,
            column: 44
          }
        }, {
          start: {
            line: 169,
            column: 48
          },
          end: {
            line: 169,
            column: 61
          }
        }],
        line: 169
      },
      "23": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "24": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "25": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "26": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "27": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "28": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "29": {
        loc: {
          start: {
            line: 307,
            column: 20
          },
          end: {
            line: 309,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 20
          },
          end: {
            line: 309,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "30": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "31": {
        loc: {
          start: {
            line: 331,
            column: 17
          },
          end: {
            line: 331,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 68
          },
          end: {
            line: 331,
            column: 74
          }
        }, {
          start: {
            line: 331,
            column: 77
          },
          end: {
            line: 331,
            column: 90
          }
        }],
        line: 331
      },
      "32": {
        loc: {
          start: {
            line: 331,
            column: 17
          },
          end: {
            line: 331,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 17
          },
          end: {
            line: 331,
            column: 48
          }
        }, {
          start: {
            line: 331,
            column: 52
          },
          end: {
            line: 331,
            column: 65
          }
        }],
        line: 331
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        }, {
          start: {
            line: 357,
            column: 17
          },
          end: {
            line: 361,
            column: 13
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 334,
            column: 17
          },
          end: {
            line: 334,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 68
          },
          end: {
            line: 334,
            column: 74
          }
        }, {
          start: {
            line: 334,
            column: 77
          },
          end: {
            line: 334,
            column: 90
          }
        }],
        line: 334
      },
      "35": {
        loc: {
          start: {
            line: 334,
            column: 17
          },
          end: {
            line: 334,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 17
          },
          end: {
            line: 334,
            column: 48
          }
        }, {
          start: {
            line: 334,
            column: 52
          },
          end: {
            line: 334,
            column: 65
          }
        }],
        line: 334
      },
      "36": {
        loc: {
          start: {
            line: 342,
            column: 24
          },
          end: {
            line: 352,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 24
          },
          end: {
            line: 352,
            column: 25
          }
        }, {
          start: {
            line: 346,
            column: 29
          },
          end: {
            line: 352,
            column: 25
          }
        }],
        line: 342
      },
      "37": {
        loc: {
          start: {
            line: 342,
            column: 29
          },
          end: {
            line: 342,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 80
          },
          end: {
            line: 342,
            column: 86
          }
        }, {
          start: {
            line: 342,
            column: 89
          },
          end: {
            line: 342,
            column: 102
          }
        }],
        line: 342
      },
      "38": {
        loc: {
          start: {
            line: 342,
            column: 29
          },
          end: {
            line: 342,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 29
          },
          end: {
            line: 342,
            column: 60
          }
        }, {
          start: {
            line: 342,
            column: 64
          },
          end: {
            line: 342,
            column: 77
          }
        }],
        line: 342
      },
      "39": {
        loc: {
          start: {
            line: 346,
            column: 29
          },
          end: {
            line: 352,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 29
          },
          end: {
            line: 352,
            column: 25
          }
        }, {
          start: {
            line: 350,
            column: 29
          },
          end: {
            line: 352,
            column: 25
          }
        }],
        line: 346
      },
      "40": {
        loc: {
          start: {
            line: 346,
            column: 34
          },
          end: {
            line: 346,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 85
          },
          end: {
            line: 346,
            column: 91
          }
        }, {
          start: {
            line: 346,
            column: 94
          },
          end: {
            line: 346,
            column: 107
          }
        }],
        line: 346
      },
      "41": {
        loc: {
          start: {
            line: 346,
            column: 34
          },
          end: {
            line: 346,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 34
          },
          end: {
            line: 346,
            column: 65
          }
        }, {
          start: {
            line: 346,
            column: 69
          },
          end: {
            line: 346,
            column: 82
          }
        }],
        line: 346
      },
      "42": {
        loc: {
          start: {
            line: 374,
            column: 20
          },
          end: {
            line: 378,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 20
          },
          end: {
            line: 378,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "43": {
        loc: {
          start: {
            line: 381,
            column: 18
          },
          end: {
            line: 381,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 18
          },
          end: {
            line: 381,
            column: 27
          }
        }, {
          start: {
            line: 381,
            column: 31
          },
          end: {
            line: 381,
            column: 82
          }
        }],
        line: 381
      },
      "44": {
        loc: {
          start: {
            line: 389,
            column: 16
          },
          end: {
            line: 393,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 16
          },
          end: {
            line: 393,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "45": {
        loc: {
          start: {
            line: 405,
            column: 20
          },
          end: {
            line: 410,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 20
          },
          end: {
            line: 410,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "46": {
        loc: {
          start: {
            line: 411,
            column: 19
          },
          end: {
            line: 411,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 19
          },
          end: {
            line: 411,
            column: 34
          }
        }, {
          start: {
            line: 411,
            column: 38
          },
          end: {
            line: 411,
            column: 57
          }
        }],
        line: 411
      },
      "47": {
        loc: {
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 421,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 16
          },
          end: {
            line: 421,
            column: 17
          }
        }, {
          start: {
            line: 418,
            column: 21
          },
          end: {
            line: 421,
            column: 17
          }
        }],
        line: 415
      },
      "48": {
        loc: {
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 415,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 415,
            column: 72
          },
          end: {
            line: 415,
            column: 78
          }
        }, {
          start: {
            line: 415,
            column: 81
          },
          end: {
            line: 415,
            column: 94
          }
        }],
        line: 415
      },
      "49": {
        loc: {
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 415,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 415,
            column: 52
          }
        }, {
          start: {
            line: 415,
            column: 56
          },
          end: {
            line: 415,
            column: 69
          }
        }],
        line: 415
      },
      "50": {
        loc: {
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 437,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 437,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "51": {
        loc: {
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 432,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "52": {
        loc: {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 445,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "53": {
        loc: {
          start: {
            line: 460,
            column: 32
          },
          end: {
            line: 460,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 460,
            column: 32
          },
          end: {
            line: 460,
            column: 77
          }
        }, {
          start: {
            line: 460,
            column: 81
          },
          end: {
            line: 460,
            column: 82
          }
        }],
        line: 460
      },
      "54": {
        loc: {
          start: {
            line: 463,
            column: 34
          },
          end: {
            line: 463,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 463,
            column: 34
          },
          end: {
            line: 463,
            column: 87
          }
        }, {
          start: {
            line: 463,
            column: 91
          },
          end: {
            line: 463,
            column: 92
          }
        }],
        line: 463
      },
      "55": {
        loc: {
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 467,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 467,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "56": {
        loc: {
          start: {
            line: 473,
            column: 15
          },
          end: {
            line: 474,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 473,
            column: 15
          },
          end: {
            line: 473,
            column: 44
          }
        }, {
          start: {
            line: 474,
            column: 12
          },
          end: {
            line: 474,
            column: 109
          }
        }],
        line: 473
      },
      "57": {
        loc: {
          start: {
            line: 474,
            column: 13
          },
          end: {
            line: 474,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 474,
            column: 64
          },
          end: {
            line: 474,
            column: 70
          }
        }, {
          start: {
            line: 474,
            column: 73
          },
          end: {
            line: 474,
            column: 86
          }
        }],
        line: 474
      },
      "58": {
        loc: {
          start: {
            line: 474,
            column: 13
          },
          end: {
            line: 474,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 474,
            column: 13
          },
          end: {
            line: 474,
            column: 44
          }
        }, {
          start: {
            line: 474,
            column: 48
          },
          end: {
            line: 474,
            column: 61
          }
        }],
        line: 474
      },
      "59": {
        loc: {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "60": {
        loc: {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 515,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 515,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "61": {
        loc: {
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 491,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 491,
            column: 43
          }
        }, {
          start: {
            line: 491,
            column: 47
          },
          end: {
            line: 491,
            column: 83
          }
        }],
        line: 491
      },
      "62": {
        loc: {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 496,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 496,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "63": {
        loc: {
          start: {
            line: 499,
            column: 16
          },
          end: {
            line: 514,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 499,
            column: 16
          },
          end: {
            line: 514,
            column: 17
          }
        }, {
          start: {
            line: 502,
            column: 21
          },
          end: {
            line: 514,
            column: 17
          }
        }],
        line: 499
      },
      "64": {
        loc: {
          start: {
            line: 503,
            column: 45
          },
          end: {
            line: 505,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 504,
            column: 26
          },
          end: {
            line: 504,
            column: 53
          }
        }, {
          start: {
            line: 505,
            column: 26
          },
          end: {
            line: 505,
            column: 63
          }
        }],
        line: 503
      },
      "65": {
        loc: {
          start: {
            line: 511,
            column: 30
          },
          end: {
            line: 511,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 511,
            column: 80
          },
          end: {
            line: 511,
            column: 86
          }
        }, {
          start: {
            line: 511,
            column: 89
          },
          end: {
            line: 511,
            column: 96
          }
        }],
        line: 511
      },
      "66": {
        loc: {
          start: {
            line: 511,
            column: 30
          },
          end: {
            line: 511,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 30
          },
          end: {
            line: 511,
            column: 60
          }
        }, {
          start: {
            line: 511,
            column: 64
          },
          end: {
            line: 511,
            column: 77
          }
        }],
        line: 511
      },
      "67": {
        loc: {
          start: {
            line: 512,
            column: 35
          },
          end: {
            line: 512,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 512,
            column: 85
          },
          end: {
            line: 512,
            column: 91
          }
        }, {
          start: {
            line: 512,
            column: 94
          },
          end: {
            line: 512,
            column: 106
          }
        }],
        line: 512
      },
      "68": {
        loc: {
          start: {
            line: 512,
            column: 35
          },
          end: {
            line: 512,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 35
          },
          end: {
            line: 512,
            column: 65
          }
        }, {
          start: {
            line: 512,
            column: 69
          },
          end: {
            line: 512,
            column: 82
          }
        }],
        line: 512
      },
      "69": {
        loc: {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 519,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 519,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "70": {
        loc: {
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 551,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 12
          },
          end: {
            line: 551,
            column: 13
          }
        }, {
          start: {
            line: 549,
            column: 17
          },
          end: {
            line: 551,
            column: 13
          }
        }],
        line: 541
      },
      "71": {
        loc: {
          start: {
            line: 541,
            column: 17
          },
          end: {
            line: 541,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 541,
            column: 68
          },
          end: {
            line: 541,
            column: 74
          }
        }, {
          start: {
            line: 541,
            column: 77
          },
          end: {
            line: 541,
            column: 90
          }
        }],
        line: 541
      },
      "72": {
        loc: {
          start: {
            line: 541,
            column: 17
          },
          end: {
            line: 541,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 541,
            column: 17
          },
          end: {
            line: 541,
            column: 48
          }
        }, {
          start: {
            line: 541,
            column: 52
          },
          end: {
            line: 541,
            column: 65
          }
        }],
        line: 541
      },
      "73": {
        loc: {
          start: {
            line: 566,
            column: 8
          },
          end: {
            line: 576,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 567,
            column: 12
          },
          end: {
            line: 569,
            column: 22
          }
        }, {
          start: {
            line: 570,
            column: 12
          },
          end: {
            line: 573,
            column: 22
          }
        }, {
          start: {
            line: 574,
            column: 12
          },
          end: {
            line: 575,
            column: 78
          }
        }],
        line: 566
      },
      "74": {
        loc: {
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 596,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 596,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 594
      },
      "75": {
        loc: {
          start: {
            line: 594,
            column: 13
          },
          end: {
            line: 594,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 594,
            column: 64
          },
          end: {
            line: 594,
            column: 70
          }
        }, {
          start: {
            line: 594,
            column: 73
          },
          end: {
            line: 594,
            column: 86
          }
        }],
        line: 594
      },
      "76": {
        loc: {
          start: {
            line: 594,
            column: 13
          },
          end: {
            line: 594,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 594,
            column: 13
          },
          end: {
            line: 594,
            column: 44
          }
        }, {
          start: {
            line: 594,
            column: 48
          },
          end: {
            line: 594,
            column: 61
          }
        }],
        line: 594
      },
      "77": {
        loc: {
          start: {
            line: 599,
            column: 8
          },
          end: {
            line: 602,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 599,
            column: 8
          },
          end: {
            line: 602,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 599
      },
      "78": {
        loc: {
          start: {
            line: 617,
            column: 12
          },
          end: {
            line: 628,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 12
          },
          end: {
            line: 628,
            column: 13
          }
        }, {
          start: {
            line: 622,
            column: 17
          },
          end: {
            line: 628,
            column: 13
          }
        }],
        line: 617
      },
      "79": {
        loc: {
          start: {
            line: 624,
            column: 16
          },
          end: {
            line: 626,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 624,
            column: 16
          },
          end: {
            line: 626,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 624
      },
      "80": {
        loc: {
          start: {
            line: 640,
            column: 8
          },
          end: {
            line: 643,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 640,
            column: 8
          },
          end: {
            line: 643,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 640
      },
      "81": {
        loc: {
          start: {
            line: 658,
            column: 12
          },
          end: {
            line: 676,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 658,
            column: 12
          },
          end: {
            line: 676,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 658
      },
      "82": {
        loc: {
          start: {
            line: 658,
            column: 17
          },
          end: {
            line: 658,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 658,
            column: 68
          },
          end: {
            line: 658,
            column: 74
          }
        }, {
          start: {
            line: 658,
            column: 77
          },
          end: {
            line: 658,
            column: 90
          }
        }],
        line: 658
      },
      "83": {
        loc: {
          start: {
            line: 658,
            column: 17
          },
          end: {
            line: 658,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 658,
            column: 17
          },
          end: {
            line: 658,
            column: 48
          }
        }, {
          start: {
            line: 658,
            column: 52
          },
          end: {
            line: 658,
            column: 65
          }
        }],
        line: 658
      },
      "84": {
        loc: {
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 686,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 686,
            column: 9
          }
        }, {
          start: {
            line: 684,
            column: 13
          },
          end: {
            line: 686,
            column: 9
          }
        }],
        line: 681
      },
      "85": {
        loc: {
          start: {
            line: 696,
            column: 23
          },
          end: {
            line: 696,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 696,
            column: 64
          },
          end: {
            line: 696,
            column: 70
          }
        }, {
          start: {
            line: 696,
            column: 73
          },
          end: {
            line: 696,
            column: 83
          }
        }],
        line: 696
      },
      "86": {
        loc: {
          start: {
            line: 696,
            column: 23
          },
          end: {
            line: 696,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 696,
            column: 23
          },
          end: {
            line: 696,
            column: 39
          }
        }, {
          start: {
            line: 696,
            column: 43
          },
          end: {
            line: 696,
            column: 61
          }
        }],
        line: 696
      },
      "87": {
        loc: {
          start: {
            line: 697,
            column: 27
          },
          end: {
            line: 697,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 697,
            column: 68
          },
          end: {
            line: 697,
            column: 74
          }
        }, {
          start: {
            line: 697,
            column: 77
          },
          end: {
            line: 697,
            column: 98
          }
        }],
        line: 697
      },
      "88": {
        loc: {
          start: {
            line: 697,
            column: 27
          },
          end: {
            line: 697,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 697,
            column: 27
          },
          end: {
            line: 697,
            column: 43
          }
        }, {
          start: {
            line: 697,
            column: 47
          },
          end: {
            line: 697,
            column: 65
          }
        }],
        line: 697
      },
      "89": {
        loc: {
          start: {
            line: 698,
            column: 20
          },
          end: {
            line: 698,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 698,
            column: 61
          },
          end: {
            line: 698,
            column: 67
          }
        }, {
          start: {
            line: 698,
            column: 70
          },
          end: {
            line: 698,
            column: 84
          }
        }],
        line: 698
      },
      "90": {
        loc: {
          start: {
            line: 698,
            column: 20
          },
          end: {
            line: 698,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 698,
            column: 20
          },
          end: {
            line: 698,
            column: 36
          }
        }, {
          start: {
            line: 698,
            column: 40
          },
          end: {
            line: 698,
            column: 58
          }
        }],
        line: 698
      },
      "91": {
        loc: {
          start: {
            line: 700,
            column: 19
          },
          end: {
            line: 700,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 700,
            column: 56
          },
          end: {
            line: 700,
            column: 62
          }
        }, {
          start: {
            line: 700,
            column: 65
          },
          end: {
            line: 700,
            column: 78
          }
        }],
        line: 700
      },
      "92": {
        loc: {
          start: {
            line: 700,
            column: 19
          },
          end: {
            line: 700,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 700,
            column: 19
          },
          end: {
            line: 700,
            column: 33
          }
        }, {
          start: {
            line: 700,
            column: 37
          },
          end: {
            line: 700,
            column: 53
          }
        }],
        line: 700
      },
      "93": {
        loc: {
          start: {
            line: 701,
            column: 23
          },
          end: {
            line: 701,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 701,
            column: 66
          },
          end: {
            line: 701,
            column: 72
          }
        }, {
          start: {
            line: 701,
            column: 75
          },
          end: {
            line: 701,
            column: 93
          }
        }],
        line: 701
      },
      "94": {
        loc: {
          start: {
            line: 701,
            column: 23
          },
          end: {
            line: 701,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 701,
            column: 23
          },
          end: {
            line: 701,
            column: 40
          }
        }, {
          start: {
            line: 701,
            column: 44
          },
          end: {
            line: 701,
            column: 63
          }
        }],
        line: 701
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-router.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-router.ts"],
      sourcesContent: ["/**\n * MCP Router - Model Context Protocol Integration for Hybrid Bedrock Support\n *\n * This module implements MCP (Model Context Protocol) integration for the Bedrock\n * Support Mode, providing reliable communication between Bedrock and Kiro through\n * MCP with message queuing, retry logic, and health monitoring.\n */\n\nimport WebSocket from \"ws\";\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { CircuitBreaker } from \"./circuit-breaker\";\nimport {\n  OperationPriority,\n  SupportOperationRequest,\n  SupportOperationResponse,\n} from \"./direct-bedrock-client\";\nimport { RouteHealth } from \"./intelligent-router\";\n\n// Configure WebSocket for Node.js environment\nif (typeof globalThis.WebSocket === \"undefined\") {\n  globalThis.WebSocket = WebSocket as any;\n}\n\n// MCP Message Types\nexport interface MCPMessage {\n  id: string;\n  type: \"request\" | \"response\" | \"notification\";\n  method: string;\n  params?: any;\n  result?: any;\n  error?: MCPError;\n  timestamp: Date;\n  correlationId: string;\n  retryCount: number;\n  priority: OperationPriority;\n  timeout?: number;\n}\n\nexport interface MCPError {\n  code: number;\n  message: string;\n  data?: any;\n}\n\n// MCP Connection Configuration\nexport interface MCPConnectionConfig {\n  endpoint: string;\n  timeout: number;\n  maxRetries: number;\n  retryDelay: number;\n  queueMaxSize: number;\n  healthCheckInterval: number;\n  enableCompression: boolean;\n  enableEncryption: boolean;\n}\n\n// MCP Health Status\nexport interface MCPHealthStatus extends RouteHealth {\n  connectionStatus: \"connected\" | \"disconnected\" | \"connecting\" | \"error\";\n  queueSize: number;\n  pendingOperations: number;\n  lastSuccessfulOperation: Date | null;\n  errorRate: number;\n}\n\n// Message Queue Item\ninterface QueuedMessage {\n  message: MCPMessage;\n  resolve: (value: SupportOperationResponse) => void;\n  reject: (error: Error) => void;\n  enqueuedAt: Date;\n  attempts: number;\n  timeoutId?: NodeJS.Timeout;\n}\n\n// Kiro Bridge Communication Protocol\nexport interface KiroBridgeMessage {\n  type: \"diagnostics\" | \"support_request\" | \"execution_data\" | \"health_check\";\n  source: \"bedrock_support\" | \"kiro\" | \"mcp_router\";\n  payload: any;\n  timestamp: Date;\n  correlationId: string;\n  routingPath: \"mcp\" | \"direct\" | \"hybrid\";\n}\n\n/**\n * MCP Router Implementation for Hybrid Bedrock Integration\n */\nexport class MCPRouter {\n  private config: MCPConnectionConfig;\n  private featureFlags: AiFeatureFlags;\n  private circuitBreaker: CircuitBreaker;\n  private auditTrail: AuditTrailSystem;\n\n  // Connection and messaging\n  private connection: WebSocket | null = null;\n  private messageQueue: Map<string, QueuedMessage> = new Map();\n  private pendingMessages: Map<string, QueuedMessage> = new Map();\n  private priorityQueue: QueuedMessage[] = [];\n\n  // Health monitoring\n  private healthStatus: MCPHealthStatus;\n  private healthCheckInterval?: NodeJS.Timeout;\n  private connectionRetryTimeout?: NodeJS.Timeout;\n  private activeTimeouts: Set<NodeJS.Timeout> = new Set();\n  private activeIntervals: Set<NodeJS.Timeout> = new Set();\n\n  // Metrics and monitoring\n  private metrics: {\n    totalMessages: number;\n    successfulMessages: number;\n    failedMessages: number;\n    averageLatency: number;\n    queueOverflows: number;\n    connectionResets: number;\n  };\n\n  constructor(config?: Partial<MCPConnectionConfig>) {\n    this.config = {\n      endpoint: process.env.MCP_ENDPOINT || \"ws://localhost:8080/mcp\",\n      timeout: 30000,\n      maxRetries: 3,\n      retryDelay: 1000,\n      queueMaxSize: 1000,\n      healthCheckInterval: 30000,\n      enableCompression: true,\n      enableEncryption: false,\n      ...config,\n    };\n\n    this.featureFlags = new AiFeatureFlags();\n    this.circuitBreaker = new CircuitBreaker({\n      failureThreshold: 5,\n      recoveryTimeout: 60000,\n      halfOpenMaxCalls: 3,\n    });\n\n    // Initialize audit trail system\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for GDPR compliance\n    });\n\n    this.healthStatus = this.initializeHealthStatus();\n    this.metrics = this.initializeMetrics();\n\n    // Initialize connection if MCP is enabled\n    if (this.featureFlags.isEnabled(\"ENABLE_MCP_INTEGRATION\")) {\n      this.initializeConnection();\n    }\n  }\n\n  /**\n   * Execute support operation through MCP\n   */\n  async executeSupportOperation(\n    request: SupportOperationRequest\n  ): Promise<SupportOperationResponse> {\n    const startTime = Date.now();\n    const correlationId = this.generateCorrelationId();\n\n    try {\n      // Check if MCP integration is enabled\n      if (!this.featureFlags.isEnabled(\"ENABLE_MCP_INTEGRATION\")) {\n        throw new Error(\"MCP integration is disabled\");\n      }\n\n      // Check circuit breaker\n      if (this.circuitBreaker.isOpen(\"mcp\" as any)) {\n        throw new Error(\"MCP router circuit breaker is open\");\n      }\n\n      // Validate connection\n      await this.ensureConnection();\n\n      // Create MCP message\n      const mcpMessage: MCPMessage = {\n        id: this.generateMessageId(),\n        type: \"request\",\n        method: \"support_operation\",\n        params: {\n          operation: request.operation,\n          priority: request.priority,\n          context: request.context,\n          timeout: 30000, // Default 30s timeout\n        },\n        timestamp: new Date(),\n        correlationId,\n        retryCount: 0,\n        priority: request.priority,\n        timeout: 30000, // Default 30s timeout\n      };\n\n      // Execute with retry logic\n      const response = await this.executeWithRetry(mcpMessage);\n\n      // Update metrics on success\n      this.updateMetrics(true, Date.now() - startTime);\n\n      // Log successful operation to audit trail\n      await this.auditTrail.logMCPRoutingOperation(\n        correlationId,\n        request.operation,\n        request.priority,\n        Date.now() - startTime,\n        true,\n        this.messageQueue.size,\n        0 // No retries for successful operation\n      );\n\n      // Log successful operation (console logging)\n      this.logOperation(\"success\", mcpMessage, response);\n\n      return {\n        success: true,\n        operationId: response.operationId || correlationId,\n        latencyMs: Date.now() - startTime,\n        timestamp: new Date(),\n        text: response.result?.text,\n        toolCalls: response.result?.toolCalls,\n      };\n    } catch (error) {\n      const latencyMs = Date.now() - startTime;\n\n      // Update metrics on failure\n      this.updateMetrics(false, latencyMs);\n\n      // Log failed operation to audit trail\n      await this.auditTrail.logMCPRoutingOperation(\n        correlationId,\n        request.operation,\n        request.priority,\n        latencyMs,\n        false,\n        this.messageQueue.size,\n        0, // Retry count would be tracked in executeWithRetry\n        error instanceof Error ? error.message : \"MCP operation failed\"\n      );\n\n      // Log failed operation (console logging)\n      this.logOperation(\"error\", null, null, error as Error);\n\n      // Return error response\n      return {\n        success: false,\n        operationId: correlationId,\n        latencyMs,\n        timestamp: new Date(),\n        error: error instanceof Error ? error.message : \"MCP operation failed\",\n      };\n    }\n  }\n\n  /**\n   * Get MCP health status\n   */\n  async getHealthStatus(): Promise<MCPHealthStatus> {\n    // Update real-time metrics\n    this.healthStatus.queueSize =\n      this.messageQueue.size + this.priorityQueue.length;\n    this.healthStatus.pendingOperations = this.pendingMessages.size;\n    this.healthStatus.lastCheck = new Date();\n\n    // Check connection status (preserve error state)\n    if (this.connection?.readyState === WebSocket.OPEN) {\n      this.healthStatus.connectionStatus = \"connected\";\n      this.healthStatus.isHealthy = true;\n    } else if (this.connection?.readyState === WebSocket.CONNECTING) {\n      this.healthStatus.connectionStatus = \"connecting\";\n      this.healthStatus.isHealthy = false;\n    } else {\n      // Only change to disconnected if not already in error state\n      if (this.healthStatus.connectionStatus !== \"error\") {\n        this.healthStatus.connectionStatus = \"disconnected\";\n      }\n      this.healthStatus.isHealthy = false;\n    }\n\n    // Calculate error rate\n    if (this.metrics.totalMessages > 0) {\n      this.healthStatus.errorRate =\n        this.metrics.failedMessages / this.metrics.totalMessages;\n    }\n\n    // Update latency\n    this.healthStatus.latencyMs = this.metrics.averageLatency;\n\n    return { ...this.healthStatus };\n  }\n\n  /**\n   * Check if MCP router is available\n   */\n  isAvailable(): boolean {\n    return (\n      this.featureFlags.isEnabled(\"ENABLE_MCP_INTEGRATION\") &&\n      this.connection?.readyState === WebSocket.OPEN &&\n      !this.circuitBreaker.isOpen(\"mcp\" as any)\n    );\n  }\n\n  /**\n   * Send diagnostics to Kiro through MCP\n   */\n  async sendDiagnosticsToKiro(\n    diagnostics: any,\n    correlationId: string\n  ): Promise<void> {\n    // Check if MCP is available\n    if (!this.isAvailable()) {\n      throw new Error(\"MCP router is not available\");\n    }\n\n    const bridgeMessage: KiroBridgeMessage = {\n      type: \"diagnostics\",\n      source: \"bedrock_support\",\n      payload: diagnostics,\n      timestamp: new Date(),\n      correlationId,\n      routingPath: \"mcp\",\n    };\n\n    await this.sendKiroBridgeMessage(bridgeMessage);\n  }\n\n  /**\n   * Receive execution data from Kiro\n   */\n  async receiveKiroExecutionData(\n    executionData: any,\n    correlationId: string\n  ): Promise<void> {\n    const bridgeMessage: KiroBridgeMessage = {\n      type: \"execution_data\",\n      source: \"kiro\",\n      payload: executionData,\n      timestamp: new Date(),\n      correlationId,\n      routingPath: \"mcp\",\n    };\n\n    // Process execution data for support operations\n    await this.processKiroExecutionData(bridgeMessage);\n  }\n\n  /**\n   * Get MCP router metrics\n   */\n  getMetrics() {\n    return {\n      ...this.metrics,\n      healthStatus: this.healthStatus,\n      queueSize: this.messageQueue.size,\n      priorityQueueSize: this.priorityQueue.length,\n      pendingOperations: this.pendingMessages.size,\n      totalQueuedOperations: this.messageQueue.size + this.priorityQueue.length,\n    };\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    // Clear all tracked intervals\n    this.activeIntervals.forEach((interval) => {\n      clearInterval(interval);\n    });\n    this.activeIntervals.clear();\n\n    // Clear all tracked timeouts\n    this.activeTimeouts.forEach((timeout) => {\n      clearTimeout(timeout);\n    });\n    this.activeTimeouts.clear();\n\n    // Clear specific intervals and timeouts\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.healthCheckInterval = undefined;\n    }\n    if (this.connectionRetryTimeout) {\n      clearTimeout(this.connectionRetryTimeout);\n      this.connectionRetryTimeout = undefined;\n    }\n\n    // Clean up all pending message timeouts\n    this.pendingMessages.forEach((queuedMessage) => {\n      if (queuedMessage.timeoutId) {\n        clearTimeout(queuedMessage.timeoutId);\n      }\n      queuedMessage.reject(new Error(\"MCP router destroyed\"));\n    });\n\n    // Clean up priority queue timeouts\n    this.priorityQueue.forEach((queuedMessage) => {\n      if (queuedMessage.timeoutId) {\n        clearTimeout(queuedMessage.timeoutId);\n      }\n      queuedMessage.reject(new Error(\"MCP router destroyed\"));\n    });\n\n    // Close connection\n    if (this.connection) {\n      this.connection.close();\n      this.connection = null;\n    }\n\n    // Clear queues\n    this.messageQueue.clear();\n    this.pendingMessages.clear();\n    this.priorityQueue = [];\n  }\n\n  // Private implementation methods\n\n  private initializeHealthStatus(): MCPHealthStatus {\n    return {\n      route: \"mcp\",\n      isHealthy: false,\n      latencyMs: 0,\n      successRate: 1.0,\n      lastCheck: new Date(),\n      consecutiveFailures: 0,\n      connectionStatus: \"disconnected\",\n      queueSize: 0,\n      pendingOperations: 0,\n      lastSuccessfulOperation: null,\n      errorRate: 0,\n    };\n  }\n\n  private initializeMetrics() {\n    return {\n      totalMessages: 0,\n      successfulMessages: 0,\n      failedMessages: 0,\n      averageLatency: 0,\n      queueOverflows: 0,\n      connectionResets: 0,\n    };\n  }\n\n  private async initializeConnection(): Promise<void> {\n    try {\n      this.connection = new WebSocket(this.config.endpoint);\n\n      this.connection.onopen = () => {\n        console.log(\"MCP connection established\");\n        this.healthStatus.connectionStatus = \"connected\";\n        this.healthStatus.isHealthy = true;\n        this.startHealthMonitoring();\n\n        // Handle connection recovery and process queued messages\n        this.handleConnectionRecovery();\n        this.processPriorityQueue();\n      };\n\n      this.connection.onmessage = (event) => {\n        this.handleMessage(event.data);\n      };\n\n      this.connection.onclose = () => {\n        console.log(\"MCP connection closed\");\n        // Only change to disconnected if not already in error state\n        if (this.healthStatus.connectionStatus !== \"error\") {\n          this.healthStatus.connectionStatus = \"disconnected\";\n        }\n        this.healthStatus.isHealthy = false;\n        this.scheduleReconnection();\n      };\n\n      this.connection.onerror = (error) => {\n        console.error(\"MCP connection error:\", error);\n        this.healthStatus.connectionStatus = \"error\";\n        this.healthStatus.isHealthy = false;\n        this.metrics.connectionResets++;\n\n        // Don't immediately reconnect on error - wait for close event\n        // This allows the error state to be observed in tests\n      };\n    } catch (error) {\n      console.error(\"Failed to initialize MCP connection:\", error);\n      this.scheduleReconnection();\n    }\n  }\n\n  private async ensureConnection(): Promise<void> {\n    if (this.connection?.readyState === WebSocket.OPEN) {\n      return; // Already connected\n    }\n\n    if (this.connection?.readyState === WebSocket.CONNECTING) {\n      // Wait for connection to establish\n      await new Promise((resolve, reject) => {\n        const timeout = setTimeout(() => {\n          reject(new Error(\"Connection timeout\"));\n        }, this.config.timeout);\n\n        const checkConnection = () => {\n          if (this.connection?.readyState === WebSocket.OPEN) {\n            clearTimeout(timeout);\n            resolve(void 0);\n          } else if (this.connection?.readyState === WebSocket.CLOSED) {\n            clearTimeout(timeout);\n            reject(new Error(\"Connection failed\"));\n          } else {\n            setTimeout(checkConnection, 100);\n          }\n        };\n\n        checkConnection();\n      });\n    } else {\n      // Reconnect\n      await this.initializeConnection();\n      await this.ensureConnection();\n    }\n  }\n\n  private async executeWithRetry(\n    message: MCPMessage\n  ): Promise<SupportOperationResponse> {\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt <= this.config.maxRetries; attempt++) {\n      try {\n        message.retryCount = attempt;\n        return await this.sendMessage(message);\n      } catch (error) {\n        lastError = error as Error;\n\n        if (attempt < this.config.maxRetries) {\n          const delay = this.config.retryDelay * Math.pow(2, attempt);\n          console.log(\n            `MCP operation failed, retrying in ${delay}ms (attempt ${\n              attempt + 1\n            }/${this.config.maxRetries})`\n          );\n          await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n      }\n    }\n\n    throw lastError || new Error(\"MCP operation failed after all retries\");\n  }\n\n  private async sendMessage(\n    message: MCPMessage\n  ): Promise<SupportOperationResponse> {\n    return new Promise((resolve, reject) => {\n      // Check queue size before adding to queue\n      if (this.messageQueue.size >= this.config.queueMaxSize) {\n        this.metrics.queueOverflows++;\n        reject(new Error(\"Message queue is full\"));\n        return;\n      }\n\n      // Add to queue\n      const queuedMessage: QueuedMessage = {\n        message,\n        resolve,\n        reject,\n        enqueuedAt: new Date(),\n        attempts: 0,\n      };\n\n      this.messageQueue.set(message.id, queuedMessage);\n\n      // Set timeout for the operation\n      const timeoutId = setTimeout(() => {\n        if (this.pendingMessages.has(message.id)) {\n          this.pendingMessages.delete(message.id);\n          this.messageQueue.delete(message.id);\n          this.removePendingMessage(message.id);\n          reject(new Error(\"MCP operation timeout\"));\n        }\n      }, message.timeout || this.config.timeout);\n\n      // Store timeout ID for cleanup\n      queuedMessage.timeoutId = timeoutId;\n\n      // Try to send immediately or queue for later\n      if (this.connection?.readyState === WebSocket.OPEN) {\n        this.sendMessageImmediate(queuedMessage);\n      } else {\n        // Add to priority queue for processing when connection is available\n        this.addToPriorityQueue(queuedMessage);\n      }\n    });\n  }\n\n  private sendMessageImmediate(queuedMessage: QueuedMessage): void {\n    try {\n      // Check if we have room for pending operations\n      if (this.pendingMessages.size >= this.config.queueMaxSize) {\n        // Clean up and reject due to pending queue full\n        if (queuedMessage.timeoutId) {\n          clearTimeout(queuedMessage.timeoutId);\n        }\n        this.messageQueue.delete(queuedMessage.message.id);\n        this.metrics.queueOverflows++;\n        queuedMessage.reject(new Error(\"Pending operations queue is full\"));\n        return;\n      }\n\n      this.pendingMessages.set(queuedMessage.message.id, queuedMessage);\n      this.connection!.send(JSON.stringify(queuedMessage.message));\n    } catch (error) {\n      // Clean up on send error\n      if (queuedMessage.timeoutId) {\n        clearTimeout(queuedMessage.timeoutId);\n      }\n      this.messageQueue.delete(queuedMessage.message.id);\n      this.pendingMessages.delete(queuedMessage.message.id);\n      queuedMessage.reject(error as Error);\n    }\n  }\n\n  private addToPriorityQueue(queuedMessage: QueuedMessage): void {\n    // Insert based on priority (emergency > critical > high > medium > low)\n    const priorityOrder = {\n      emergency: 0,\n      critical: 1,\n      high: 2,\n      medium: 3,\n      low: 4,\n    };\n\n    const messagePriority = priorityOrder[queuedMessage.message.priority] || 4;\n\n    let insertIndex = this.priorityQueue.length;\n    for (let i = 0; i < this.priorityQueue.length; i++) {\n      const queuePriority =\n        priorityOrder[this.priorityQueue[i].message.priority] || 4;\n      if (messagePriority < queuePriority) {\n        insertIndex = i;\n        break;\n      }\n    }\n\n    this.priorityQueue.splice(insertIndex, 0, queuedMessage);\n  }\n\n  private processPriorityQueue(): void {\n    while (\n      this.priorityQueue.length > 0 &&\n      this.connection?.readyState === WebSocket.OPEN\n    ) {\n      const queuedMessage = this.priorityQueue.shift()!;\n      this.sendMessageImmediate(queuedMessage);\n    }\n  }\n\n  private removePendingMessage(messageId: string): void {\n    // Remove from priority queue if present\n    const queueIndex = this.priorityQueue.findIndex(\n      (q) => q.message.id === messageId\n    );\n    if (queueIndex >= 0) {\n      this.priorityQueue.splice(queueIndex, 1);\n    }\n  }\n\n  private handleMessage(data: string): void {\n    try {\n      const message: MCPMessage = JSON.parse(data);\n\n      // Handle response messages\n      if (message.type === \"response\" && this.pendingMessages.has(message.id)) {\n        const queuedMessage = this.pendingMessages.get(message.id)!;\n\n        // Clean up timeout\n        if (queuedMessage.timeoutId) {\n          clearTimeout(queuedMessage.timeoutId);\n        }\n\n        this.pendingMessages.delete(message.id);\n        this.messageQueue.delete(message.id);\n\n        if (message.error) {\n          queuedMessage.reject(new Error(message.error.message));\n        } else {\n          const messageTimestamp =\n            message.timestamp instanceof Date\n              ? message.timestamp.getTime()\n              : new Date(message.timestamp).getTime();\n\n          queuedMessage.resolve({\n            success: true,\n            operationId: message.id,\n            latencyMs: Date.now() - messageTimestamp,\n            timestamp: new Date(),\n            text: message.result?.text,\n            toolCalls: message.result?.toolCalls,\n          });\n        }\n      }\n\n      // Handle notification messages (from Kiro)\n      if (message.type === \"notification\") {\n        this.handleKiroNotification(message);\n      }\n    } catch (error) {\n      console.error(\"Failed to handle MCP message:\", error);\n    }\n  }\n\n  private async sendKiroBridgeMessage(\n    message: KiroBridgeMessage\n  ): Promise<void> {\n    const mcpMessage: MCPMessage = {\n      id: this.generateMessageId(),\n      type: \"notification\",\n      method: \"kiro_bridge\",\n      params: message,\n      timestamp: new Date(),\n      correlationId: message.correlationId,\n      retryCount: 0,\n      priority: \"medium\",\n      timeout: 5000, // 5 second timeout for bridge messages\n    };\n\n    // For notifications, we don't need to wait for a response\n    // Just send and resolve immediately\n    if (this.connection?.readyState === WebSocket.OPEN) {\n      try {\n        this.connection.send(JSON.stringify(mcpMessage));\n      } catch (error) {\n        throw new Error(`Failed to send Kiro bridge message: ${error}`);\n      }\n    } else {\n      throw new Error(\"MCP connection not available\");\n    }\n  }\n\n  private async processKiroExecutionData(\n    message: KiroBridgeMessage\n  ): Promise<void> {\n    // Process execution data for support analysis\n    console.log(`Processing Kiro execution data: ${message.correlationId}`);\n\n    // This would integrate with the meta monitor and implementation support\n    // For now, just log the received data\n    this.logOperation(\"kiro_data\", null, message);\n  }\n\n  private handleKiroNotification(message: MCPMessage): void {\n    console.log(`Received Kiro notification: ${message.method}`);\n\n    // Handle different types of notifications from Kiro\n    switch (message.method) {\n      case \"execution_update\":\n        // Handle execution updates\n        break;\n      case \"health_check\":\n        // Respond to health checks\n        this.respondToHealthCheck(message);\n        break;\n      default:\n        console.log(`Unknown notification method: ${message.method}`);\n    }\n  }\n\n  private respondToHealthCheck(message: MCPMessage): void {\n    const response: MCPMessage = {\n      id: this.generateMessageId(),\n      type: \"response\",\n      method: \"health_check_response\",\n      result: {\n        status: \"healthy\",\n        timestamp: new Date(),\n        metrics: this.getMetrics(),\n      },\n      timestamp: new Date(),\n      correlationId: message.correlationId,\n      retryCount: 0,\n      priority: \"high\",\n    };\n\n    if (this.connection?.readyState === WebSocket.OPEN) {\n      this.connection.send(JSON.stringify(response));\n    }\n  }\n\n  private scheduleReconnection(): void {\n    if (this.connectionRetryTimeout) {\n      clearTimeout(this.connectionRetryTimeout);\n      this.activeTimeouts.delete(this.connectionRetryTimeout);\n    }\n\n    this.connectionRetryTimeout = setTimeout(() => {\n      console.log(\"Attempting MCP reconnection...\");\n      this.initializeConnection();\n    }, 5000); // Retry after 5 seconds\n\n    this.activeTimeouts.add(this.connectionRetryTimeout);\n  }\n\n  /**\n   * Handle connection recovery - retry failed messages\n   */\n  private handleConnectionRecovery(): void {\n    // Move pending messages back to priority queue for retry\n    const failedMessages: QueuedMessage[] = [];\n\n    this.pendingMessages.forEach((queuedMessage) => {\n      // Only retry if not exceeded max attempts\n      if (queuedMessage.attempts < this.config.maxRetries) {\n        queuedMessage.attempts++;\n        queuedMessage.message.retryCount = queuedMessage.attempts;\n        failedMessages.push(queuedMessage);\n      } else {\n        // Reject messages that exceeded retry limit\n        if (queuedMessage.timeoutId) {\n          clearTimeout(queuedMessage.timeoutId);\n        }\n        queuedMessage.reject(\n          new Error(\"MCP operation failed after max retries\")\n        );\n      }\n    });\n\n    // Clear pending messages\n    this.pendingMessages.clear();\n\n    // Add failed messages back to priority queue\n    failedMessages.forEach((queuedMessage) => {\n      this.addToPriorityQueue(queuedMessage);\n    });\n\n    // Process the queue\n    this.processPriorityQueue();\n  }\n\n  private startHealthMonitoring(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.activeIntervals.delete(this.healthCheckInterval);\n    }\n\n    this.healthCheckInterval = setInterval(async () => {\n      try {\n        await this.performHealthCheck();\n      } catch (error) {\n        console.error(\"MCP health check failed:\", error);\n        this.healthStatus.consecutiveFailures++;\n      }\n    }, this.config.healthCheckInterval);\n\n    this.activeIntervals.add(this.healthCheckInterval);\n  }\n\n  private async performHealthCheck(): Promise<void> {\n    if (this.connection?.readyState === WebSocket.OPEN) {\n      const healthMessage: MCPMessage = {\n        id: this.generateMessageId(),\n        type: \"request\",\n        method: \"ping\",\n        timestamp: new Date(),\n        correlationId: this.generateCorrelationId(),\n        retryCount: 0,\n        priority: \"low\",\n      };\n\n      try {\n        await this.sendMessage(healthMessage);\n        this.healthStatus.consecutiveFailures = 0;\n        this.healthStatus.lastSuccessfulOperation = new Date();\n      } catch (error) {\n        this.healthStatus.consecutiveFailures++;\n      }\n    }\n  }\n\n  private updateMetrics(success: boolean, latencyMs: number): void {\n    this.metrics.totalMessages++;\n\n    if (success) {\n      this.metrics.successfulMessages++;\n    } else {\n      this.metrics.failedMessages++;\n    }\n\n    // Update average latency (rolling average)\n    const totalLatency =\n      this.metrics.averageLatency * (this.metrics.totalMessages - 1) +\n      latencyMs;\n    this.metrics.averageLatency = totalLatency / this.metrics.totalMessages;\n  }\n\n  private logOperation(\n    type: \"success\" | \"error\" | \"kiro_data\",\n    message: MCPMessage | null,\n    response: any,\n    error?: Error\n  ): void {\n    const logEntry = {\n      timestamp: new Date(),\n      type,\n      messageId: message?.id,\n      correlationId: message?.correlationId,\n      method: message?.method,\n      success: type === \"success\",\n      error: error?.message,\n      latencyMs: response?.latencyMs,\n    };\n\n    console.log(`[MCPRouter] ${JSON.stringify(logEntry)}`);\n  }\n\n  private generateMessageId(): string {\n    return `mcp-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;\n  }\n\n  private generateCorrelationId(): string {\n    return `mcp-corr-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n}\n\n// Export types for external use\nexport {\n  type KiroBridgeMessage,\n  type MCPConnectionConfig,\n  type MCPError,\n  type MCPHealthStatus,\n  type MCPMessage,\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0bc971a2899e7437284e79c064897dcd18eeda68"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jps2o9q2k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jps2o9q2k();
cov_1jps2o9q2k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jps2o9q2k().s[1]++;
exports.MCPRouter = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1jps2o9q2k().s[2]++, require("tslib"));
const ws_1 =
/* istanbul ignore next */
(cov_1jps2o9q2k().s[3]++, tslib_1.__importDefault(require("ws")));
const ai_feature_flags_1 =
/* istanbul ignore next */
(cov_1jps2o9q2k().s[4]++, require("./ai-feature-flags"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_1jps2o9q2k().s[5]++, require("./audit-trail-system"));
const circuit_breaker_1 =
/* istanbul ignore next */
(cov_1jps2o9q2k().s[6]++, require("./circuit-breaker"));
// Configure WebSocket for Node.js environment
/* istanbul ignore next */
cov_1jps2o9q2k().s[7]++;
if (typeof globalThis.WebSocket === "undefined") {
  /* istanbul ignore next */
  cov_1jps2o9q2k().b[0][0]++;
  cov_1jps2o9q2k().s[8]++;
  globalThis.WebSocket = ws_1.default;
} else
/* istanbul ignore next */
{
  cov_1jps2o9q2k().b[0][1]++;
}
/**
 * MCP Router Implementation for Hybrid Bedrock Integration
 */
class MCPRouter {
  constructor(config) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[0]++;
    cov_1jps2o9q2k().s[9]++;
    // Connection and messaging
    this.connection = null;
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[10]++;
    this.messageQueue = new Map();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[11]++;
    this.pendingMessages = new Map();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[12]++;
    this.priorityQueue = [];
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[13]++;
    this.activeTimeouts = new Set();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[14]++;
    this.activeIntervals = new Set();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[15]++;
    this.config = Object.assign({
      endpoint:
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[1][0]++, process.env.MCP_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[1][1]++, "ws://localhost:8080/mcp"),
      timeout: 30000,
      maxRetries: 3,
      retryDelay: 1000,
      queueMaxSize: 1000,
      healthCheckInterval: 30000,
      enableCompression: true,
      enableEncryption: false
    }, config);
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[16]++;
    this.featureFlags = new ai_feature_flags_1.AiFeatureFlags();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[17]++;
    this.circuitBreaker = new circuit_breaker_1.CircuitBreaker({
      failureThreshold: 5,
      recoveryTimeout: 60000,
      halfOpenMaxCalls: 3
    });
    // Initialize audit trail system
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[18]++;
    this.auditTrail = new audit_trail_system_1.AuditTrailSystem({
      complianceMode: "strict",
      enableIntegrityChecking: true,
      retentionDays: 2555 // 7 years for GDPR compliance
    });
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[19]++;
    this.healthStatus = this.initializeHealthStatus();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[20]++;
    this.metrics = this.initializeMetrics();
    // Initialize connection if MCP is enabled
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[21]++;
    if (this.featureFlags.isEnabled("ENABLE_MCP_INTEGRATION")) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[2][0]++;
      cov_1jps2o9q2k().s[22]++;
      this.initializeConnection();
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[2][1]++;
    }
  }
  /**
   * Execute support operation through MCP
   */
  executeSupportOperation(request) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[1]++;
    cov_1jps2o9q2k().s[23]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[2]++;
      var _a, _b;
      const startTime =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[24]++, Date.now());
      const correlationId =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[25]++, this.generateCorrelationId());
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[26]++;
      try {
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[27]++;
        // Check if MCP integration is enabled
        if (!this.featureFlags.isEnabled("ENABLE_MCP_INTEGRATION")) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[3][0]++;
          cov_1jps2o9q2k().s[28]++;
          throw new Error("MCP integration is disabled");
        } else
        /* istanbul ignore next */
        {
          cov_1jps2o9q2k().b[3][1]++;
        }
        // Check circuit breaker
        cov_1jps2o9q2k().s[29]++;
        if (this.circuitBreaker.isOpen("mcp")) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[4][0]++;
          cov_1jps2o9q2k().s[30]++;
          throw new Error("MCP router circuit breaker is open");
        } else
        /* istanbul ignore next */
        {
          cov_1jps2o9q2k().b[4][1]++;
        }
        // Validate connection
        cov_1jps2o9q2k().s[31]++;
        yield this.ensureConnection();
        // Create MCP message
        const mcpMessage =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[32]++, {
          id: this.generateMessageId(),
          type: "request",
          method: "support_operation",
          params: {
            operation: request.operation,
            priority: request.priority,
            context: request.context,
            timeout: 30000 // Default 30s timeout
          },
          timestamp: new Date(),
          correlationId,
          retryCount: 0,
          priority: request.priority,
          timeout: 30000 // Default 30s timeout
        });
        // Execute with retry logic
        const response =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[33]++, yield this.executeWithRetry(mcpMessage));
        // Update metrics on success
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[34]++;
        this.updateMetrics(true, Date.now() - startTime);
        // Log successful operation to audit trail
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[35]++;
        yield this.auditTrail.logMCPRoutingOperation(correlationId, request.operation, request.priority, Date.now() - startTime, true, this.messageQueue.size, 0 // No retries for successful operation
        );
        // Log successful operation (console logging)
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[36]++;
        this.logOperation("success", mcpMessage, response);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[37]++;
        return {
          success: true,
          operationId:
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[5][0]++, response.operationId) ||
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[5][1]++, correlationId),
          latencyMs: Date.now() - startTime,
          timestamp: new Date(),
          text:
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[7][0]++, (_a = response.result) === null) ||
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[7][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[6][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[6][1]++, _a.text),
          toolCalls:
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[9][0]++, (_b = response.result) === null) ||
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[9][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[8][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[8][1]++, _b.toolCalls)
        };
      } catch (error) {
        const latencyMs =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[38]++, Date.now() - startTime);
        // Update metrics on failure
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[39]++;
        this.updateMetrics(false, latencyMs);
        // Log failed operation to audit trail
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[40]++;
        yield this.auditTrail.logMCPRoutingOperation(correlationId, request.operation, request.priority, latencyMs, false, this.messageQueue.size, 0,
        // Retry count would be tracked in executeWithRetry
        error instanceof Error ?
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[10][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[10][1]++, "MCP operation failed"));
        // Log failed operation (console logging)
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[41]++;
        this.logOperation("error", null, null, error);
        // Return error response
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[42]++;
        return {
          success: false,
          operationId: correlationId,
          latencyMs,
          timestamp: new Date(),
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[11][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[11][1]++, "MCP operation failed")
        };
      }
    });
  }
  /**
   * Get MCP health status
   */
  getHealthStatus() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[3]++;
    cov_1jps2o9q2k().s[43]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[4]++;
      var _a, _b;
      // Update real-time metrics
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[44]++;
      this.healthStatus.queueSize = this.messageQueue.size + this.priorityQueue.length;
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[45]++;
      this.healthStatus.pendingOperations = this.pendingMessages.size;
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[46]++;
      this.healthStatus.lastCheck = new Date();
      // Check connection status (preserve error state)
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[47]++;
      if ((
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[14][0]++, (_a = this.connection) === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[14][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[13][1]++, _a.readyState)) === ws_1.default.OPEN) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[12][0]++;
        cov_1jps2o9q2k().s[48]++;
        this.healthStatus.connectionStatus = "connected";
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[49]++;
        this.healthStatus.isHealthy = true;
      } else {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[12][1]++;
        cov_1jps2o9q2k().s[50]++;
        if ((
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[17][0]++, (_b = this.connection) === null) ||
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[17][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[16][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[16][1]++, _b.readyState)) === ws_1.default.CONNECTING) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[15][0]++;
          cov_1jps2o9q2k().s[51]++;
          this.healthStatus.connectionStatus = "connecting";
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[52]++;
          this.healthStatus.isHealthy = false;
        } else {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[15][1]++;
          cov_1jps2o9q2k().s[53]++;
          // Only change to disconnected if not already in error state
          if (this.healthStatus.connectionStatus !== "error") {
            /* istanbul ignore next */
            cov_1jps2o9q2k().b[18][0]++;
            cov_1jps2o9q2k().s[54]++;
            this.healthStatus.connectionStatus = "disconnected";
          } else
          /* istanbul ignore next */
          {
            cov_1jps2o9q2k().b[18][1]++;
          }
          cov_1jps2o9q2k().s[55]++;
          this.healthStatus.isHealthy = false;
        }
      }
      // Calculate error rate
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[56]++;
      if (this.metrics.totalMessages > 0) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[19][0]++;
        cov_1jps2o9q2k().s[57]++;
        this.healthStatus.errorRate = this.metrics.failedMessages / this.metrics.totalMessages;
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[19][1]++;
      }
      // Update latency
      cov_1jps2o9q2k().s[58]++;
      this.healthStatus.latencyMs = this.metrics.averageLatency;
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[59]++;
      return Object.assign({}, this.healthStatus);
    });
  }
  /**
   * Check if MCP router is available
   */
  isAvailable() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[5]++;
    var _a;
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[60]++;
    return /* istanbul ignore next */(cov_1jps2o9q2k().b[20][0]++, this.featureFlags.isEnabled("ENABLE_MCP_INTEGRATION")) &&
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[20][1]++, (
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[22][0]++, (_a = this.connection) === null) ||
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[22][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[21][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[21][1]++, _a.readyState)) === ws_1.default.OPEN) &&
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[20][2]++, !this.circuitBreaker.isOpen("mcp"));
  }
  /**
   * Send diagnostics to Kiro through MCP
   */
  sendDiagnosticsToKiro(diagnostics, correlationId) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[6]++;
    cov_1jps2o9q2k().s[61]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[7]++;
      cov_1jps2o9q2k().s[62]++;
      // Check if MCP is available
      if (!this.isAvailable()) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[23][0]++;
        cov_1jps2o9q2k().s[63]++;
        throw new Error("MCP router is not available");
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[23][1]++;
      }
      const bridgeMessage =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[64]++, {
        type: "diagnostics",
        source: "bedrock_support",
        payload: diagnostics,
        timestamp: new Date(),
        correlationId,
        routingPath: "mcp"
      });
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[65]++;
      yield this.sendKiroBridgeMessage(bridgeMessage);
    });
  }
  /**
   * Receive execution data from Kiro
   */
  receiveKiroExecutionData(executionData, correlationId) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[8]++;
    cov_1jps2o9q2k().s[66]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[9]++;
      const bridgeMessage =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[67]++, {
        type: "execution_data",
        source: "kiro",
        payload: executionData,
        timestamp: new Date(),
        correlationId,
        routingPath: "mcp"
      });
      // Process execution data for support operations
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[68]++;
      yield this.processKiroExecutionData(bridgeMessage);
    });
  }
  /**
   * Get MCP router metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[10]++;
    cov_1jps2o9q2k().s[69]++;
    return Object.assign(Object.assign({}, this.metrics), {
      healthStatus: this.healthStatus,
      queueSize: this.messageQueue.size,
      priorityQueueSize: this.priorityQueue.length,
      pendingOperations: this.pendingMessages.size,
      totalQueuedOperations: this.messageQueue.size + this.priorityQueue.length
    });
  }
  /**
   * Cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[11]++;
    cov_1jps2o9q2k().s[70]++;
    // Clear all tracked intervals
    this.activeIntervals.forEach(interval => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[12]++;
      cov_1jps2o9q2k().s[71]++;
      clearInterval(interval);
    });
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[72]++;
    this.activeIntervals.clear();
    // Clear all tracked timeouts
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[73]++;
    this.activeTimeouts.forEach(timeout => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[13]++;
      cov_1jps2o9q2k().s[74]++;
      clearTimeout(timeout);
    });
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[75]++;
    this.activeTimeouts.clear();
    // Clear specific intervals and timeouts
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[76]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[24][0]++;
      cov_1jps2o9q2k().s[77]++;
      clearInterval(this.healthCheckInterval);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[78]++;
      this.healthCheckInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[24][1]++;
    }
    cov_1jps2o9q2k().s[79]++;
    if (this.connectionRetryTimeout) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[25][0]++;
      cov_1jps2o9q2k().s[80]++;
      clearTimeout(this.connectionRetryTimeout);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[81]++;
      this.connectionRetryTimeout = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[25][1]++;
    }
    // Clean up all pending message timeouts
    cov_1jps2o9q2k().s[82]++;
    this.pendingMessages.forEach(queuedMessage => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[14]++;
      cov_1jps2o9q2k().s[83]++;
      if (queuedMessage.timeoutId) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[26][0]++;
        cov_1jps2o9q2k().s[84]++;
        clearTimeout(queuedMessage.timeoutId);
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[26][1]++;
      }
      cov_1jps2o9q2k().s[85]++;
      queuedMessage.reject(new Error("MCP router destroyed"));
    });
    // Clean up priority queue timeouts
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[86]++;
    this.priorityQueue.forEach(queuedMessage => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[15]++;
      cov_1jps2o9q2k().s[87]++;
      if (queuedMessage.timeoutId) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[27][0]++;
        cov_1jps2o9q2k().s[88]++;
        clearTimeout(queuedMessage.timeoutId);
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[27][1]++;
      }
      cov_1jps2o9q2k().s[89]++;
      queuedMessage.reject(new Error("MCP router destroyed"));
    });
    // Close connection
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[90]++;
    if (this.connection) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[28][0]++;
      cov_1jps2o9q2k().s[91]++;
      this.connection.close();
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[92]++;
      this.connection = null;
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[28][1]++;
    }
    // Clear queues
    cov_1jps2o9q2k().s[93]++;
    this.messageQueue.clear();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[94]++;
    this.pendingMessages.clear();
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[95]++;
    this.priorityQueue = [];
  }
  // Private implementation methods
  initializeHealthStatus() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[16]++;
    cov_1jps2o9q2k().s[96]++;
    return {
      route: "mcp",
      isHealthy: false,
      latencyMs: 0,
      successRate: 1.0,
      lastCheck: new Date(),
      consecutiveFailures: 0,
      connectionStatus: "disconnected",
      queueSize: 0,
      pendingOperations: 0,
      lastSuccessfulOperation: null,
      errorRate: 0
    };
  }
  initializeMetrics() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[17]++;
    cov_1jps2o9q2k().s[97]++;
    return {
      totalMessages: 0,
      successfulMessages: 0,
      failedMessages: 0,
      averageLatency: 0,
      queueOverflows: 0,
      connectionResets: 0
    };
  }
  initializeConnection() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[18]++;
    cov_1jps2o9q2k().s[98]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[19]++;
      cov_1jps2o9q2k().s[99]++;
      try {
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[100]++;
        this.connection = new ws_1.default(this.config.endpoint);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[101]++;
        this.connection.onopen = () => {
          /* istanbul ignore next */
          cov_1jps2o9q2k().f[20]++;
          cov_1jps2o9q2k().s[102]++;
          console.log("MCP connection established");
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[103]++;
          this.healthStatus.connectionStatus = "connected";
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[104]++;
          this.healthStatus.isHealthy = true;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[105]++;
          this.startHealthMonitoring();
          // Handle connection recovery and process queued messages
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[106]++;
          this.handleConnectionRecovery();
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[107]++;
          this.processPriorityQueue();
        };
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[108]++;
        this.connection.onmessage = event => {
          /* istanbul ignore next */
          cov_1jps2o9q2k().f[21]++;
          cov_1jps2o9q2k().s[109]++;
          this.handleMessage(event.data);
        };
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[110]++;
        this.connection.onclose = () => {
          /* istanbul ignore next */
          cov_1jps2o9q2k().f[22]++;
          cov_1jps2o9q2k().s[111]++;
          console.log("MCP connection closed");
          // Only change to disconnected if not already in error state
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[112]++;
          if (this.healthStatus.connectionStatus !== "error") {
            /* istanbul ignore next */
            cov_1jps2o9q2k().b[29][0]++;
            cov_1jps2o9q2k().s[113]++;
            this.healthStatus.connectionStatus = "disconnected";
          } else
          /* istanbul ignore next */
          {
            cov_1jps2o9q2k().b[29][1]++;
          }
          cov_1jps2o9q2k().s[114]++;
          this.healthStatus.isHealthy = false;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[115]++;
          this.scheduleReconnection();
        };
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[116]++;
        this.connection.onerror = error => {
          /* istanbul ignore next */
          cov_1jps2o9q2k().f[23]++;
          cov_1jps2o9q2k().s[117]++;
          console.error("MCP connection error:", error);
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[118]++;
          this.healthStatus.connectionStatus = "error";
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[119]++;
          this.healthStatus.isHealthy = false;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[120]++;
          this.metrics.connectionResets++;
          // Don't immediately reconnect on error - wait for close event
          // This allows the error state to be observed in tests
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[121]++;
        console.error("Failed to initialize MCP connection:", error);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[122]++;
        this.scheduleReconnection();
      }
    });
  }
  ensureConnection() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[24]++;
    cov_1jps2o9q2k().s[123]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[25]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[124]++;
      if ((
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[32][0]++, (_a = this.connection) === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[32][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[31][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[31][1]++, _a.readyState)) === ws_1.default.OPEN) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[30][0]++;
        cov_1jps2o9q2k().s[125]++;
        return; // Already connected
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[30][1]++;
      }
      cov_1jps2o9q2k().s[126]++;
      if ((
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[35][0]++, (_b = this.connection) === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[35][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[34][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[34][1]++, _b.readyState)) === ws_1.default.CONNECTING) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[33][0]++;
        cov_1jps2o9q2k().s[127]++;
        // Wait for connection to establish
        yield new Promise((resolve, reject) => {
          /* istanbul ignore next */
          cov_1jps2o9q2k().f[26]++;
          const timeout =
          /* istanbul ignore next */
          (cov_1jps2o9q2k().s[128]++, setTimeout(() => {
            /* istanbul ignore next */
            cov_1jps2o9q2k().f[27]++;
            cov_1jps2o9q2k().s[129]++;
            reject(new Error("Connection timeout"));
          }, this.config.timeout));
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[130]++;
          const checkConnection = () => {
            /* istanbul ignore next */
            cov_1jps2o9q2k().f[28]++;
            var _a, _b;
            /* istanbul ignore next */
            cov_1jps2o9q2k().s[131]++;
            if ((
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[38][0]++, (_a = this.connection) === null) ||
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[38][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[37][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[37][1]++, _a.readyState)) === ws_1.default.OPEN) {
              /* istanbul ignore next */
              cov_1jps2o9q2k().b[36][0]++;
              cov_1jps2o9q2k().s[132]++;
              clearTimeout(timeout);
              /* istanbul ignore next */
              cov_1jps2o9q2k().s[133]++;
              resolve(void 0);
            } else {
              /* istanbul ignore next */
              cov_1jps2o9q2k().b[36][1]++;
              cov_1jps2o9q2k().s[134]++;
              if ((
              /* istanbul ignore next */
              (cov_1jps2o9q2k().b[41][0]++, (_b = this.connection) === null) ||
              /* istanbul ignore next */
              (cov_1jps2o9q2k().b[41][1]++, _b === void 0) ?
              /* istanbul ignore next */
              (cov_1jps2o9q2k().b[40][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1jps2o9q2k().b[40][1]++, _b.readyState)) === ws_1.default.CLOSED) {
                /* istanbul ignore next */
                cov_1jps2o9q2k().b[39][0]++;
                cov_1jps2o9q2k().s[135]++;
                clearTimeout(timeout);
                /* istanbul ignore next */
                cov_1jps2o9q2k().s[136]++;
                reject(new Error("Connection failed"));
              } else {
                /* istanbul ignore next */
                cov_1jps2o9q2k().b[39][1]++;
                cov_1jps2o9q2k().s[137]++;
                setTimeout(checkConnection, 100);
              }
            }
          };
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[138]++;
          checkConnection();
        });
      } else {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[33][1]++;
        cov_1jps2o9q2k().s[139]++;
        // Reconnect
        yield this.initializeConnection();
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[140]++;
        yield this.ensureConnection();
      }
    });
  }
  executeWithRetry(message) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[29]++;
    cov_1jps2o9q2k().s[141]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[30]++;
      let lastError =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[142]++, null);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[143]++;
      for (let attempt =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[144]++, 0); attempt <= this.config.maxRetries; attempt++) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[145]++;
        try {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[146]++;
          message.retryCount = attempt;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[147]++;
          return yield this.sendMessage(message);
        } catch (error) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[148]++;
          lastError = error;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[149]++;
          if (attempt < this.config.maxRetries) {
            /* istanbul ignore next */
            cov_1jps2o9q2k().b[42][0]++;
            const delay =
            /* istanbul ignore next */
            (cov_1jps2o9q2k().s[150]++, this.config.retryDelay * Math.pow(2, attempt));
            /* istanbul ignore next */
            cov_1jps2o9q2k().s[151]++;
            console.log(`MCP operation failed, retrying in ${delay}ms (attempt ${attempt + 1}/${this.config.maxRetries})`);
            /* istanbul ignore next */
            cov_1jps2o9q2k().s[152]++;
            yield new Promise(resolve => {
              /* istanbul ignore next */
              cov_1jps2o9q2k().f[31]++;
              cov_1jps2o9q2k().s[153]++;
              return setTimeout(resolve, delay);
            });
          } else
          /* istanbul ignore next */
          {
            cov_1jps2o9q2k().b[42][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[154]++;
      throw /* istanbul ignore next */(cov_1jps2o9q2k().b[43][0]++, lastError) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[43][1]++, new Error("MCP operation failed after all retries"));
    });
  }
  sendMessage(message) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[32]++;
    cov_1jps2o9q2k().s[155]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[33]++;
      cov_1jps2o9q2k().s[156]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1jps2o9q2k().f[34]++;
        var _a;
        // Check queue size before adding to queue
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[157]++;
        if (this.messageQueue.size >= this.config.queueMaxSize) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[44][0]++;
          cov_1jps2o9q2k().s[158]++;
          this.metrics.queueOverflows++;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[159]++;
          reject(new Error("Message queue is full"));
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[160]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1jps2o9q2k().b[44][1]++;
        }
        // Add to queue
        const queuedMessage =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[161]++, {
          message,
          resolve,
          reject,
          enqueuedAt: new Date(),
          attempts: 0
        });
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[162]++;
        this.messageQueue.set(message.id, queuedMessage);
        // Set timeout for the operation
        const timeoutId =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[163]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_1jps2o9q2k().f[35]++;
          cov_1jps2o9q2k().s[164]++;
          if (this.pendingMessages.has(message.id)) {
            /* istanbul ignore next */
            cov_1jps2o9q2k().b[45][0]++;
            cov_1jps2o9q2k().s[165]++;
            this.pendingMessages.delete(message.id);
            /* istanbul ignore next */
            cov_1jps2o9q2k().s[166]++;
            this.messageQueue.delete(message.id);
            /* istanbul ignore next */
            cov_1jps2o9q2k().s[167]++;
            this.removePendingMessage(message.id);
            /* istanbul ignore next */
            cov_1jps2o9q2k().s[168]++;
            reject(new Error("MCP operation timeout"));
          } else
          /* istanbul ignore next */
          {
            cov_1jps2o9q2k().b[45][1]++;
          }
        },
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[46][0]++, message.timeout) ||
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[46][1]++, this.config.timeout)));
        // Store timeout ID for cleanup
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[169]++;
        queuedMessage.timeoutId = timeoutId;
        // Try to send immediately or queue for later
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[170]++;
        if ((
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[49][0]++, (_a = this.connection) === null) ||
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[49][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[48][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1jps2o9q2k().b[48][1]++, _a.readyState)) === ws_1.default.OPEN) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[47][0]++;
          cov_1jps2o9q2k().s[171]++;
          this.sendMessageImmediate(queuedMessage);
        } else {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[47][1]++;
          cov_1jps2o9q2k().s[172]++;
          // Add to priority queue for processing when connection is available
          this.addToPriorityQueue(queuedMessage);
        }
      });
    });
  }
  sendMessageImmediate(queuedMessage) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[36]++;
    cov_1jps2o9q2k().s[173]++;
    try {
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[174]++;
      // Check if we have room for pending operations
      if (this.pendingMessages.size >= this.config.queueMaxSize) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[50][0]++;
        cov_1jps2o9q2k().s[175]++;
        // Clean up and reject due to pending queue full
        if (queuedMessage.timeoutId) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[51][0]++;
          cov_1jps2o9q2k().s[176]++;
          clearTimeout(queuedMessage.timeoutId);
        } else
        /* istanbul ignore next */
        {
          cov_1jps2o9q2k().b[51][1]++;
        }
        cov_1jps2o9q2k().s[177]++;
        this.messageQueue.delete(queuedMessage.message.id);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[178]++;
        this.metrics.queueOverflows++;
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[179]++;
        queuedMessage.reject(new Error("Pending operations queue is full"));
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[180]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[50][1]++;
      }
      cov_1jps2o9q2k().s[181]++;
      this.pendingMessages.set(queuedMessage.message.id, queuedMessage);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[182]++;
      this.connection.send(JSON.stringify(queuedMessage.message));
    } catch (error) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[183]++;
      // Clean up on send error
      if (queuedMessage.timeoutId) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[52][0]++;
        cov_1jps2o9q2k().s[184]++;
        clearTimeout(queuedMessage.timeoutId);
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[52][1]++;
      }
      cov_1jps2o9q2k().s[185]++;
      this.messageQueue.delete(queuedMessage.message.id);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[186]++;
      this.pendingMessages.delete(queuedMessage.message.id);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[187]++;
      queuedMessage.reject(error);
    }
  }
  addToPriorityQueue(queuedMessage) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[37]++;
    // Insert based on priority (emergency > critical > high > medium > low)
    const priorityOrder =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[188]++, {
      emergency: 0,
      critical: 1,
      high: 2,
      medium: 3,
      low: 4
    });
    const messagePriority =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[189]++,
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[53][0]++, priorityOrder[queuedMessage.message.priority]) ||
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[53][1]++, 4));
    let insertIndex =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[190]++, this.priorityQueue.length);
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[191]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[192]++, 0); i < this.priorityQueue.length; i++) {
      const queuePriority =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[193]++,
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[54][0]++, priorityOrder[this.priorityQueue[i].message.priority]) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[54][1]++, 4));
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[194]++;
      if (messagePriority < queuePriority) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[55][0]++;
        cov_1jps2o9q2k().s[195]++;
        insertIndex = i;
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[196]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[55][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[197]++;
    this.priorityQueue.splice(insertIndex, 0, queuedMessage);
  }
  processPriorityQueue() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[38]++;
    var _a;
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[198]++;
    while (
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[56][0]++, this.priorityQueue.length > 0) &&
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[56][1]++, (
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[58][0]++, (_a = this.connection) === null) ||
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[58][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[57][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[57][1]++, _a.readyState)) === ws_1.default.OPEN)) {
      const queuedMessage =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[199]++, this.priorityQueue.shift());
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[200]++;
      this.sendMessageImmediate(queuedMessage);
    }
  }
  removePendingMessage(messageId) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[39]++;
    // Remove from priority queue if present
    const queueIndex =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[201]++, this.priorityQueue.findIndex(q => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[40]++;
      cov_1jps2o9q2k().s[202]++;
      return q.message.id === messageId;
    }));
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[203]++;
    if (queueIndex >= 0) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[59][0]++;
      cov_1jps2o9q2k().s[204]++;
      this.priorityQueue.splice(queueIndex, 1);
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[59][1]++;
    }
  }
  handleMessage(data) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[41]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[205]++;
    try {
      const message =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[206]++, JSON.parse(data));
      // Handle response messages
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[207]++;
      if (
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[61][0]++, message.type === "response") &&
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[61][1]++, this.pendingMessages.has(message.id))) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[60][0]++;
        const queuedMessage =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[208]++, this.pendingMessages.get(message.id));
        // Clean up timeout
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[209]++;
        if (queuedMessage.timeoutId) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[62][0]++;
          cov_1jps2o9q2k().s[210]++;
          clearTimeout(queuedMessage.timeoutId);
        } else
        /* istanbul ignore next */
        {
          cov_1jps2o9q2k().b[62][1]++;
        }
        cov_1jps2o9q2k().s[211]++;
        this.pendingMessages.delete(message.id);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[212]++;
        this.messageQueue.delete(message.id);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[213]++;
        if (message.error) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[63][0]++;
          cov_1jps2o9q2k().s[214]++;
          queuedMessage.reject(new Error(message.error.message));
        } else {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[63][1]++;
          const messageTimestamp =
          /* istanbul ignore next */
          (cov_1jps2o9q2k().s[215]++, message.timestamp instanceof Date ?
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[64][0]++, message.timestamp.getTime()) :
          /* istanbul ignore next */
          (cov_1jps2o9q2k().b[64][1]++, new Date(message.timestamp).getTime()));
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[216]++;
          queuedMessage.resolve({
            success: true,
            operationId: message.id,
            latencyMs: Date.now() - messageTimestamp,
            timestamp: new Date(),
            text:
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[66][0]++, (_a = message.result) === null) ||
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[66][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[65][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[65][1]++, _a.text),
            toolCalls:
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[68][0]++, (_b = message.result) === null) ||
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[68][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[67][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1jps2o9q2k().b[67][1]++, _b.toolCalls)
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[60][1]++;
      }
      // Handle notification messages (from Kiro)
      cov_1jps2o9q2k().s[217]++;
      if (message.type === "notification") {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[69][0]++;
        cov_1jps2o9q2k().s[218]++;
        this.handleKiroNotification(message);
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[69][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[219]++;
      console.error("Failed to handle MCP message:", error);
    }
  }
  sendKiroBridgeMessage(message) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[42]++;
    cov_1jps2o9q2k().s[220]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[43]++;
      var _a;
      const mcpMessage =
      /* istanbul ignore next */
      (cov_1jps2o9q2k().s[221]++, {
        id: this.generateMessageId(),
        type: "notification",
        method: "kiro_bridge",
        params: message,
        timestamp: new Date(),
        correlationId: message.correlationId,
        retryCount: 0,
        priority: "medium",
        timeout: 5000 // 5 second timeout for bridge messages
      });
      // For notifications, we don't need to wait for a response
      // Just send and resolve immediately
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[222]++;
      if ((
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[72][0]++, (_a = this.connection) === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[72][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[71][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[71][1]++, _a.readyState)) === ws_1.default.OPEN) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[70][0]++;
        cov_1jps2o9q2k().s[223]++;
        try {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[224]++;
          this.connection.send(JSON.stringify(mcpMessage));
        } catch (error) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[225]++;
          throw new Error(`Failed to send Kiro bridge message: ${error}`);
        }
      } else {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[70][1]++;
        cov_1jps2o9q2k().s[226]++;
        throw new Error("MCP connection not available");
      }
    });
  }
  processKiroExecutionData(message) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[44]++;
    cov_1jps2o9q2k().s[227]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[45]++;
      cov_1jps2o9q2k().s[228]++;
      // Process execution data for support analysis
      console.log(`Processing Kiro execution data: ${message.correlationId}`);
      // This would integrate with the meta monitor and implementation support
      // For now, just log the received data
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[229]++;
      this.logOperation("kiro_data", null, message);
    });
  }
  handleKiroNotification(message) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[46]++;
    cov_1jps2o9q2k().s[230]++;
    console.log(`Received Kiro notification: ${message.method}`);
    // Handle different types of notifications from Kiro
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[231]++;
    switch (message.method) {
      case "execution_update":
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[73][0]++;
        cov_1jps2o9q2k().s[232]++;
        // Handle execution updates
        break;
      case "health_check":
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[73][1]++;
        cov_1jps2o9q2k().s[233]++;
        // Respond to health checks
        this.respondToHealthCheck(message);
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[234]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[73][2]++;
        cov_1jps2o9q2k().s[235]++;
        console.log(`Unknown notification method: ${message.method}`);
    }
  }
  respondToHealthCheck(message) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[47]++;
    var _a;
    const response =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[236]++, {
      id: this.generateMessageId(),
      type: "response",
      method: "health_check_response",
      result: {
        status: "healthy",
        timestamp: new Date(),
        metrics: this.getMetrics()
      },
      timestamp: new Date(),
      correlationId: message.correlationId,
      retryCount: 0,
      priority: "high"
    });
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[237]++;
    if ((
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[76][0]++, (_a = this.connection) === null) ||
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[76][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[75][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1jps2o9q2k().b[75][1]++, _a.readyState)) === ws_1.default.OPEN) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[74][0]++;
      cov_1jps2o9q2k().s[238]++;
      this.connection.send(JSON.stringify(response));
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[74][1]++;
    }
  }
  scheduleReconnection() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[48]++;
    cov_1jps2o9q2k().s[239]++;
    if (this.connectionRetryTimeout) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[77][0]++;
      cov_1jps2o9q2k().s[240]++;
      clearTimeout(this.connectionRetryTimeout);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[241]++;
      this.activeTimeouts.delete(this.connectionRetryTimeout);
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[77][1]++;
    }
    cov_1jps2o9q2k().s[242]++;
    this.connectionRetryTimeout = setTimeout(() => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[49]++;
      cov_1jps2o9q2k().s[243]++;
      console.log("Attempting MCP reconnection...");
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[244]++;
      this.initializeConnection();
    }, 5000); // Retry after 5 seconds
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[245]++;
    this.activeTimeouts.add(this.connectionRetryTimeout);
  }
  /**
   * Handle connection recovery - retry failed messages
   */
  handleConnectionRecovery() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[50]++;
    // Move pending messages back to priority queue for retry
    const failedMessages =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[246]++, []);
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[247]++;
    this.pendingMessages.forEach(queuedMessage => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[51]++;
      cov_1jps2o9q2k().s[248]++;
      // Only retry if not exceeded max attempts
      if (queuedMessage.attempts < this.config.maxRetries) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[78][0]++;
        cov_1jps2o9q2k().s[249]++;
        queuedMessage.attempts++;
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[250]++;
        queuedMessage.message.retryCount = queuedMessage.attempts;
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[251]++;
        failedMessages.push(queuedMessage);
      } else {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[78][1]++;
        cov_1jps2o9q2k().s[252]++;
        // Reject messages that exceeded retry limit
        if (queuedMessage.timeoutId) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().b[79][0]++;
          cov_1jps2o9q2k().s[253]++;
          clearTimeout(queuedMessage.timeoutId);
        } else
        /* istanbul ignore next */
        {
          cov_1jps2o9q2k().b[79][1]++;
        }
        cov_1jps2o9q2k().s[254]++;
        queuedMessage.reject(new Error("MCP operation failed after max retries"));
      }
    });
    // Clear pending messages
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[255]++;
    this.pendingMessages.clear();
    // Add failed messages back to priority queue
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[256]++;
    failedMessages.forEach(queuedMessage => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[52]++;
      cov_1jps2o9q2k().s[257]++;
      this.addToPriorityQueue(queuedMessage);
    });
    // Process the queue
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[258]++;
    this.processPriorityQueue();
  }
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[53]++;
    cov_1jps2o9q2k().s[259]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[80][0]++;
      cov_1jps2o9q2k().s[260]++;
      clearInterval(this.healthCheckInterval);
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[261]++;
      this.activeIntervals.delete(this.healthCheckInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1jps2o9q2k().b[80][1]++;
    }
    cov_1jps2o9q2k().s[262]++;
    this.healthCheckInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[54]++;
      cov_1jps2o9q2k().s[263]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1jps2o9q2k().f[55]++;
        cov_1jps2o9q2k().s[264]++;
        try {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[265]++;
          yield this.performHealthCheck();
        } catch (error) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[266]++;
          console.error("MCP health check failed:", error);
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[267]++;
          this.healthStatus.consecutiveFailures++;
        }
      });
    }, this.config.healthCheckInterval);
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[268]++;
    this.activeIntervals.add(this.healthCheckInterval);
  }
  performHealthCheck() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[56]++;
    cov_1jps2o9q2k().s[269]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1jps2o9q2k().f[57]++;
      var _a;
      /* istanbul ignore next */
      cov_1jps2o9q2k().s[270]++;
      if ((
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[83][0]++, (_a = this.connection) === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[83][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[82][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[82][1]++, _a.readyState)) === ws_1.default.OPEN) {
        /* istanbul ignore next */
        cov_1jps2o9q2k().b[81][0]++;
        const healthMessage =
        /* istanbul ignore next */
        (cov_1jps2o9q2k().s[271]++, {
          id: this.generateMessageId(),
          type: "request",
          method: "ping",
          timestamp: new Date(),
          correlationId: this.generateCorrelationId(),
          retryCount: 0,
          priority: "low"
        });
        /* istanbul ignore next */
        cov_1jps2o9q2k().s[272]++;
        try {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[273]++;
          yield this.sendMessage(healthMessage);
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[274]++;
          this.healthStatus.consecutiveFailures = 0;
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[275]++;
          this.healthStatus.lastSuccessfulOperation = new Date();
        } catch (error) {
          /* istanbul ignore next */
          cov_1jps2o9q2k().s[276]++;
          this.healthStatus.consecutiveFailures++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1jps2o9q2k().b[81][1]++;
      }
    });
  }
  updateMetrics(success, latencyMs) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[58]++;
    cov_1jps2o9q2k().s[277]++;
    this.metrics.totalMessages++;
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[278]++;
    if (success) {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[84][0]++;
      cov_1jps2o9q2k().s[279]++;
      this.metrics.successfulMessages++;
    } else {
      /* istanbul ignore next */
      cov_1jps2o9q2k().b[84][1]++;
      cov_1jps2o9q2k().s[280]++;
      this.metrics.failedMessages++;
    }
    // Update average latency (rolling average)
    const totalLatency =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[281]++, this.metrics.averageLatency * (this.metrics.totalMessages - 1) + latencyMs);
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[282]++;
    this.metrics.averageLatency = totalLatency / this.metrics.totalMessages;
  }
  logOperation(type, message, response, error) {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[59]++;
    const logEntry =
    /* istanbul ignore next */
    (cov_1jps2o9q2k().s[283]++, {
      timestamp: new Date(),
      type,
      messageId:
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[86][0]++, message === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[86][1]++, message === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[85][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[85][1]++, message.id),
      correlationId:
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[88][0]++, message === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[88][1]++, message === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[87][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[87][1]++, message.correlationId),
      method:
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[90][0]++, message === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[90][1]++, message === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[89][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[89][1]++, message.method),
      success: type === "success",
      error:
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[92][0]++, error === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[92][1]++, error === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[91][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[91][1]++, error.message),
      latencyMs:
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[94][0]++, response === null) ||
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[94][1]++, response === void 0) ?
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[93][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1jps2o9q2k().b[93][1]++, response.latencyMs)
    });
    /* istanbul ignore next */
    cov_1jps2o9q2k().s[284]++;
    console.log(`[MCPRouter] ${JSON.stringify(logEntry)}`);
  }
  generateMessageId() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[60]++;
    cov_1jps2o9q2k().s[285]++;
    return `mcp-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
  generateCorrelationId() {
    /* istanbul ignore next */
    cov_1jps2o9q2k().f[61]++;
    cov_1jps2o9q2k().s[286]++;
    return `mcp-corr-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
}
/* istanbul ignore next */
cov_1jps2o9q2k().s[287]++;
exports.MCPRouter = MCPRouter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,