{"file":"/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts","mappings":"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","names":[],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/compliance-integration.ts"],"sourcesContent":["/**\n * Compliance Integration for AI Orchestrator\n *\n * Integrates provider agreement compliance checks into the AI request flow\n * Ensures all AI requests are validated against provider agreements\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { BasicLogger } from \"./basic-logger\";\nimport { ProviderAgreementCompliance } from \"./provider-agreement-compliance\";\nimport { AiRequest, AiResponse, Provider } from \"./types\";\n\nexport interface ComplianceCheckResult {\n  allowed: boolean;\n  provider: Provider;\n  violations: string[];\n  warnings: string[];\n  complianceScore: number;\n  agreementStatus: \"active\" | \"expired\" | \"missing\";\n  lastVerified: string;\n}\n\nexport interface ComplianceEnforcementConfig {\n  enforceCompliance: boolean;\n  blockOnViolations: boolean;\n  blockOnExpiredAgreements: boolean;\n  blockOnMissingAgreements: boolean;\n  warningThresholdDays: number; // Days before agreement expiry to warn\n  maxVerificationAgeDays: number; // Max days since last verification\n}\n\n/**\n * Compliance Integration Manager\n */\nexport class ComplianceIntegration {\n  private logger: BasicLogger;\n  private auditTrail: AuditTrailSystem;\n  private config: ComplianceEnforcementConfig;\n  private providerCompliance: ProviderAgreementCompliance;\n\n  constructor(config: Partial<ComplianceEnforcementConfig> = {}) {\n    this.logger = new BasicLogger(\"compliance-integration\");\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n    });\n    this.providerCompliance = new ProviderAgreementCompliance();\n\n    this.config = {\n      enforceCompliance: true,\n      blockOnViolations: true,\n      blockOnExpiredAgreements: true,\n      blockOnMissingAgreements: true,\n      warningThresholdDays: 30,\n      maxVerificationAgeDays: 90,\n      ...config,\n    };\n  }\n\n  /**\n   * Perform compliance check before AI request\n   */\n  async performComplianceCheck(\n    request: AiRequest,\n    provider: Provider,\n    requestId: string\n  ): Promise<ComplianceCheckResult> {\n    const startTime = Date.now();\n\n    try {\n      // Get provider compliance status\n      const complianceResult =\n        await this.providerCompliance.verifyProviderCompliance(provider);\n\n      const agreement = complianceResult.agreement;\n      const violations = [...complianceResult.violations];\n      const warnings = [...complianceResult.warnings];\n\n      // Additional compliance checks\n      let complianceScore = 100;\n      let agreementStatus: ComplianceCheckResult[\"agreementStatus\"] = \"missing\";\n\n      if (agreement) {\n        // Check agreement expiry\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        const daysUntilExpiry =\n          (expiryDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24);\n\n        if (now > expiryDate) {\n          agreementStatus = \"expired\";\n          violations.push(\n            `Agreement expired ${Math.floor(-daysUntilExpiry)} days ago`\n          );\n          complianceScore -= 50;\n        } else {\n          agreementStatus = \"active\";\n\n          // Warn if expiring soon\n          if (daysUntilExpiry <= this.config.warningThresholdDays) {\n            warnings.push(\n              `Agreement expires in ${Math.floor(daysUntilExpiry)} days`\n            );\n            complianceScore -= 10;\n          }\n        }\n\n        // Check verification age\n        const lastVerified = new Date(agreement.lastVerified);\n        const daysSinceVerification =\n          (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24);\n\n        if (daysSinceVerification > this.config.maxVerificationAgeDays) {\n          warnings.push(\n            `Agreement not verified in ${Math.floor(\n              daysSinceVerification\n            )} days`\n          );\n          complianceScore -= 15;\n        }\n\n        // Check core compliance requirements\n        if (!agreement.noTrainingOnCustomerData) {\n          violations.push(\n            \"Provider does not guarantee no training on customer data\"\n          );\n          complianceScore -= 40;\n        }\n\n        if (!agreement.dataProcessingAgreement) {\n          violations.push(\"No valid Data Processing Agreement\");\n          complianceScore -= 30;\n        }\n\n        if (!agreement.gdprCompliant) {\n          violations.push(\"Provider is not GDPR compliant\");\n          complianceScore -= 25;\n        }\n      } else {\n        violations.push(`No agreement found for provider: ${provider}`);\n        complianceScore = 0;\n      }\n\n      // Determine if request should be allowed\n      let allowed = true;\n\n      if (this.config.enforceCompliance) {\n        if (\n          this.config.blockOnMissingAgreements &&\n          agreementStatus === \"missing\"\n        ) {\n          allowed = false;\n        }\n\n        if (\n          this.config.blockOnExpiredAgreements &&\n          agreementStatus === \"expired\"\n        ) {\n          allowed = false;\n        }\n\n        if (this.config.blockOnViolations && violations.length > 0) {\n          allowed = false;\n        }\n      }\n\n      const result: ComplianceCheckResult = {\n        allowed,\n        provider,\n        violations,\n        warnings,\n        complianceScore: Math.max(0, complianceScore),\n        agreementStatus,\n        lastVerified: agreement?.lastVerified || \"never\",\n      };\n\n      // Log compliance check to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"compliance_check\",\n        requestId,\n        provider,\n        complianceStatus: allowed ? \"compliant\" : \"violation\",\n        metadata: {\n          complianceScore: result.complianceScore,\n          agreementStatus: result.agreementStatus,\n          violationsCount: violations.length,\n          warningsCount: warnings.length,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      this.logger.info(\"Compliance check completed\", {\n        requestId,\n        provider,\n        allowed,\n        complianceScore: result.complianceScore,\n        violations: violations.length,\n        warnings: warnings.length,\n        processingTimeMs: Date.now() - startTime,\n      });\n\n      return result;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      this.logger.error(\"Compliance check failed\", {\n        requestId,\n        provider,\n        error: errorMessage,\n      });\n\n      // Log error to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"compliance_check\",\n        requestId,\n        provider,\n        complianceStatus: \"violation\",\n        error: {\n          type: \"compliance_check_error\",\n          message: errorMessage,\n        },\n      });\n\n      // Return restrictive result on error\n      return {\n        allowed: false,\n        provider,\n        violations: [`Compliance check failed: ${errorMessage}`],\n        warnings: [],\n        complianceScore: 0,\n        agreementStatus: \"missing\",\n        lastVerified: \"never\",\n      };\n    }\n  }\n\n  /**\n   * Enforce compliance for AI request\n   */\n  async enforceCompliance(\n    request: AiRequest,\n    provider: Provider,\n    requestId: string\n  ): Promise<void> {\n    const complianceResult = await this.performComplianceCheck(\n      request,\n      provider,\n      requestId\n    );\n\n    if (!complianceResult.allowed) {\n      const errorMessage = `Compliance violation prevents AI request: ${complianceResult.violations.join(\n        \", \"\n      )}`;\n\n      // Record compliance violation\n      await this.providerCompliance.recordViolation({\n        providerId: provider,\n        violationType:\n          complianceResult.agreementStatus === \"missing\"\n            ? \"unauthorized_access\"\n            : complianceResult.agreementStatus === \"expired\"\n            ? \"agreement_expired\"\n            : \"training_detected\",\n        severity: \"high\",\n        description: `AI request blocked due to compliance violation`,\n        evidence: `Request ID: ${requestId}, Violations: ${complianceResult.violations.join(\n          \", \"\n        )}`,\n      });\n\n      throw new Error(errorMessage);\n    }\n\n    // Log warnings if any\n    if (complianceResult.warnings.length > 0) {\n      this.logger.warn(\"Compliance warnings detected\", {\n        requestId,\n        provider,\n        warnings: complianceResult.warnings,\n      });\n    }\n  }\n\n  /**\n   * Wrap AI response with compliance metadata\n   */\n  async wrapResponseWithCompliance(\n    response: AiResponse,\n    complianceResult: ComplianceCheckResult\n  ): Promise<AiResponse> {\n    return {\n      ...response,\n      metadata: {\n        ...response.metadata,\n        compliance: {\n          checked: true,\n          score: complianceResult.complianceScore,\n          agreementStatus: complianceResult.agreementStatus,\n          lastVerified: complianceResult.lastVerified,\n          violations: complianceResult.violations.length,\n          warnings: complianceResult.warnings.length,\n        },\n      },\n    };\n  }\n\n  /**\n   * Get compliance summary for monitoring\n   */\n  async getComplianceSummary(): Promise<{\n    overallCompliance: \"compliant\" | \"warning\" | \"non_compliant\";\n    providers: Array<{\n      provider: Provider;\n      compliant: boolean;\n      score: number;\n      agreementStatus: string;\n      lastVerified: string;\n    }>;\n    recentViolations: number;\n    pendingActions: number;\n  }> {\n    const providers: Provider[] = [\"bedrock\", \"google\", \"meta\"];\n    const providerSummaries = [];\n    let totalScore = 0;\n    let compliantProviders = 0;\n\n    for (const provider of providers) {\n      const complianceResult =\n        await this.providerCompliance.verifyProviderCompliance(provider);\n      const agreement = complianceResult.agreement;\n\n      let score = 100;\n      if (complianceResult.violations.length > 0) {\n        score = Math.max(0, 100 - complianceResult.violations.length * 25);\n      }\n      if (complianceResult.warnings.length > 0) {\n        score = Math.max(0, score - complianceResult.warnings.length * 10);\n      }\n\n      const compliant = complianceResult.compliant && score >= 80;\n      if (compliant) compliantProviders++;\n      totalScore += score;\n\n      providerSummaries.push({\n        provider,\n        compliant,\n        score,\n        agreementStatus: agreement\n          ? new Date() > new Date(agreement.expiryDate)\n            ? \"expired\"\n            : \"active\"\n          : \"missing\",\n        lastVerified: agreement?.lastVerified || \"never\",\n      });\n    }\n\n    const averageScore = totalScore / providers.length;\n    const overallCompliance =\n      averageScore >= 95\n        ? \"compliant\"\n        : averageScore >= 80\n        ? \"warning\"\n        : \"non_compliant\";\n\n    // Get recent violations (last 7 days)\n    const violations = this.providerCompliance.getAllViolations();\n    const recentViolations = violations.filter((v) => {\n      const violationDate = new Date(v.timestamp);\n      const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\n      return violationDate > weekAgo && v.status === \"open\";\n    }).length;\n\n    // Count pending actions (expiring agreements)\n    const agreements = this.providerCompliance.getAllAgreements();\n    const pendingActions = agreements.filter((a) => {\n      const expiryDate = new Date(a.expiryDate);\n      const daysUntilExpiry =\n        (expiryDate.getTime() - Date.now()) / (1000 * 60 * 60 * 24);\n      return daysUntilExpiry <= 90 && daysUntilExpiry > 0;\n    }).length;\n\n    return {\n      overallCompliance,\n      providers: providerSummaries,\n      recentViolations,\n      pendingActions,\n    };\n  }\n\n  /**\n   * Update configuration\n   */\n  updateConfig(newConfig: Partial<ComplianceEnforcementConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n\n    this.logger.info(\"Compliance configuration updated\", {\n      config: this.config,\n    });\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): ComplianceEnforcementConfig {\n    return { ...this.config };\n  }\n}\n\n// Singleton instance\nexport const complianceIntegration = new ComplianceIntegration();\n"],"version":3}