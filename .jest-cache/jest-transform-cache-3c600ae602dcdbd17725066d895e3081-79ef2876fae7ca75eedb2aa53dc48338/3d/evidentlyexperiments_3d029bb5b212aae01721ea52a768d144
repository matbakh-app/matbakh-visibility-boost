0474bcf02dcb391e86d6aa9196ef6f81
"use strict";

/**
 * CloudWatch Evidently Experiments Integration for AI Orchestrator
 *
 * Implements:
 * - A/B Testing for AI model routing
 * - Feature flags for gradual AI feature rollouts
 * - Automated experiment lifecycle management
 * - Integration with bandit optimization
 */
/* istanbul ignore next */
function cov_2lc28q050z() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/evidently-experiments.ts";
  var hash = "2d1e9756de383d798bb1da17afd0dca6d4b02b52";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/evidently-experiments.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "2": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 14,
          column: 63
        }
      },
      "4": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 58
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 83
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 73
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "12": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "13": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 39,
          column: 20
        }
      },
      "14": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "15": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "17": {
        start: {
          line: 53,
          column: 31
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "18": {
        start: {
          line: 53,
          column: 60
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "19": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 68,
          column: 16
        }
      },
      "20": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "21": {
        start: {
          line: 78,
          column: 30
        },
        end: {
          line: 78,
          column: 79
        }
      },
      "22": {
        start: {
          line: 78,
          column: 63
        },
        end: {
          line: 78,
          column: 78
        }
      },
      "23": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 116
        }
      },
      "24": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "25": {
        start: {
          line: 81,
          column: 73
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "26": {
        start: {
          line: 88,
          column: 32
        },
        end: {
          line: 92,
          column: 15
        }
      },
      "27": {
        start: {
          line: 88,
          column: 70
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "28": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 107,
          column: 16
        }
      },
      "29": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 68
        }
      },
      "30": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "31": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "32": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 120,
          column: 85
        }
      },
      "33": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "34": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 146,
          column: 21
        }
      },
      "35": {
        start: {
          line: 124,
          column: 41
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "36": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 142,
          column: 25
        }
      },
      "37": {
        start: {
          line: 135,
          column: 45
        },
        end: {
          line: 135,
          column: 71
        }
      },
      "38": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 141,
          column: 30
        }
      },
      "39": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 88
        }
      },
      "40": {
        start: {
          line: 150,
          column: 33
        },
        end: {
          line: 150,
          column: 60
        }
      },
      "41": {
        start: {
          line: 151,
          column: 32
        },
        end: {
          line: 151,
          column: 61
        }
      },
      "42": {
        start: {
          line: 152,
          column: 31
        },
        end: {
          line: 154,
          column: 21
        }
      },
      "43": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "44": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "45": {
        start: {
          line: 167,
          column: 85
        },
        end: {
          line: 167,
          column: 92
        }
      },
      "46": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 80
        }
      },
      "47": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "48": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 178,
          column: 19
        }
      },
      "49": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 213,
          column: 11
        }
      },
      "50": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "51": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "52": {
        start: {
          line: 188,
          column: 85
        },
        end: {
          line: 204,
          column: 17
        }
      },
      "53": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 208,
          column: 20
        }
      },
      "54": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 77
        }
      },
      "55": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 229,
          column: 11
        }
      },
      "56": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 223,
          column: 16
        }
      },
      "57": {
        start: {
          line: 224,
          column: 31
        },
        end: {
          line: 224,
          column: 73
        }
      },
      "58": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "59": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 59
        }
      },
      "60": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "61": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 240,
          column: 16
        }
      },
      "62": {
        start: {
          line: 242,
          column: 27
        },
        end: {
          line: 242,
          column: 78
        }
      },
      "63": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "64": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 88
        }
      },
      "65": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 26
        }
      },
      "66": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "67": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 326,
          column: 13
        }
      },
      "68": {
        start: {
          line: 257,
          column: 33
        },
        end: {
          line: 260,
          column: 19
        }
      },
      "69": {
        start: {
          line: 261,
          column: 35
        },
        end: {
          line: 261,
          column: 54
        }
      },
      "70": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "71": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "72": {
        start: {
          line: 265,
          column: 36
        },
        end: {
          line: 265,
          column: 58
        }
      },
      "73": {
        start: {
          line: 267,
          column: 32
        },
        end: {
          line: 294,
          column: 25
        }
      },
      "74": {
        start: {
          line: 268,
          column: 37
        },
        end: {
          line: 268,
          column: 56
        }
      },
      "75": {
        start: {
          line: 269,
          column: 34
        },
        end: {
          line: 269,
          column: 55
        }
      },
      "76": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 293,
          column: 22
        }
      },
      "77": {
        start: {
          line: 296,
          column: 39
        },
        end: {
          line: 296,
          column: 49
        }
      },
      "78": {
        start: {
          line: 297,
          column: 32
        },
        end: {
          line: 297,
          column: 34
        }
      },
      "79": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 307,
          column: 19
        }
      },
      "80": {
        start: {
          line: 300,
          column: 34
        },
        end: {
          line: 302,
          column: 74
        }
      },
      "81": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 306,
          column: 21
        }
      },
      "82": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 304,
          column: 42
        }
      },
      "83": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 50
        }
      },
      "84": {
        start: {
          line: 308,
          column: 41
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "85": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 77
        }
      },
      "86": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 40
        }
      },
      "87": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 80
        }
      },
      "88": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 28
        }
      },
      "89": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "90": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 335,
          column: 23
        }
      },
      "91": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 23
        }
      },
      "92": {
        start: {
          line: 336,
          column: 31
        },
        end: {
          line: 336,
          column: 73
        }
      },
      "93": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 338,
          column: 23
        }
      },
      "94": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 338,
          column: 23
        }
      },
      "95": {
        start: {
          line: 340,
          column: 37
        },
        end: {
          line: 340,
          column: 114
        }
      },
      "96": {
        start: {
          line: 340,
          column: 71
        },
        end: {
          line: 340,
          column: 113
        }
      },
      "97": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "98": {
        start: {
          line: 343,
          column: 33
        },
        end: {
          line: 343,
          column: 63
        }
      },
      "99": {
        start: {
          line: 344,
          column: 36
        },
        end: {
          line: 344,
          column: 87
        }
      },
      "100": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 348,
          column: 17
        }
      },
      "101": {
        start: {
          line: 346,
          column: 29
        },
        end: {
          line: 346,
          column: 30
        }
      },
      "102": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 66
        }
      },
      "103": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 350,
          column: 58
        }
      },
      "104": {
        start: {
          line: 358,
          column: 27
        },
        end: {
          line: 358,
          column: 69
        }
      },
      "105": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 360,
          column: 19
        }
      },
      "106": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 19
        }
      },
      "107": {
        start: {
          line: 362,
          column: 37
        },
        end: {
          line: 377,
          column: 27
        }
      },
      "108": {
        start: {
          line: 362,
          column: 55
        },
        end: {
          line: 377,
          column: 10
        }
      },
      "109": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "110": {
        start: {
          line: 364,
          column: 31
        },
        end: {
          line: 364,
          column: 82
        }
      },
      "111": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 372,
          column: 17
        }
      },
      "112": {
        start: {
          line: 367,
          column: 20
        },
        end: {
          line: 368,
          column: 107
        }
      },
      "113": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 375,
          column: 87
        }
      },
      "114": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "115": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 382,
          column: 58
        }
      },
      "116": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 52
        }
      },
      "117": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 391,
          column: 11
        }
      },
      "118": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 70
        }
      },
      "119": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 410,
          column: 11
        }
      },
      "120": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 409,
          column: 13
        }
      },
      "121": {
        start: {
          line: 400,
          column: 33
        },
        end: {
          line: 403,
          column: 19
        }
      },
      "122": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 404,
          column: 128
        }
      },
      "123": {
        start: {
          line: 404,
          column: 105
        },
        end: {
          line: 404,
          column: 119
        }
      },
      "124": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 75
        }
      },
      "125": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 408,
          column: 26
        }
      },
      "126": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 416,
          column: 45
        }
      },
      "127": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 441,
          column: 11
        }
      },
      "128": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 440,
          column: 13
        }
      },
      "129": {
        start: {
          line: 424,
          column: 42
        },
        end: {
          line: 424,
          column: 76
        }
      },
      "130": {
        start: {
          line: 425,
          column: 36
        },
        end: {
          line: 425,
          column: 57
        }
      },
      "131": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 431,
          column: 18
        }
      },
      "132": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 439,
          column: 18
        }
      },
      "133": {
        start: {
          line: 444,
          column: 0
        },
        end: {
          line: 444,
          column: 64
        }
      },
      "134": {
        start: {
          line: 446,
          column: 0
        },
        end: {
          line: 531,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 90
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 55
          },
          end: {
            line: 29,
            column: 56
          }
        },
        loc: {
          start: {
            line: 29,
            column: 68
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 56
          }
        },
        loc: {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 53,
            column: 46
          }
        },
        loc: {
          start: {
            line: 53,
            column: 60
          },
          end: {
            line: 56,
            column: 13
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 35
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 75,
            column: 55
          },
          end: {
            line: 75,
            column: 56
          }
        },
        loc: {
          start: {
            line: 75,
            column: 68
          },
          end: {
            line: 110,
            column: 9
          }
        },
        line: 75
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 56
          },
          end: {
            line: 78,
            column: 57
          }
        },
        loc: {
          start: {
            line: 78,
            column: 63
          },
          end: {
            line: 78,
            column: 78
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 57
          },
          end: {
            line: 81,
            column: 58
          }
        },
        loc: {
          start: {
            line: 81,
            column: 73
          },
          end: {
            line: 86,
            column: 13
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 59
          },
          end: {
            line: 88,
            column: 60
          }
        },
        loc: {
          start: {
            line: 88,
            column: 70
          },
          end: {
            line: 92,
            column: 13
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 32
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 116,
            column: 56
          }
        },
        loc: {
          start: {
            line: 116,
            column: 68
          },
          end: {
            line: 160,
            column: 9
          }
        },
        line: 116
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 56
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 165
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 166,
            column: 55
          },
          end: {
            line: 166,
            column: 56
          }
        },
        loc: {
          start: {
            line: 166,
            column: 68
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 166
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 185
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 186,
            column: 55
          },
          end: {
            line: 186,
            column: 56
          }
        },
        loc: {
          start: {
            line: 186,
            column: 68
          },
          end: {
            line: 213,
            column: 9
          }
        },
        line: 186
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 188,
            column: 59
          },
          end: {
            line: 188,
            column: 60
          }
        },
        loc: {
          start: {
            line: 188,
            column: 85
          },
          end: {
            line: 204,
            column: 17
          }
        },
        line: 188
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 36
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 218
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 219,
            column: 55
          },
          end: {
            line: 219,
            column: 56
          }
        },
        loc: {
          start: {
            line: 219,
            column: 68
          },
          end: {
            line: 229,
            column: 9
          }
        },
        line: 219
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 43
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 234
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 235,
            column: 55
          },
          end: {
            line: 235,
            column: 56
          }
        },
        loc: {
          start: {
            line: 235,
            column: 68
          },
          end: {
            line: 248,
            column: 9
          }
        },
        line: 235
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 253
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 254,
            column: 55
          },
          end: {
            line: 254,
            column: 56
          }
        },
        loc: {
          start: {
            line: 254,
            column: 68
          },
          end: {
            line: 327,
            column: 9
          }
        },
        line: 254
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 267,
            column: 106
          },
          end: {
            line: 267,
            column: 107
          }
        },
        loc: {
          start: {
            line: 267,
            column: 121
          },
          end: {
            line: 294,
            column: 17
          }
        },
        line: 267
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 298,
            column: 32
          },
          end: {
            line: 298,
            column: 33
          }
        },
        loc: {
          start: {
            line: 298,
            column: 44
          },
          end: {
            line: 307,
            column: 17
          }
        },
        line: 298
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 58
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 332
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 333,
            column: 55
          },
          end: {
            line: 333,
            column: 56
          }
        },
        loc: {
          start: {
            line: 333,
            column: 68
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 333
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 340,
            column: 64
          },
          end: {
            line: 340,
            column: 65
          }
        },
        loc: {
          start: {
            line: 340,
            column: 71
          },
          end: {
            line: 340,
            column: 113
          }
        },
        line: 340
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 42
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 357
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 362,
            column: 49
          },
          end: {
            line: 362,
            column: 50
          }
        },
        loc: {
          start: {
            line: 362,
            column: 55
          },
          end: {
            line: 377,
            column: 10
          }
        },
        line: 362
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 362,
            column: 95
          },
          end: {
            line: 362,
            column: 96
          }
        },
        loc: {
          start: {
            line: 362,
            column: 108
          },
          end: {
            line: 377,
            column: 9
          }
        },
        line: 362
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 380,
            column: 23
          },
          end: {
            line: 380,
            column: 24
          }
        },
        loc: {
          start: {
            line: 380,
            column: 29
          },
          end: {
            line: 382,
            column: 13
          }
        },
        line: 380
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 40
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 388
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 389,
            column: 55
          },
          end: {
            line: 389,
            column: 56
          }
        },
        loc: {
          start: {
            line: 389,
            column: 68
          },
          end: {
            line: 391,
            column: 9
          }
        },
        line: 389
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 28
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 396
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 397,
            column: 55
          },
          end: {
            line: 397,
            column: 56
          }
        },
        loc: {
          start: {
            line: 397,
            column: 68
          },
          end: {
            line: 410,
            column: 9
          }
        },
        line: 397
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 404,
            column: 96
          },
          end: {
            line: 404,
            column: 97
          }
        },
        loc: {
          start: {
            line: 404,
            column: 105
          },
          end: {
            line: 404,
            column: 119
          }
        },
        line: 404
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        loc: {
          start: {
            line: 415,
            column: 28
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 415
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        loc: {
          start: {
            line: 421,
            column: 18
          },
          end: {
            line: 442,
            column: 5
          }
        },
        line: 421
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 422,
            column: 55
          },
          end: {
            line: 422,
            column: 56
          }
        },
        loc: {
          start: {
            line: 422,
            column: 68
          },
          end: {
            line: 441,
            column: 9
          }
        },
        line: 422
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 18,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 18,
            column: 55
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 57
          },
          end: {
            line: 18,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 66
          },
          end: {
            line: 18,
            column: 80
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 28
          }
        }, {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 72
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 35,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 35,
            column: 57
          }
        }, {
          start: {
            line: 35,
            column: 61
          },
          end: {
            line: 35,
            column: 74
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 103,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 116
          }
        }, {
          start: {
            line: 103,
            column: 121
          },
          end: {
            line: 103,
            column: 128
          }
        }],
        line: 103
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 94
          },
          end: {
            line: 103,
            column: 100
          }
        }, {
          start: {
            line: 103,
            column: 103
          },
          end: {
            line: 103,
            column: 116
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 35
          },
          end: {
            line: 103,
            column: 74
          }
        }, {
          start: {
            line: 103,
            column: 78
          },
          end: {
            line: 103,
            column: 91
          }
        }],
        line: 103
      },
      "8": {
        loc: {
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 104,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 104,
            column: 108
          }
        }, {
          start: {
            line: 104,
            column: 113
          },
          end: {
            line: 104,
            column: 125
          }
        }],
        line: 104
      },
      "9": {
        loc: {
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 104,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 86
          },
          end: {
            line: 104,
            column: 92
          }
        }, {
          start: {
            line: 104,
            column: 95
          },
          end: {
            line: 104,
            column: 108
          }
        }],
        line: 104
      },
      "10": {
        loc: {
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 104,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 104,
            column: 66
          }
        }, {
          start: {
            line: 104,
            column: 70
          },
          end: {
            line: 104,
            column: 83
          }
        }],
        line: 104
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "13": {
        loc: {
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 52
          }
        }, {
          start: {
            line: 127,
            column: 56
          },
          end: {
            line: 127,
            column: 73
          }
        }, {
          start: {
            line: 127,
            column: 77
          },
          end: {
            line: 127,
            column: 103
          }
        }],
        line: 127
      },
      "14": {
        loc: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 142,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 142,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 134,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 134,
            column: 46
          }
        }, {
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 134,
            column: 124
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 134,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 101
          },
          end: {
            line: 134,
            column: 107
          }
        }, {
          start: {
            line: 134,
            column: 110
          },
          end: {
            line: 134,
            column: 124
          }
        }],
        line: 134
      },
      "17": {
        loc: {
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 134,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 134,
            column: 81
          }
        }, {
          start: {
            line: 134,
            column: 85
          },
          end: {
            line: 134,
            column: 98
          }
        }],
        line: 134
      },
      "18": {
        loc: {
          start: {
            line: 152,
            column: 31
          },
          end: {
            line: 154,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 18
          },
          end: {
            line: 153,
            column: 73
          }
        }, {
          start: {
            line: 154,
            column: 18
          },
          end: {
            line: 154,
            column: 21
          }
        }],
        line: 152
      },
      "19": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "20": {
        loc: {
          start: {
            line: 175,
            column: 29
          },
          end: {
            line: 175,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 39
          },
          end: {
            line: 175,
            column: 40
          }
        }, {
          start: {
            line: 175,
            column: 43
          },
          end: {
            line: 175,
            column: 44
          }
        }],
        line: 175
      },
      "21": {
        loc: {
          start: {
            line: 176,
            column: 29
          },
          end: {
            line: 176,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 29
          },
          end: {
            line: 176,
            column: 41
          }
        }, {
          start: {
            line: 176,
            column: 45
          },
          end: {
            line: 176,
            column: 46
          }
        }],
        line: 176
      },
      "22": {
        loc: {
          start: {
            line: 177,
            column: 34
          },
          end: {
            line: 177,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 34
          },
          end: {
            line: 177,
            column: 50
          }
        }, {
          start: {
            line: 177,
            column: 54
          },
          end: {
            line: 177,
            column: 55
          }
        }],
        line: 177
      },
      "23": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "24": {
        loc: {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 225,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 63
          },
          end: {
            line: 225,
            column: 69
          }
        }, {
          start: {
            line: 225,
            column: 72
          },
          end: {
            line: 225,
            column: 95
          }
        }],
        line: 225
      },
      "25": {
        loc: {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 225,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 225,
            column: 35
          }
        }, {
          start: {
            line: 225,
            column: 39
          },
          end: {
            line: 225,
            column: 60
          }
        }],
        line: 225
      },
      "26": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "27": {
        loc: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 243,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 55
          },
          end: {
            line: 243,
            column: 61
          }
        }, {
          start: {
            line: 243,
            column: 64
          },
          end: {
            line: 243,
            column: 85
          }
        }],
        line: 243
      },
      "28": {
        loc: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 243,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 243,
            column: 31
          }
        }, {
          start: {
            line: 243,
            column: 35
          },
          end: {
            line: 243,
            column: 52
          }
        }],
        line: 243
      },
      "29": {
        loc: {
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 263,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 263,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "30": {
        loc: {
          start: {
            line: 267,
            column: 32
          },
          end: {
            line: 294,
            column: 25
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 294,
            column: 18
          }
        }, {
          start: {
            line: 294,
            column: 23
          },
          end: {
            line: 294,
            column: 25
          }
        }],
        line: 267
      },
      "31": {
        loc: {
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 294,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 90
          },
          end: {
            line: 267,
            column: 96
          }
        }, {
          start: {
            line: 267,
            column: 99
          },
          end: {
            line: 294,
            column: 18
          }
        }],
        line: 267
      },
      "32": {
        loc: {
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 267,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 267,
            column: 70
          }
        }, {
          start: {
            line: 267,
            column: 74
          },
          end: {
            line: 267,
            column: 87
          }
        }],
        line: 267
      },
      "33": {
        loc: {
          start: {
            line: 271,
            column: 35
          },
          end: {
            line: 271,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 35
          },
          end: {
            line: 271,
            column: 49
          }
        }, {
          start: {
            line: 271,
            column: 53
          },
          end: {
            line: 271,
            column: 55
          }
        }],
        line: 271
      },
      "34": {
        loc: {
          start: {
            line: 277,
            column: 44
          },
          end: {
            line: 277,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 64
          },
          end: {
            line: 277,
            column: 68
          }
        }, {
          start: {
            line: 277,
            column: 71
          },
          end: {
            line: 277,
            column: 74
          }
        }],
        line: 277
      },
      "35": {
        loc: {
          start: {
            line: 283,
            column: 44
          },
          end: {
            line: 283,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 283,
            column: 64
          },
          end: {
            line: 283,
            column: 68
          }
        }, {
          start: {
            line: 283,
            column: 71
          },
          end: {
            line: 283,
            column: 74
          }
        }],
        line: 283
      },
      "36": {
        loc: {
          start: {
            line: 289,
            column: 44
          },
          end: {
            line: 289,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 289,
            column: 64
          },
          end: {
            line: 289,
            column: 68
          }
        }, {
          start: {
            line: 289,
            column: 71
          },
          end: {
            line: 289,
            column: 74
          }
        }],
        line: 289
      },
      "37": {
        loc: {
          start: {
            line: 303,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "38": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 335,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 335,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "39": {
        loc: {
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 338,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 338,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "40": {
        loc: {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "41": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 360,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 360,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "42": {
        loc: {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 372,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 372,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "43": {
        loc: {
          start: {
            line: 365,
            column: 20
          },
          end: {
            line: 365,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 21
          },
          end: {
            line: 365,
            column: 90
          }
        }, {
          start: {
            line: 365,
            column: 95
          },
          end: {
            line: 365,
            column: 133
          }
        }],
        line: 365
      },
      "44": {
        loc: {
          start: {
            line: 365,
            column: 21
          },
          end: {
            line: 365,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 60
          },
          end: {
            line: 365,
            column: 66
          }
        }, {
          start: {
            line: 365,
            column: 69
          },
          end: {
            line: 365,
            column: 90
          }
        }],
        line: 365
      },
      "45": {
        loc: {
          start: {
            line: 365,
            column: 21
          },
          end: {
            line: 365,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 21
          },
          end: {
            line: 365,
            column: 36
          }
        }, {
          start: {
            line: 365,
            column: 40
          },
          end: {
            line: 365,
            column: 57
          }
        }],
        line: 365
      },
      "46": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "47": {
        loc: {
          start: {
            line: 390,
            column: 19
          },
          end: {
            line: 390,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 19
          },
          end: {
            line: 390,
            column: 61
          }
        }, {
          start: {
            line: 390,
            column: 65
          },
          end: {
            line: 390,
            column: 69
          }
        }],
        line: 390
      },
      "48": {
        loc: {
          start: {
            line: 404,
            column: 23
          },
          end: {
            line: 404,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 24
          },
          end: {
            line: 404,
            column: 120
          }
        }, {
          start: {
            line: 404,
            column: 125
          },
          end: {
            line: 404,
            column: 127
          }
        }],
        line: 404
      },
      "49": {
        loc: {
          start: {
            line: 404,
            column: 24
          },
          end: {
            line: 404,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 80
          },
          end: {
            line: 404,
            column: 86
          }
        }, {
          start: {
            line: 404,
            column: 89
          },
          end: {
            line: 404,
            column: 120
          }
        }],
        line: 404
      },
      "50": {
        loc: {
          start: {
            line: 404,
            column: 24
          },
          end: {
            line: 404,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 24
          },
          end: {
            line: 404,
            column: 60
          }
        }, {
          start: {
            line: 404,
            column: 64
          },
          end: {
            line: 404,
            column: 77
          }
        }],
        line: 404
      },
      "51": {
        loc: {
          start: {
            line: 404,
            column: 105
          },
          end: {
            line: 404,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 105
          },
          end: {
            line: 404,
            column: 113
          }
        }, {
          start: {
            line: 404,
            column: 117
          },
          end: {
            line: 404,
            column: 119
          }
        }],
        line: 404
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/evidently-experiments.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/evidently-experiments.ts"],
      sourcesContent: ["/**\n * CloudWatch Evidently Experiments Integration for AI Orchestrator\n *\n * Implements:\n * - A/B Testing for AI model routing\n * - Feature flags for gradual AI feature rollouts\n * - Automated experiment lifecycle management\n * - Integration with bandit optimization\n */\n\nimport {\n  CloudWatchEvidentlyClient,\n  CreateExperimentCommand,\n  CreateFeatureCommand,\n  CreateProjectCommand,\n  EvaluateFeatureCommand,\n  GetExperimentCommand,\n  ListExperimentsCommand,\n  PutProjectEventsCommand,\n  StartExperimentCommand,\n  StopExperimentCommand,\n} from \"@aws-sdk/client-evidently\";\nimport { randomUUID } from \"crypto\";\nimport { Arm, BanditContext, ThompsonBandit } from \"./bandit-controller\";\n\nexport interface AIExperiment {\n  name: string;\n  description: string;\n  feature: string;\n  treatments: AITreatment[];\n  metricGoals: AIMetricGoal[];\n  trafficAllocation: number; // Percentage of traffic to include\n  duration?: number; // Duration in days\n  autoOptimize?: boolean; // Enable bandit optimization\n}\n\nexport interface AITreatment {\n  name: string;\n  description: string;\n  modelProvider: Arm;\n  weight: number; // Initial traffic percentage\n  configuration?: Record<string, any>;\n}\n\nexport interface AIMetricGoal {\n  metricName: string;\n  desiredChange: \"INCREASE\" | \"DECREASE\";\n  threshold?: number;\n  priority: \"HIGH\" | \"MEDIUM\" | \"LOW\";\n}\n\nexport interface ExperimentContext extends BanditContext {\n  experimentName?: string;\n  treatmentName?: string;\n  sessionId?: string;\n  requestId?: string;\n}\n\nexport interface ExperimentResult {\n  experimentName: string;\n  status: \"CREATED\" | \"UPDATING\" | \"RUNNING\" | \"COMPLETED\" | \"CANCELLED\";\n  startTime?: Date;\n  endTime?: Date;\n  results?: {\n    treatment: string;\n    modelProvider: Arm;\n    metrics: {\n      [metricName: string]: {\n        value: number;\n        improvement: number;\n        confidence: number;\n        statisticalSignificance: boolean;\n      };\n    };\n  }[];\n  recommendation?: {\n    winningTreatment: string;\n    confidence: number;\n    expectedImprovement: number;\n  };\n}\n\nexport class EvidentlyExperimentManager {\n  private client: CloudWatchEvidentlyClient;\n  private projectName: string;\n  private bandit: ThompsonBandit;\n  private activeExperiments: Map<string, AIExperiment> = new Map();\n  private experimentResults: Map<string, ExperimentResult> = new Map();\n\n  constructor(\n    projectName: string = \"matbakh-ai-orchestrator\",\n    region: string = \"eu-central-1\",\n    bandit?: ThompsonBandit\n  ) {\n    this.client = new CloudWatchEvidentlyClient({ region });\n    this.projectName = projectName;\n    this.bandit = bandit || new ThompsonBandit();\n  }\n\n  /**\n   * Initialize the Evidently project for AI experiments\n   */\n  async initializeProject(): Promise<void> {\n    try {\n      await this.client.send(\n        new CreateProjectCommand({\n          name: this.projectName,\n          description: \"AI model routing experiments and optimization\",\n          tags: {\n            Environment: process.env.NODE_ENV || \"development\",\n            Purpose: \"AIOptimization\",\n            Team: \"AI\",\n          },\n        })\n      );\n    } catch (error: any) {\n      if (error.name !== \"ResourceAlreadyExistsException\") {\n        throw error;\n      }\n    }\n  }\n\n  /**\n   * Create a feature flag for AI model routing\n   */\n  async createAIFeature(\n    featureName: string,\n    description: string,\n    providers: Arm[]\n  ): Promise<void> {\n    const variations = providers.map((provider) => ({\n      name: provider,\n      value: { stringValue: provider },\n    }));\n\n    await this.client.send(\n      new CreateFeatureCommand({\n        project: this.projectName,\n        name: featureName,\n        description,\n        variations,\n        defaultVariation: providers[0], // Default to first provider\n        evaluationStrategy: \"ALL_RULES\",\n        tags: {\n          Type: \"AIModelRouting\",\n          CreatedAt: new Date().toISOString(),\n        },\n      })\n    );\n  }\n\n  /**\n   * Create an A/B test experiment for AI model comparison\n   */\n  async createAIExperiment(experiment: AIExperiment): Promise<void> {\n    // First create the feature if it doesn't exist\n    const providers = experiment.treatments.map((t) => t.modelProvider);\n    await this.createAIFeature(\n      experiment.feature,\n      `Feature for experiment: ${experiment.name}`,\n      providers\n    );\n\n    // Create treatments for Evidently\n    const treatments = experiment.treatments.map((treatment) => ({\n      name: treatment.name,\n      description: treatment.description,\n      feature: experiment.feature,\n      variation: treatment.modelProvider,\n    }));\n\n    // Create metric goals\n    const metricGoals = experiment.metricGoals.map((goal) => ({\n      metricName: goal.metricName,\n      desiredChange: goal.desiredChange,\n      valueKey: goal.metricName,\n    }));\n\n    await this.client.send(\n      new CreateExperimentCommand({\n        project: this.projectName,\n        name: experiment.name,\n        description: experiment.description,\n        treatments,\n        metricGoals,\n        randomizationSalt: randomUUID(),\n        samplingRate: experiment.trafficAllocation * 1000, // Convert to per-mille\n        tags: {\n          Type: \"AIModelComparison\",\n          AutoOptimize: experiment.autoOptimize?.toString() || \"false\",\n          Duration: experiment.duration?.toString() || \"indefinite\",\n          CreatedAt: new Date().toISOString(),\n        },\n      })\n    );\n\n    // Store experiment for tracking\n    this.activeExperiments.set(experiment.name, experiment);\n  }\n\n  /**\n   * Get the optimal model provider using bandit + experiment data\n   */\n  async getOptimalProvider(context: ExperimentContext): Promise<{\n    provider: Arm;\n    source: \"bandit\" | \"experiment\" | \"default\";\n    confidence: number;\n    experimentName?: string;\n  }> {\n    // Check if there's an active experiment for this context\n    if (context.experimentName) {\n      const experiment = this.activeExperiments.get(context.experimentName);\n      if (experiment) {\n        try {\n          // Evaluate the experiment feature\n          const response = await this.client.send(\n            new EvaluateFeatureCommand({\n              project: this.projectName,\n              feature: experiment.feature,\n              entityId: context.userId || context.sessionId || randomUUID(),\n              evaluationContext: JSON.stringify({\n                domain: context.domain,\n                budgetTier: context.budgetTier,\n                requireTools: context.requireTools,\n              }),\n            })\n          );\n\n          if (response.variation && response.value?.stringValue) {\n            const provider = response.value.stringValue as Arm;\n            return {\n              provider,\n              source: \"experiment\",\n              confidence: 0.8, // High confidence for experiment assignment\n              experimentName: context.experimentName,\n            };\n          }\n        } catch (error) {\n          console.warn(`Failed to evaluate experiment feature: ${error}`);\n        }\n      }\n    }\n\n    // Fall back to bandit optimization\n    const banditChoice = this.bandit.choose(context);\n    const banditStats = this.bandit.getStats(context);\n    const confidence =\n      banditStats[banditChoice].trials > 10\n        ? Math.min(0.95, banditStats[banditChoice].winRate + 0.1)\n        : 0.5;\n\n    return {\n      provider: banditChoice,\n      source: \"bandit\",\n      confidence,\n    };\n  }\n\n  /**\n   * Record experiment outcome and update bandit\n   */\n  async recordExperimentOutcome(\n    context: ExperimentContext,\n    provider: Arm,\n    metrics: {\n      success: boolean;\n      latencyMs: number;\n      costEuro: number;\n      qualityScore?: number;\n      userSatisfaction?: number;\n    }\n  ): Promise<void> {\n    const { success, latencyMs, costEuro, qualityScore, userSatisfaction } =\n      metrics;\n\n    // Record in bandit for continuous learning\n    this.bandit.record(provider, success, costEuro, latencyMs, context);\n\n    // Record in Evidently for experiment tracking\n    if (context.experimentName) {\n      await this.recordExperimentMetrics(context, provider, {\n        latency: latencyMs,\n        cost: costEuro,\n        success: success ? 1 : 0,\n        quality: qualityScore || 0,\n        satisfaction: userSatisfaction || 0,\n      });\n    }\n  }\n\n  /**\n   * Record metrics to Evidently for experiment analysis\n   */\n  private async recordExperimentMetrics(\n    context: ExperimentContext,\n    provider: Arm,\n    metrics: Record<string, number>\n  ): Promise<void> {\n    try {\n      const events = Object.entries(metrics).map(([metricName, value]) => ({\n        timestamp: new Date(),\n        type: \"aws.evidently.custom\" as const,\n        data: {\n          details: JSON.stringify({\n            metricName,\n            value,\n            provider,\n            experimentName: context.experimentName,\n            treatmentName: context.treatmentName,\n            domain: context.domain,\n            budgetTier: context.budgetTier,\n            requireTools: context.requireTools,\n            requestId: context.requestId,\n          }),\n        },\n      }));\n\n      await this.client.send(\n        new PutProjectEventsCommand({\n          project: this.projectName,\n          events,\n        })\n      );\n    } catch (error) {\n      console.error(\"Failed to record experiment metrics:\", error);\n    }\n  }\n\n  /**\n   * Start an experiment and begin auto-optimization\n   */\n  async startExperiment(experimentName: string): Promise<void> {\n    await this.client.send(\n      new StartExperimentCommand({\n        project: this.projectName,\n        experiment: experimentName,\n      })\n    );\n\n    const experiment = this.activeExperiments.get(experimentName);\n    if (experiment?.autoOptimize) {\n      // Start auto-optimization process\n      this.startAutoOptimization(experimentName);\n    }\n  }\n\n  /**\n   * Stop an experiment and apply winning treatment\n   */\n  async stopExperiment(\n    experimentName: string,\n    reason?: string\n  ): Promise<ExperimentResult | null> {\n    await this.client.send(\n      new StopExperimentCommand({\n        project: this.projectName,\n        experiment: experimentName,\n        reason,\n      })\n    );\n\n    // Analyze results and get recommendation\n    const result = await this.analyzeExperimentResults(experimentName);\n\n    if (result?.recommendation) {\n      // Apply winning treatment to bandit\n      await this.applyWinningTreatment(experimentName, result.recommendation);\n    }\n\n    return result;\n  }\n\n  /**\n   * Analyze experiment results and determine winner\n   */\n  async analyzeExperimentResults(\n    experimentName: string\n  ): Promise<ExperimentResult | null> {\n    try {\n      const response = await this.client.send(\n        new GetExperimentCommand({\n          project: this.projectName,\n          experiment: experimentName,\n        })\n      );\n\n      const experiment = response.experiment;\n      if (!experiment) return null;\n\n      // Get bandit stats for comparison\n      const banditStats = this.bandit.getStats();\n\n      // Analyze treatments\n      const results =\n        experiment.treatments?.map((treatment) => {\n          const provider = treatment.variation as Arm;\n          const stats = banditStats[provider];\n\n          return {\n            treatment: treatment.name || \"\",\n            modelProvider: provider,\n            metrics: {\n              winRate: {\n                value: stats.winRate,\n                improvement: 0, // Calculate vs baseline\n                confidence: stats.trials > 50 ? 0.95 : 0.7,\n                statisticalSignificance: stats.trials > 100,\n              },\n              avgLatency: {\n                value: stats.avgLatency,\n                improvement: 0, // Calculate vs baseline\n                confidence: stats.trials > 50 ? 0.95 : 0.7,\n                statisticalSignificance: stats.trials > 100,\n              },\n              avgCost: {\n                value: stats.avgCost,\n                improvement: 0, // Calculate vs baseline\n                confidence: stats.trials > 50 ? 0.95 : 0.7,\n                statisticalSignificance: stats.trials > 100,\n              },\n            },\n          };\n        }) || [];\n\n      // Determine winner based on composite score\n      let winningTreatment = results[0];\n      let bestScore = -1;\n\n      results.forEach((result) => {\n        // Composite score: win rate (60%) + latency improvement (25%) + cost efficiency (15%)\n        const score =\n          result.metrics.winRate.value * 0.6 +\n          (1 / (result.metrics.avgLatency.value + 1)) * 0.25 +\n          (1 / (result.metrics.avgCost.value + 0.01)) * 0.15;\n\n        if (score > bestScore) {\n          bestScore = score;\n          winningTreatment = result;\n        }\n      });\n\n      const experimentResult: ExperimentResult = {\n        experimentName,\n        status: experiment.status as any,\n        startTime: experiment.createdTime,\n        endTime: experiment.lastUpdatedTime,\n        results,\n        recommendation: {\n          winningTreatment: winningTreatment.treatment,\n          confidence: winningTreatment.metrics.winRate.confidence,\n          expectedImprovement: bestScore,\n        },\n      };\n\n      this.experimentResults.set(experimentName, experimentResult);\n      return experimentResult;\n    } catch (error) {\n      console.error(`Failed to analyze experiment results: ${error}`);\n      return null;\n    }\n  }\n\n  /**\n   * Apply winning treatment to bandit for future optimization\n   */\n  private async applyWinningTreatment(\n    experimentName: string,\n    recommendation: ExperimentResult[\"recommendation\"]\n  ): Promise<void> {\n    if (!recommendation) return;\n\n    const experiment = this.activeExperiments.get(experimentName);\n    if (!experiment) return;\n\n    // Find the winning treatment\n    const winningTreatment = experiment.treatments.find(\n      (t) => t.name === recommendation.winningTreatment\n    );\n\n    if (winningTreatment) {\n      // Boost the winning provider in bandit\n      const provider = winningTreatment.modelProvider;\n      const boostAmount = Math.floor(recommendation.expectedImprovement * 10);\n\n      // Add synthetic wins to boost the provider\n      for (let i = 0; i < boostAmount; i++) {\n        this.bandit.record(provider, true, 0.01, 100); // Low cost, fast response\n      }\n\n      console.log(\n        `Applied winning treatment: ${winningTreatment.name} (${provider}) ` +\n          `with ${boostAmount} synthetic wins`\n      );\n    }\n  }\n\n  /**\n   * Start auto-optimization process for an experiment\n   */\n  private startAutoOptimization(experimentName: string): void {\n    const experiment = this.activeExperiments.get(experimentName);\n    if (!experiment) return;\n\n    // Check experiment performance every hour\n    const optimizationInterval = setInterval(async () => {\n      try {\n        const result = await this.analyzeExperimentResults(experimentName);\n\n        if (result?.recommendation && result.recommendation.confidence > 0.9) {\n          // High confidence winner found, consider early stopping\n          console.log(\n            `High confidence winner found for ${experimentName}: ` +\n              `${result.recommendation.winningTreatment} (${result.recommendation.confidence})`\n          );\n\n          // Could implement early stopping logic here\n          // await this.stopExperiment(experimentName, 'Auto-optimization: High confidence winner');\n          // clearInterval(optimizationInterval);\n        }\n      } catch (error) {\n        console.error(`Auto-optimization error for ${experimentName}:`, error);\n      }\n    }, 60 * 60 * 1000); // Every hour\n\n    // Stop optimization after experiment duration\n    if (experiment.duration) {\n      setTimeout(() => {\n        clearInterval(optimizationInterval);\n      }, experiment.duration * 24 * 60 * 60 * 1000); // Convert days to ms\n    }\n  }\n\n  /**\n   * Get current experiment status and metrics\n   */\n  async getExperimentStatus(\n    experimentName: string\n  ): Promise<ExperimentResult | null> {\n    return this.experimentResults.get(experimentName) || null;\n  }\n\n  /**\n   * List all active experiments\n   */\n  async listActiveExperiments(): Promise<string[]> {\n    try {\n      const response = await this.client.send(\n        new ListExperimentsCommand({\n          project: this.projectName,\n          status: \"RUNNING\",\n        })\n      );\n\n      return response.experiments?.map((exp) => exp.name || \"\") || [];\n    } catch (error) {\n      console.error(\"Failed to list active experiments:\", error);\n      return [];\n    }\n  }\n\n  /**\n   * Get bandit statistics for monitoring\n   */\n  getBanditStats(\n    context?: BanditContext\n  ): ReturnType<ThompsonBandit[\"getStats\"]> {\n    return this.bandit.getStats(context);\n  }\n\n  /**\n   * Health check for the experiment system\n   */\n  async healthCheck(): Promise<{\n    connected: boolean;\n    projectExists: boolean;\n    activeExperiments: number;\n    banditStats: ReturnType<ThompsonBandit[\"getStats\"]>;\n  }> {\n    try {\n      const activeExperiments = await this.listActiveExperiments();\n      const banditStats = this.getBanditStats();\n\n      return {\n        connected: true,\n        projectExists: true,\n        activeExperiments: activeExperiments.length,\n        banditStats,\n      };\n    } catch (error) {\n      return {\n        connected: false,\n        projectExists: false,\n        activeExperiments: 0,\n        banditStats: this.getBanditStats(),\n      };\n    }\n  }\n}\n\n// Predefined AI experiments for common scenarios\nexport const AI_EXPERIMENTS = {\n  MODEL_ROUTING_OPTIMIZATION: {\n    name: \"ai-model-routing-optimization\",\n    description: \"Optimize AI model routing based on performance and cost\",\n    feature: \"ai-model-routing\",\n    treatments: [\n      {\n        name: \"bedrock-focused\",\n        description: \"Prefer Bedrock Claude for most tasks\",\n        modelProvider: \"bedrock\" as Arm,\n        weight: 40,\n      },\n      {\n        name: \"google-focused\",\n        description: \"Prefer Google Gemini for most tasks\",\n        modelProvider: \"google\" as Arm,\n        weight: 40,\n      },\n      {\n        name: \"meta-focused\",\n        description: \"Prefer Meta Llama for most tasks\",\n        modelProvider: \"meta\" as Arm,\n        weight: 20,\n      },\n    ],\n    metricGoals: [\n      {\n        metricName: \"winRate\",\n        desiredChange: \"INCREASE\" as const,\n        threshold: 0.8,\n        priority: \"HIGH\" as const,\n      },\n      {\n        metricName: \"avgLatency\",\n        desiredChange: \"DECREASE\" as const,\n        threshold: 1000,\n        priority: \"HIGH\" as const,\n      },\n      {\n        metricName: \"avgCost\",\n        desiredChange: \"DECREASE\" as const,\n        threshold: 0.05,\n        priority: \"MEDIUM\" as const,\n      },\n    ],\n    trafficAllocation: 30, // 30% of traffic\n    duration: 14, // 2 weeks\n    autoOptimize: true,\n  },\n  DOMAIN_SPECIFIC_ROUTING: {\n    name: \"domain-specific-ai-routing\",\n    description: \"Test domain-specific AI model preferences\",\n    feature: \"domain-ai-routing\",\n    treatments: [\n      {\n        name: \"legal-bedrock\",\n        description: \"Use Bedrock for legal domain\",\n        modelProvider: \"bedrock\" as Arm,\n        weight: 50,\n      },\n      {\n        name: \"culinary-google\",\n        description: \"Use Google for culinary domain\",\n        modelProvider: \"google\" as Arm,\n        weight: 50,\n      },\n    ],\n    metricGoals: [\n      {\n        metricName: \"qualityScore\",\n        desiredChange: \"INCREASE\" as const,\n        threshold: 0.85,\n        priority: \"HIGH\" as const,\n      },\n      {\n        metricName: \"userSatisfaction\",\n        desiredChange: \"INCREASE\" as const,\n        threshold: 0.8,\n        priority: \"HIGH\" as const,\n      },\n    ],\n    trafficAllocation: 25,\n    duration: 21, // 3 weeks\n    autoOptimize: true,\n  },\n} as const;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d1e9756de383d798bb1da17afd0dca6d4b02b52"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lc28q050z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lc28q050z();
cov_2lc28q050z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2lc28q050z().s[1]++;
exports.AI_EXPERIMENTS = exports.EvidentlyExperimentManager = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2lc28q050z().s[2]++, require("tslib"));
const client_evidently_1 =
/* istanbul ignore next */
(cov_2lc28q050z().s[3]++, require("@aws-sdk/client-evidently"));
const crypto_1 =
/* istanbul ignore next */
(cov_2lc28q050z().s[4]++, require("crypto"));
const bandit_controller_1 =
/* istanbul ignore next */
(cov_2lc28q050z().s[5]++, require("./bandit-controller"));
class EvidentlyExperimentManager {
  constructor(projectName =
  /* istanbul ignore next */
  (cov_2lc28q050z().b[0][0]++, "matbakh-ai-orchestrator"), region =
  /* istanbul ignore next */
  (cov_2lc28q050z().b[1][0]++, "eu-central-1"), bandit) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[0]++;
    cov_2lc28q050z().s[6]++;
    this.activeExperiments = new Map();
    /* istanbul ignore next */
    cov_2lc28q050z().s[7]++;
    this.experimentResults = new Map();
    /* istanbul ignore next */
    cov_2lc28q050z().s[8]++;
    this.client = new client_evidently_1.CloudWatchEvidentlyClient({
      region
    });
    /* istanbul ignore next */
    cov_2lc28q050z().s[9]++;
    this.projectName = projectName;
    /* istanbul ignore next */
    cov_2lc28q050z().s[10]++;
    this.bandit =
    /* istanbul ignore next */
    (cov_2lc28q050z().b[2][0]++, bandit) ||
    /* istanbul ignore next */
    (cov_2lc28q050z().b[2][1]++, new bandit_controller_1.ThompsonBandit());
  }
  /**
   * Initialize the Evidently project for AI experiments
   */
  initializeProject() {
    /* istanbul ignore next */
    cov_2lc28q050z().f[1]++;
    cov_2lc28q050z().s[11]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[2]++;
      cov_2lc28q050z().s[12]++;
      try {
        /* istanbul ignore next */
        cov_2lc28q050z().s[13]++;
        yield this.client.send(new client_evidently_1.CreateProjectCommand({
          name: this.projectName,
          description: "AI model routing experiments and optimization",
          tags: {
            Environment:
            /* istanbul ignore next */
            (cov_2lc28q050z().b[3][0]++, process.env.NODE_ENV) ||
            /* istanbul ignore next */
            (cov_2lc28q050z().b[3][1]++, "development"),
            Purpose: "AIOptimization",
            Team: "AI"
          }
        }));
      } catch (error) {
        /* istanbul ignore next */
        cov_2lc28q050z().s[14]++;
        if (error.name !== "ResourceAlreadyExistsException") {
          /* istanbul ignore next */
          cov_2lc28q050z().b[4][0]++;
          cov_2lc28q050z().s[15]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_2lc28q050z().b[4][1]++;
        }
      }
    });
  }
  /**
   * Create a feature flag for AI model routing
   */
  createAIFeature(featureName, description, providers) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[3]++;
    cov_2lc28q050z().s[16]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[4]++;
      const variations =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[17]++, providers.map(provider => {
        /* istanbul ignore next */
        cov_2lc28q050z().f[5]++;
        cov_2lc28q050z().s[18]++;
        return {
          name: provider,
          value: {
            stringValue: provider
          }
        };
      }));
      /* istanbul ignore next */
      cov_2lc28q050z().s[19]++;
      yield this.client.send(new client_evidently_1.CreateFeatureCommand({
        project: this.projectName,
        name: featureName,
        description,
        variations,
        defaultVariation: providers[0],
        // Default to first provider
        evaluationStrategy: "ALL_RULES",
        tags: {
          Type: "AIModelRouting",
          CreatedAt: new Date().toISOString()
        }
      }));
    });
  }
  /**
   * Create an A/B test experiment for AI model comparison
   */
  createAIExperiment(experiment) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[6]++;
    cov_2lc28q050z().s[20]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[7]++;
      var _a, _b;
      // First create the feature if it doesn't exist
      const providers =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[21]++, experiment.treatments.map(t => {
        /* istanbul ignore next */
        cov_2lc28q050z().f[8]++;
        cov_2lc28q050z().s[22]++;
        return t.modelProvider;
      }));
      /* istanbul ignore next */
      cov_2lc28q050z().s[23]++;
      yield this.createAIFeature(experiment.feature, `Feature for experiment: ${experiment.name}`, providers);
      // Create treatments for Evidently
      const treatments =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[24]++, experiment.treatments.map(treatment => {
        /* istanbul ignore next */
        cov_2lc28q050z().f[9]++;
        cov_2lc28q050z().s[25]++;
        return {
          name: treatment.name,
          description: treatment.description,
          feature: experiment.feature,
          variation: treatment.modelProvider
        };
      }));
      // Create metric goals
      const metricGoals =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[26]++, experiment.metricGoals.map(goal => {
        /* istanbul ignore next */
        cov_2lc28q050z().f[10]++;
        cov_2lc28q050z().s[27]++;
        return {
          metricName: goal.metricName,
          desiredChange: goal.desiredChange,
          valueKey: goal.metricName
        };
      }));
      /* istanbul ignore next */
      cov_2lc28q050z().s[28]++;
      yield this.client.send(new client_evidently_1.CreateExperimentCommand({
        project: this.projectName,
        name: experiment.name,
        description: experiment.description,
        treatments,
        metricGoals,
        randomizationSalt: (0, crypto_1.randomUUID)(),
        samplingRate: experiment.trafficAllocation * 1000,
        // Convert to per-mille
        tags: {
          Type: "AIModelComparison",
          AutoOptimize:
          /* istanbul ignore next */
          (cov_2lc28q050z().b[5][0]++,
          /* istanbul ignore next */
          (cov_2lc28q050z().b[7][0]++, (_a = experiment.autoOptimize) === null) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[7][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_2lc28q050z().b[6][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2lc28q050z().b[6][1]++, _a.toString())) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[5][1]++, "false"),
          Duration:
          /* istanbul ignore next */
          (cov_2lc28q050z().b[8][0]++,
          /* istanbul ignore next */
          (cov_2lc28q050z().b[10][0]++, (_b = experiment.duration) === null) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[10][1]++, _b === void 0) ?
          /* istanbul ignore next */
          (cov_2lc28q050z().b[9][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2lc28q050z().b[9][1]++, _b.toString())) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[8][1]++, "indefinite"),
          CreatedAt: new Date().toISOString()
        }
      }));
      // Store experiment for tracking
      /* istanbul ignore next */
      cov_2lc28q050z().s[29]++;
      this.activeExperiments.set(experiment.name, experiment);
    });
  }
  /**
   * Get the optimal model provider using bandit + experiment data
   */
  getOptimalProvider(context) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[11]++;
    cov_2lc28q050z().s[30]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[12]++;
      var _a;
      // Check if there's an active experiment for this context
      /* istanbul ignore next */
      cov_2lc28q050z().s[31]++;
      if (context.experimentName) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[11][0]++;
        const experiment =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[32]++, this.activeExperiments.get(context.experimentName));
        /* istanbul ignore next */
        cov_2lc28q050z().s[33]++;
        if (experiment) {
          /* istanbul ignore next */
          cov_2lc28q050z().b[12][0]++;
          cov_2lc28q050z().s[34]++;
          try {
            // Evaluate the experiment feature
            const response =
            /* istanbul ignore next */
            (cov_2lc28q050z().s[35]++, yield this.client.send(new client_evidently_1.EvaluateFeatureCommand({
              project: this.projectName,
              feature: experiment.feature,
              entityId:
              /* istanbul ignore next */
              (cov_2lc28q050z().b[13][0]++, context.userId) ||
              /* istanbul ignore next */
              (cov_2lc28q050z().b[13][1]++, context.sessionId) ||
              /* istanbul ignore next */
              (cov_2lc28q050z().b[13][2]++, (0, crypto_1.randomUUID)()),
              evaluationContext: JSON.stringify({
                domain: context.domain,
                budgetTier: context.budgetTier,
                requireTools: context.requireTools
              })
            })));
            /* istanbul ignore next */
            cov_2lc28q050z().s[36]++;
            if (
            /* istanbul ignore next */
            (cov_2lc28q050z().b[15][0]++, response.variation) &&
            /* istanbul ignore next */
            (cov_2lc28q050z().b[15][1]++,
            /* istanbul ignore next */
            (cov_2lc28q050z().b[17][0]++, (_a = response.value) === null) ||
            /* istanbul ignore next */
            (cov_2lc28q050z().b[17][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_2lc28q050z().b[16][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2lc28q050z().b[16][1]++, _a.stringValue))) {
              /* istanbul ignore next */
              cov_2lc28q050z().b[14][0]++;
              const provider =
              /* istanbul ignore next */
              (cov_2lc28q050z().s[37]++, response.value.stringValue);
              /* istanbul ignore next */
              cov_2lc28q050z().s[38]++;
              return {
                provider,
                source: "experiment",
                confidence: 0.8,
                // High confidence for experiment assignment
                experimentName: context.experimentName
              };
            } else
            /* istanbul ignore next */
            {
              cov_2lc28q050z().b[14][1]++;
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_2lc28q050z().s[39]++;
            console.warn(`Failed to evaluate experiment feature: ${error}`);
          }
        } else
        /* istanbul ignore next */
        {
          cov_2lc28q050z().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[11][1]++;
      }
      // Fall back to bandit optimization
      const banditChoice =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[40]++, this.bandit.choose(context));
      const banditStats =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[41]++, this.bandit.getStats(context));
      const confidence =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[42]++, banditStats[banditChoice].trials > 10 ?
      /* istanbul ignore next */
      (cov_2lc28q050z().b[18][0]++, Math.min(0.95, banditStats[banditChoice].winRate + 0.1)) :
      /* istanbul ignore next */
      (cov_2lc28q050z().b[18][1]++, 0.5));
      /* istanbul ignore next */
      cov_2lc28q050z().s[43]++;
      return {
        provider: banditChoice,
        source: "bandit",
        confidence
      };
    });
  }
  /**
   * Record experiment outcome and update bandit
   */
  recordExperimentOutcome(context, provider, metrics) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[13]++;
    cov_2lc28q050z().s[44]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[14]++;
      const {
        success,
        latencyMs,
        costEuro,
        qualityScore,
        userSatisfaction
      } =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[45]++, metrics);
      // Record in bandit for continuous learning
      /* istanbul ignore next */
      cov_2lc28q050z().s[46]++;
      this.bandit.record(provider, success, costEuro, latencyMs, context);
      // Record in Evidently for experiment tracking
      /* istanbul ignore next */
      cov_2lc28q050z().s[47]++;
      if (context.experimentName) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[19][0]++;
        cov_2lc28q050z().s[48]++;
        yield this.recordExperimentMetrics(context, provider, {
          latency: latencyMs,
          cost: costEuro,
          success: success ?
          /* istanbul ignore next */
          (cov_2lc28q050z().b[20][0]++, 1) :
          /* istanbul ignore next */
          (cov_2lc28q050z().b[20][1]++, 0),
          quality:
          /* istanbul ignore next */
          (cov_2lc28q050z().b[21][0]++, qualityScore) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[21][1]++, 0),
          satisfaction:
          /* istanbul ignore next */
          (cov_2lc28q050z().b[22][0]++, userSatisfaction) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[22][1]++, 0)
        });
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[19][1]++;
      }
    });
  }
  /**
   * Record metrics to Evidently for experiment analysis
   */
  recordExperimentMetrics(context, provider, metrics) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[15]++;
    cov_2lc28q050z().s[49]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[16]++;
      cov_2lc28q050z().s[50]++;
      try {
        const events =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[51]++, Object.entries(metrics).map(([metricName, value]) => {
          /* istanbul ignore next */
          cov_2lc28q050z().f[17]++;
          cov_2lc28q050z().s[52]++;
          return {
            timestamp: new Date(),
            type: "aws.evidently.custom",
            data: {
              details: JSON.stringify({
                metricName,
                value,
                provider,
                experimentName: context.experimentName,
                treatmentName: context.treatmentName,
                domain: context.domain,
                budgetTier: context.budgetTier,
                requireTools: context.requireTools,
                requestId: context.requestId
              })
            }
          };
        }));
        /* istanbul ignore next */
        cov_2lc28q050z().s[53]++;
        yield this.client.send(new client_evidently_1.PutProjectEventsCommand({
          project: this.projectName,
          events
        }));
      } catch (error) {
        /* istanbul ignore next */
        cov_2lc28q050z().s[54]++;
        console.error("Failed to record experiment metrics:", error);
      }
    });
  }
  /**
   * Start an experiment and begin auto-optimization
   */
  startExperiment(experimentName) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[18]++;
    cov_2lc28q050z().s[55]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[19]++;
      cov_2lc28q050z().s[56]++;
      yield this.client.send(new client_evidently_1.StartExperimentCommand({
        project: this.projectName,
        experiment: experimentName
      }));
      const experiment =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[57]++, this.activeExperiments.get(experimentName));
      /* istanbul ignore next */
      cov_2lc28q050z().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_2lc28q050z().b[25][0]++, experiment === null) ||
      /* istanbul ignore next */
      (cov_2lc28q050z().b[25][1]++, experiment === void 0) ?
      /* istanbul ignore next */
      (cov_2lc28q050z().b[24][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2lc28q050z().b[24][1]++, experiment.autoOptimize)) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[23][0]++;
        cov_2lc28q050z().s[59]++;
        // Start auto-optimization process
        this.startAutoOptimization(experimentName);
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[23][1]++;
      }
    });
  }
  /**
   * Stop an experiment and apply winning treatment
   */
  stopExperiment(experimentName, reason) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[20]++;
    cov_2lc28q050z().s[60]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[21]++;
      cov_2lc28q050z().s[61]++;
      yield this.client.send(new client_evidently_1.StopExperimentCommand({
        project: this.projectName,
        experiment: experimentName,
        reason
      }));
      // Analyze results and get recommendation
      const result =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[62]++, yield this.analyzeExperimentResults(experimentName));
      /* istanbul ignore next */
      cov_2lc28q050z().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_2lc28q050z().b[28][0]++, result === null) ||
      /* istanbul ignore next */
      (cov_2lc28q050z().b[28][1]++, result === void 0) ?
      /* istanbul ignore next */
      (cov_2lc28q050z().b[27][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2lc28q050z().b[27][1]++, result.recommendation)) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[26][0]++;
        cov_2lc28q050z().s[64]++;
        // Apply winning treatment to bandit
        yield this.applyWinningTreatment(experimentName, result.recommendation);
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[26][1]++;
      }
      cov_2lc28q050z().s[65]++;
      return result;
    });
  }
  /**
   * Analyze experiment results and determine winner
   */
  analyzeExperimentResults(experimentName) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[22]++;
    cov_2lc28q050z().s[66]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[23]++;
      var _a;
      /* istanbul ignore next */
      cov_2lc28q050z().s[67]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[68]++, yield this.client.send(new client_evidently_1.GetExperimentCommand({
          project: this.projectName,
          experiment: experimentName
        })));
        const experiment =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[69]++, response.experiment);
        /* istanbul ignore next */
        cov_2lc28q050z().s[70]++;
        if (!experiment) {
          /* istanbul ignore next */
          cov_2lc28q050z().b[29][0]++;
          cov_2lc28q050z().s[71]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_2lc28q050z().b[29][1]++;
        }
        // Get bandit stats for comparison
        const banditStats =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[72]++, this.bandit.getStats());
        // Analyze treatments
        const results =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[73]++,
        /* istanbul ignore next */
        (cov_2lc28q050z().b[30][0]++,
        /* istanbul ignore next */
        (cov_2lc28q050z().b[32][0]++, (_a = experiment.treatments) === null) ||
        /* istanbul ignore next */
        (cov_2lc28q050z().b[32][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lc28q050z().b[31][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lc28q050z().b[31][1]++, _a.map(treatment => {
          /* istanbul ignore next */
          cov_2lc28q050z().f[24]++;
          const provider =
          /* istanbul ignore next */
          (cov_2lc28q050z().s[74]++, treatment.variation);
          const stats =
          /* istanbul ignore next */
          (cov_2lc28q050z().s[75]++, banditStats[provider]);
          /* istanbul ignore next */
          cov_2lc28q050z().s[76]++;
          return {
            treatment:
            /* istanbul ignore next */
            (cov_2lc28q050z().b[33][0]++, treatment.name) ||
            /* istanbul ignore next */
            (cov_2lc28q050z().b[33][1]++, ""),
            modelProvider: provider,
            metrics: {
              winRate: {
                value: stats.winRate,
                improvement: 0,
                // Calculate vs baseline
                confidence: stats.trials > 50 ?
                /* istanbul ignore next */
                (cov_2lc28q050z().b[34][0]++, 0.95) :
                /* istanbul ignore next */
                (cov_2lc28q050z().b[34][1]++, 0.7),
                statisticalSignificance: stats.trials > 100
              },
              avgLatency: {
                value: stats.avgLatency,
                improvement: 0,
                // Calculate vs baseline
                confidence: stats.trials > 50 ?
                /* istanbul ignore next */
                (cov_2lc28q050z().b[35][0]++, 0.95) :
                /* istanbul ignore next */
                (cov_2lc28q050z().b[35][1]++, 0.7),
                statisticalSignificance: stats.trials > 100
              },
              avgCost: {
                value: stats.avgCost,
                improvement: 0,
                // Calculate vs baseline
                confidence: stats.trials > 50 ?
                /* istanbul ignore next */
                (cov_2lc28q050z().b[36][0]++, 0.95) :
                /* istanbul ignore next */
                (cov_2lc28q050z().b[36][1]++, 0.7),
                statisticalSignificance: stats.trials > 100
              }
            }
          };
        }))) ||
        /* istanbul ignore next */
        (cov_2lc28q050z().b[30][1]++, []));
        // Determine winner based on composite score
        let winningTreatment =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[77]++, results[0]);
        let bestScore =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[78]++, -1);
        /* istanbul ignore next */
        cov_2lc28q050z().s[79]++;
        results.forEach(result => {
          /* istanbul ignore next */
          cov_2lc28q050z().f[25]++;
          // Composite score: win rate (60%) + latency improvement (25%) + cost efficiency (15%)
          const score =
          /* istanbul ignore next */
          (cov_2lc28q050z().s[80]++, result.metrics.winRate.value * 0.6 + 1 / (result.metrics.avgLatency.value + 1) * 0.25 + 1 / (result.metrics.avgCost.value + 0.01) * 0.15);
          /* istanbul ignore next */
          cov_2lc28q050z().s[81]++;
          if (score > bestScore) {
            /* istanbul ignore next */
            cov_2lc28q050z().b[37][0]++;
            cov_2lc28q050z().s[82]++;
            bestScore = score;
            /* istanbul ignore next */
            cov_2lc28q050z().s[83]++;
            winningTreatment = result;
          } else
          /* istanbul ignore next */
          {
            cov_2lc28q050z().b[37][1]++;
          }
        });
        const experimentResult =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[84]++, {
          experimentName,
          status: experiment.status,
          startTime: experiment.createdTime,
          endTime: experiment.lastUpdatedTime,
          results,
          recommendation: {
            winningTreatment: winningTreatment.treatment,
            confidence: winningTreatment.metrics.winRate.confidence,
            expectedImprovement: bestScore
          }
        });
        /* istanbul ignore next */
        cov_2lc28q050z().s[85]++;
        this.experimentResults.set(experimentName, experimentResult);
        /* istanbul ignore next */
        cov_2lc28q050z().s[86]++;
        return experimentResult;
      } catch (error) {
        /* istanbul ignore next */
        cov_2lc28q050z().s[87]++;
        console.error(`Failed to analyze experiment results: ${error}`);
        /* istanbul ignore next */
        cov_2lc28q050z().s[88]++;
        return null;
      }
    });
  }
  /**
   * Apply winning treatment to bandit for future optimization
   */
  applyWinningTreatment(experimentName, recommendation) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[26]++;
    cov_2lc28q050z().s[89]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[27]++;
      cov_2lc28q050z().s[90]++;
      if (!recommendation) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[38][0]++;
        cov_2lc28q050z().s[91]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[38][1]++;
      }
      const experiment =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[92]++, this.activeExperiments.get(experimentName));
      /* istanbul ignore next */
      cov_2lc28q050z().s[93]++;
      if (!experiment) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[39][0]++;
        cov_2lc28q050z().s[94]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[39][1]++;
      }
      // Find the winning treatment
      const winningTreatment =
      /* istanbul ignore next */
      (cov_2lc28q050z().s[95]++, experiment.treatments.find(t => {
        /* istanbul ignore next */
        cov_2lc28q050z().f[28]++;
        cov_2lc28q050z().s[96]++;
        return t.name === recommendation.winningTreatment;
      }));
      /* istanbul ignore next */
      cov_2lc28q050z().s[97]++;
      if (winningTreatment) {
        /* istanbul ignore next */
        cov_2lc28q050z().b[40][0]++;
        // Boost the winning provider in bandit
        const provider =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[98]++, winningTreatment.modelProvider);
        const boostAmount =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[99]++, Math.floor(recommendation.expectedImprovement * 10));
        // Add synthetic wins to boost the provider
        /* istanbul ignore next */
        cov_2lc28q050z().s[100]++;
        for (let i =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[101]++, 0); i < boostAmount; i++) {
          /* istanbul ignore next */
          cov_2lc28q050z().s[102]++;
          this.bandit.record(provider, true, 0.01, 100); // Low cost, fast response
        }
        /* istanbul ignore next */
        cov_2lc28q050z().s[103]++;
        console.log(`Applied winning treatment: ${winningTreatment.name} (${provider}) ` + `with ${boostAmount} synthetic wins`);
      } else
      /* istanbul ignore next */
      {
        cov_2lc28q050z().b[40][1]++;
      }
    });
  }
  /**
   * Start auto-optimization process for an experiment
   */
  startAutoOptimization(experimentName) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[29]++;
    const experiment =
    /* istanbul ignore next */
    (cov_2lc28q050z().s[104]++, this.activeExperiments.get(experimentName));
    /* istanbul ignore next */
    cov_2lc28q050z().s[105]++;
    if (!experiment) {
      /* istanbul ignore next */
      cov_2lc28q050z().b[41][0]++;
      cov_2lc28q050z().s[106]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2lc28q050z().b[41][1]++;
    }
    // Check experiment performance every hour
    const optimizationInterval =
    /* istanbul ignore next */
    (cov_2lc28q050z().s[107]++, setInterval(() => {
      /* istanbul ignore next */
      cov_2lc28q050z().f[30]++;
      cov_2lc28q050z().s[108]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2lc28q050z().f[31]++;
        cov_2lc28q050z().s[109]++;
        try {
          const result =
          /* istanbul ignore next */
          (cov_2lc28q050z().s[110]++, yield this.analyzeExperimentResults(experimentName));
          /* istanbul ignore next */
          cov_2lc28q050z().s[111]++;
          if (
          /* istanbul ignore next */
          (cov_2lc28q050z().b[43][0]++,
          /* istanbul ignore next */
          (cov_2lc28q050z().b[45][0]++, result === null) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[45][1]++, result === void 0) ?
          /* istanbul ignore next */
          (cov_2lc28q050z().b[44][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2lc28q050z().b[44][1]++, result.recommendation)) &&
          /* istanbul ignore next */
          (cov_2lc28q050z().b[43][1]++, result.recommendation.confidence > 0.9)) {
            /* istanbul ignore next */
            cov_2lc28q050z().b[42][0]++;
            cov_2lc28q050z().s[112]++;
            // High confidence winner found, consider early stopping
            console.log(`High confidence winner found for ${experimentName}: ` + `${result.recommendation.winningTreatment} (${result.recommendation.confidence})`);
            // Could implement early stopping logic here
            // await this.stopExperiment(experimentName, 'Auto-optimization: High confidence winner');
            // clearInterval(optimizationInterval);
          } else
          /* istanbul ignore next */
          {
            cov_2lc28q050z().b[42][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_2lc28q050z().s[113]++;
          console.error(`Auto-optimization error for ${experimentName}:`, error);
        }
      });
    }, 60 * 60 * 1000)); // Every hour
    // Stop optimization after experiment duration
    /* istanbul ignore next */
    cov_2lc28q050z().s[114]++;
    if (experiment.duration) {
      /* istanbul ignore next */
      cov_2lc28q050z().b[46][0]++;
      cov_2lc28q050z().s[115]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2lc28q050z().f[32]++;
        cov_2lc28q050z().s[116]++;
        clearInterval(optimizationInterval);
      }, experiment.duration * 24 * 60 * 60 * 1000); // Convert days to ms
    } else
    /* istanbul ignore next */
    {
      cov_2lc28q050z().b[46][1]++;
    }
  }
  /**
   * Get current experiment status and metrics
   */
  getExperimentStatus(experimentName) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[33]++;
    cov_2lc28q050z().s[117]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[34]++;
      cov_2lc28q050z().s[118]++;
      return /* istanbul ignore next */(cov_2lc28q050z().b[47][0]++, this.experimentResults.get(experimentName)) ||
      /* istanbul ignore next */
      (cov_2lc28q050z().b[47][1]++, null);
    });
  }
  /**
   * List all active experiments
   */
  listActiveExperiments() {
    /* istanbul ignore next */
    cov_2lc28q050z().f[35]++;
    cov_2lc28q050z().s[119]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[36]++;
      var _a;
      /* istanbul ignore next */
      cov_2lc28q050z().s[120]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[121]++, yield this.client.send(new client_evidently_1.ListExperimentsCommand({
          project: this.projectName,
          status: "RUNNING"
        })));
        /* istanbul ignore next */
        cov_2lc28q050z().s[122]++;
        return /* istanbul ignore next */(cov_2lc28q050z().b[48][0]++,
        /* istanbul ignore next */
        (cov_2lc28q050z().b[50][0]++, (_a = response.experiments) === null) ||
        /* istanbul ignore next */
        (cov_2lc28q050z().b[50][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2lc28q050z().b[49][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2lc28q050z().b[49][1]++, _a.map(exp => {
          /* istanbul ignore next */
          cov_2lc28q050z().f[37]++;
          cov_2lc28q050z().s[123]++;
          return /* istanbul ignore next */(cov_2lc28q050z().b[51][0]++, exp.name) ||
          /* istanbul ignore next */
          (cov_2lc28q050z().b[51][1]++, "");
        }))) ||
        /* istanbul ignore next */
        (cov_2lc28q050z().b[48][1]++, []);
      } catch (error) {
        /* istanbul ignore next */
        cov_2lc28q050z().s[124]++;
        console.error("Failed to list active experiments:", error);
        /* istanbul ignore next */
        cov_2lc28q050z().s[125]++;
        return [];
      }
    });
  }
  /**
   * Get bandit statistics for monitoring
   */
  getBanditStats(context) {
    /* istanbul ignore next */
    cov_2lc28q050z().f[38]++;
    cov_2lc28q050z().s[126]++;
    return this.bandit.getStats(context);
  }
  /**
   * Health check for the experiment system
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_2lc28q050z().f[39]++;
    cov_2lc28q050z().s[127]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2lc28q050z().f[40]++;
      cov_2lc28q050z().s[128]++;
      try {
        const activeExperiments =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[129]++, yield this.listActiveExperiments());
        const banditStats =
        /* istanbul ignore next */
        (cov_2lc28q050z().s[130]++, this.getBanditStats());
        /* istanbul ignore next */
        cov_2lc28q050z().s[131]++;
        return {
          connected: true,
          projectExists: true,
          activeExperiments: activeExperiments.length,
          banditStats
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_2lc28q050z().s[132]++;
        return {
          connected: false,
          projectExists: false,
          activeExperiments: 0,
          banditStats: this.getBanditStats()
        };
      }
    });
  }
}
/* istanbul ignore next */
cov_2lc28q050z().s[133]++;
exports.EvidentlyExperimentManager = EvidentlyExperimentManager;
// Predefined AI experiments for common scenarios
/* istanbul ignore next */
cov_2lc28q050z().s[134]++;
exports.AI_EXPERIMENTS = {
  MODEL_ROUTING_OPTIMIZATION: {
    name: "ai-model-routing-optimization",
    description: "Optimize AI model routing based on performance and cost",
    feature: "ai-model-routing",
    treatments: [{
      name: "bedrock-focused",
      description: "Prefer Bedrock Claude for most tasks",
      modelProvider: "bedrock",
      weight: 40
    }, {
      name: "google-focused",
      description: "Prefer Google Gemini for most tasks",
      modelProvider: "google",
      weight: 40
    }, {
      name: "meta-focused",
      description: "Prefer Meta Llama for most tasks",
      modelProvider: "meta",
      weight: 20
    }],
    metricGoals: [{
      metricName: "winRate",
      desiredChange: "INCREASE",
      threshold: 0.8,
      priority: "HIGH"
    }, {
      metricName: "avgLatency",
      desiredChange: "DECREASE",
      threshold: 1000,
      priority: "HIGH"
    }, {
      metricName: "avgCost",
      desiredChange: "DECREASE",
      threshold: 0.05,
      priority: "MEDIUM"
    }],
    trafficAllocation: 30,
    // 30% of traffic
    duration: 14,
    // 2 weeks
    autoOptimize: true
  },
  DOMAIN_SPECIFIC_ROUTING: {
    name: "domain-specific-ai-routing",
    description: "Test domain-specific AI model preferences",
    feature: "domain-ai-routing",
    treatments: [{
      name: "legal-bedrock",
      description: "Use Bedrock for legal domain",
      modelProvider: "bedrock",
      weight: 50
    }, {
      name: "culinary-google",
      description: "Use Google for culinary domain",
      modelProvider: "google",
      weight: 50
    }],
    metricGoals: [{
      metricName: "qualityScore",
      desiredChange: "INCREASE",
      threshold: 0.85,
      priority: "HIGH"
    }, {
      metricName: "userSatisfaction",
      desiredChange: "INCREASE",
      threshold: 0.8,
      priority: "HIGH"
    }],
    trafficAllocation: 25,
    duration: 21,
    // 3 weeks
    autoOptimize: true
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,