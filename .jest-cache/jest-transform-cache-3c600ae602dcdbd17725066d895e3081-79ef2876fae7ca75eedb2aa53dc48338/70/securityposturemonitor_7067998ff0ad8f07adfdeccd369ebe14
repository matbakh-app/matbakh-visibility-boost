c083ce912b88078a5565e782e1385785
"use strict";

/**
 * Security Posture Monitor - Comprehensive Security Monitoring for Hybrid Architecture
 *
 * This module implements real-time security posture monitoring for the hybrid routing
 * architecture, tracking security metrics across both MCP and direct Bedrock paths,
 * detecting threats, and providing security recommendations.
 */
/* istanbul ignore next */
function cov_19w8k4ary5() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/security-posture-monitor.ts";
  var hash = "856b8625cffd85e323150dfb2964307ee9337fac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/security-posture-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 26,
          column: 10
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 52
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 63
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 69
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 82
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 33,
          column: 68
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 84
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 54
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 25
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "18": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "19": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 78
        }
      },
      "20": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "21": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 68
        }
      },
      "22": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "23": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 63,
          column: 25
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 47
        }
      },
      "25": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "26": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "27": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 74
        }
      },
      "28": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 23
        }
      },
      "29": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 68
        }
      },
      "30": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "31": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 83,
          column: 25
        }
      },
      "32": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "33": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 82
        }
      },
      "34": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 146,
          column: 13
        }
      },
      "35": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 56
        }
      },
      "36": {
        start: {
          line: 96,
          column: 36
        },
        end: {
          line: 96,
          column: 79
        }
      },
      "37": {
        start: {
          line: 98,
          column: 46
        },
        end: {
          line: 98,
          column: 100
        }
      },
      "38": {
        start: {
          line: 100,
          column: 32
        },
        end: {
          line: 100,
          column: 59
        }
      },
      "39": {
        start: {
          line: 102,
          column: 41
        },
        end: {
          line: 102,
          column: 75
        }
      },
      "40": {
        start: {
          line: 104,
          column: 37
        },
        end: {
          line: 104,
          column: 134
        }
      },
      "41": {
        start: {
          line: 106,
          column: 36
        },
        end: {
          line: 106,
          column: 84
        }
      },
      "42": {
        start: {
          line: 108,
          column: 40
        },
        end: {
          line: 108,
          column: 145
        }
      },
      "43": {
        start: {
          line: 109,
          column: 31
        },
        end: {
          line: 127,
          column: 17
        }
      },
      "44": {
        start: {
          line: 121,
          column: 54
        },
        end: {
          line: 121,
          column: 75
        }
      },
      "45": {
        start: {
          line: 122,
          column: 57
        },
        end: {
          line: 122,
          column: 81
        }
      },
      "46": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 49
        }
      },
      "47": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 135,
          column: 29
        }
      },
      "48": {
        start: {
          line: 134,
          column: 57
        },
        end: {
          line: 134,
          column: 78
        }
      },
      "49": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 30
        }
      },
      "50": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 72
        }
      },
      "51": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 144,
          column: 29
        }
      },
      "52": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 28
        }
      },
      "53": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "54": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 76
        }
      },
      "55": {
        start: {
          line: 156,
          column: 37
        },
        end: {
          line: 156,
          column: 76
        }
      },
      "56": {
        start: {
          line: 158,
          column: 40
        },
        end: {
          line: 158,
          column: 82
        }
      },
      "57": {
        start: {
          line: 160,
          column: 36
        },
        end: {
          line: 160,
          column: 76
        }
      },
      "58": {
        start: {
          line: 162,
          column: 43
        },
        end: {
          line: 162,
          column: 85
        }
      },
      "59": {
        start: {
          line: 164,
          column: 34
        },
        end: {
          line: 164,
          column: 146
        }
      },
      "60": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "61": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "62": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "63": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 33
        }
      },
      "64": {
        start: {
          line: 188,
          column: 38
        },
        end: {
          line: 188,
          column: 101
        }
      },
      "65": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 61
        }
      },
      "66": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "67": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "68": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 32
        }
      },
      "69": {
        start: {
          line: 205,
          column: 41
        },
        end: {
          line: 205,
          column: 107
        }
      },
      "70": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 64
        }
      },
      "71": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      },
      "72": {
        start: {
          line: 215,
          column: 36
        },
        end: {
          line: 215,
          column: 38
        }
      },
      "73": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "74": {
        start: {
          line: 219,
          column: 34
        },
        end: {
          line: 219,
          column: 68
        }
      },
      "75": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 234,
          column: 17
        }
      },
      "76": {
        start: {
          line: 221,
          column: 20
        },
        end: {
          line: 233,
          column: 23
        }
      },
      "77": {
        start: {
          line: 238,
          column: 38
        },
        end: {
          line: 238,
          column: 82
        }
      },
      "78": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 253,
          column: 17
        }
      },
      "79": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 252,
          column: 23
        }
      },
      "80": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 35
        }
      },
      "81": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "82": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 53
        }
      },
      "83": {
        start: {
          line: 270,
          column: 20
        },
        end: {
          line: 270,
          column: 23
        }
      },
      "84": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "85": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "86": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 275,
          column: 24
        }
      },
      "87": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 24
        }
      },
      "88": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 278,
          column: 24
        }
      },
      "89": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 24
        }
      },
      "90": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 280,
          column: 24
        }
      },
      "91": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 24
        }
      },
      "92": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "93": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 296,
          column: 13
        }
      },
      "94": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 32
        }
      },
      "95": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 286,
          column: 26
        }
      },
      "96": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 288,
          column: 32
        }
      },
      "97": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 289,
          column: 26
        }
      },
      "98": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 32
        }
      },
      "99": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 26
        }
      },
      "100": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 294,
          column: 31
        }
      },
      "101": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 295,
          column: 26
        }
      },
      "102": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 300,
          column: 24
        }
      },
      "103": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 24
        }
      },
      "104": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 34
        }
      },
      "105": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "106": {
        start: {
          line: 308,
          column: 28
        },
        end: {
          line: 308,
          column: 30
        }
      },
      "107": {
        start: {
          line: 310,
          column: 39
        },
        end: {
          line: 310,
          column: 76
        }
      },
      "108": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "109": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 49
        }
      },
      "110": {
        start: {
          line: 315,
          column: 41
        },
        end: {
          line: 315,
          column: 80
        }
      },
      "111": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 50
        }
      },
      "112": {
        start: {
          line: 318,
          column: 38
        },
        end: {
          line: 318,
          column: 74
        }
      },
      "113": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 47
        }
      },
      "114": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 104
        }
      },
      "115": {
        start: {
          line: 321,
          column: 74
        },
        end: {
          line: 321,
          column: 95
        }
      },
      "116": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 27
        }
      },
      "117": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "118": {
        start: {
          line: 331,
          column: 39
        },
        end: {
          line: 331,
          column: 76
        }
      },
      "119": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "120": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 349,
          column: 18
        }
      },
      "121": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 24
        }
      },
      "122": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 383,
          column: 11
        }
      },
      "123": {
        start: {
          line: 359,
          column: 28
        },
        end: {
          line: 359,
          column: 30
        }
      },
      "124": {
        start: {
          line: 361,
          column: 34
        },
        end: {
          line: 366,
          column: 14
        }
      },
      "125": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "126": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 379,
          column: 19
        }
      },
      "127": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 60
        }
      },
      "128": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 27
        }
      },
      "129": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 412,
          column: 11
        }
      },
      "130": {
        start: {
          line: 390,
          column: 28
        },
        end: {
          line: 390,
          column: 30
        }
      },
      "131": {
        start: {
          line: 392,
          column: 35
        },
        end: {
          line: 392,
          column: 77
        }
      },
      "132": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "133": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 409,
          column: 19
        }
      },
      "134": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 27
        }
      },
      "135": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 445,
          column: 11
        }
      },
      "136": {
        start: {
          line: 420,
          column: 32
        },
        end: {
          line: 420,
          column: 64
        }
      },
      "137": {
        start: {
          line: 422,
          column: 41
        },
        end: {
          line: 422,
          column: 82
        }
      },
      "138": {
        start: {
          line: 424,
          column: 38
        },
        end: {
          line: 424,
          column: 76
        }
      },
      "139": {
        start: {
          line: 426,
          column: 33
        },
        end: {
          line: 428,
          column: 45
        }
      },
      "140": {
        start: {
          line: 429,
          column: 36
        },
        end: {
          line: 431,
          column: 46
        }
      },
      "141": {
        start: {
          line: 432,
          column: 28
        },
        end: {
          line: 436,
          column: 31
        }
      },
      "142": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 444,
          column: 14
        }
      },
      "143": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 475,
          column: 11
        }
      },
      "144": {
        start: {
          line: 452,
          column: 31
        },
        end: {
          line: 457,
          column: 14
        }
      },
      "145": {
        start: {
          line: 458,
          column: 31
        },
        end: {
          line: 467,
          column: 15
        }
      },
      "146": {
        start: {
          line: 458,
          column: 72
        },
        end: {
          line: 467,
          column: 13
        }
      },
      "147": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 474,
          column: 14
        }
      },
      "148": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 508,
          column: 11
        }
      },
      "149": {
        start: {
          line: 483,
          column: 29
        },
        end: {
          line: 483,
          column: 70
        }
      },
      "150": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 507,
          column: 14
        }
      },
      "151": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 524,
          column: 11
        }
      },
      "152": {
        start: {
          line: 516,
          column: 38
        },
        end: {
          line: 516,
          column: 42
        }
      },
      "153": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 523,
          column: 14
        }
      },
      "154": {
        start: {
          line: 531,
          column: 28
        },
        end: {
          line: 531,
          column: 31
        }
      },
      "155": {
        start: {
          line: 532,
          column: 29
        },
        end: {
          line: 532,
          column: 32
        }
      },
      "156": {
        start: {
          line: 533,
          column: 33
        },
        end: {
          line: 533,
          column: 36
        }
      },
      "157": {
        start: {
          line: 535,
          column: 27
        },
        end: {
          line: 535,
          column: 96
        }
      },
      "158": {
        start: {
          line: 537,
          column: 30
        },
        end: {
          line: 537,
          column: 74
        }
      },
      "159": {
        start: {
          line: 537,
          column: 52
        },
        end: {
          line: 537,
          column: 73
        }
      },
      "160": {
        start: {
          line: 538,
          column: 32
        },
        end: {
          line: 538,
          column: 93
        }
      },
      "161": {
        start: {
          line: 538,
          column: 60
        },
        end: {
          line: 538,
          column: 85
        }
      },
      "162": {
        start: {
          line: 539,
          column: 28
        },
        end: {
          line: 539,
          column: 85
        }
      },
      "163": {
        start: {
          line: 539,
          column: 56
        },
        end: {
          line: 539,
          column: 77
        }
      },
      "164": {
        start: {
          line: 540,
          column: 28
        },
        end: {
          line: 543,
          column: 71
        }
      },
      "165": {
        start: {
          line: 545,
          column: 32
        },
        end: {
          line: 549,
          column: 20
        }
      },
      "166": {
        start: {
          line: 551,
          column: 29
        },
        end: {
          line: 553,
          column: 46
        }
      },
      "167": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 554,
          column: 40
        }
      },
      "168": {
        start: {
          line: 560,
          column: 30
        },
        end: {
          line: 560,
          column: 74
        }
      },
      "169": {
        start: {
          line: 560,
          column: 52
        },
        end: {
          line: 560,
          column: 73
        }
      },
      "170": {
        start: {
          line: 561,
          column: 32
        },
        end: {
          line: 561,
          column: 86
        }
      },
      "171": {
        start: {
          line: 561,
          column: 60
        },
        end: {
          line: 561,
          column: 85
        }
      },
      "172": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 573,
          column: 9
        }
      },
      "173": {
        start: {
          line: 563,
          column: 12
        },
        end: {
          line: 563,
          column: 30
        }
      },
      "174": {
        start: {
          line: 565,
          column: 13
        },
        end: {
          line: 573,
          column: 9
        }
      },
      "175": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 566,
          column: 26
        }
      },
      "176": {
        start: {
          line: 568,
          column: 13
        },
        end: {
          line: 573,
          column: 9
        }
      },
      "177": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 569,
          column: 28
        }
      },
      "178": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 25
        }
      },
      "179": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 662,
          column: 11
        }
      },
      "180": {
        start: {
          line: 580,
          column: 30
        },
        end: {
          line: 580,
          column: 32
        }
      },
      "181": {
        start: {
          line: 581,
          column: 30
        },
        end: {
          line: 581,
          column: 32
        }
      },
      "182": {
        start: {
          line: 582,
          column: 29
        },
        end: {
          line: 582,
          column: 31
        }
      },
      "183": {
        start: {
          line: 584,
          column: 36
        },
        end: {
          line: 584,
          column: 109
        }
      },
      "184": {
        start: {
          line: 584,
          column: 58
        },
        end: {
          line: 584,
          column: 108
        }
      },
      "185": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 595,
          column: 13
        }
      },
      "186": {
        start: {
          line: 586,
          column: 16
        },
        end: {
          line: 594,
          column: 19
        }
      },
      "187": {
        start: {
          line: 592,
          column: 72
        },
        end: {
          line: 592,
          column: 89
        }
      },
      "188": {
        start: {
          line: 597,
          column: 12
        },
        end: {
          line: 612,
          column: 13
        }
      },
      "189": {
        start: {
          line: 598,
          column: 16
        },
        end: {
          line: 611,
          column: 19
        }
      },
      "190": {
        start: {
          line: 613,
          column: 12
        },
        end: {
          line: 628,
          column: 13
        }
      },
      "191": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 627,
          column: 19
        }
      },
      "192": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 645,
          column: 13
        }
      },
      "193": {
        start: {
          line: 631,
          column: 16
        },
        end: {
          line: 644,
          column: 19
        }
      },
      "194": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 660,
          column: 15
        }
      },
      "195": {
        start: {
          line: 661,
          column: 12
        },
        end: {
          line: 661,
          column: 54
        }
      },
      "196": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 668,
          column: 55
        }
      },
      "197": {
        start: {
          line: 674,
          column: 8
        },
        end: {
          line: 674,
          column: 37
        }
      },
      "198": {
        start: {
          line: 680,
          column: 8
        },
        end: {
          line: 680,
          column: 35
        }
      },
      "199": {
        start: {
          line: 683,
          column: 0
        },
        end: {
          line: 683,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 133
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 41
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 51
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 56
          }
        },
        loc: {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 66,
            column: 9
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 72,
            column: 55
          },
          end: {
            line: 72,
            column: 56
          }
        },
        loc: {
          start: {
            line: 72,
            column: 68
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 72
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 90,
            column: 55
          },
          end: {
            line: 90,
            column: 56
          }
        },
        loc: {
          start: {
            line: 90,
            column: 68
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 90
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 121,
            column: 47
          },
          end: {
            line: 121,
            column: 48
          }
        },
        loc: {
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 121,
            column: 75
          }
        },
        line: 121
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 122,
            column: 50
          },
          end: {
            line: 122,
            column: 51
          }
        },
        loc: {
          start: {
            line: 122,
            column: 57
          },
          end: {
            line: 122,
            column: 81
          }
        },
        line: 122
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 134,
            column: 50
          },
          end: {
            line: 134,
            column: 51
          }
        },
        loc: {
          start: {
            line: 134,
            column: 57
          },
          end: {
            line: 134,
            column: 78
          }
        },
        line: 134
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 37
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 152
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 55
          },
          end: {
            line: 153,
            column: 56
          }
        },
        loc: {
          start: {
            line: 153,
            column: 68
          },
          end: {
            line: 174,
            column: 9
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 33
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 179
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 180,
            column: 55
          },
          end: {
            line: 180,
            column: 56
          }
        },
        loc: {
          start: {
            line: 180,
            column: 68
          },
          end: {
            line: 191,
            column: 9
          }
        },
        line: 180
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 36
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 196
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 197,
            column: 55
          },
          end: {
            line: 197,
            column: 56
          }
        },
        loc: {
          start: {
            line: 197,
            column: 68
          },
          end: {
            line: 208,
            column: 9
          }
        },
        line: 197
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 34
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 213
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 214,
            column: 55
          },
          end: {
            line: 214,
            column: 56
          }
        },
        loc: {
          start: {
            line: 214,
            column: 68
          },
          end: {
            line: 256,
            column: 9
          }
        },
        line: 214
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 36
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 261
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 262,
            column: 55
          },
          end: {
            line: 262,
            column: 56
          }
        },
        loc: {
          start: {
            line: 262,
            column: 68
          },
          end: {
            line: 264,
            column: 9
          }
        },
        line: 262
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 112
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 269
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 282,
            column: 32
          },
          end: {
            line: 282,
            column: 33
          }
        },
        loc: {
          start: {
            line: 282,
            column: 42
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 282
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        loc: {
          start: {
            line: 306,
            column: 21
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 306
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 307,
            column: 55
          },
          end: {
            line: 307,
            column: 56
          }
        },
        loc: {
          start: {
            line: 307,
            column: 68
          },
          end: {
            line: 323,
            column: 9
          }
        },
        line: 307
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 321,
            column: 67
          },
          end: {
            line: 321,
            column: 68
          }
        },
        loc: {
          start: {
            line: 321,
            column: 74
          },
          end: {
            line: 321,
            column: 95
          }
        },
        line: 321
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 31
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 328
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 329,
            column: 55
          },
          end: {
            line: 329,
            column: 56
          }
        },
        loc: {
          start: {
            line: 329,
            column: 68
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 329
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 33
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 357
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 358,
            column: 55
          },
          end: {
            line: 358,
            column: 56
          }
        },
        loc: {
          start: {
            line: 358,
            column: 68
          },
          end: {
            line: 383,
            column: 9
          }
        },
        line: 358
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 30
          },
          end: {
            line: 413,
            column: 5
          }
        },
        line: 388
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 389,
            column: 55
          },
          end: {
            line: 389,
            column: 56
          }
        },
        loc: {
          start: {
            line: 389,
            column: 68
          },
          end: {
            line: 412,
            column: 9
          }
        },
        line: 389
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 28
          },
          end: {
            line: 446,
            column: 5
          }
        },
        line: 417
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 418,
            column: 55
          },
          end: {
            line: 418,
            column: 56
          }
        },
        loc: {
          start: {
            line: 418,
            column: 68
          },
          end: {
            line: 445,
            column: 9
          }
        },
        line: 418
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 26
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 450
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 451,
            column: 55
          },
          end: {
            line: 451,
            column: 56
          }
        },
        loc: {
          start: {
            line: 451,
            column: 68
          },
          end: {
            line: 475,
            column: 9
          }
        },
        line: 451
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 458,
            column: 57
          },
          end: {
            line: 458,
            column: 58
          }
        },
        loc: {
          start: {
            line: 458,
            column: 72
          },
          end: {
            line: 467,
            column: 13
          }
        },
        line: 458
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 35
          },
          end: {
            line: 509,
            column: 5
          }
        },
        line: 480
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 481,
            column: 55
          },
          end: {
            line: 481,
            column: 56
          }
        },
        loc: {
          start: {
            line: 481,
            column: 68
          },
          end: {
            line: 508,
            column: 9
          }
        },
        line: 481
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 513,
            column: 4
          },
          end: {
            line: 513,
            column: 5
          }
        },
        loc: {
          start: {
            line: 513,
            column: 32
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 513
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 514,
            column: 55
          },
          end: {
            line: 514,
            column: 56
          }
        },
        loc: {
          start: {
            line: 514,
            column: 68
          },
          end: {
            line: 524,
            column: 9
          }
        },
        line: 514
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 5
          }
        },
        loc: {
          start: {
            line: 529,
            column: 97
          },
          end: {
            line: 555,
            column: 5
          }
        },
        line: 529
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 537,
            column: 45
          },
          end: {
            line: 537,
            column: 46
          }
        },
        loc: {
          start: {
            line: 537,
            column: 52
          },
          end: {
            line: 537,
            column: 73
          }
        },
        line: 537
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 538,
            column: 53
          },
          end: {
            line: 538,
            column: 54
          }
        },
        loc: {
          start: {
            line: 538,
            column: 60
          },
          end: {
            line: 538,
            column: 85
          }
        },
        line: 538
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 539,
            column: 49
          },
          end: {
            line: 539,
            column: 50
          }
        },
        loc: {
          start: {
            line: 539,
            column: 56
          },
          end: {
            line: 539,
            column: 77
          }
        },
        line: 539
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 559,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        loc: {
          start: {
            line: 559,
            column: 49
          },
          end: {
            line: 574,
            column: 5
          }
        },
        line: 559
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 560,
            column: 45
          },
          end: {
            line: 560,
            column: 46
          }
        },
        loc: {
          start: {
            line: 560,
            column: 52
          },
          end: {
            line: 560,
            column: 73
          }
        },
        line: 560
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 561,
            column: 53
          },
          end: {
            line: 561,
            column: 54
          }
        },
        loc: {
          start: {
            line: 561,
            column: 60
          },
          end: {
            line: 561,
            column: 85
          }
        },
        line: 561
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 578,
            column: 4
          },
          end: {
            line: 578,
            column: 5
          }
        },
        loc: {
          start: {
            line: 578,
            column: 99
          },
          end: {
            line: 663,
            column: 5
          }
        },
        line: 578
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 579,
            column: 55
          },
          end: {
            line: 579,
            column: 56
          }
        },
        loc: {
          start: {
            line: 579,
            column: 68
          },
          end: {
            line: 662,
            column: 9
          }
        },
        line: 579
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 584,
            column: 51
          },
          end: {
            line: 584,
            column: 52
          }
        },
        loc: {
          start: {
            line: 584,
            column: 58
          },
          end: {
            line: 584,
            column: 108
          }
        },
        line: 584
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 592,
            column: 65
          },
          end: {
            line: 592,
            column: 66
          }
        },
        loc: {
          start: {
            line: 592,
            column: 72
          },
          end: {
            line: 592,
            column: 89
          }
        },
        line: 592
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 667,
            column: 4
          },
          end: {
            line: 667,
            column: 5
          }
        },
        loc: {
          start: {
            line: 667,
            column: 25
          },
          end: {
            line: 669,
            column: 5
          }
        },
        line: 667
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 673,
            column: 4
          },
          end: {
            line: 673,
            column: 5
          }
        },
        loc: {
          start: {
            line: 673,
            column: 25
          },
          end: {
            line: 675,
            column: 5
          }
        },
        line: 673
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 679,
            column: 4
          },
          end: {
            line: 679,
            column: 5
          }
        },
        loc: {
          start: {
            line: 679,
            column: 28
          },
          end: {
            line: 681,
            column: 5
          }
        },
        line: 679
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 40
          }
        }, {
          start: {
            line: 28,
            column: 44
          },
          end: {
            line: 28,
            column: 64
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 36
          }
        }, {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 29,
            column: 62
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 44
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 68
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 42
          }
        }, {
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 81
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 30
          }
        }, {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 33,
            column: 67
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 34,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 34,
            column: 54
          }
        }, {
          start: {
            line: 34,
            column: 58
          },
          end: {
            line: 34,
            column: 83
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 34
          }
        }, {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 53
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 52
          },
          end: {
            line: 143,
            column: 65
          }
        }, {
          start: {
            line: 143,
            column: 68
          },
          end: {
            line: 143,
            column: 81
          }
        }],
        line: 143
      },
      "10": {
        loc: {
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 45
          }
        }, {
          start: {
            line: 166,
            column: 49
          },
          end: {
            line: 166,
            column: 77
          }
        }],
        line: 166
      },
      "11": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: 186,
            column: 17
          },
          end: {
            line: 190,
            column: 13
          }
        }],
        line: 182
      },
      "12": {
        loc: {
          start: {
            line: 189,
            column: 23
          },
          end: {
            line: 189,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 39
          },
          end: {
            line: 189,
            column: 48
          }
        }, {
          start: {
            line: 189,
            column: 51
          },
          end: {
            line: 189,
            column: 60
          }
        }],
        line: 189
      },
      "13": {
        loc: {
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: 203,
            column: 17
          },
          end: {
            line: 207,
            column: 13
          }
        }],
        line: 199
      },
      "14": {
        loc: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 206,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 42
          },
          end: {
            line: 206,
            column: 50
          }
        }, {
          start: {
            line: 206,
            column: 53
          },
          end: {
            line: 206,
            column: 63
          }
        }],
        line: 206
      },
      "15": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        }, {
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 254,
            column: 13
          }
        }],
        line: 217
      },
      "16": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 234,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 234,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "17": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 253,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "18": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 273,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 273,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "19": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 275,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 275,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "20": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 278,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 278,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "21": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 280,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 280,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "22": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 286,
            column: 26
          }
        }, {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 289,
            column: 26
          }
        }, {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 292,
            column: 26
          }
        }, {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 295,
            column: 26
          }
        }],
        line: 283
      },
      "23": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 300,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 300,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "24": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "25": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "26": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 381,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 381,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "27": {
        loc: {
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "28": {
        loc: {
          start: {
            line: 426,
            column: 33
          },
          end: {
            line: 428,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 33
          },
          end: {
            line: 426,
            column: 56
          }
        }, {
          start: {
            line: 427,
            column: 16
          },
          end: {
            line: 427,
            column: 48
          }
        }, {
          start: {
            line: 428,
            column: 16
          },
          end: {
            line: 428,
            column: 45
          }
        }],
        line: 426
      },
      "29": {
        loc: {
          start: {
            line: 429,
            column: 36
          },
          end: {
            line: 431,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 36
          },
          end: {
            line: 429,
            column: 60
          }
        }, {
          start: {
            line: 430,
            column: 16
          },
          end: {
            line: 430,
            column: 49
          }
        }, {
          start: {
            line: 431,
            column: 16
          },
          end: {
            line: 431,
            column: 46
          }
        }],
        line: 429
      },
      "30": {
        loc: {
          start: {
            line: 432,
            column: 28
          },
          end: {
            line: 436,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 18
          },
          end: {
            line: 433,
            column: 29
          }
        }, {
          start: {
            line: 434,
            column: 18
          },
          end: {
            line: 436,
            column: 31
          }
        }],
        line: 432
      },
      "31": {
        loc: {
          start: {
            line: 434,
            column: 18
          },
          end: {
            line: 436,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 22
          },
          end: {
            line: 435,
            column: 37
          }
        }, {
          start: {
            line: 436,
            column: 22
          },
          end: {
            line: 436,
            column: 31
          }
        }],
        line: 434
      },
      "32": {
        loc: {
          start: {
            line: 470,
            column: 33
          },
          end: {
            line: 470,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 470,
            column: 58
          },
          end: {
            line: 470,
            column: 61
          }
        }, {
          start: {
            line: 470,
            column: 64
          },
          end: {
            line: 470,
            column: 66
          }
        }],
        line: 470
      },
      "33": {
        loc: {
          start: {
            line: 486,
            column: 33
          },
          end: {
            line: 486,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 486,
            column: 44
          },
          end: {
            line: 486,
            column: 47
          }
        }, {
          start: {
            line: 486,
            column: 50
          },
          end: {
            line: 486,
            column: 51
          }
        }],
        line: 486
      },
      "34": {
        loc: {
          start: {
            line: 487,
            column: 28
          },
          end: {
            line: 504,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 488,
            column: 22
          },
          end: {
            line: 488,
            column: 24
          }
        }, {
          start: {
            line: 489,
            column: 22
          },
          end: {
            line: 504,
            column: 21
          }
        }],
        line: 487
      },
      "35": {
        loc: {
          start: {
            line: 519,
            column: 33
          },
          end: {
            line: 519,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 519,
            column: 53
          },
          end: {
            line: 519,
            column: 56
          }
        }, {
          start: {
            line: 519,
            column: 59
          },
          end: {
            line: 519,
            column: 60
          }
        }],
        line: 519
      },
      "36": {
        loc: {
          start: {
            line: 545,
            column: 32
          },
          end: {
            line: 549,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 546,
            column: 14
          },
          end: {
            line: 546,
            column: 17
          }
        }, {
          start: {
            line: 547,
            column: 14
          },
          end: {
            line: 549,
            column: 20
          }
        }],
        line: 545
      },
      "37": {
        loc: {
          start: {
            line: 547,
            column: 14
          },
          end: {
            line: 549,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 548,
            column: 18
          },
          end: {
            line: 548,
            column: 20
          }
        }, {
          start: {
            line: 549,
            column: 18
          },
          end: {
            line: 549,
            column: 20
          }
        }],
        line: 547
      },
      "38": {
        loc: {
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 573,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 8
          },
          end: {
            line: 573,
            column: 9
          }
        }, {
          start: {
            line: 565,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        }],
        line: 562
      },
      "39": {
        loc: {
          start: {
            line: 562,
            column: 12
          },
          end: {
            line: 562,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 562,
            column: 12
          },
          end: {
            line: 562,
            column: 38
          }
        }, {
          start: {
            line: 562,
            column: 42
          },
          end: {
            line: 562,
            column: 60
          }
        }],
        line: 562
      },
      "40": {
        loc: {
          start: {
            line: 565,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        }, {
          start: {
            line: 568,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        }],
        line: 565
      },
      "41": {
        loc: {
          start: {
            line: 565,
            column: 17
          },
          end: {
            line: 565,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 565,
            column: 17
          },
          end: {
            line: 565,
            column: 35
          }
        }, {
          start: {
            line: 565,
            column: 39
          },
          end: {
            line: 565,
            column: 63
          }
        }],
        line: 565
      },
      "42": {
        loc: {
          start: {
            line: 568,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 568,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        }, {
          start: {
            line: 571,
            column: 13
          },
          end: {
            line: 573,
            column: 9
          }
        }],
        line: 568
      },
      "43": {
        loc: {
          start: {
            line: 568,
            column: 17
          },
          end: {
            line: 568,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 568,
            column: 17
          },
          end: {
            line: 568,
            column: 35
          }
        }, {
          start: {
            line: 568,
            column: 39
          },
          end: {
            line: 568,
            column: 63
          }
        }],
        line: 568
      },
      "44": {
        loc: {
          start: {
            line: 584,
            column: 58
          },
          end: {
            line: 584,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 584,
            column: 58
          },
          end: {
            line: 584,
            column: 79
          }
        }, {
          start: {
            line: 584,
            column: 83
          },
          end: {
            line: 584,
            column: 108
          }
        }],
        line: 584
      },
      "45": {
        loc: {
          start: {
            line: 585,
            column: 12
          },
          end: {
            line: 595,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 585,
            column: 12
          },
          end: {
            line: 595,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 585
      },
      "46": {
        loc: {
          start: {
            line: 597,
            column: 12
          },
          end: {
            line: 612,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 12
          },
          end: {
            line: 612,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "47": {
        loc: {
          start: {
            line: 613,
            column: 12
          },
          end: {
            line: 628,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 613,
            column: 12
          },
          end: {
            line: 628,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 613
      },
      "48": {
        loc: {
          start: {
            line: 630,
            column: 12
          },
          end: {
            line: 645,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 630,
            column: 12
          },
          end: {
            line: 645,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 630
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/security-posture-monitor.ts",
      mappings: ";AAAA;;;;;;GAMG;;;;AA+HH;;GAEG;AACH,MAAa,sBAAsB;IA2BjC,YACE,MAA0C,EAC1C,YAA6B,EAC7B,UAA6B,EAC7B,cAA+B,EAC/B,aAA6C,EAC7C,kBAAgD,EAChD,mBAAyC,EACzC,SAAqB;QAxBvB,mBAAmB;QACX,qBAAgB,GAAY,KAAK,CAAC;QAClC,mBAAc,GAAgB,IAAI,CAAC;QACnC,oBAAe,GAAgC,IAAI,GAAG,EAAE,CAAC;QACzD,oBAAe,GAKnB;YACF,gBAAgB,EAAE,CAAC;YACnB,eAAe,EAAE,CAAC;YAClB,gBAAgB,EAAE,CAAC;YACnB,oBAAoB,EAAE,CAAC;SACxB,CAAC;QAYA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,cAAc,EAAE,CAAC;QACzD,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,gBAAgB,EAAE,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,cAAc,IAAI,IAAI,cAAc,EAAE,CAAC;QAC7D,IAAI,CAAC,aAAa,GAAG,aAAa,IAAI,IAAI,6BAA6B,EAAE,CAAC;QAC1E,IAAI,CAAC,kBAAkB;YACrB,kBAAkB,IAAI,IAAI,2BAA2B,EAAE,CAAC;QAC1D,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,IAAI,IAAI,mBAAmB,EAAE,CAAC;QAC5E,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,IAAI,SAAS,EAAE,CAAC;QAC9C,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;IACxB,CAAC;IAED;;OAEG;IACK,gBAAgB,CACtB,MAA0C;QAE1C,uBACE,kBAAkB,EAAE,MAAM,EAC1B,kBAAkB,EAAE,KAAK,EACzB,uBAAuB,EAAE,MAAM,EAC/B,0BAA0B,EAAE,IAAI,EAChC,qBAAqB,EAAE,IAAI,EAC3B,2BAA2B,EAAE,IAAI,EACjC,eAAe,EAAE;gBACf,qBAAqB,EAAE,EAAE;gBACzB,oBAAoB,EAAE,EAAE;gBACxB,gBAAgB,EAAE,CAAC;aACpB,IACE,MAAM,EACT;IACJ,CAAC;IAED;;OAEG;IACG,eAAe;;YACnB,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;gBAC9D,OAAO;YACT,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAE7B,sCAAsC;YACtC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CACvC,6BAA6B,EAC7B;gBACE,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,EACD,QAAQ,CACT,CAAC;YAEF,6BAA6B;YAC7B,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACrC,CAAC;KAAA;IAED;;OAEG;IACG,cAAc;;YAClB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;gBAC1D,OAAO;YACT,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YACxD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAE9B,qCAAqC;YACrC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CACvC,6BAA6B,EAC7B;gBACE,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,OAAO,EAAE,IAAI,CAAC,eAAe;aAC9B,EACD,QAAQ,CACT,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACG,qBAAqB;;YACzB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;YAEtE,IAAI,CAAC;gBACH,+BAA+B;gBAC/B,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;gBAExC,4BAA4B;gBAC5B,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBAEhE,uCAAuC;gBACvC,MAAM,qBAAqB,GAAG,MAAM,IAAI,CAAC,yBAAyB,CAChE,gBAAgB,CACjB,CAAC;gBAEF,0BAA0B;gBAC1B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;gBAE5C,0BAA0B;gBAC1B,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAE5D,mCAAmC;gBACnC,MAAM,YAAY,GAAG,IAAI,CAAC,6BAA6B,CACrD,WAAW,EACX,qBAAqB,EACrB,OAAO,EACP,gBAAgB,CACjB,CAAC;gBAEF,yBAAyB;gBACzB,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAErE,2BAA2B;gBAC3B,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,+BAA+B,CAChE,WAAW,EACX,qBAAqB,EACrB,OAAO,EACP,gBAAgB,CACjB,CAAC;gBAEF,MAAM,MAAM,GAA0B;oBACpC,OAAO,EAAE;wBACP,aAAa,EAAE,YAAY;wBAC3B,WAAW;wBACX,cAAc,EAAE,IAAI,IAAI,EAAE;wBAC1B,gBAAgB,EAAE,gBAAgB,CAAC,OAAO;qBAC3C;oBACD,MAAM,EAAE;wBACN,GAAG,EAAE,WAAW;wBAChB,aAAa,EAAE,qBAAqB;qBACrC;oBACD,OAAO,EAAE;wBACP,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC;wBACpD,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,WAAW,CAAC;wBAC1D,aAAa,EAAE,OAAO,CAAC,MAAM;qBAC9B;oBACD,UAAU,EAAE,gBAAgB,CAAC,OAAO;oBACpC,eAAe;iBAChB,CAAC;gBAEF,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;gBAEjC,gCAAgC;gBAChC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CACvC,+BAA+B,EAC/B;oBACE,SAAS,EAAE,IAAI,IAAI,EAAE;oBACrB,aAAa,EAAE,YAAY;oBAC3B,WAAW;oBACX,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,MAAM;iBACnE,EACD,QAAQ,CACT,CAAC;gBAEF,OAAO,MAAM,CAAC;YAChB,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;gBAExD,6BAA6B;gBAC7B,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CACvC,4BAA4B,EAC5B;oBACE,SAAS,EAAE,IAAI,IAAI,EAAE;oBACrB,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;iBAC9D,EACD,QAAQ,CACT,CAAC;gBAEF,MAAM,KAAK,CAAC;YACd,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,yBAAyB,CACrC,KAA+B;;YAE/B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iCAAiC,KAAK,QAAQ,CAAC,CAAC;YAEhE,0BAA0B;YAC1B,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAEjE,uBAAuB;YACvB,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YAEvE,2BAA2B;YAC3B,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAEjE,yBAAyB;YACzB,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YAE1E,iCAAiC;YACjC,MAAM,aAAa,GAAG,IAAI,CAAC,2BAA2B,CACpD,gBAAgB,EAChB,mBAAmB,EACnB,eAAe,EACf,sBAAsB,CACvB,CAAC;YAEF,OAAO;gBACL,QAAQ,EAAE,aAAa,IAAI,EAAE,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC;gBAC7D,aAAa;gBACb,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,eAAe;gBACf,gBAAgB;gBAChB,mBAAmB;gBACnB,sBAAsB;aACvB,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,qBAAqB,CACjC,KAA+B;;YAE/B,+CAA+C;YAC/C,IAAI,KAAK,KAAK,gBAAgB,EAAE,CAAC;gBAC/B,gDAAgD;gBAChD,OAAO,SAAS,CAAC;YACnB,CAAC;iBAAM,CAAC;gBACN,0CAA0C;gBAC1C,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CACnD,wBAAwB,EACxB,IAAI,CACL,CAAC;gBACF,OAAO,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YAC/C,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,wBAAwB,CACpC,KAA+B;;YAE/B,qCAAqC;YACrC,IAAI,KAAK,KAAK,gBAAgB,EAAE,CAAC;gBAC/B,qDAAqD;gBACrD,OAAO,QAAQ,CAAC;YAClB,CAAC;iBAAM,CAAC;gBACN,8CAA8C;gBAC9C,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CACtD,2BAA2B,EAC3B,IAAI,CACL,CAAC;gBACF,OAAO,gBAAgB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;YAClD,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,sBAAsB,CAClC,KAA+B;;YAE/B,MAAM,eAAe,GAA4B,EAAE,CAAC;YAEpD,mCAAmC;YACnC,IAAI,KAAK,KAAK,KAAK,EAAE,CAAC;gBACpB,qCAAqC;gBACrC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBACrD,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;oBACzB,eAAe,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,cAAc,IAAI,CAAC,GAAG,EAAE,EAAE;wBAC9B,QAAQ,EAAE,QAAQ;wBAClB,WAAW,EAAE,gCAAgC;wBAC7C,SAAS,EAAE,YAAY;wBACvB,YAAY,EAAE,IAAI,IAAI,EAAE;wBACxB,cAAc,EAAE,KAAK;wBACrB,gBAAgB,EAAE;4BAChB,gCAAgC;4BAChC,6BAA6B;4BAC7B,mBAAmB;yBACpB;qBACF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,uCAAuC;gBACvC,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;gBACnE,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;oBAC7B,eAAe,CAAC,IAAI,CAAC;wBACnB,EAAE,EAAE,kBAAkB,IAAI,CAAC,GAAG,EAAE,EAAE;wBAClC,QAAQ,EAAE,QAAQ;wBAClB,WAAW,EAAE,2CAA2C;wBACxD,SAAS,EAAE,uBAAuB;wBAClC,YAAY,EAAE,IAAI,IAAI,EAAE;wBACxB,cAAc,EAAE,KAAK;wBACrB,gBAAgB,EAAE;4BAChB,uBAAuB;4BACvB,qCAAqC;4BACrC,+BAA+B;yBAChC;qBACF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YAED,OAAO,eAAe,CAAC;QACzB,CAAC;KAAA;IAED;;OAEG;IACW,wBAAwB,CACpC,KAA+B;;YAE/B,OAAO,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;QAC3C,CAAC;KAAA;IAED;;OAEG;IACK,2BAA2B,CACjC,gBAAoD,EACpD,mBAAmD,EACnD,eAAwC,EACxC,sBAA+B;QAE/B,IAAI,KAAK,GAAG,GAAG,CAAC;QAEhB,sCAAsC;QACtC,IAAI,gBAAgB,KAAK,SAAS;YAAE,KAAK,IAAI,EAAE,CAAC;QAChD,IAAI,gBAAgB,KAAK,UAAU;YAAE,KAAK,IAAI,EAAE,CAAC;QAEjD,0CAA0C;QAC1C,IAAI,mBAAmB,KAAK,UAAU;YAAE,KAAK,IAAI,EAAE,CAAC;QACpD,IAAI,mBAAmB,KAAK,MAAM;YAAE,KAAK,IAAI,EAAE,CAAC;QAEhD,oCAAoC;QACpC,eAAe,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC/B,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACtB,KAAK,UAAU;oBACb,KAAK,IAAI,EAAE,CAAC;oBACZ,MAAM;gBACR,KAAK,MAAM;oBACT,KAAK,IAAI,EAAE,CAAC;oBACZ,MAAM;gBACR,KAAK,QAAQ;oBACX,KAAK,IAAI,EAAE,CAAC;oBACZ,MAAM;gBACR,KAAK,KAAK;oBACR,KAAK,IAAI,CAAC,CAAC;oBACX,MAAM;YACV,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,gDAAgD;QAChD,IAAI,CAAC,sBAAsB;YAAE,KAAK,IAAI,EAAE,CAAC;QAEzC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACW,cAAc;;YAC1B,MAAM,OAAO,GAAqB,EAAE,CAAC;YAErC,yCAAyC;YACzC,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;YACjE,IAAI,kBAAkB,EAAE,CAAC;gBACvB,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACnC,CAAC;YAED,kCAAkC;YAClC,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;YACrE,OAAO,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,CAAC;YAEtC,6BAA6B;YAC7B,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/D,OAAO,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC,CAAC;YAEnC,wBAAwB;YACxB,IAAI,CAAC,eAAe,CAAC,eAAe,IAAI,OAAO,CAAC,MAAM,CACpD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,QAAQ,CAC7B,CAAC,MAAM,CAAC;YAET,OAAO,OAAO,CAAC;QACjB,CAAC;KAAA;IAED;;OAEG;IACW,wBAAwB;;YACpC,iEAAiE;YACjE,MAAM,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAgB,CAAC,CAAC;YAExE,IAAI,kBAAkB,EAAE,CAAC;gBACvB,OAAO;oBACL,EAAE,EAAE,uBAAuB,IAAI,CAAC,GAAG,EAAE,EAAE;oBACvC,IAAI,EAAE,qBAAqB;oBAC3B,QAAQ,EAAE,MAAM;oBAChB,WAAW,EACT,wEAAwE;oBAC1E,UAAU,EAAE,IAAI,IAAI,EAAE;oBACtB,aAAa,EAAE,gBAAgB;oBAC/B,kBAAkB,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;oBAChE,MAAM,EAAE,QAAQ;oBAChB,eAAe,EAAE;wBACf,oBAAoB;wBACpB,mCAAmC;wBACnC,kCAAkC;wBAClC,yCAAyC;qBAC1C;oBACD,eAAe,EAAE,gDAAgD;iBAClE,CAAC;YACJ,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAED;;OAEG;IACW,0BAA0B;;YACtC,MAAM,OAAO,GAAqB,EAAE,CAAC;YAErC,wBAAwB;YACxB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC;gBACnE,KAAK,EAAE,gBAAgB;gBACvB,SAAS,EAAE,eAAe;gBAC1B,SAAS,EAAE,CAAC,gBAAgB,CAAC;gBAC7B,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;gBAC/B,OAAO,CAAC,IAAI,CAAC;oBACX,EAAE,EAAE,kBAAkB,IAAI,CAAC,GAAG,EAAE,EAAE;oBAClC,IAAI,EAAE,sBAAsB;oBAC5B,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,uCAAuC,aAAa,CAAC,UAAU,CAAC,IAAI,CAC/E,IAAI,CACL,EAAE;oBACH,UAAU,EAAE,IAAI,IAAI,EAAE;oBACtB,aAAa,EAAE,MAAM;oBACrB,kBAAkB,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;oBACzD,MAAM,EAAE,QAAQ;oBAChB,eAAe,EAAE,aAAa,CAAC,eAAe;oBAC9C,eAAe,EAAE,mCAAmC;iBACrD,CAAC,CAAC;gBAEH,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;YAC9C,CAAC;YAED,OAAO,OAAO,CAAC;QACjB,CAAC;KAAA;IAED;;OAEG;IACW,uBAAuB;;YACnC,MAAM,OAAO,GAAqB,EAAE,CAAC;YAErC,mCAAmC;YACnC,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;YAClE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;gBAC5B,OAAO,CAAC,IAAI,CAAC;oBACX,EAAE,EAAE,oBAAoB,IAAI,CAAC,GAAG,EAAE,EAAE;oBACpC,IAAI,EAAE,kBAAkB;oBACxB,QAAQ,EAAE,QAAQ;oBAClB,WAAW,EAAE,2CAA2C,cAAc,CAAC,MAAM,CAAC,IAAI,CAChF,IAAI,CACL,EAAE;oBACH,UAAU,EAAE,IAAI,IAAI,EAAE;oBACtB,aAAa,EAAE,MAAM;oBACrB,kBAAkB,EAAE,CAAC,eAAe,CAAC;oBACrC,MAAM,EAAE,QAAQ;oBAChB,eAAe,EAAE;wBACf,mCAAmC;wBACnC,uBAAuB;wBACvB,4BAA4B;qBAC7B;oBACD,eAAe,EAAE,yCAAyC;iBAC3D,CAAC,CAAC;YACL,CAAC;YAED,OAAO,OAAO,CAAC;QACjB,CAAC;KAAA;IAED;;OAEG;IACW,qBAAqB;;YAQjC,wBAAwB;YACxB,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAErD,kCAAkC;YAClC,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,4BAA4B,EAAE,CAAC;YAEvE,+BAA+B;YAC/B,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAEjE,sCAAsC;YACtC,MAAM,YAAY,GAChB,WAAW,CAAC,WAAW;gBACvB,oBAAoB,CAAC,WAAW;gBAChC,iBAAiB,CAAC,WAAW,CAAC;YAEhC,MAAM,eAAe,GACnB,CAAC,WAAW,CAAC,WAAW;gBACxB,CAAC,oBAAoB,CAAC,WAAW;gBACjC,CAAC,iBAAiB,CAAC,WAAW,CAAC;YAEjC,MAAM,OAAO,GAA8C,YAAY;gBACrE,CAAC,CAAC,WAAW;gBACb,CAAC,CAAC,eAAe;oBACjB,CAAC,CAAC,eAAe;oBACjB,CAAC,CAAC,SAAS,CAAC;YAEd,OAAO;gBACL,OAAO;gBACP,OAAO,EAAE;oBACP,IAAI,EAAE,WAAW;oBACjB,aAAa,EAAE,oBAAoB;oBACnC,UAAU,EAAE,iBAAiB;iBAC9B;aACF,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,mBAAmB;;YAC/B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC;gBAChE,KAAK,EAAE,MAAM;gBACb,SAAS,EAAE,kBAAkB;gBAC7B,SAAS,EAAE,CAAC,KAAK,CAAC;gBAClB,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YAEH,MAAM,UAAU,GAA0B,UAAU,CAAC,UAAU,CAAC,GAAG,CACjE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;gBACb,EAAE,EAAE,kBAAkB,KAAK,EAAE;gBAC7B,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,MAAM;gBAChB,WAAW,EAAE,CAAC;gBACd,UAAU,EAAE,IAAI,IAAI,EAAE;gBACtB,YAAY,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC;gBAC1C,mBAAmB,EAAE,IAAI;gBACzB,gBAAgB,EAAE,UAAU,CAAC,eAAe;aAC7C,CAAC,CACH,CAAC;YAEF,OAAO;gBACL,WAAW,EAAE,UAAU,CAAC,WAAW;gBACnC,eAAe,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBAClD,UAAU;gBACV,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,YAAY,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,UAAU;aAC1E,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,4BAA4B;;YACxC,+CAA+C;YAC/C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,cAAc,CAAC;YAE3D,OAAO;gBACL,WAAW,EAAE,QAAQ;gBACrB,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnC,UAAU,EAAE,QAAQ;oBAClB,CAAC,CAAC,EAAE;oBACJ,CAAC,CAAC;wBACE;4BACE,EAAE,EAAE,0BAA0B;4BAC9B,IAAI,EAAE,gBAAgB;4BACtB,QAAQ,EAAE,UAAU;4BACpB,WAAW,EAAE,8BAA8B;4BAC3C,UAAU,EAAE,IAAI,IAAI,EAAE;4BACtB,YAAY,EAAE,CAAC,KAAK,CAAC;4BACrB,mBAAmB,EAAE,IAAI;4BACzB,gBAAgB,EAAE;gCAChB,sCAAsC;gCACtC,oCAAoC;gCACpC,kCAAkC;6BACnC;yBACF;qBACF;gBACL,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,YAAY,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,UAAU;aAC1E,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,yBAAyB;;YACrC,8CAA8C;YAC9C,MAAM,iBAAiB,GAAG,IAAI,CAAC,CAAC,gCAAgC;YAEhE,OAAO;gBACL,WAAW,EAAE,iBAAiB;gBAC9B,eAAe,EAAE,iBAAiB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5C,UAAU,EAAE,EAAE;gBACd,SAAS,EAAE,IAAI,IAAI,EAAE;gBACrB,YAAY,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,UAAU;aAC1E,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACK,6BAA6B,CACnC,WAAgC,EAChC,qBAA0C,EAC1C,OAAyB,EACzB,gBAGC;QAED,iBAAiB;QACjB,MAAM,WAAW,GAAG,GAAG,CAAC,CAAC,yBAAyB;QAClD,MAAM,YAAY,GAAG,GAAG,CAAC,CAAC,wBAAwB;QAClD,MAAM,gBAAgB,GAAG,GAAG,CAAC,CAAC,qBAAqB;QAEnD,iDAAiD;QACjD,MAAM,UAAU,GACd,CAAC,WAAW,CAAC,aAAa,GAAG,qBAAqB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAExE,yBAAyB;QACzB,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC;QACnE,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,CAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,UAAU,CACjC,CAAC,MAAM,CAAC;QACT,MAAM,WAAW,GAAG,aAAa,CAAC,MAAM,CACtC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,CAC7B,CAAC,MAAM,CAAC;QACT,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAC1B,CAAC,EACD,GAAG;YACD,eAAe,GAAG,EAAE;YACpB,WAAW,GAAG,EAAE;YAChB,CAAC,aAAa,CAAC,MAAM,GAAG,eAAe,GAAG,WAAW,CAAC,GAAG,CAAC,CAC7D,CAAC;QAEF,6BAA6B;QAC7B,MAAM,eAAe,GACnB,gBAAgB,CAAC,OAAO,KAAK,WAAW;YACtC,CAAC,CAAC,GAAG;YACL,CAAC,CAAC,gBAAgB,CAAC,OAAO,KAAK,SAAS;gBACxC,CAAC,CAAC,EAAE;gBACJ,CAAC,CAAC,EAAE,CAAC;QAET,mCAAmC;QACnC,MAAM,YAAY,GAChB,UAAU,GAAG,WAAW;YACxB,WAAW,GAAG,YAAY;YAC1B,eAAe,GAAG,gBAAgB,CAAC;QAErC,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED;;OAEG;IACK,oBAAoB,CAC1B,aAAqB,EACrB,OAAyB;QAEzB,MAAM,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC;QACnE,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,CAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,UAAU,CACjC,CAAC;QAEF,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,aAAa,GAAG,EAAE,EAAE,CAAC;YACrD,OAAO,UAAU,CAAC;QACpB,CAAC;aAAM,IAAI,aAAa,GAAG,EAAE,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1D,OAAO,MAAM,CAAC;QAChB,CAAC;aAAM,IAAI,aAAa,GAAG,EAAE,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1D,OAAO,QAAQ,CAAC;QAClB,CAAC;aAAM,CAAC;YACN,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACW,+BAA+B,CAC3C,WAAgC,EAChC,qBAA0C,EAC1C,OAAyB,EACzB,gBAAqB;;YAMrB,MAAM,SAAS,GAA6B,EAAE,CAAC;YAC/C,MAAM,SAAS,GAA6B,EAAE,CAAC;YAC/C,MAAM,QAAQ,GAA6B,EAAE,CAAC;YAE9C,iDAAiD;YACjD,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CACpC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,KAAK,UAAU,CAC1D,CAAC;YACF,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBAC/B,SAAS,CAAC,IAAI,CAAC;oBACb,EAAE,EAAE,2BAA2B;oBAC/B,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,YAAY;oBACtB,WAAW,EAAE,YAAY,eAAe,CAAC,MAAM,wCAAwC;oBACvF,cAAc,EAAE,yCAAyC;oBACzD,mBAAmB,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC;oBACtE,eAAe,EAAE,MAAM;iBACxB,CAAC,CAAC;YACL,CAAC;YAED,qCAAqC;YACrC,IAAI,WAAW,CAAC,aAAa,GAAG,EAAE,EAAE,CAAC;gBACnC,SAAS,CAAC,IAAI,CAAC;oBACb,EAAE,EAAE,sBAAsB;oBAC1B,QAAQ,EAAE,MAAM;oBAChB,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,0CAA0C;oBACvD,cAAc,EAAE,wCAAwC;oBACxD,mBAAmB,EAAE;wBACnB,8BAA8B;wBAC9B,sBAAsB;wBACtB,yBAAyB;wBACzB,gCAAgC;qBACjC;oBACD,eAAe,EAAE,QAAQ;iBAC1B,CAAC,CAAC;YACL,CAAC;YAED,IAAI,qBAAqB,CAAC,aAAa,GAAG,EAAE,EAAE,CAAC;gBAC7C,SAAS,CAAC,IAAI,CAAC;oBACb,EAAE,EAAE,0BAA0B;oBAC9B,QAAQ,EAAE,MAAM;oBAChB,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,qDAAqD;oBAClE,cAAc,EAAE,2CAA2C;oBAC3D,mBAAmB,EAAE;wBACnB,qBAAqB;wBACrB,uBAAuB;wBACvB,yBAAyB;wBACzB,gCAAgC;qBACjC;oBACD,eAAe,EAAE,QAAQ;iBAC1B,CAAC,CAAC;YACL,CAAC;YAED,6BAA6B;YAC7B,IAAI,gBAAgB,CAAC,OAAO,KAAK,WAAW,EAAE,CAAC;gBAC7C,SAAS,CAAC,IAAI,CAAC;oBACb,EAAE,EAAE,2BAA2B;oBAC/B,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,YAAY;oBACtB,WAAW,EACT,2DAA2D;oBAC7D,cAAc,EAAE,4CAA4C;oBAC5D,mBAAmB,EAAE;wBACnB,8BAA8B;wBAC9B,6BAA6B;wBAC7B,0BAA0B;wBAC1B,8BAA8B;qBAC/B;oBACD,eAAe,EAAE,MAAM;iBACxB,CAAC,CAAC;YACL,CAAC;YAED,4BAA4B;YAC5B,QAAQ,CAAC,IAAI,CAAC;gBACZ,EAAE,EAAE,iCAAiC;gBACrC,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,uDAAuD;gBACpE,cAAc,EAAE,sDAAsD;gBACtE,mBAAmB,EAAE;oBACnB,iCAAiC;oBACjC,8BAA8B;oBAC9B,+BAA+B;oBAC/B,wCAAwC;iBACzC;gBACD,eAAe,EAAE,MAAM;aACxB,CAAC,CAAC;YAEH,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;QAC5C,CAAC;KAAA;IAED;;OAEG;IACH,kBAAkB;QAChB,yBAAY,IAAI,CAAC,eAAe,EAAG;IACrC,CAAC;IAED;;OAEG;IACH,kBAAkB;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,qBAAqB;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;CACF;AAv1BD,wDAu1BC",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/security-posture-monitor.ts"],
      sourcesContent: ["/**\n * Security Posture Monitor - Comprehensive Security Monitoring for Hybrid Architecture\n *\n * This module implements real-time security posture monitoring for the hybrid routing\n * architecture, tracking security metrics across both MCP and direct Bedrock paths,\n * detecting threats, and providing security recommendations.\n */\n\n// Security Posture Status\nexport interface SecurityPostureStatus {\n  overall: {\n    securityScore: number; // 0-100\n    threatLevel: \"low\" | \"medium\" | \"high\" | \"critical\";\n    lastAssessment: Date;\n    complianceStatus: \"compliant\" | \"warning\" | \"non-compliant\";\n  };\n  routes: {\n    mcp: RouteSecurityStatus;\n    directBedrock: RouteSecurityStatus;\n  };\n  threats: {\n    active: SecurityThreat[];\n    mitigated: SecurityThreat[];\n    totalDetected: number;\n  };\n  compliance: {\n    gdpr: ComplianceMetrics;\n    dataResidency: ComplianceMetrics;\n    auditTrail: ComplianceMetrics;\n  };\n  recommendations: {\n    immediate: SecurityRecommendation[];\n    shortTerm: SecurityRecommendation[];\n    longTerm: SecurityRecommendation[];\n  };\n}\n\n// Route Security Status\nexport interface RouteSecurityStatus {\n  isSecure: boolean;\n  securityScore: number; // 0-100\n  lastCheck: Date;\n  vulnerabilities: SecurityVulnerability[];\n  encryptionStatus: \"enabled\" | \"partial\" | \"disabled\";\n  accessControlStatus: \"strict\" | \"moderate\" | \"weak\";\n  threatDetectionEnabled: boolean;\n}\n\n// Security Threat\nexport interface SecurityThreat {\n  id: string;\n  type:\n    | \"unauthorized_access\"\n    | \"data_breach\"\n    | \"injection_attack\"\n    | \"ddos\"\n    | \"malware\"\n    | \"misconfiguration\"\n    | \"compliance_violation\";\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  detectedAt: Date;\n  affectedRoute: \"mcp\" | \"direct_bedrock\" | \"both\";\n  affectedComponents: string[];\n  status: \"active\" | \"mitigated\" | \"investigating\";\n  mitigationSteps: string[];\n  estimatedImpact: string;\n}\n\n// Security Vulnerability\nexport interface SecurityVulnerability {\n  id: string;\n  cveId?: string;\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  component: string;\n  discoveredAt: Date;\n  patchAvailable: boolean;\n  remediationSteps: string[];\n}\n\n// Compliance Metrics\nexport interface ComplianceMetrics {\n  isCompliant: boolean;\n  complianceScore: number; // 0-100\n  violations: ComplianceViolation[];\n  lastAudit: Date;\n  nextAuditDue: Date;\n}\n\n// Compliance Violation\nexport interface ComplianceViolation {\n  id: string;\n  type: string;\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  detectedAt: Date;\n  affectedData: string[];\n  remediationRequired: boolean;\n  remediationSteps: string[];\n}\n\n// Security Recommendation\nexport interface SecurityRecommendation {\n  id: string;\n  priority: \"low\" | \"medium\" | \"high\" | \"critical\";\n  category:\n    | \"access_control\"\n    | \"encryption\"\n    | \"monitoring\"\n    | \"compliance\"\n    | \"configuration\";\n  description: string;\n  expectedImpact: string;\n  implementationSteps: string[];\n  estimatedEffort: \"low\" | \"medium\" | \"high\";\n}\n\n// Security Assessment Configuration\nexport interface SecurityAssessmentConfig {\n  assessmentInterval: number; // How often to assess security posture\n  threatScanInterval: number; // How often to scan for threats\n  complianceCheckInterval: number; // How often to check compliance\n  enableContinuousMonitoring: boolean;\n  enableThreatDetection: boolean;\n  enableVulnerabilityScanning: boolean;\n  alertThresholds: {\n    criticalSecurityScore: number;\n    warningSecurityScore: number;\n    maxActiveThreats: number;\n  };\n}\n\n/**\n * Security Posture Monitor Implementation\n */\nexport class SecurityPostureMonitor {\n  private config: SecurityAssessmentConfig;\n  private featureFlags: AiFeatureFlags;\n  private auditTrail: AuditTrailSystem;\n  private circuitBreaker: CircuitBreaker;\n  private gdprValidator: GDPRHybridComplianceValidator;\n  private providerCompliance: ProviderAgreementCompliance;\n  private directBedrockClient: DirectBedrockClient;\n  private mcpRouter: MCPRouter;\n  private logger: Console;\n\n  // Monitoring state\n  private monitoringActive: boolean = false;\n  private lastAssessment: Date | null = null;\n  private detectedThreats: Map<string, SecurityThreat> = new Map();\n  private securityMetrics: {\n    totalAssessments: number;\n    threatsDetected: number;\n    threatsMitigated: number;\n    complianceViolations: number;\n  } = {\n    totalAssessments: 0,\n    threatsDetected: 0,\n    threatsMitigated: 0,\n    complianceViolations: 0,\n  };\n\n  constructor(\n    config?: Partial<SecurityAssessmentConfig>,\n    featureFlags?: AiFeatureFlags,\n    auditTrail?: AuditTrailSystem,\n    circuitBreaker?: CircuitBreaker,\n    gdprValidator?: GDPRHybridComplianceValidator,\n    providerCompliance?: ProviderAgreementCompliance,\n    directBedrockClient?: DirectBedrockClient,\n    mcpRouter?: MCPRouter\n  ) {\n    this.config = this.getDefaultConfig(config);\n    this.featureFlags = featureFlags || new AiFeatureFlags();\n    this.auditTrail = auditTrail || new AuditTrailSystem();\n    this.circuitBreaker = circuitBreaker || new CircuitBreaker();\n    this.gdprValidator = gdprValidator || new GDPRHybridComplianceValidator();\n    this.providerCompliance =\n      providerCompliance || new ProviderAgreementCompliance();\n    this.directBedrockClient = directBedrockClient || new DirectBedrockClient();\n    this.mcpRouter = mcpRouter || new MCPRouter();\n    this.logger = console;\n  }\n\n  /**\n   * Get default configuration\n   */\n  private getDefaultConfig(\n    config?: Partial<SecurityAssessmentConfig>\n  ): SecurityAssessmentConfig {\n    return {\n      assessmentInterval: 300000, // 5 minutes\n      threatScanInterval: 60000, // 1 minute\n      complianceCheckInterval: 600000, // 10 minutes\n      enableContinuousMonitoring: true,\n      enableThreatDetection: true,\n      enableVulnerabilityScanning: true,\n      alertThresholds: {\n        criticalSecurityScore: 40,\n        warningSecurityScore: 70,\n        maxActiveThreats: 5,\n      },\n      ...config,\n    };\n  }\n\n  /**\n   * Start security posture monitoring\n   */\n  async startMonitoring(): Promise<void> {\n    if (this.monitoringActive) {\n      this.logger.log(\"Security posture monitoring already active\");\n      return;\n    }\n\n    this.logger.log(\"Starting security posture monitoring\");\n    this.monitoringActive = true;\n\n    // Log monitoring start to audit trail\n    await this.auditTrail.logSupportModeEvent(\n      \"security_monitoring_started\",\n      {\n        timestamp: new Date(),\n        config: this.config,\n      },\n      \"system\"\n    );\n\n    // Perform initial assessment\n    await this.assessSecurityPosture();\n  }\n\n  /**\n   * Stop security posture monitoring\n   */\n  async stopMonitoring(): Promise<void> {\n    if (!this.monitoringActive) {\n      this.logger.log(\"Security posture monitoring not active\");\n      return;\n    }\n\n    this.logger.log(\"Stopping security posture monitoring\");\n    this.monitoringActive = false;\n\n    // Log monitoring stop to audit trail\n    await this.auditTrail.logSupportModeEvent(\n      \"security_monitoring_stopped\",\n      {\n        timestamp: new Date(),\n        metrics: this.securityMetrics,\n      },\n      \"system\"\n    );\n  }\n\n  /**\n   * Assess overall security posture\n   */\n  async assessSecurityPosture(): Promise<SecurityPostureStatus> {\n    this.logger.log(\"Assessing security posture for hybrid architecture\");\n\n    try {\n      // Increment assessment counter\n      this.securityMetrics.totalAssessments++;\n\n      // Assess MCP route security\n      const mcpSecurity = await this.assessRouteSecurityStatus(\"mcp\");\n\n      // Assess direct Bedrock route security\n      const directBedrockSecurity = await this.assessRouteSecurityStatus(\n        \"direct_bedrock\"\n      );\n\n      // Scan for active threats\n      const threats = await this.scanForThreats();\n\n      // Check compliance status\n      const complianceStatus = await this.checkComplianceStatus();\n\n      // Calculate overall security score\n      const overallScore = this.calculateOverallSecurityScore(\n        mcpSecurity,\n        directBedrockSecurity,\n        threats,\n        complianceStatus\n      );\n\n      // Determine threat level\n      const threatLevel = this.determineThreatLevel(overallScore, threats);\n\n      // Generate recommendations\n      const recommendations = await this.generateSecurityRecommendations(\n        mcpSecurity,\n        directBedrockSecurity,\n        threats,\n        complianceStatus\n      );\n\n      const status: SecurityPostureStatus = {\n        overall: {\n          securityScore: overallScore,\n          threatLevel,\n          lastAssessment: new Date(),\n          complianceStatus: complianceStatus.overall,\n        },\n        routes: {\n          mcp: mcpSecurity,\n          directBedrock: directBedrockSecurity,\n        },\n        threats: {\n          active: threats.filter((t) => t.status === \"active\"),\n          mitigated: threats.filter((t) => t.status === \"mitigated\"),\n          totalDetected: threats.length,\n        },\n        compliance: complianceStatus.metrics,\n        recommendations,\n      };\n\n      this.lastAssessment = new Date();\n\n      // Log assessment to audit trail\n      await this.auditTrail.logSupportModeEvent(\n        \"security_assessment_completed\",\n        {\n          timestamp: new Date(),\n          securityScore: overallScore,\n          threatLevel,\n          activeThreats: threats.filter((t) => t.status === \"active\").length,\n        },\n        \"system\"\n      );\n\n      return status;\n    } catch (error) {\n      this.logger.error(\"Security assessment failed:\", error);\n\n      // Log failure to audit trail\n      await this.auditTrail.logSupportModeEvent(\n        \"security_assessment_failed\",\n        {\n          timestamp: new Date(),\n          error: error instanceof Error ? error.message : String(error),\n        },\n        \"system\"\n      );\n\n      throw error;\n    }\n  }\n\n  /**\n   * Assess security status for a specific route\n   */\n  private async assessRouteSecurityStatus(\n    route: \"mcp\" | \"direct_bedrock\"\n  ): Promise<RouteSecurityStatus> {\n    this.logger.log(`Assessing security status for ${route} route`);\n\n    // Check encryption status\n    const encryptionStatus = await this.checkEncryptionStatus(route);\n\n    // Check access control\n    const accessControlStatus = await this.checkAccessControlStatus(route);\n\n    // Scan for vulnerabilities\n    const vulnerabilities = await this.scanForVulnerabilities(route);\n\n    // Check threat detection\n    const threatDetectionEnabled = await this.isThreatDetectionEnabled(route);\n\n    // Calculate route security score\n    const securityScore = this.calculateRouteSecurityScore(\n      encryptionStatus,\n      accessControlStatus,\n      vulnerabilities,\n      threatDetectionEnabled\n    );\n\n    return {\n      isSecure: securityScore >= 70 && vulnerabilities.length === 0,\n      securityScore,\n      lastCheck: new Date(),\n      vulnerabilities,\n      encryptionStatus,\n      accessControlStatus,\n      threatDetectionEnabled,\n    };\n  }\n\n  /**\n   * Check encryption status for a route\n   */\n  private async checkEncryptionStatus(\n    route: \"mcp\" | \"direct_bedrock\"\n  ): Promise<\"enabled\" | \"partial\" | \"disabled\"> {\n    // Check if encryption is enabled for the route\n    if (route === \"direct_bedrock\") {\n      // Direct Bedrock uses AWS encryption by default\n      return \"enabled\";\n    } else {\n      // MCP encryption depends on configuration\n      const mcpEncryption = await this.featureFlags.getFlag(\n        \"mcp_encryption_enabled\",\n        true\n      );\n      return mcpEncryption ? \"enabled\" : \"partial\";\n    }\n  }\n\n  /**\n   * Check access control status for a route\n   */\n  private async checkAccessControlStatus(\n    route: \"mcp\" | \"direct_bedrock\"\n  ): Promise<\"strict\" | \"moderate\" | \"weak\"> {\n    // Check access control configuration\n    if (route === \"direct_bedrock\") {\n      // Direct Bedrock has strict IAM-based access control\n      return \"strict\";\n    } else {\n      // MCP access control depends on configuration\n      const mcpAccessControl = await this.featureFlags.getFlag(\n        \"mcp_access_control_strict\",\n        true\n      );\n      return mcpAccessControl ? \"strict\" : \"moderate\";\n    }\n  }\n\n  /**\n   * Scan for vulnerabilities in a route\n   */\n  private async scanForVulnerabilities(\n    route: \"mcp\" | \"direct_bedrock\"\n  ): Promise<SecurityVulnerability[]> {\n    const vulnerabilities: SecurityVulnerability[] = [];\n\n    // Check for common vulnerabilities\n    if (route === \"mcp\") {\n      // Check MCP-specific vulnerabilities\n      const mcpHealth = await this.mcpRouter.checkHealth();\n      if (!mcpHealth.isHealthy) {\n        vulnerabilities.push({\n          id: `mcp-health-${Date.now()}`,\n          severity: \"medium\",\n          description: \"MCP router health check failed\",\n          component: \"mcp-router\",\n          discoveredAt: new Date(),\n          patchAvailable: false,\n          remediationSteps: [\n            \"Check MCP router configuration\",\n            \"Verify network connectivity\",\n            \"Review error logs\",\n          ],\n        });\n      }\n    } else {\n      // Check direct Bedrock vulnerabilities\n      const bedrockHealth = await this.directBedrockClient.checkHealth();\n      if (!bedrockHealth.isHealthy) {\n        vulnerabilities.push({\n          id: `bedrock-health-${Date.now()}`,\n          severity: \"medium\",\n          description: \"Direct Bedrock client health check failed\",\n          component: \"direct-bedrock-client\",\n          discoveredAt: new Date(),\n          patchAvailable: false,\n          remediationSteps: [\n            \"Check AWS credentials\",\n            \"Verify Bedrock service availability\",\n            \"Review circuit breaker status\",\n          ],\n        });\n      }\n    }\n\n    return vulnerabilities;\n  }\n\n  /**\n   * Check if threat detection is enabled for a route\n   */\n  private async isThreatDetectionEnabled(\n    route: \"mcp\" | \"direct_bedrock\"\n  ): Promise<boolean> {\n    return this.config.enableThreatDetection;\n  }\n\n  /**\n   * Calculate security score for a route\n   */\n  private calculateRouteSecurityScore(\n    encryptionStatus: \"enabled\" | \"partial\" | \"disabled\",\n    accessControlStatus: \"strict\" | \"moderate\" | \"weak\",\n    vulnerabilities: SecurityVulnerability[],\n    threatDetectionEnabled: boolean\n  ): number {\n    let score = 100;\n\n    // Deduct points for encryption issues\n    if (encryptionStatus === \"partial\") score -= 15;\n    if (encryptionStatus === \"disabled\") score -= 40;\n\n    // Deduct points for access control issues\n    if (accessControlStatus === \"moderate\") score -= 10;\n    if (accessControlStatus === \"weak\") score -= 30;\n\n    // Deduct points for vulnerabilities\n    vulnerabilities.forEach((vuln) => {\n      switch (vuln.severity) {\n        case \"critical\":\n          score -= 20;\n          break;\n        case \"high\":\n          score -= 15;\n          break;\n        case \"medium\":\n          score -= 10;\n          break;\n        case \"low\":\n          score -= 5;\n          break;\n      }\n    });\n\n    // Deduct points if threat detection is disabled\n    if (!threatDetectionEnabled) score -= 10;\n\n    return Math.max(0, score);\n  }\n\n  /**\n   * Scan for active security threats\n   */\n  private async scanForThreats(): Promise<SecurityThreat[]> {\n    const threats: SecurityThreat[] = [];\n\n    // Check for unauthorized access attempts\n    const unauthorizedAccess = await this.detectUnauthorizedAccess();\n    if (unauthorizedAccess) {\n      threats.push(unauthorizedAccess);\n    }\n\n    // Check for compliance violations\n    const complianceViolations = await this.detectComplianceViolations();\n    threats.push(...complianceViolations);\n\n    // Check for misconfiguration\n    const misconfigurations = await this.detectMisconfigurations();\n    threats.push(...misconfigurations);\n\n    // Update threat metrics\n    this.securityMetrics.threatsDetected += threats.filter(\n      (t) => t.status === \"active\"\n    ).length;\n\n    return threats;\n  }\n\n  /**\n   * Detect unauthorized access attempts\n   */\n  private async detectUnauthorizedAccess(): Promise<SecurityThreat | null> {\n    // Check circuit breaker for repeated failures (potential attack)\n    const circuitBreakerOpen = this.circuitBreaker.isOpen(\"bedrock\" as any);\n\n    if (circuitBreakerOpen) {\n      return {\n        id: `unauthorized-access-${Date.now()}`,\n        type: \"unauthorized_access\",\n        severity: \"high\",\n        description:\n          \"Circuit breaker open - potential unauthorized access attempts detected\",\n        detectedAt: new Date(),\n        affectedRoute: \"direct_bedrock\",\n        affectedComponents: [\"circuit-breaker\", \"direct-bedrock-client\"],\n        status: \"active\",\n        mitigationSteps: [\n          \"Review access logs\",\n          \"Check for suspicious IP addresses\",\n          \"Verify authentication mechanisms\",\n          \"Reset circuit breaker if false positive\",\n        ],\n        estimatedImpact: \"Service degradation, potential security breach\",\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Detect compliance violations\n   */\n  private async detectComplianceViolations(): Promise<SecurityThreat[]> {\n    const threats: SecurityThreat[] = [];\n\n    // Check GDPR compliance\n    const gdprCompliant = await this.gdprValidator.validateHybridRouting({\n      route: \"direct_bedrock\",\n      operation: \"security_scan\",\n      dataTypes: [\"system_metrics\"],\n      userConsent: true,\n    });\n\n    if (!gdprCompliant.isCompliant) {\n      threats.push({\n        id: `gdpr-violation-${Date.now()}`,\n        type: \"compliance_violation\",\n        severity: \"critical\",\n        description: `GDPR compliance violation detected: ${gdprCompliant.violations.join(\n          \", \"\n        )}`,\n        detectedAt: new Date(),\n        affectedRoute: \"both\",\n        affectedComponents: [\"gdpr-validator\", \"data-processing\"],\n        status: \"active\",\n        mitigationSteps: gdprCompliant.recommendations,\n        estimatedImpact: \"Legal liability, regulatory fines\",\n      });\n\n      this.securityMetrics.complianceViolations++;\n    }\n\n    return threats;\n  }\n\n  /**\n   * Detect system misconfigurations\n   */\n  private async detectMisconfigurations(): Promise<SecurityThreat[]> {\n    const threats: SecurityThreat[] = [];\n\n    // Check feature flag configuration\n    const flagValidation = await this.featureFlags.validateAllFlags();\n    if (!flagValidation.isValid) {\n      threats.push({\n        id: `misconfiguration-${Date.now()}`,\n        type: \"misconfiguration\",\n        severity: \"medium\",\n        description: `Feature flag misconfiguration detected: ${flagValidation.errors.join(\n          \", \"\n        )}`,\n        detectedAt: new Date(),\n        affectedRoute: \"both\",\n        affectedComponents: [\"feature-flags\"],\n        status: \"active\",\n        mitigationSteps: [\n          \"Review feature flag configuration\",\n          \"Fix validation errors\",\n          \"Test configuration changes\",\n        ],\n        estimatedImpact: \"System instability, unexpected behavior\",\n      });\n    }\n\n    return threats;\n  }\n\n  /**\n   * Check compliance status across all areas\n   */\n  private async checkComplianceStatus(): Promise<{\n    overall: \"compliant\" | \"warning\" | \"non-compliant\";\n    metrics: {\n      gdpr: ComplianceMetrics;\n      dataResidency: ComplianceMetrics;\n      auditTrail: ComplianceMetrics;\n    };\n  }> {\n    // Check GDPR compliance\n    const gdprMetrics = await this.checkGDPRCompliance();\n\n    // Check data residency compliance\n    const dataResidencyMetrics = await this.checkDataResidencyCompliance();\n\n    // Check audit trail compliance\n    const auditTrailMetrics = await this.checkAuditTrailCompliance();\n\n    // Determine overall compliance status\n    const allCompliant =\n      gdprMetrics.isCompliant &&\n      dataResidencyMetrics.isCompliant &&\n      auditTrailMetrics.isCompliant;\n\n    const anyNonCompliant =\n      !gdprMetrics.isCompliant ||\n      !dataResidencyMetrics.isCompliant ||\n      !auditTrailMetrics.isCompliant;\n\n    const overall: \"compliant\" | \"warning\" | \"non-compliant\" = allCompliant\n      ? \"compliant\"\n      : anyNonCompliant\n      ? \"non-compliant\"\n      : \"warning\";\n\n    return {\n      overall,\n      metrics: {\n        gdpr: gdprMetrics,\n        dataResidency: dataResidencyMetrics,\n        auditTrail: auditTrailMetrics,\n      },\n    };\n  }\n\n  /**\n   * Check GDPR compliance\n   */\n  private async checkGDPRCompliance(): Promise<ComplianceMetrics> {\n    const validation = await this.gdprValidator.validateHybridRouting({\n      route: \"both\",\n      operation: \"compliance_check\",\n      dataTypes: [\"all\"],\n      userConsent: true,\n    });\n\n    const violations: ComplianceViolation[] = validation.violations.map(\n      (v, index) => ({\n        id: `gdpr-violation-${index}`,\n        type: \"gdpr\",\n        severity: \"high\",\n        description: v,\n        detectedAt: new Date(),\n        affectedData: [\"user_data\", \"system_data\"],\n        remediationRequired: true,\n        remediationSteps: validation.recommendations,\n      })\n    );\n\n    return {\n      isCompliant: validation.isCompliant,\n      complianceScore: validation.isCompliant ? 100 : 50,\n      violations,\n      lastAudit: new Date(),\n      nextAuditDue: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n    };\n  }\n\n  /**\n   * Check data residency compliance\n   */\n  private async checkDataResidencyCompliance(): Promise<ComplianceMetrics> {\n    // Check if data residency requirements are met\n    const euRegion = process.env.AWS_REGION === \"eu-central-1\";\n\n    return {\n      isCompliant: euRegion,\n      complianceScore: euRegion ? 100 : 0,\n      violations: euRegion\n        ? []\n        : [\n            {\n              id: \"data-residency-violation\",\n              type: \"data_residency\",\n              severity: \"critical\",\n              description: \"Data not stored in EU region\",\n              detectedAt: new Date(),\n              affectedData: [\"all\"],\n              remediationRequired: true,\n              remediationSteps: [\n                \"Configure AWS region to eu-central-1\",\n                \"Migrate existing data to EU region\",\n                \"Update application configuration\",\n              ],\n            },\n          ],\n      lastAudit: new Date(),\n      nextAuditDue: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000), // 90 days\n    };\n  }\n\n  /**\n   * Check audit trail compliance\n   */\n  private async checkAuditTrailCompliance(): Promise<ComplianceMetrics> {\n    // Check if audit trail is properly configured\n    const auditTrailEnabled = true; // Audit trail is always enabled\n\n    return {\n      isCompliant: auditTrailEnabled,\n      complianceScore: auditTrailEnabled ? 100 : 0,\n      violations: [],\n      lastAudit: new Date(),\n      nextAuditDue: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n    };\n  }\n\n  /**\n   * Calculate overall security score\n   */\n  private calculateOverallSecurityScore(\n    mcpSecurity: RouteSecurityStatus,\n    directBedrockSecurity: RouteSecurityStatus,\n    threats: SecurityThreat[],\n    complianceStatus: {\n      overall: \"compliant\" | \"warning\" | \"non-compliant\";\n      metrics: any;\n    }\n  ): number {\n    // Weight factors\n    const routeWeight = 0.4; // 40% for route security\n    const threatWeight = 0.3; // 30% for threat status\n    const complianceWeight = 0.3; // 30% for compliance\n\n    // Calculate route score (average of both routes)\n    const routeScore =\n      (mcpSecurity.securityScore + directBedrockSecurity.securityScore) / 2;\n\n    // Calculate threat score\n    const activeThreats = threats.filter((t) => t.status === \"active\");\n    const criticalThreats = activeThreats.filter(\n      (t) => t.severity === \"critical\"\n    ).length;\n    const highThreats = activeThreats.filter(\n      (t) => t.severity === \"high\"\n    ).length;\n    const threatScore = Math.max(\n      0,\n      100 -\n        criticalThreats * 30 -\n        highThreats * 15 -\n        (activeThreats.length - criticalThreats - highThreats) * 5\n    );\n\n    // Calculate compliance score\n    const complianceScore =\n      complianceStatus.overall === \"compliant\"\n        ? 100\n        : complianceStatus.overall === \"warning\"\n        ? 70\n        : 40;\n\n    // Calculate weighted overall score\n    const overallScore =\n      routeScore * routeWeight +\n      threatScore * threatWeight +\n      complianceScore * complianceWeight;\n\n    return Math.round(overallScore);\n  }\n\n  /**\n   * Determine threat level based on score and threats\n   */\n  private determineThreatLevel(\n    securityScore: number,\n    threats: SecurityThreat[]\n  ): \"low\" | \"medium\" | \"high\" | \"critical\" {\n    const activeThreats = threats.filter((t) => t.status === \"active\");\n    const criticalThreats = activeThreats.filter(\n      (t) => t.severity === \"critical\"\n    );\n\n    if (criticalThreats.length > 0 || securityScore < 40) {\n      return \"critical\";\n    } else if (securityScore < 60 || activeThreats.length > 3) {\n      return \"high\";\n    } else if (securityScore < 80 || activeThreats.length > 0) {\n      return \"medium\";\n    } else {\n      return \"low\";\n    }\n  }\n\n  /**\n   * Generate security recommendations\n   */\n  private async generateSecurityRecommendations(\n    mcpSecurity: RouteSecurityStatus,\n    directBedrockSecurity: RouteSecurityStatus,\n    threats: SecurityThreat[],\n    complianceStatus: any\n  ): Promise<{\n    immediate: SecurityRecommendation[];\n    shortTerm: SecurityRecommendation[];\n    longTerm: SecurityRecommendation[];\n  }> {\n    const immediate: SecurityRecommendation[] = [];\n    const shortTerm: SecurityRecommendation[] = [];\n    const longTerm: SecurityRecommendation[] = [];\n\n    // Immediate recommendations for critical threats\n    const criticalThreats = threats.filter(\n      (t) => t.status === \"active\" && t.severity === \"critical\"\n    );\n    if (criticalThreats.length > 0) {\n      immediate.push({\n        id: \"mitigate-critical-threats\",\n        priority: \"critical\",\n        category: \"monitoring\",\n        description: `Mitigate ${criticalThreats.length} critical security threats immediately`,\n        expectedImpact: \"Prevent security breaches and data loss\",\n        implementationSteps: criticalThreats.flatMap((t) => t.mitigationSteps),\n        estimatedEffort: \"high\",\n      });\n    }\n\n    // Recommendations for route security\n    if (mcpSecurity.securityScore < 70) {\n      shortTerm.push({\n        id: \"improve-mcp-security\",\n        priority: \"high\",\n        category: \"configuration\",\n        description: \"Improve MCP route security configuration\",\n        expectedImpact: \"Enhanced security for MCP routing path\",\n        implementationSteps: [\n          \"Enable strict access control\",\n          \"Configure encryption\",\n          \"Enable threat detection\",\n          \"Review and fix vulnerabilities\",\n        ],\n        estimatedEffort: \"medium\",\n      });\n    }\n\n    if (directBedrockSecurity.securityScore < 70) {\n      shortTerm.push({\n        id: \"improve-bedrock-security\",\n        priority: \"high\",\n        category: \"configuration\",\n        description: \"Improve direct Bedrock route security configuration\",\n        expectedImpact: \"Enhanced security for direct Bedrock path\",\n        implementationSteps: [\n          \"Review IAM policies\",\n          \"Enable AWS CloudTrail\",\n          \"Configure VPC endpoints\",\n          \"Review and fix vulnerabilities\",\n        ],\n        estimatedEffort: \"medium\",\n      });\n    }\n\n    // Compliance recommendations\n    if (complianceStatus.overall !== \"compliant\") {\n      immediate.push({\n        id: \"fix-compliance-violations\",\n        priority: \"critical\",\n        category: \"compliance\",\n        description:\n          \"Fix compliance violations to meet regulatory requirements\",\n        expectedImpact: \"Avoid legal liability and regulatory fines\",\n        implementationSteps: [\n          \"Review compliance violations\",\n          \"Implement remediation steps\",\n          \"Verify compliance status\",\n          \"Document compliance measures\",\n        ],\n        estimatedEffort: \"high\",\n      });\n    }\n\n    // Long-term recommendations\n    longTerm.push({\n      id: \"implement-continuous-monitoring\",\n      priority: \"medium\",\n      category: \"monitoring\",\n      description: \"Implement continuous security monitoring and alerting\",\n      expectedImpact: \"Proactive threat detection and faster response times\",\n      implementationSteps: [\n        \"Set up automated security scans\",\n        \"Configure real-time alerting\",\n        \"Implement security dashboards\",\n        \"Establish incident response procedures\",\n      ],\n      estimatedEffort: \"high\",\n    });\n\n    return { immediate, shortTerm, longTerm };\n  }\n\n  /**\n   * Get current security metrics\n   */\n  getSecurityMetrics(): typeof this.securityMetrics {\n    return { ...this.securityMetrics };\n  }\n\n  /**\n   * Get monitoring status\n   */\n  isMonitoringActive(): boolean {\n    return this.monitoringActive;\n  }\n\n  /**\n   * Get last assessment time\n   */\n  getLastAssessmentTime(): Date | null {\n    return this.lastAssessment;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "856b8625cffd85e323150dfb2964307ee9337fac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19w8k4ary5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19w8k4ary5();
cov_19w8k4ary5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_19w8k4ary5().s[1]++;
exports.SecurityPostureMonitor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_19w8k4ary5().s[2]++, require("tslib"));
/**
 * Security Posture Monitor Implementation
 */
class SecurityPostureMonitor {
  constructor(config, featureFlags, auditTrail, circuitBreaker, gdprValidator, providerCompliance, directBedrockClient, mcpRouter) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[0]++;
    cov_19w8k4ary5().s[3]++;
    // Monitoring state
    this.monitoringActive = false;
    /* istanbul ignore next */
    cov_19w8k4ary5().s[4]++;
    this.lastAssessment = null;
    /* istanbul ignore next */
    cov_19w8k4ary5().s[5]++;
    this.detectedThreats = new Map();
    /* istanbul ignore next */
    cov_19w8k4ary5().s[6]++;
    this.securityMetrics = {
      totalAssessments: 0,
      threatsDetected: 0,
      threatsMitigated: 0,
      complianceViolations: 0
    };
    /* istanbul ignore next */
    cov_19w8k4ary5().s[7]++;
    this.config = this.getDefaultConfig(config);
    /* istanbul ignore next */
    cov_19w8k4ary5().s[8]++;
    this.featureFlags =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[0][0]++, featureFlags) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[0][1]++, new AiFeatureFlags());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[9]++;
    this.auditTrail =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[1][0]++, auditTrail) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[1][1]++, new AuditTrailSystem());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[10]++;
    this.circuitBreaker =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[2][0]++, circuitBreaker) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[2][1]++, new CircuitBreaker());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[11]++;
    this.gdprValidator =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[3][0]++, gdprValidator) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[3][1]++, new GDPRHybridComplianceValidator());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[12]++;
    this.providerCompliance =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[4][0]++, providerCompliance) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[4][1]++, new ProviderAgreementCompliance());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[13]++;
    this.directBedrockClient =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[5][0]++, directBedrockClient) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[5][1]++, new DirectBedrockClient());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[14]++;
    this.mcpRouter =
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[6][0]++, mcpRouter) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[6][1]++, new MCPRouter());
    /* istanbul ignore next */
    cov_19w8k4ary5().s[15]++;
    this.logger = console;
  }
  /**
   * Get default configuration
   */
  getDefaultConfig(config) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[1]++;
    cov_19w8k4ary5().s[16]++;
    return Object.assign({
      assessmentInterval: 300000,
      threatScanInterval: 60000,
      complianceCheckInterval: 600000,
      enableContinuousMonitoring: true,
      enableThreatDetection: true,
      enableVulnerabilityScanning: true,
      alertThresholds: {
        criticalSecurityScore: 40,
        warningSecurityScore: 70,
        maxActiveThreats: 5
      }
    }, config);
  }
  /**
   * Start security posture monitoring
   */
  startMonitoring() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[2]++;
    cov_19w8k4ary5().s[17]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[3]++;
      cov_19w8k4ary5().s[18]++;
      if (this.monitoringActive) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[7][0]++;
        cov_19w8k4ary5().s[19]++;
        this.logger.log("Security posture monitoring already active");
        /* istanbul ignore next */
        cov_19w8k4ary5().s[20]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[7][1]++;
      }
      cov_19w8k4ary5().s[21]++;
      this.logger.log("Starting security posture monitoring");
      /* istanbul ignore next */
      cov_19w8k4ary5().s[22]++;
      this.monitoringActive = true;
      // Log monitoring start to audit trail
      /* istanbul ignore next */
      cov_19w8k4ary5().s[23]++;
      yield this.auditTrail.logSupportModeEvent("security_monitoring_started", {
        timestamp: new Date(),
        config: this.config
      }, "system");
      // Perform initial assessment
      /* istanbul ignore next */
      cov_19w8k4ary5().s[24]++;
      yield this.assessSecurityPosture();
    });
  }
  /**
   * Stop security posture monitoring
   */
  stopMonitoring() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[4]++;
    cov_19w8k4ary5().s[25]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[5]++;
      cov_19w8k4ary5().s[26]++;
      if (!this.monitoringActive) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[8][0]++;
        cov_19w8k4ary5().s[27]++;
        this.logger.log("Security posture monitoring not active");
        /* istanbul ignore next */
        cov_19w8k4ary5().s[28]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[8][1]++;
      }
      cov_19w8k4ary5().s[29]++;
      this.logger.log("Stopping security posture monitoring");
      /* istanbul ignore next */
      cov_19w8k4ary5().s[30]++;
      this.monitoringActive = false;
      // Log monitoring stop to audit trail
      /* istanbul ignore next */
      cov_19w8k4ary5().s[31]++;
      yield this.auditTrail.logSupportModeEvent("security_monitoring_stopped", {
        timestamp: new Date(),
        metrics: this.securityMetrics
      }, "system");
    });
  }
  /**
   * Assess overall security posture
   */
  assessSecurityPosture() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[6]++;
    cov_19w8k4ary5().s[32]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[7]++;
      cov_19w8k4ary5().s[33]++;
      this.logger.log("Assessing security posture for hybrid architecture");
      /* istanbul ignore next */
      cov_19w8k4ary5().s[34]++;
      try {
        /* istanbul ignore next */
        cov_19w8k4ary5().s[35]++;
        // Increment assessment counter
        this.securityMetrics.totalAssessments++;
        // Assess MCP route security
        const mcpSecurity =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[36]++, yield this.assessRouteSecurityStatus("mcp"));
        // Assess direct Bedrock route security
        const directBedrockSecurity =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[37]++, yield this.assessRouteSecurityStatus("direct_bedrock"));
        // Scan for active threats
        const threats =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[38]++, yield this.scanForThreats());
        // Check compliance status
        const complianceStatus =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[39]++, yield this.checkComplianceStatus());
        // Calculate overall security score
        const overallScore =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[40]++, this.calculateOverallSecurityScore(mcpSecurity, directBedrockSecurity, threats, complianceStatus));
        // Determine threat level
        const threatLevel =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[41]++, this.determineThreatLevel(overallScore, threats));
        // Generate recommendations
        const recommendations =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[42]++, yield this.generateSecurityRecommendations(mcpSecurity, directBedrockSecurity, threats, complianceStatus));
        const status =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[43]++, {
          overall: {
            securityScore: overallScore,
            threatLevel,
            lastAssessment: new Date(),
            complianceStatus: complianceStatus.overall
          },
          routes: {
            mcp: mcpSecurity,
            directBedrock: directBedrockSecurity
          },
          threats: {
            active: threats.filter(t => {
              /* istanbul ignore next */
              cov_19w8k4ary5().f[8]++;
              cov_19w8k4ary5().s[44]++;
              return t.status === "active";
            }),
            mitigated: threats.filter(t => {
              /* istanbul ignore next */
              cov_19w8k4ary5().f[9]++;
              cov_19w8k4ary5().s[45]++;
              return t.status === "mitigated";
            }),
            totalDetected: threats.length
          },
          compliance: complianceStatus.metrics,
          recommendations
        });
        /* istanbul ignore next */
        cov_19w8k4ary5().s[46]++;
        this.lastAssessment = new Date();
        // Log assessment to audit trail
        /* istanbul ignore next */
        cov_19w8k4ary5().s[47]++;
        yield this.auditTrail.logSupportModeEvent("security_assessment_completed", {
          timestamp: new Date(),
          securityScore: overallScore,
          threatLevel,
          activeThreats: threats.filter(t => {
            /* istanbul ignore next */
            cov_19w8k4ary5().f[10]++;
            cov_19w8k4ary5().s[48]++;
            return t.status === "active";
          }).length
        }, "system");
        /* istanbul ignore next */
        cov_19w8k4ary5().s[49]++;
        return status;
      } catch (error) {
        /* istanbul ignore next */
        cov_19w8k4ary5().s[50]++;
        this.logger.error("Security assessment failed:", error);
        // Log failure to audit trail
        /* istanbul ignore next */
        cov_19w8k4ary5().s[51]++;
        yield this.auditTrail.logSupportModeEvent("security_assessment_failed", {
          timestamp: new Date(),
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_19w8k4ary5().b[9][0]++, error.message) :
          /* istanbul ignore next */
          (cov_19w8k4ary5().b[9][1]++, String(error))
        }, "system");
        /* istanbul ignore next */
        cov_19w8k4ary5().s[52]++;
        throw error;
      }
    });
  }
  /**
   * Assess security status for a specific route
   */
  assessRouteSecurityStatus(route) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[11]++;
    cov_19w8k4ary5().s[53]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[12]++;
      cov_19w8k4ary5().s[54]++;
      this.logger.log(`Assessing security status for ${route} route`);
      // Check encryption status
      const encryptionStatus =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[55]++, yield this.checkEncryptionStatus(route));
      // Check access control
      const accessControlStatus =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[56]++, yield this.checkAccessControlStatus(route));
      // Scan for vulnerabilities
      const vulnerabilities =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[57]++, yield this.scanForVulnerabilities(route));
      // Check threat detection
      const threatDetectionEnabled =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[58]++, yield this.isThreatDetectionEnabled(route));
      // Calculate route security score
      const securityScore =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[59]++, this.calculateRouteSecurityScore(encryptionStatus, accessControlStatus, vulnerabilities, threatDetectionEnabled));
      /* istanbul ignore next */
      cov_19w8k4ary5().s[60]++;
      return {
        isSecure:
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[10][0]++, securityScore >= 70) &&
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[10][1]++, vulnerabilities.length === 0),
        securityScore,
        lastCheck: new Date(),
        vulnerabilities,
        encryptionStatus,
        accessControlStatus,
        threatDetectionEnabled
      };
    });
  }
  /**
   * Check encryption status for a route
   */
  checkEncryptionStatus(route) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[13]++;
    cov_19w8k4ary5().s[61]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[14]++;
      cov_19w8k4ary5().s[62]++;
      // Check if encryption is enabled for the route
      if (route === "direct_bedrock") {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[11][0]++;
        cov_19w8k4ary5().s[63]++;
        // Direct Bedrock uses AWS encryption by default
        return "enabled";
      } else {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[11][1]++;
        // MCP encryption depends on configuration
        const mcpEncryption =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[64]++, yield this.featureFlags.getFlag("mcp_encryption_enabled", true));
        /* istanbul ignore next */
        cov_19w8k4ary5().s[65]++;
        return mcpEncryption ?
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[12][0]++, "enabled") :
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[12][1]++, "partial");
      }
    });
  }
  /**
   * Check access control status for a route
   */
  checkAccessControlStatus(route) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[15]++;
    cov_19w8k4ary5().s[66]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[16]++;
      cov_19w8k4ary5().s[67]++;
      // Check access control configuration
      if (route === "direct_bedrock") {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[13][0]++;
        cov_19w8k4ary5().s[68]++;
        // Direct Bedrock has strict IAM-based access control
        return "strict";
      } else {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[13][1]++;
        // MCP access control depends on configuration
        const mcpAccessControl =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[69]++, yield this.featureFlags.getFlag("mcp_access_control_strict", true));
        /* istanbul ignore next */
        cov_19w8k4ary5().s[70]++;
        return mcpAccessControl ?
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[14][0]++, "strict") :
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[14][1]++, "moderate");
      }
    });
  }
  /**
   * Scan for vulnerabilities in a route
   */
  scanForVulnerabilities(route) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[17]++;
    cov_19w8k4ary5().s[71]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[18]++;
      const vulnerabilities =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[72]++, []);
      // Check for common vulnerabilities
      /* istanbul ignore next */
      cov_19w8k4ary5().s[73]++;
      if (route === "mcp") {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[15][0]++;
        // Check MCP-specific vulnerabilities
        const mcpHealth =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[74]++, yield this.mcpRouter.checkHealth());
        /* istanbul ignore next */
        cov_19w8k4ary5().s[75]++;
        if (!mcpHealth.isHealthy) {
          /* istanbul ignore next */
          cov_19w8k4ary5().b[16][0]++;
          cov_19w8k4ary5().s[76]++;
          vulnerabilities.push({
            id: `mcp-health-${Date.now()}`,
            severity: "medium",
            description: "MCP router health check failed",
            component: "mcp-router",
            discoveredAt: new Date(),
            patchAvailable: false,
            remediationSteps: ["Check MCP router configuration", "Verify network connectivity", "Review error logs"]
          });
        } else
        /* istanbul ignore next */
        {
          cov_19w8k4ary5().b[16][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[15][1]++;
        // Check direct Bedrock vulnerabilities
        const bedrockHealth =
        /* istanbul ignore next */
        (cov_19w8k4ary5().s[77]++, yield this.directBedrockClient.checkHealth());
        /* istanbul ignore next */
        cov_19w8k4ary5().s[78]++;
        if (!bedrockHealth.isHealthy) {
          /* istanbul ignore next */
          cov_19w8k4ary5().b[17][0]++;
          cov_19w8k4ary5().s[79]++;
          vulnerabilities.push({
            id: `bedrock-health-${Date.now()}`,
            severity: "medium",
            description: "Direct Bedrock client health check failed",
            component: "direct-bedrock-client",
            discoveredAt: new Date(),
            patchAvailable: false,
            remediationSteps: ["Check AWS credentials", "Verify Bedrock service availability", "Review circuit breaker status"]
          });
        } else
        /* istanbul ignore next */
        {
          cov_19w8k4ary5().b[17][1]++;
        }
      }
      /* istanbul ignore next */
      cov_19w8k4ary5().s[80]++;
      return vulnerabilities;
    });
  }
  /**
   * Check if threat detection is enabled for a route
   */
  isThreatDetectionEnabled(route) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[19]++;
    cov_19w8k4ary5().s[81]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[20]++;
      cov_19w8k4ary5().s[82]++;
      return this.config.enableThreatDetection;
    });
  }
  /**
   * Calculate security score for a route
   */
  calculateRouteSecurityScore(encryptionStatus, accessControlStatus, vulnerabilities, threatDetectionEnabled) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[21]++;
    let score =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[83]++, 100);
    // Deduct points for encryption issues
    /* istanbul ignore next */
    cov_19w8k4ary5().s[84]++;
    if (encryptionStatus === "partial") {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[18][0]++;
      cov_19w8k4ary5().s[85]++;
      score -= 15;
    } else
    /* istanbul ignore next */
    {
      cov_19w8k4ary5().b[18][1]++;
    }
    cov_19w8k4ary5().s[86]++;
    if (encryptionStatus === "disabled") {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[19][0]++;
      cov_19w8k4ary5().s[87]++;
      score -= 40;
    } else
    /* istanbul ignore next */
    {
      cov_19w8k4ary5().b[19][1]++;
    }
    // Deduct points for access control issues
    cov_19w8k4ary5().s[88]++;
    if (accessControlStatus === "moderate") {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[20][0]++;
      cov_19w8k4ary5().s[89]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_19w8k4ary5().b[20][1]++;
    }
    cov_19w8k4ary5().s[90]++;
    if (accessControlStatus === "weak") {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[21][0]++;
      cov_19w8k4ary5().s[91]++;
      score -= 30;
    } else
    /* istanbul ignore next */
    {
      cov_19w8k4ary5().b[21][1]++;
    }
    // Deduct points for vulnerabilities
    cov_19w8k4ary5().s[92]++;
    vulnerabilities.forEach(vuln => {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[22]++;
      cov_19w8k4ary5().s[93]++;
      switch (vuln.severity) {
        case "critical":
          /* istanbul ignore next */
          cov_19w8k4ary5().b[22][0]++;
          cov_19w8k4ary5().s[94]++;
          score -= 20;
          /* istanbul ignore next */
          cov_19w8k4ary5().s[95]++;
          break;
        case "high":
          /* istanbul ignore next */
          cov_19w8k4ary5().b[22][1]++;
          cov_19w8k4ary5().s[96]++;
          score -= 15;
          /* istanbul ignore next */
          cov_19w8k4ary5().s[97]++;
          break;
        case "medium":
          /* istanbul ignore next */
          cov_19w8k4ary5().b[22][2]++;
          cov_19w8k4ary5().s[98]++;
          score -= 10;
          /* istanbul ignore next */
          cov_19w8k4ary5().s[99]++;
          break;
        case "low":
          /* istanbul ignore next */
          cov_19w8k4ary5().b[22][3]++;
          cov_19w8k4ary5().s[100]++;
          score -= 5;
          /* istanbul ignore next */
          cov_19w8k4ary5().s[101]++;
          break;
      }
    });
    // Deduct points if threat detection is disabled
    /* istanbul ignore next */
    cov_19w8k4ary5().s[102]++;
    if (!threatDetectionEnabled) {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[23][0]++;
      cov_19w8k4ary5().s[103]++;
      score -= 10;
    } else
    /* istanbul ignore next */
    {
      cov_19w8k4ary5().b[23][1]++;
    }
    cov_19w8k4ary5().s[104]++;
    return Math.max(0, score);
  }
  /**
   * Scan for active security threats
   */
  scanForThreats() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[23]++;
    cov_19w8k4ary5().s[105]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[24]++;
      const threats =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[106]++, []);
      // Check for unauthorized access attempts
      const unauthorizedAccess =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[107]++, yield this.detectUnauthorizedAccess());
      /* istanbul ignore next */
      cov_19w8k4ary5().s[108]++;
      if (unauthorizedAccess) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[24][0]++;
        cov_19w8k4ary5().s[109]++;
        threats.push(unauthorizedAccess);
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[24][1]++;
      }
      // Check for compliance violations
      const complianceViolations =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[110]++, yield this.detectComplianceViolations());
      /* istanbul ignore next */
      cov_19w8k4ary5().s[111]++;
      threats.push(...complianceViolations);
      // Check for misconfiguration
      const misconfigurations =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[112]++, yield this.detectMisconfigurations());
      /* istanbul ignore next */
      cov_19w8k4ary5().s[113]++;
      threats.push(...misconfigurations);
      // Update threat metrics
      /* istanbul ignore next */
      cov_19w8k4ary5().s[114]++;
      this.securityMetrics.threatsDetected += threats.filter(t => {
        /* istanbul ignore next */
        cov_19w8k4ary5().f[25]++;
        cov_19w8k4ary5().s[115]++;
        return t.status === "active";
      }).length;
      /* istanbul ignore next */
      cov_19w8k4ary5().s[116]++;
      return threats;
    });
  }
  /**
   * Detect unauthorized access attempts
   */
  detectUnauthorizedAccess() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[26]++;
    cov_19w8k4ary5().s[117]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[27]++;
      // Check circuit breaker for repeated failures (potential attack)
      const circuitBreakerOpen =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[118]++, this.circuitBreaker.isOpen("bedrock"));
      /* istanbul ignore next */
      cov_19w8k4ary5().s[119]++;
      if (circuitBreakerOpen) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[25][0]++;
        cov_19w8k4ary5().s[120]++;
        return {
          id: `unauthorized-access-${Date.now()}`,
          type: "unauthorized_access",
          severity: "high",
          description: "Circuit breaker open - potential unauthorized access attempts detected",
          detectedAt: new Date(),
          affectedRoute: "direct_bedrock",
          affectedComponents: ["circuit-breaker", "direct-bedrock-client"],
          status: "active",
          mitigationSteps: ["Review access logs", "Check for suspicious IP addresses", "Verify authentication mechanisms", "Reset circuit breaker if false positive"],
          estimatedImpact: "Service degradation, potential security breach"
        };
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[25][1]++;
      }
      cov_19w8k4ary5().s[121]++;
      return null;
    });
  }
  /**
   * Detect compliance violations
   */
  detectComplianceViolations() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[28]++;
    cov_19w8k4ary5().s[122]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[29]++;
      const threats =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[123]++, []);
      // Check GDPR compliance
      const gdprCompliant =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[124]++, yield this.gdprValidator.validateHybridRouting({
        route: "direct_bedrock",
        operation: "security_scan",
        dataTypes: ["system_metrics"],
        userConsent: true
      }));
      /* istanbul ignore next */
      cov_19w8k4ary5().s[125]++;
      if (!gdprCompliant.isCompliant) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[26][0]++;
        cov_19w8k4ary5().s[126]++;
        threats.push({
          id: `gdpr-violation-${Date.now()}`,
          type: "compliance_violation",
          severity: "critical",
          description: `GDPR compliance violation detected: ${gdprCompliant.violations.join(", ")}`,
          detectedAt: new Date(),
          affectedRoute: "both",
          affectedComponents: ["gdpr-validator", "data-processing"],
          status: "active",
          mitigationSteps: gdprCompliant.recommendations,
          estimatedImpact: "Legal liability, regulatory fines"
        });
        /* istanbul ignore next */
        cov_19w8k4ary5().s[127]++;
        this.securityMetrics.complianceViolations++;
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[26][1]++;
      }
      cov_19w8k4ary5().s[128]++;
      return threats;
    });
  }
  /**
   * Detect system misconfigurations
   */
  detectMisconfigurations() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[30]++;
    cov_19w8k4ary5().s[129]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[31]++;
      const threats =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[130]++, []);
      // Check feature flag configuration
      const flagValidation =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[131]++, yield this.featureFlags.validateAllFlags());
      /* istanbul ignore next */
      cov_19w8k4ary5().s[132]++;
      if (!flagValidation.isValid) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[27][0]++;
        cov_19w8k4ary5().s[133]++;
        threats.push({
          id: `misconfiguration-${Date.now()}`,
          type: "misconfiguration",
          severity: "medium",
          description: `Feature flag misconfiguration detected: ${flagValidation.errors.join(", ")}`,
          detectedAt: new Date(),
          affectedRoute: "both",
          affectedComponents: ["feature-flags"],
          status: "active",
          mitigationSteps: ["Review feature flag configuration", "Fix validation errors", "Test configuration changes"],
          estimatedImpact: "System instability, unexpected behavior"
        });
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[27][1]++;
      }
      cov_19w8k4ary5().s[134]++;
      return threats;
    });
  }
  /**
   * Check compliance status across all areas
   */
  checkComplianceStatus() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[32]++;
    cov_19w8k4ary5().s[135]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[33]++;
      // Check GDPR compliance
      const gdprMetrics =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[136]++, yield this.checkGDPRCompliance());
      // Check data residency compliance
      const dataResidencyMetrics =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[137]++, yield this.checkDataResidencyCompliance());
      // Check audit trail compliance
      const auditTrailMetrics =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[138]++, yield this.checkAuditTrailCompliance());
      // Determine overall compliance status
      const allCompliant =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[139]++,
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[28][0]++, gdprMetrics.isCompliant) &&
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[28][1]++, dataResidencyMetrics.isCompliant) &&
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[28][2]++, auditTrailMetrics.isCompliant));
      const anyNonCompliant =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[140]++,
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[29][0]++, !gdprMetrics.isCompliant) ||
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[29][1]++, !dataResidencyMetrics.isCompliant) ||
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[29][2]++, !auditTrailMetrics.isCompliant));
      const overall =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[141]++, allCompliant ?
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[30][0]++, "compliant") :
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[30][1]++, anyNonCompliant ?
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[31][0]++, "non-compliant") :
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[31][1]++, "warning")));
      /* istanbul ignore next */
      cov_19w8k4ary5().s[142]++;
      return {
        overall,
        metrics: {
          gdpr: gdprMetrics,
          dataResidency: dataResidencyMetrics,
          auditTrail: auditTrailMetrics
        }
      };
    });
  }
  /**
   * Check GDPR compliance
   */
  checkGDPRCompliance() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[34]++;
    cov_19w8k4ary5().s[143]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[35]++;
      const validation =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[144]++, yield this.gdprValidator.validateHybridRouting({
        route: "both",
        operation: "compliance_check",
        dataTypes: ["all"],
        userConsent: true
      }));
      const violations =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[145]++, validation.violations.map((v, index) => {
        /* istanbul ignore next */
        cov_19w8k4ary5().f[36]++;
        cov_19w8k4ary5().s[146]++;
        return {
          id: `gdpr-violation-${index}`,
          type: "gdpr",
          severity: "high",
          description: v,
          detectedAt: new Date(),
          affectedData: ["user_data", "system_data"],
          remediationRequired: true,
          remediationSteps: validation.recommendations
        };
      }));
      /* istanbul ignore next */
      cov_19w8k4ary5().s[147]++;
      return {
        isCompliant: validation.isCompliant,
        complianceScore: validation.isCompliant ?
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[32][0]++, 100) :
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[32][1]++, 50),
        violations,
        lastAudit: new Date(),
        nextAuditDue: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // 30 days
      };
    });
  }
  /**
   * Check data residency compliance
   */
  checkDataResidencyCompliance() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[37]++;
    cov_19w8k4ary5().s[148]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[38]++;
      // Check if data residency requirements are met
      const euRegion =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[149]++, process.env.AWS_REGION === "eu-central-1");
      /* istanbul ignore next */
      cov_19w8k4ary5().s[150]++;
      return {
        isCompliant: euRegion,
        complianceScore: euRegion ?
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[33][0]++, 100) :
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[33][1]++, 0),
        violations: euRegion ?
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[34][0]++, []) :
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[34][1]++, [{
          id: "data-residency-violation",
          type: "data_residency",
          severity: "critical",
          description: "Data not stored in EU region",
          detectedAt: new Date(),
          affectedData: ["all"],
          remediationRequired: true,
          remediationSteps: ["Configure AWS region to eu-central-1", "Migrate existing data to EU region", "Update application configuration"]
        }]),
        lastAudit: new Date(),
        nextAuditDue: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000) // 90 days
      };
    });
  }
  /**
   * Check audit trail compliance
   */
  checkAuditTrailCompliance() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[39]++;
    cov_19w8k4ary5().s[151]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[40]++;
      // Check if audit trail is properly configured
      const auditTrailEnabled =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[152]++, true); // Audit trail is always enabled
      /* istanbul ignore next */
      cov_19w8k4ary5().s[153]++;
      return {
        isCompliant: auditTrailEnabled,
        complianceScore: auditTrailEnabled ?
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[35][0]++, 100) :
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[35][1]++, 0),
        violations: [],
        lastAudit: new Date(),
        nextAuditDue: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000) // 30 days
      };
    });
  }
  /**
   * Calculate overall security score
   */
  calculateOverallSecurityScore(mcpSecurity, directBedrockSecurity, threats, complianceStatus) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[41]++;
    // Weight factors
    const routeWeight =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[154]++, 0.4); // 40% for route security
    const threatWeight =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[155]++, 0.3); // 30% for threat status
    const complianceWeight =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[156]++, 0.3); // 30% for compliance
    // Calculate route score (average of both routes)
    const routeScore =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[157]++, (mcpSecurity.securityScore + directBedrockSecurity.securityScore) / 2);
    // Calculate threat score
    const activeThreats =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[158]++, threats.filter(t => {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[42]++;
      cov_19w8k4ary5().s[159]++;
      return t.status === "active";
    }));
    const criticalThreats =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[160]++, activeThreats.filter(t => {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[43]++;
      cov_19w8k4ary5().s[161]++;
      return t.severity === "critical";
    }).length);
    const highThreats =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[162]++, activeThreats.filter(t => {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[44]++;
      cov_19w8k4ary5().s[163]++;
      return t.severity === "high";
    }).length);
    const threatScore =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[164]++, Math.max(0, 100 - criticalThreats * 30 - highThreats * 15 - (activeThreats.length - criticalThreats - highThreats) * 5));
    // Calculate compliance score
    const complianceScore =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[165]++, complianceStatus.overall === "compliant" ?
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[36][0]++, 100) :
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[36][1]++, complianceStatus.overall === "warning" ?
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[37][0]++, 70) :
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[37][1]++, 40)));
    // Calculate weighted overall score
    const overallScore =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[166]++, routeScore * routeWeight + threatScore * threatWeight + complianceScore * complianceWeight);
    /* istanbul ignore next */
    cov_19w8k4ary5().s[167]++;
    return Math.round(overallScore);
  }
  /**
   * Determine threat level based on score and threats
   */
  determineThreatLevel(securityScore, threats) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[45]++;
    const activeThreats =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[168]++, threats.filter(t => {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[46]++;
      cov_19w8k4ary5().s[169]++;
      return t.status === "active";
    }));
    const criticalThreats =
    /* istanbul ignore next */
    (cov_19w8k4ary5().s[170]++, activeThreats.filter(t => {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[47]++;
      cov_19w8k4ary5().s[171]++;
      return t.severity === "critical";
    }));
    /* istanbul ignore next */
    cov_19w8k4ary5().s[172]++;
    if (
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[39][0]++, criticalThreats.length > 0) ||
    /* istanbul ignore next */
    (cov_19w8k4ary5().b[39][1]++, securityScore < 40)) {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[38][0]++;
      cov_19w8k4ary5().s[173]++;
      return "critical";
    } else {
      /* istanbul ignore next */
      cov_19w8k4ary5().b[38][1]++;
      cov_19w8k4ary5().s[174]++;
      if (
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[41][0]++, securityScore < 60) ||
      /* istanbul ignore next */
      (cov_19w8k4ary5().b[41][1]++, activeThreats.length > 3)) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[40][0]++;
        cov_19w8k4ary5().s[175]++;
        return "high";
      } else {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[40][1]++;
        cov_19w8k4ary5().s[176]++;
        if (
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[43][0]++, securityScore < 80) ||
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[43][1]++, activeThreats.length > 0)) {
          /* istanbul ignore next */
          cov_19w8k4ary5().b[42][0]++;
          cov_19w8k4ary5().s[177]++;
          return "medium";
        } else {
          /* istanbul ignore next */
          cov_19w8k4ary5().b[42][1]++;
          cov_19w8k4ary5().s[178]++;
          return "low";
        }
      }
    }
  }
  /**
   * Generate security recommendations
   */
  generateSecurityRecommendations(mcpSecurity, directBedrockSecurity, threats, complianceStatus) {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[48]++;
    cov_19w8k4ary5().s[179]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_19w8k4ary5().f[49]++;
      const immediate =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[180]++, []);
      const shortTerm =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[181]++, []);
      const longTerm =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[182]++, []);
      // Immediate recommendations for critical threats
      const criticalThreats =
      /* istanbul ignore next */
      (cov_19w8k4ary5().s[183]++, threats.filter(t => {
        /* istanbul ignore next */
        cov_19w8k4ary5().f[50]++;
        cov_19w8k4ary5().s[184]++;
        return /* istanbul ignore next */(cov_19w8k4ary5().b[44][0]++, t.status === "active") &&
        /* istanbul ignore next */
        (cov_19w8k4ary5().b[44][1]++, t.severity === "critical");
      }));
      /* istanbul ignore next */
      cov_19w8k4ary5().s[185]++;
      if (criticalThreats.length > 0) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[45][0]++;
        cov_19w8k4ary5().s[186]++;
        immediate.push({
          id: "mitigate-critical-threats",
          priority: "critical",
          category: "monitoring",
          description: `Mitigate ${criticalThreats.length} critical security threats immediately`,
          expectedImpact: "Prevent security breaches and data loss",
          implementationSteps: criticalThreats.flatMap(t => {
            /* istanbul ignore next */
            cov_19w8k4ary5().f[51]++;
            cov_19w8k4ary5().s[187]++;
            return t.mitigationSteps;
          }),
          estimatedEffort: "high"
        });
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[45][1]++;
      }
      // Recommendations for route security
      cov_19w8k4ary5().s[188]++;
      if (mcpSecurity.securityScore < 70) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[46][0]++;
        cov_19w8k4ary5().s[189]++;
        shortTerm.push({
          id: "improve-mcp-security",
          priority: "high",
          category: "configuration",
          description: "Improve MCP route security configuration",
          expectedImpact: "Enhanced security for MCP routing path",
          implementationSteps: ["Enable strict access control", "Configure encryption", "Enable threat detection", "Review and fix vulnerabilities"],
          estimatedEffort: "medium"
        });
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[46][1]++;
      }
      cov_19w8k4ary5().s[190]++;
      if (directBedrockSecurity.securityScore < 70) {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[47][0]++;
        cov_19w8k4ary5().s[191]++;
        shortTerm.push({
          id: "improve-bedrock-security",
          priority: "high",
          category: "configuration",
          description: "Improve direct Bedrock route security configuration",
          expectedImpact: "Enhanced security for direct Bedrock path",
          implementationSteps: ["Review IAM policies", "Enable AWS CloudTrail", "Configure VPC endpoints", "Review and fix vulnerabilities"],
          estimatedEffort: "medium"
        });
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[47][1]++;
      }
      // Compliance recommendations
      cov_19w8k4ary5().s[192]++;
      if (complianceStatus.overall !== "compliant") {
        /* istanbul ignore next */
        cov_19w8k4ary5().b[48][0]++;
        cov_19w8k4ary5().s[193]++;
        immediate.push({
          id: "fix-compliance-violations",
          priority: "critical",
          category: "compliance",
          description: "Fix compliance violations to meet regulatory requirements",
          expectedImpact: "Avoid legal liability and regulatory fines",
          implementationSteps: ["Review compliance violations", "Implement remediation steps", "Verify compliance status", "Document compliance measures"],
          estimatedEffort: "high"
        });
      } else
      /* istanbul ignore next */
      {
        cov_19w8k4ary5().b[48][1]++;
      }
      // Long-term recommendations
      cov_19w8k4ary5().s[194]++;
      longTerm.push({
        id: "implement-continuous-monitoring",
        priority: "medium",
        category: "monitoring",
        description: "Implement continuous security monitoring and alerting",
        expectedImpact: "Proactive threat detection and faster response times",
        implementationSteps: ["Set up automated security scans", "Configure real-time alerting", "Implement security dashboards", "Establish incident response procedures"],
        estimatedEffort: "high"
      });
      /* istanbul ignore next */
      cov_19w8k4ary5().s[195]++;
      return {
        immediate,
        shortTerm,
        longTerm
      };
    });
  }
  /**
   * Get current security metrics
   */
  getSecurityMetrics() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[52]++;
    cov_19w8k4ary5().s[196]++;
    return Object.assign({}, this.securityMetrics);
  }
  /**
   * Get monitoring status
   */
  isMonitoringActive() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[53]++;
    cov_19w8k4ary5().s[197]++;
    return this.monitoringActive;
  }
  /**
   * Get last assessment time
   */
  getLastAssessmentTime() {
    /* istanbul ignore next */
    cov_19w8k4ary5().f[54]++;
    cov_19w8k4ary5().s[198]++;
    return this.lastAssessment;
  }
}
/* istanbul ignore next */
cov_19w8k4ary5().s[199]++;
exports.SecurityPostureMonitor = SecurityPostureMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTl3OGs0YXJ5NSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlNlY3VyaXR5UG9zdHVyZU1vbml0b3IiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsImZlYXR1cmVGbGFncyIsImF1ZGl0VHJhaWwiLCJjaXJjdWl0QnJlYWtlciIsImdkcHJWYWxpZGF0b3IiLCJwcm92aWRlckNvbXBsaWFuY2UiLCJkaXJlY3RCZWRyb2NrQ2xpZW50IiwibWNwUm91dGVyIiwibW9uaXRvcmluZ0FjdGl2ZSIsImxhc3RBc3Nlc3NtZW50IiwiZGV0ZWN0ZWRUaHJlYXRzIiwiTWFwIiwic2VjdXJpdHlNZXRyaWNzIiwidG90YWxBc3Nlc3NtZW50cyIsInRocmVhdHNEZXRlY3RlZCIsInRocmVhdHNNaXRpZ2F0ZWQiLCJjb21wbGlhbmNlVmlvbGF0aW9ucyIsImdldERlZmF1bHRDb25maWciLCJBaUZlYXR1cmVGbGFncyIsIkF1ZGl0VHJhaWxTeXN0ZW0iLCJDaXJjdWl0QnJlYWtlciIsIkdEUFJIeWJyaWRDb21wbGlhbmNlVmFsaWRhdG9yIiwiUHJvdmlkZXJBZ3JlZW1lbnRDb21wbGlhbmNlIiwiRGlyZWN0QmVkcm9ja0NsaWVudCIsIk1DUFJvdXRlciIsImxvZ2dlciIsImNvbnNvbGUiLCJPYmplY3QiLCJhc3NpZ24iLCJhc3Nlc3NtZW50SW50ZXJ2YWwiLCJ0aHJlYXRTY2FuSW50ZXJ2YWwiLCJjb21wbGlhbmNlQ2hlY2tJbnRlcnZhbCIsImVuYWJsZUNvbnRpbnVvdXNNb25pdG9yaW5nIiwiZW5hYmxlVGhyZWF0RGV0ZWN0aW9uIiwiZW5hYmxlVnVsbmVyYWJpbGl0eVNjYW5uaW5nIiwiYWxlcnRUaHJlc2hvbGRzIiwiY3JpdGljYWxTZWN1cml0eVNjb3JlIiwid2FybmluZ1NlY3VyaXR5U2NvcmUiLCJtYXhBY3RpdmVUaHJlYXRzIiwic3RhcnRNb25pdG9yaW5nIiwibG9nIiwibG9nU3VwcG9ydE1vZGVFdmVudCIsInRpbWVzdGFtcCIsIkRhdGUiLCJhc3Nlc3NTZWN1cml0eVBvc3R1cmUiLCJzdG9wTW9uaXRvcmluZyIsIm1ldHJpY3MiLCJtY3BTZWN1cml0eSIsImFzc2Vzc1JvdXRlU2VjdXJpdHlTdGF0dXMiLCJkaXJlY3RCZWRyb2NrU2VjdXJpdHkiLCJ0aHJlYXRzIiwic2NhbkZvclRocmVhdHMiLCJjb21wbGlhbmNlU3RhdHVzIiwiY2hlY2tDb21wbGlhbmNlU3RhdHVzIiwib3ZlcmFsbFNjb3JlIiwiY2FsY3VsYXRlT3ZlcmFsbFNlY3VyaXR5U2NvcmUiLCJ0aHJlYXRMZXZlbCIsImRldGVybWluZVRocmVhdExldmVsIiwicmVjb21tZW5kYXRpb25zIiwiZ2VuZXJhdGVTZWN1cml0eVJlY29tbWVuZGF0aW9ucyIsInN0YXR1cyIsIm92ZXJhbGwiLCJzZWN1cml0eVNjb3JlIiwicm91dGVzIiwibWNwIiwiZGlyZWN0QmVkcm9jayIsImFjdGl2ZSIsImZpbHRlciIsInQiLCJtaXRpZ2F0ZWQiLCJ0b3RhbERldGVjdGVkIiwibGVuZ3RoIiwiY29tcGxpYW5jZSIsImFjdGl2ZVRocmVhdHMiLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSIsIlN0cmluZyIsInJvdXRlIiwiZW5jcnlwdGlvblN0YXR1cyIsImNoZWNrRW5jcnlwdGlvblN0YXR1cyIsImFjY2Vzc0NvbnRyb2xTdGF0dXMiLCJjaGVja0FjY2Vzc0NvbnRyb2xTdGF0dXMiLCJ2dWxuZXJhYmlsaXRpZXMiLCJzY2FuRm9yVnVsbmVyYWJpbGl0aWVzIiwidGhyZWF0RGV0ZWN0aW9uRW5hYmxlZCIsImlzVGhyZWF0RGV0ZWN0aW9uRW5hYmxlZCIsImNhbGN1bGF0ZVJvdXRlU2VjdXJpdHlTY29yZSIsImlzU2VjdXJlIiwibGFzdENoZWNrIiwibWNwRW5jcnlwdGlvbiIsImdldEZsYWciLCJtY3BBY2Nlc3NDb250cm9sIiwibWNwSGVhbHRoIiwiY2hlY2tIZWFsdGgiLCJpc0hlYWx0aHkiLCJwdXNoIiwiaWQiLCJub3ciLCJzZXZlcml0eSIsImRlc2NyaXB0aW9uIiwiY29tcG9uZW50IiwiZGlzY292ZXJlZEF0IiwicGF0Y2hBdmFpbGFibGUiLCJyZW1lZGlhdGlvblN0ZXBzIiwiYmVkcm9ja0hlYWx0aCIsInNjb3JlIiwiZm9yRWFjaCIsInZ1bG4iLCJNYXRoIiwibWF4IiwidW5hdXRob3JpemVkQWNjZXNzIiwiZGV0ZWN0VW5hdXRob3JpemVkQWNjZXNzIiwiZGV0ZWN0Q29tcGxpYW5jZVZpb2xhdGlvbnMiLCJtaXNjb25maWd1cmF0aW9ucyIsImRldGVjdE1pc2NvbmZpZ3VyYXRpb25zIiwiY2lyY3VpdEJyZWFrZXJPcGVuIiwiaXNPcGVuIiwiZGV0ZWN0ZWRBdCIsImFmZmVjdGVkUm91dGUiLCJhZmZlY3RlZENvbXBvbmVudHMiLCJtaXRpZ2F0aW9uU3RlcHMiLCJlc3RpbWF0ZWRJbXBhY3QiLCJnZHByQ29tcGxpYW50IiwidmFsaWRhdGVIeWJyaWRSb3V0aW5nIiwib3BlcmF0aW9uIiwiZGF0YVR5cGVzIiwidXNlckNvbnNlbnQiLCJpc0NvbXBsaWFudCIsInZpb2xhdGlvbnMiLCJqb2luIiwiZmxhZ1ZhbGlkYXRpb24iLCJ2YWxpZGF0ZUFsbEZsYWdzIiwiaXNWYWxpZCIsImVycm9ycyIsImdkcHJNZXRyaWNzIiwiY2hlY2tHRFBSQ29tcGxpYW5jZSIsImRhdGFSZXNpZGVuY3lNZXRyaWNzIiwiY2hlY2tEYXRhUmVzaWRlbmN5Q29tcGxpYW5jZSIsImF1ZGl0VHJhaWxNZXRyaWNzIiwiY2hlY2tBdWRpdFRyYWlsQ29tcGxpYW5jZSIsImFsbENvbXBsaWFudCIsImFueU5vbkNvbXBsaWFudCIsImdkcHIiLCJkYXRhUmVzaWRlbmN5IiwidmFsaWRhdGlvbiIsIm1hcCIsInYiLCJpbmRleCIsImFmZmVjdGVkRGF0YSIsInJlbWVkaWF0aW9uUmVxdWlyZWQiLCJjb21wbGlhbmNlU2NvcmUiLCJsYXN0QXVkaXQiLCJuZXh0QXVkaXREdWUiLCJldVJlZ2lvbiIsInByb2Nlc3MiLCJlbnYiLCJBV1NfUkVHSU9OIiwiYXVkaXRUcmFpbEVuYWJsZWQiLCJyb3V0ZVdlaWdodCIsInRocmVhdFdlaWdodCIsImNvbXBsaWFuY2VXZWlnaHQiLCJyb3V0ZVNjb3JlIiwiY3JpdGljYWxUaHJlYXRzIiwiaGlnaFRocmVhdHMiLCJ0aHJlYXRTY29yZSIsInJvdW5kIiwiaW1tZWRpYXRlIiwic2hvcnRUZXJtIiwibG9uZ1Rlcm0iLCJwcmlvcml0eSIsImNhdGVnb3J5IiwiZXhwZWN0ZWRJbXBhY3QiLCJpbXBsZW1lbnRhdGlvblN0ZXBzIiwiZmxhdE1hcCIsImVzdGltYXRlZEVmZm9ydCIsImdldFNlY3VyaXR5TWV0cmljcyIsImlzTW9uaXRvcmluZ0FjdGl2ZSIsImdldExhc3RBc3Nlc3NtZW50VGltZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0YmFraC12aXNpYmlsaXR5LWJvb3N0LjIwMjUwOTIwL3NyYy9saWIvYWktb3JjaGVzdHJhdG9yL3NlY3VyaXR5LXBvc3R1cmUtbW9uaXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlY3VyaXR5IFBvc3R1cmUgTW9uaXRvciAtIENvbXByZWhlbnNpdmUgU2VjdXJpdHkgTW9uaXRvcmluZyBmb3IgSHlicmlkIEFyY2hpdGVjdHVyZVxuICpcbiAqIFRoaXMgbW9kdWxlIGltcGxlbWVudHMgcmVhbC10aW1lIHNlY3VyaXR5IHBvc3R1cmUgbW9uaXRvcmluZyBmb3IgdGhlIGh5YnJpZCByb3V0aW5nXG4gKiBhcmNoaXRlY3R1cmUsIHRyYWNraW5nIHNlY3VyaXR5IG1ldHJpY3MgYWNyb3NzIGJvdGggTUNQIGFuZCBkaXJlY3QgQmVkcm9jayBwYXRocyxcbiAqIGRldGVjdGluZyB0aHJlYXRzLCBhbmQgcHJvdmlkaW5nIHNlY3VyaXR5IHJlY29tbWVuZGF0aW9ucy5cbiAqL1xuXG4vLyBTZWN1cml0eSBQb3N0dXJlIFN0YXR1c1xuZXhwb3J0IGludGVyZmFjZSBTZWN1cml0eVBvc3R1cmVTdGF0dXMge1xuICBvdmVyYWxsOiB7XG4gICAgc2VjdXJpdHlTY29yZTogbnVtYmVyOyAvLyAwLTEwMFxuICAgIHRocmVhdExldmVsOiBcImxvd1wiIHwgXCJtZWRpdW1cIiB8IFwiaGlnaFwiIHwgXCJjcml0aWNhbFwiO1xuICAgIGxhc3RBc3Nlc3NtZW50OiBEYXRlO1xuICAgIGNvbXBsaWFuY2VTdGF0dXM6IFwiY29tcGxpYW50XCIgfCBcIndhcm5pbmdcIiB8IFwibm9uLWNvbXBsaWFudFwiO1xuICB9O1xuICByb3V0ZXM6IHtcbiAgICBtY3A6IFJvdXRlU2VjdXJpdHlTdGF0dXM7XG4gICAgZGlyZWN0QmVkcm9jazogUm91dGVTZWN1cml0eVN0YXR1cztcbiAgfTtcbiAgdGhyZWF0czoge1xuICAgIGFjdGl2ZTogU2VjdXJpdHlUaHJlYXRbXTtcbiAgICBtaXRpZ2F0ZWQ6IFNlY3VyaXR5VGhyZWF0W107XG4gICAgdG90YWxEZXRlY3RlZDogbnVtYmVyO1xuICB9O1xuICBjb21wbGlhbmNlOiB7XG4gICAgZ2RwcjogQ29tcGxpYW5jZU1ldHJpY3M7XG4gICAgZGF0YVJlc2lkZW5jeTogQ29tcGxpYW5jZU1ldHJpY3M7XG4gICAgYXVkaXRUcmFpbDogQ29tcGxpYW5jZU1ldHJpY3M7XG4gIH07XG4gIHJlY29tbWVuZGF0aW9uczoge1xuICAgIGltbWVkaWF0ZTogU2VjdXJpdHlSZWNvbW1lbmRhdGlvbltdO1xuICAgIHNob3J0VGVybTogU2VjdXJpdHlSZWNvbW1lbmRhdGlvbltdO1xuICAgIGxvbmdUZXJtOiBTZWN1cml0eVJlY29tbWVuZGF0aW9uW107XG4gIH07XG59XG5cbi8vIFJvdXRlIFNlY3VyaXR5IFN0YXR1c1xuZXhwb3J0IGludGVyZmFjZSBSb3V0ZVNlY3VyaXR5U3RhdHVzIHtcbiAgaXNTZWN1cmU6IGJvb2xlYW47XG4gIHNlY3VyaXR5U2NvcmU6IG51bWJlcjsgLy8gMC0xMDBcbiAgbGFzdENoZWNrOiBEYXRlO1xuICB2dWxuZXJhYmlsaXRpZXM6IFNlY3VyaXR5VnVsbmVyYWJpbGl0eVtdO1xuICBlbmNyeXB0aW9uU3RhdHVzOiBcImVuYWJsZWRcIiB8IFwicGFydGlhbFwiIHwgXCJkaXNhYmxlZFwiO1xuICBhY2Nlc3NDb250cm9sU3RhdHVzOiBcInN0cmljdFwiIHwgXCJtb2RlcmF0ZVwiIHwgXCJ3ZWFrXCI7XG4gIHRocmVhdERldGVjdGlvbkVuYWJsZWQ6IGJvb2xlYW47XG59XG5cbi8vIFNlY3VyaXR5IFRocmVhdFxuZXhwb3J0IGludGVyZmFjZSBTZWN1cml0eVRocmVhdCB7XG4gIGlkOiBzdHJpbmc7XG4gIHR5cGU6XG4gICAgfCBcInVuYXV0aG9yaXplZF9hY2Nlc3NcIlxuICAgIHwgXCJkYXRhX2JyZWFjaFwiXG4gICAgfCBcImluamVjdGlvbl9hdHRhY2tcIlxuICAgIHwgXCJkZG9zXCJcbiAgICB8IFwibWFsd2FyZVwiXG4gICAgfCBcIm1pc2NvbmZpZ3VyYXRpb25cIlxuICAgIHwgXCJjb21wbGlhbmNlX3Zpb2xhdGlvblwiO1xuICBzZXZlcml0eTogXCJsb3dcIiB8IFwibWVkaXVtXCIgfCBcImhpZ2hcIiB8IFwiY3JpdGljYWxcIjtcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgZGV0ZWN0ZWRBdDogRGF0ZTtcbiAgYWZmZWN0ZWRSb3V0ZTogXCJtY3BcIiB8IFwiZGlyZWN0X2JlZHJvY2tcIiB8IFwiYm90aFwiO1xuICBhZmZlY3RlZENvbXBvbmVudHM6IHN0cmluZ1tdO1xuICBzdGF0dXM6IFwiYWN0aXZlXCIgfCBcIm1pdGlnYXRlZFwiIHwgXCJpbnZlc3RpZ2F0aW5nXCI7XG4gIG1pdGlnYXRpb25TdGVwczogc3RyaW5nW107XG4gIGVzdGltYXRlZEltcGFjdDogc3RyaW5nO1xufVxuXG4vLyBTZWN1cml0eSBWdWxuZXJhYmlsaXR5XG5leHBvcnQgaW50ZXJmYWNlIFNlY3VyaXR5VnVsbmVyYWJpbGl0eSB7XG4gIGlkOiBzdHJpbmc7XG4gIGN2ZUlkPzogc3RyaW5nO1xuICBzZXZlcml0eTogXCJsb3dcIiB8IFwibWVkaXVtXCIgfCBcImhpZ2hcIiB8IFwiY3JpdGljYWxcIjtcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgY29tcG9uZW50OiBzdHJpbmc7XG4gIGRpc2NvdmVyZWRBdDogRGF0ZTtcbiAgcGF0Y2hBdmFpbGFibGU6IGJvb2xlYW47XG4gIHJlbWVkaWF0aW9uU3RlcHM6IHN0cmluZ1tdO1xufVxuXG4vLyBDb21wbGlhbmNlIE1ldHJpY3NcbmV4cG9ydCBpbnRlcmZhY2UgQ29tcGxpYW5jZU1ldHJpY3Mge1xuICBpc0NvbXBsaWFudDogYm9vbGVhbjtcbiAgY29tcGxpYW5jZVNjb3JlOiBudW1iZXI7IC8vIDAtMTAwXG4gIHZpb2xhdGlvbnM6IENvbXBsaWFuY2VWaW9sYXRpb25bXTtcbiAgbGFzdEF1ZGl0OiBEYXRlO1xuICBuZXh0QXVkaXREdWU6IERhdGU7XG59XG5cbi8vIENvbXBsaWFuY2UgVmlvbGF0aW9uXG5leHBvcnQgaW50ZXJmYWNlIENvbXBsaWFuY2VWaW9sYXRpb24ge1xuICBpZDogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIHNldmVyaXR5OiBcImxvd1wiIHwgXCJtZWRpdW1cIiB8IFwiaGlnaFwiIHwgXCJjcml0aWNhbFwiO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBkZXRlY3RlZEF0OiBEYXRlO1xuICBhZmZlY3RlZERhdGE6IHN0cmluZ1tdO1xuICByZW1lZGlhdGlvblJlcXVpcmVkOiBib29sZWFuO1xuICByZW1lZGlhdGlvblN0ZXBzOiBzdHJpbmdbXTtcbn1cblxuLy8gU2VjdXJpdHkgUmVjb21tZW5kYXRpb25cbmV4cG9ydCBpbnRlcmZhY2UgU2VjdXJpdHlSZWNvbW1lbmRhdGlvbiB7XG4gIGlkOiBzdHJpbmc7XG4gIHByaW9yaXR5OiBcImxvd1wiIHwgXCJtZWRpdW1cIiB8IFwiaGlnaFwiIHwgXCJjcml0aWNhbFwiO1xuICBjYXRlZ29yeTpcbiAgICB8IFwiYWNjZXNzX2NvbnRyb2xcIlxuICAgIHwgXCJlbmNyeXB0aW9uXCJcbiAgICB8IFwibW9uaXRvcmluZ1wiXG4gICAgfCBcImNvbXBsaWFuY2VcIlxuICAgIHwgXCJjb25maWd1cmF0aW9uXCI7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGV4cGVjdGVkSW1wYWN0OiBzdHJpbmc7XG4gIGltcGxlbWVudGF0aW9uU3RlcHM6IHN0cmluZ1tdO1xuICBlc3RpbWF0ZWRFZmZvcnQ6IFwibG93XCIgfCBcIm1lZGl1bVwiIHwgXCJoaWdoXCI7XG59XG5cbi8vIFNlY3VyaXR5IEFzc2Vzc21lbnQgQ29uZmlndXJhdGlvblxuZXhwb3J0IGludGVyZmFjZSBTZWN1cml0eUFzc2Vzc21lbnRDb25maWcge1xuICBhc3Nlc3NtZW50SW50ZXJ2YWw6IG51bWJlcjsgLy8gSG93IG9mdGVuIHRvIGFzc2VzcyBzZWN1cml0eSBwb3N0dXJlXG4gIHRocmVhdFNjYW5JbnRlcnZhbDogbnVtYmVyOyAvLyBIb3cgb2Z0ZW4gdG8gc2NhbiBmb3IgdGhyZWF0c1xuICBjb21wbGlhbmNlQ2hlY2tJbnRlcnZhbDogbnVtYmVyOyAvLyBIb3cgb2Z0ZW4gdG8gY2hlY2sgY29tcGxpYW5jZVxuICBlbmFibGVDb250aW51b3VzTW9uaXRvcmluZzogYm9vbGVhbjtcbiAgZW5hYmxlVGhyZWF0RGV0ZWN0aW9uOiBib29sZWFuO1xuICBlbmFibGVWdWxuZXJhYmlsaXR5U2Nhbm5pbmc6IGJvb2xlYW47XG4gIGFsZXJ0VGhyZXNob2xkczoge1xuICAgIGNyaXRpY2FsU2VjdXJpdHlTY29yZTogbnVtYmVyO1xuICAgIHdhcm5pbmdTZWN1cml0eVNjb3JlOiBudW1iZXI7XG4gICAgbWF4QWN0aXZlVGhyZWF0czogbnVtYmVyO1xuICB9O1xufVxuXG4vKipcbiAqIFNlY3VyaXR5IFBvc3R1cmUgTW9uaXRvciBJbXBsZW1lbnRhdGlvblxuICovXG5leHBvcnQgY2xhc3MgU2VjdXJpdHlQb3N0dXJlTW9uaXRvciB7XG4gIHByaXZhdGUgY29uZmlnOiBTZWN1cml0eUFzc2Vzc21lbnRDb25maWc7XG4gIHByaXZhdGUgZmVhdHVyZUZsYWdzOiBBaUZlYXR1cmVGbGFncztcbiAgcHJpdmF0ZSBhdWRpdFRyYWlsOiBBdWRpdFRyYWlsU3lzdGVtO1xuICBwcml2YXRlIGNpcmN1aXRCcmVha2VyOiBDaXJjdWl0QnJlYWtlcjtcbiAgcHJpdmF0ZSBnZHByVmFsaWRhdG9yOiBHRFBSSHlicmlkQ29tcGxpYW5jZVZhbGlkYXRvcjtcbiAgcHJpdmF0ZSBwcm92aWRlckNvbXBsaWFuY2U6IFByb3ZpZGVyQWdyZWVtZW50Q29tcGxpYW5jZTtcbiAgcHJpdmF0ZSBkaXJlY3RCZWRyb2NrQ2xpZW50OiBEaXJlY3RCZWRyb2NrQ2xpZW50O1xuICBwcml2YXRlIG1jcFJvdXRlcjogTUNQUm91dGVyO1xuICBwcml2YXRlIGxvZ2dlcjogQ29uc29sZTtcblxuICAvLyBNb25pdG9yaW5nIHN0YXRlXG4gIHByaXZhdGUgbW9uaXRvcmluZ0FjdGl2ZTogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIGxhc3RBc3Nlc3NtZW50OiBEYXRlIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgZGV0ZWN0ZWRUaHJlYXRzOiBNYXA8c3RyaW5nLCBTZWN1cml0eVRocmVhdD4gPSBuZXcgTWFwKCk7XG4gIHByaXZhdGUgc2VjdXJpdHlNZXRyaWNzOiB7XG4gICAgdG90YWxBc3Nlc3NtZW50czogbnVtYmVyO1xuICAgIHRocmVhdHNEZXRlY3RlZDogbnVtYmVyO1xuICAgIHRocmVhdHNNaXRpZ2F0ZWQ6IG51bWJlcjtcbiAgICBjb21wbGlhbmNlVmlvbGF0aW9uczogbnVtYmVyO1xuICB9ID0ge1xuICAgIHRvdGFsQXNzZXNzbWVudHM6IDAsXG4gICAgdGhyZWF0c0RldGVjdGVkOiAwLFxuICAgIHRocmVhdHNNaXRpZ2F0ZWQ6IDAsXG4gICAgY29tcGxpYW5jZVZpb2xhdGlvbnM6IDAsXG4gIH07XG5cbiAgY29uc3RydWN0b3IoXG4gICAgY29uZmlnPzogUGFydGlhbDxTZWN1cml0eUFzc2Vzc21lbnRDb25maWc+LFxuICAgIGZlYXR1cmVGbGFncz86IEFpRmVhdHVyZUZsYWdzLFxuICAgIGF1ZGl0VHJhaWw/OiBBdWRpdFRyYWlsU3lzdGVtLFxuICAgIGNpcmN1aXRCcmVha2VyPzogQ2lyY3VpdEJyZWFrZXIsXG4gICAgZ2RwclZhbGlkYXRvcj86IEdEUFJIeWJyaWRDb21wbGlhbmNlVmFsaWRhdG9yLFxuICAgIHByb3ZpZGVyQ29tcGxpYW5jZT86IFByb3ZpZGVyQWdyZWVtZW50Q29tcGxpYW5jZSxcbiAgICBkaXJlY3RCZWRyb2NrQ2xpZW50PzogRGlyZWN0QmVkcm9ja0NsaWVudCxcbiAgICBtY3BSb3V0ZXI/OiBNQ1BSb3V0ZXJcbiAgKSB7XG4gICAgdGhpcy5jb25maWcgPSB0aGlzLmdldERlZmF1bHRDb25maWcoY29uZmlnKTtcbiAgICB0aGlzLmZlYXR1cmVGbGFncyA9IGZlYXR1cmVGbGFncyB8fCBuZXcgQWlGZWF0dXJlRmxhZ3MoKTtcbiAgICB0aGlzLmF1ZGl0VHJhaWwgPSBhdWRpdFRyYWlsIHx8IG5ldyBBdWRpdFRyYWlsU3lzdGVtKCk7XG4gICAgdGhpcy5jaXJjdWl0QnJlYWtlciA9IGNpcmN1aXRCcmVha2VyIHx8IG5ldyBDaXJjdWl0QnJlYWtlcigpO1xuICAgIHRoaXMuZ2RwclZhbGlkYXRvciA9IGdkcHJWYWxpZGF0b3IgfHwgbmV3IEdEUFJIeWJyaWRDb21wbGlhbmNlVmFsaWRhdG9yKCk7XG4gICAgdGhpcy5wcm92aWRlckNvbXBsaWFuY2UgPVxuICAgICAgcHJvdmlkZXJDb21wbGlhbmNlIHx8IG5ldyBQcm92aWRlckFncmVlbWVudENvbXBsaWFuY2UoKTtcbiAgICB0aGlzLmRpcmVjdEJlZHJvY2tDbGllbnQgPSBkaXJlY3RCZWRyb2NrQ2xpZW50IHx8IG5ldyBEaXJlY3RCZWRyb2NrQ2xpZW50KCk7XG4gICAgdGhpcy5tY3BSb3V0ZXIgPSBtY3BSb3V0ZXIgfHwgbmV3IE1DUFJvdXRlcigpO1xuICAgIHRoaXMubG9nZ2VyID0gY29uc29sZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZGVmYXVsdCBjb25maWd1cmF0aW9uXG4gICAqL1xuICBwcml2YXRlIGdldERlZmF1bHRDb25maWcoXG4gICAgY29uZmlnPzogUGFydGlhbDxTZWN1cml0eUFzc2Vzc21lbnRDb25maWc+XG4gICk6IFNlY3VyaXR5QXNzZXNzbWVudENvbmZpZyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFzc2Vzc21lbnRJbnRlcnZhbDogMzAwMDAwLCAvLyA1IG1pbnV0ZXNcbiAgICAgIHRocmVhdFNjYW5JbnRlcnZhbDogNjAwMDAsIC8vIDEgbWludXRlXG4gICAgICBjb21wbGlhbmNlQ2hlY2tJbnRlcnZhbDogNjAwMDAwLCAvLyAxMCBtaW51dGVzXG4gICAgICBlbmFibGVDb250aW51b3VzTW9uaXRvcmluZzogdHJ1ZSxcbiAgICAgIGVuYWJsZVRocmVhdERldGVjdGlvbjogdHJ1ZSxcbiAgICAgIGVuYWJsZVZ1bG5lcmFiaWxpdHlTY2FubmluZzogdHJ1ZSxcbiAgICAgIGFsZXJ0VGhyZXNob2xkczoge1xuICAgICAgICBjcml0aWNhbFNlY3VyaXR5U2NvcmU6IDQwLFxuICAgICAgICB3YXJuaW5nU2VjdXJpdHlTY29yZTogNzAsXG4gICAgICAgIG1heEFjdGl2ZVRocmVhdHM6IDUsXG4gICAgICB9LFxuICAgICAgLi4uY29uZmlnLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogU3RhcnQgc2VjdXJpdHkgcG9zdHVyZSBtb25pdG9yaW5nXG4gICAqL1xuICBhc3luYyBzdGFydE1vbml0b3JpbmcoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKHRoaXMubW9uaXRvcmluZ0FjdGl2ZSkge1xuICAgICAgdGhpcy5sb2dnZXIubG9nKFwiU2VjdXJpdHkgcG9zdHVyZSBtb25pdG9yaW5nIGFscmVhZHkgYWN0aXZlXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMubG9nZ2VyLmxvZyhcIlN0YXJ0aW5nIHNlY3VyaXR5IHBvc3R1cmUgbW9uaXRvcmluZ1wiKTtcbiAgICB0aGlzLm1vbml0b3JpbmdBY3RpdmUgPSB0cnVlO1xuXG4gICAgLy8gTG9nIG1vbml0b3Jpbmcgc3RhcnQgdG8gYXVkaXQgdHJhaWxcbiAgICBhd2FpdCB0aGlzLmF1ZGl0VHJhaWwubG9nU3VwcG9ydE1vZGVFdmVudChcbiAgICAgIFwic2VjdXJpdHlfbW9uaXRvcmluZ19zdGFydGVkXCIsXG4gICAgICB7XG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSxcbiAgICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIH0sXG4gICAgICBcInN5c3RlbVwiXG4gICAgKTtcblxuICAgIC8vIFBlcmZvcm0gaW5pdGlhbCBhc3Nlc3NtZW50XG4gICAgYXdhaXQgdGhpcy5hc3Nlc3NTZWN1cml0eVBvc3R1cmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wIHNlY3VyaXR5IHBvc3R1cmUgbW9uaXRvcmluZ1xuICAgKi9cbiAgYXN5bmMgc3RvcE1vbml0b3JpbmcoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgaWYgKCF0aGlzLm1vbml0b3JpbmdBY3RpdmUpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmxvZyhcIlNlY3VyaXR5IHBvc3R1cmUgbW9uaXRvcmluZyBub3QgYWN0aXZlXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMubG9nZ2VyLmxvZyhcIlN0b3BwaW5nIHNlY3VyaXR5IHBvc3R1cmUgbW9uaXRvcmluZ1wiKTtcbiAgICB0aGlzLm1vbml0b3JpbmdBY3RpdmUgPSBmYWxzZTtcblxuICAgIC8vIExvZyBtb25pdG9yaW5nIHN0b3AgdG8gYXVkaXQgdHJhaWxcbiAgICBhd2FpdCB0aGlzLmF1ZGl0VHJhaWwubG9nU3VwcG9ydE1vZGVFdmVudChcbiAgICAgIFwic2VjdXJpdHlfbW9uaXRvcmluZ19zdG9wcGVkXCIsXG4gICAgICB7XG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSxcbiAgICAgICAgbWV0cmljczogdGhpcy5zZWN1cml0eU1ldHJpY3MsXG4gICAgICB9LFxuICAgICAgXCJzeXN0ZW1cIlxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQXNzZXNzIG92ZXJhbGwgc2VjdXJpdHkgcG9zdHVyZVxuICAgKi9cbiAgYXN5bmMgYXNzZXNzU2VjdXJpdHlQb3N0dXJlKCk6IFByb21pc2U8U2VjdXJpdHlQb3N0dXJlU3RhdHVzPiB7XG4gICAgdGhpcy5sb2dnZXIubG9nKFwiQXNzZXNzaW5nIHNlY3VyaXR5IHBvc3R1cmUgZm9yIGh5YnJpZCBhcmNoaXRlY3R1cmVcIik7XG5cbiAgICB0cnkge1xuICAgICAgLy8gSW5jcmVtZW50IGFzc2Vzc21lbnQgY291bnRlclxuICAgICAgdGhpcy5zZWN1cml0eU1ldHJpY3MudG90YWxBc3Nlc3NtZW50cysrO1xuXG4gICAgICAvLyBBc3Nlc3MgTUNQIHJvdXRlIHNlY3VyaXR5XG4gICAgICBjb25zdCBtY3BTZWN1cml0eSA9IGF3YWl0IHRoaXMuYXNzZXNzUm91dGVTZWN1cml0eVN0YXR1cyhcIm1jcFwiKTtcblxuICAgICAgLy8gQXNzZXNzIGRpcmVjdCBCZWRyb2NrIHJvdXRlIHNlY3VyaXR5XG4gICAgICBjb25zdCBkaXJlY3RCZWRyb2NrU2VjdXJpdHkgPSBhd2FpdCB0aGlzLmFzc2Vzc1JvdXRlU2VjdXJpdHlTdGF0dXMoXG4gICAgICAgIFwiZGlyZWN0X2JlZHJvY2tcIlxuICAgICAgKTtcblxuICAgICAgLy8gU2NhbiBmb3IgYWN0aXZlIHRocmVhdHNcbiAgICAgIGNvbnN0IHRocmVhdHMgPSBhd2FpdCB0aGlzLnNjYW5Gb3JUaHJlYXRzKCk7XG5cbiAgICAgIC8vIENoZWNrIGNvbXBsaWFuY2Ugc3RhdHVzXG4gICAgICBjb25zdCBjb21wbGlhbmNlU3RhdHVzID0gYXdhaXQgdGhpcy5jaGVja0NvbXBsaWFuY2VTdGF0dXMoKTtcblxuICAgICAgLy8gQ2FsY3VsYXRlIG92ZXJhbGwgc2VjdXJpdHkgc2NvcmVcbiAgICAgIGNvbnN0IG92ZXJhbGxTY29yZSA9IHRoaXMuY2FsY3VsYXRlT3ZlcmFsbFNlY3VyaXR5U2NvcmUoXG4gICAgICAgIG1jcFNlY3VyaXR5LFxuICAgICAgICBkaXJlY3RCZWRyb2NrU2VjdXJpdHksXG4gICAgICAgIHRocmVhdHMsXG4gICAgICAgIGNvbXBsaWFuY2VTdGF0dXNcbiAgICAgICk7XG5cbiAgICAgIC8vIERldGVybWluZSB0aHJlYXQgbGV2ZWxcbiAgICAgIGNvbnN0IHRocmVhdExldmVsID0gdGhpcy5kZXRlcm1pbmVUaHJlYXRMZXZlbChvdmVyYWxsU2NvcmUsIHRocmVhdHMpO1xuXG4gICAgICAvLyBHZW5lcmF0ZSByZWNvbW1lbmRhdGlvbnNcbiAgICAgIGNvbnN0IHJlY29tbWVuZGF0aW9ucyA9IGF3YWl0IHRoaXMuZ2VuZXJhdGVTZWN1cml0eVJlY29tbWVuZGF0aW9ucyhcbiAgICAgICAgbWNwU2VjdXJpdHksXG4gICAgICAgIGRpcmVjdEJlZHJvY2tTZWN1cml0eSxcbiAgICAgICAgdGhyZWF0cyxcbiAgICAgICAgY29tcGxpYW5jZVN0YXR1c1xuICAgICAgKTtcblxuICAgICAgY29uc3Qgc3RhdHVzOiBTZWN1cml0eVBvc3R1cmVTdGF0dXMgPSB7XG4gICAgICAgIG92ZXJhbGw6IHtcbiAgICAgICAgICBzZWN1cml0eVNjb3JlOiBvdmVyYWxsU2NvcmUsXG4gICAgICAgICAgdGhyZWF0TGV2ZWwsXG4gICAgICAgICAgbGFzdEFzc2Vzc21lbnQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgY29tcGxpYW5jZVN0YXR1czogY29tcGxpYW5jZVN0YXR1cy5vdmVyYWxsLFxuICAgICAgICB9LFxuICAgICAgICByb3V0ZXM6IHtcbiAgICAgICAgICBtY3A6IG1jcFNlY3VyaXR5LFxuICAgICAgICAgIGRpcmVjdEJlZHJvY2s6IGRpcmVjdEJlZHJvY2tTZWN1cml0eSxcbiAgICAgICAgfSxcbiAgICAgICAgdGhyZWF0czoge1xuICAgICAgICAgIGFjdGl2ZTogdGhyZWF0cy5maWx0ZXIoKHQpID0+IHQuc3RhdHVzID09PSBcImFjdGl2ZVwiKSxcbiAgICAgICAgICBtaXRpZ2F0ZWQ6IHRocmVhdHMuZmlsdGVyKCh0KSA9PiB0LnN0YXR1cyA9PT0gXCJtaXRpZ2F0ZWRcIiksXG4gICAgICAgICAgdG90YWxEZXRlY3RlZDogdGhyZWF0cy5sZW5ndGgsXG4gICAgICAgIH0sXG4gICAgICAgIGNvbXBsaWFuY2U6IGNvbXBsaWFuY2VTdGF0dXMubWV0cmljcyxcbiAgICAgICAgcmVjb21tZW5kYXRpb25zLFxuICAgICAgfTtcblxuICAgICAgdGhpcy5sYXN0QXNzZXNzbWVudCA9IG5ldyBEYXRlKCk7XG5cbiAgICAgIC8vIExvZyBhc3Nlc3NtZW50IHRvIGF1ZGl0IHRyYWlsXG4gICAgICBhd2FpdCB0aGlzLmF1ZGl0VHJhaWwubG9nU3VwcG9ydE1vZGVFdmVudChcbiAgICAgICAgXCJzZWN1cml0eV9hc3Nlc3NtZW50X2NvbXBsZXRlZFwiLFxuICAgICAgICB7XG4gICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgIHNlY3VyaXR5U2NvcmU6IG92ZXJhbGxTY29yZSxcbiAgICAgICAgICB0aHJlYXRMZXZlbCxcbiAgICAgICAgICBhY3RpdmVUaHJlYXRzOiB0aHJlYXRzLmZpbHRlcigodCkgPT4gdC5zdGF0dXMgPT09IFwiYWN0aXZlXCIpLmxlbmd0aCxcbiAgICAgICAgfSxcbiAgICAgICAgXCJzeXN0ZW1cIlxuICAgICAgKTtcblxuICAgICAgcmV0dXJuIHN0YXR1cztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXCJTZWN1cml0eSBhc3Nlc3NtZW50IGZhaWxlZDpcIiwgZXJyb3IpO1xuXG4gICAgICAvLyBMb2cgZmFpbHVyZSB0byBhdWRpdCB0cmFpbFxuICAgICAgYXdhaXQgdGhpcy5hdWRpdFRyYWlsLmxvZ1N1cHBvcnRNb2RlRXZlbnQoXG4gICAgICAgIFwic2VjdXJpdHlfYXNzZXNzbWVudF9mYWlsZWRcIixcbiAgICAgICAge1xuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSxcbiAgICAgICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpLFxuICAgICAgICB9LFxuICAgICAgICBcInN5c3RlbVwiXG4gICAgICApO1xuXG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQXNzZXNzIHNlY3VyaXR5IHN0YXR1cyBmb3IgYSBzcGVjaWZpYyByb3V0ZVxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBhc3Nlc3NSb3V0ZVNlY3VyaXR5U3RhdHVzKFxuICAgIHJvdXRlOiBcIm1jcFwiIHwgXCJkaXJlY3RfYmVkcm9ja1wiXG4gICk6IFByb21pc2U8Um91dGVTZWN1cml0eVN0YXR1cz4ge1xuICAgIHRoaXMubG9nZ2VyLmxvZyhgQXNzZXNzaW5nIHNlY3VyaXR5IHN0YXR1cyBmb3IgJHtyb3V0ZX0gcm91dGVgKTtcblxuICAgIC8vIENoZWNrIGVuY3J5cHRpb24gc3RhdHVzXG4gICAgY29uc3QgZW5jcnlwdGlvblN0YXR1cyA9IGF3YWl0IHRoaXMuY2hlY2tFbmNyeXB0aW9uU3RhdHVzKHJvdXRlKTtcblxuICAgIC8vIENoZWNrIGFjY2VzcyBjb250cm9sXG4gICAgY29uc3QgYWNjZXNzQ29udHJvbFN0YXR1cyA9IGF3YWl0IHRoaXMuY2hlY2tBY2Nlc3NDb250cm9sU3RhdHVzKHJvdXRlKTtcblxuICAgIC8vIFNjYW4gZm9yIHZ1bG5lcmFiaWxpdGllc1xuICAgIGNvbnN0IHZ1bG5lcmFiaWxpdGllcyA9IGF3YWl0IHRoaXMuc2NhbkZvclZ1bG5lcmFiaWxpdGllcyhyb3V0ZSk7XG5cbiAgICAvLyBDaGVjayB0aHJlYXQgZGV0ZWN0aW9uXG4gICAgY29uc3QgdGhyZWF0RGV0ZWN0aW9uRW5hYmxlZCA9IGF3YWl0IHRoaXMuaXNUaHJlYXREZXRlY3Rpb25FbmFibGVkKHJvdXRlKTtcblxuICAgIC8vIENhbGN1bGF0ZSByb3V0ZSBzZWN1cml0eSBzY29yZVxuICAgIGNvbnN0IHNlY3VyaXR5U2NvcmUgPSB0aGlzLmNhbGN1bGF0ZVJvdXRlU2VjdXJpdHlTY29yZShcbiAgICAgIGVuY3J5cHRpb25TdGF0dXMsXG4gICAgICBhY2Nlc3NDb250cm9sU3RhdHVzLFxuICAgICAgdnVsbmVyYWJpbGl0aWVzLFxuICAgICAgdGhyZWF0RGV0ZWN0aW9uRW5hYmxlZFxuICAgICk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgaXNTZWN1cmU6IHNlY3VyaXR5U2NvcmUgPj0gNzAgJiYgdnVsbmVyYWJpbGl0aWVzLmxlbmd0aCA9PT0gMCxcbiAgICAgIHNlY3VyaXR5U2NvcmUsXG4gICAgICBsYXN0Q2hlY2s6IG5ldyBEYXRlKCksXG4gICAgICB2dWxuZXJhYmlsaXRpZXMsXG4gICAgICBlbmNyeXB0aW9uU3RhdHVzLFxuICAgICAgYWNjZXNzQ29udHJvbFN0YXR1cyxcbiAgICAgIHRocmVhdERldGVjdGlvbkVuYWJsZWQsXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBlbmNyeXB0aW9uIHN0YXR1cyBmb3IgYSByb3V0ZVxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBjaGVja0VuY3J5cHRpb25TdGF0dXMoXG4gICAgcm91dGU6IFwibWNwXCIgfCBcImRpcmVjdF9iZWRyb2NrXCJcbiAgKTogUHJvbWlzZTxcImVuYWJsZWRcIiB8IFwicGFydGlhbFwiIHwgXCJkaXNhYmxlZFwiPiB7XG4gICAgLy8gQ2hlY2sgaWYgZW5jcnlwdGlvbiBpcyBlbmFibGVkIGZvciB0aGUgcm91dGVcbiAgICBpZiAocm91dGUgPT09IFwiZGlyZWN0X2JlZHJvY2tcIikge1xuICAgICAgLy8gRGlyZWN0IEJlZHJvY2sgdXNlcyBBV1MgZW5jcnlwdGlvbiBieSBkZWZhdWx0XG4gICAgICByZXR1cm4gXCJlbmFibGVkXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE1DUCBlbmNyeXB0aW9uIGRlcGVuZHMgb24gY29uZmlndXJhdGlvblxuICAgICAgY29uc3QgbWNwRW5jcnlwdGlvbiA9IGF3YWl0IHRoaXMuZmVhdHVyZUZsYWdzLmdldEZsYWcoXG4gICAgICAgIFwibWNwX2VuY3J5cHRpb25fZW5hYmxlZFwiLFxuICAgICAgICB0cnVlXG4gICAgICApO1xuICAgICAgcmV0dXJuIG1jcEVuY3J5cHRpb24gPyBcImVuYWJsZWRcIiA6IFwicGFydGlhbFwiO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBhY2Nlc3MgY29udHJvbCBzdGF0dXMgZm9yIGEgcm91dGVcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgY2hlY2tBY2Nlc3NDb250cm9sU3RhdHVzKFxuICAgIHJvdXRlOiBcIm1jcFwiIHwgXCJkaXJlY3RfYmVkcm9ja1wiXG4gICk6IFByb21pc2U8XCJzdHJpY3RcIiB8IFwibW9kZXJhdGVcIiB8IFwid2Vha1wiPiB7XG4gICAgLy8gQ2hlY2sgYWNjZXNzIGNvbnRyb2wgY29uZmlndXJhdGlvblxuICAgIGlmIChyb3V0ZSA9PT0gXCJkaXJlY3RfYmVkcm9ja1wiKSB7XG4gICAgICAvLyBEaXJlY3QgQmVkcm9jayBoYXMgc3RyaWN0IElBTS1iYXNlZCBhY2Nlc3MgY29udHJvbFxuICAgICAgcmV0dXJuIFwic3RyaWN0XCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE1DUCBhY2Nlc3MgY29udHJvbCBkZXBlbmRzIG9uIGNvbmZpZ3VyYXRpb25cbiAgICAgIGNvbnN0IG1jcEFjY2Vzc0NvbnRyb2wgPSBhd2FpdCB0aGlzLmZlYXR1cmVGbGFncy5nZXRGbGFnKFxuICAgICAgICBcIm1jcF9hY2Nlc3NfY29udHJvbF9zdHJpY3RcIixcbiAgICAgICAgdHJ1ZVxuICAgICAgKTtcbiAgICAgIHJldHVybiBtY3BBY2Nlc3NDb250cm9sID8gXCJzdHJpY3RcIiA6IFwibW9kZXJhdGVcIjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2NhbiBmb3IgdnVsbmVyYWJpbGl0aWVzIGluIGEgcm91dGVcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgc2NhbkZvclZ1bG5lcmFiaWxpdGllcyhcbiAgICByb3V0ZTogXCJtY3BcIiB8IFwiZGlyZWN0X2JlZHJvY2tcIlxuICApOiBQcm9taXNlPFNlY3VyaXR5VnVsbmVyYWJpbGl0eVtdPiB7XG4gICAgY29uc3QgdnVsbmVyYWJpbGl0aWVzOiBTZWN1cml0eVZ1bG5lcmFiaWxpdHlbXSA9IFtdO1xuXG4gICAgLy8gQ2hlY2sgZm9yIGNvbW1vbiB2dWxuZXJhYmlsaXRpZXNcbiAgICBpZiAocm91dGUgPT09IFwibWNwXCIpIHtcbiAgICAgIC8vIENoZWNrIE1DUC1zcGVjaWZpYyB2dWxuZXJhYmlsaXRpZXNcbiAgICAgIGNvbnN0IG1jcEhlYWx0aCA9IGF3YWl0IHRoaXMubWNwUm91dGVyLmNoZWNrSGVhbHRoKCk7XG4gICAgICBpZiAoIW1jcEhlYWx0aC5pc0hlYWx0aHkpIHtcbiAgICAgICAgdnVsbmVyYWJpbGl0aWVzLnB1c2goe1xuICAgICAgICAgIGlkOiBgbWNwLWhlYWx0aC0ke0RhdGUubm93KCl9YCxcbiAgICAgICAgICBzZXZlcml0eTogXCJtZWRpdW1cIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJNQ1Agcm91dGVyIGhlYWx0aCBjaGVjayBmYWlsZWRcIixcbiAgICAgICAgICBjb21wb25lbnQ6IFwibWNwLXJvdXRlclwiLFxuICAgICAgICAgIGRpc2NvdmVyZWRBdDogbmV3IERhdGUoKSxcbiAgICAgICAgICBwYXRjaEF2YWlsYWJsZTogZmFsc2UsXG4gICAgICAgICAgcmVtZWRpYXRpb25TdGVwczogW1xuICAgICAgICAgICAgXCJDaGVjayBNQ1Agcm91dGVyIGNvbmZpZ3VyYXRpb25cIixcbiAgICAgICAgICAgIFwiVmVyaWZ5IG5ldHdvcmsgY29ubmVjdGl2aXR5XCIsXG4gICAgICAgICAgICBcIlJldmlldyBlcnJvciBsb2dzXCIsXG4gICAgICAgICAgXSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENoZWNrIGRpcmVjdCBCZWRyb2NrIHZ1bG5lcmFiaWxpdGllc1xuICAgICAgY29uc3QgYmVkcm9ja0hlYWx0aCA9IGF3YWl0IHRoaXMuZGlyZWN0QmVkcm9ja0NsaWVudC5jaGVja0hlYWx0aCgpO1xuICAgICAgaWYgKCFiZWRyb2NrSGVhbHRoLmlzSGVhbHRoeSkge1xuICAgICAgICB2dWxuZXJhYmlsaXRpZXMucHVzaCh7XG4gICAgICAgICAgaWQ6IGBiZWRyb2NrLWhlYWx0aC0ke0RhdGUubm93KCl9YCxcbiAgICAgICAgICBzZXZlcml0eTogXCJtZWRpdW1cIixcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJEaXJlY3QgQmVkcm9jayBjbGllbnQgaGVhbHRoIGNoZWNrIGZhaWxlZFwiLFxuICAgICAgICAgIGNvbXBvbmVudDogXCJkaXJlY3QtYmVkcm9jay1jbGllbnRcIixcbiAgICAgICAgICBkaXNjb3ZlcmVkQXQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgcGF0Y2hBdmFpbGFibGU6IGZhbHNlLFxuICAgICAgICAgIHJlbWVkaWF0aW9uU3RlcHM6IFtcbiAgICAgICAgICAgIFwiQ2hlY2sgQVdTIGNyZWRlbnRpYWxzXCIsXG4gICAgICAgICAgICBcIlZlcmlmeSBCZWRyb2NrIHNlcnZpY2UgYXZhaWxhYmlsaXR5XCIsXG4gICAgICAgICAgICBcIlJldmlldyBjaXJjdWl0IGJyZWFrZXIgc3RhdHVzXCIsXG4gICAgICAgICAgXSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHZ1bG5lcmFiaWxpdGllcztcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiB0aHJlYXQgZGV0ZWN0aW9uIGlzIGVuYWJsZWQgZm9yIGEgcm91dGVcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgaXNUaHJlYXREZXRlY3Rpb25FbmFibGVkKFxuICAgIHJvdXRlOiBcIm1jcFwiIHwgXCJkaXJlY3RfYmVkcm9ja1wiXG4gICk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5lbmFibGVUaHJlYXREZXRlY3Rpb247XG4gIH1cblxuICAvKipcbiAgICogQ2FsY3VsYXRlIHNlY3VyaXR5IHNjb3JlIGZvciBhIHJvdXRlXG4gICAqL1xuICBwcml2YXRlIGNhbGN1bGF0ZVJvdXRlU2VjdXJpdHlTY29yZShcbiAgICBlbmNyeXB0aW9uU3RhdHVzOiBcImVuYWJsZWRcIiB8IFwicGFydGlhbFwiIHwgXCJkaXNhYmxlZFwiLFxuICAgIGFjY2Vzc0NvbnRyb2xTdGF0dXM6IFwic3RyaWN0XCIgfCBcIm1vZGVyYXRlXCIgfCBcIndlYWtcIixcbiAgICB2dWxuZXJhYmlsaXRpZXM6IFNlY3VyaXR5VnVsbmVyYWJpbGl0eVtdLFxuICAgIHRocmVhdERldGVjdGlvbkVuYWJsZWQ6IGJvb2xlYW5cbiAgKTogbnVtYmVyIHtcbiAgICBsZXQgc2NvcmUgPSAxMDA7XG5cbiAgICAvLyBEZWR1Y3QgcG9pbnRzIGZvciBlbmNyeXB0aW9uIGlzc3Vlc1xuICAgIGlmIChlbmNyeXB0aW9uU3RhdHVzID09PSBcInBhcnRpYWxcIikgc2NvcmUgLT0gMTU7XG4gICAgaWYgKGVuY3J5cHRpb25TdGF0dXMgPT09IFwiZGlzYWJsZWRcIikgc2NvcmUgLT0gNDA7XG5cbiAgICAvLyBEZWR1Y3QgcG9pbnRzIGZvciBhY2Nlc3MgY29udHJvbCBpc3N1ZXNcbiAgICBpZiAoYWNjZXNzQ29udHJvbFN0YXR1cyA9PT0gXCJtb2RlcmF0ZVwiKSBzY29yZSAtPSAxMDtcbiAgICBpZiAoYWNjZXNzQ29udHJvbFN0YXR1cyA9PT0gXCJ3ZWFrXCIpIHNjb3JlIC09IDMwO1xuXG4gICAgLy8gRGVkdWN0IHBvaW50cyBmb3IgdnVsbmVyYWJpbGl0aWVzXG4gICAgdnVsbmVyYWJpbGl0aWVzLmZvckVhY2goKHZ1bG4pID0+IHtcbiAgICAgIHN3aXRjaCAodnVsbi5zZXZlcml0eSkge1xuICAgICAgICBjYXNlIFwiY3JpdGljYWxcIjpcbiAgICAgICAgICBzY29yZSAtPSAyMDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImhpZ2hcIjpcbiAgICAgICAgICBzY29yZSAtPSAxNTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIm1lZGl1bVwiOlxuICAgICAgICAgIHNjb3JlIC09IDEwO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwibG93XCI6XG4gICAgICAgICAgc2NvcmUgLT0gNTtcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIERlZHVjdCBwb2ludHMgaWYgdGhyZWF0IGRldGVjdGlvbiBpcyBkaXNhYmxlZFxuICAgIGlmICghdGhyZWF0RGV0ZWN0aW9uRW5hYmxlZCkgc2NvcmUgLT0gMTA7XG5cbiAgICByZXR1cm4gTWF0aC5tYXgoMCwgc2NvcmUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNjYW4gZm9yIGFjdGl2ZSBzZWN1cml0eSB0aHJlYXRzXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIHNjYW5Gb3JUaHJlYXRzKCk6IFByb21pc2U8U2VjdXJpdHlUaHJlYXRbXT4ge1xuICAgIGNvbnN0IHRocmVhdHM6IFNlY3VyaXR5VGhyZWF0W10gPSBbXTtcblxuICAgIC8vIENoZWNrIGZvciB1bmF1dGhvcml6ZWQgYWNjZXNzIGF0dGVtcHRzXG4gICAgY29uc3QgdW5hdXRob3JpemVkQWNjZXNzID0gYXdhaXQgdGhpcy5kZXRlY3RVbmF1dGhvcml6ZWRBY2Nlc3MoKTtcbiAgICBpZiAodW5hdXRob3JpemVkQWNjZXNzKSB7XG4gICAgICB0aHJlYXRzLnB1c2godW5hdXRob3JpemVkQWNjZXNzKTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBmb3IgY29tcGxpYW5jZSB2aW9sYXRpb25zXG4gICAgY29uc3QgY29tcGxpYW5jZVZpb2xhdGlvbnMgPSBhd2FpdCB0aGlzLmRldGVjdENvbXBsaWFuY2VWaW9sYXRpb25zKCk7XG4gICAgdGhyZWF0cy5wdXNoKC4uLmNvbXBsaWFuY2VWaW9sYXRpb25zKTtcblxuICAgIC8vIENoZWNrIGZvciBtaXNjb25maWd1cmF0aW9uXG4gICAgY29uc3QgbWlzY29uZmlndXJhdGlvbnMgPSBhd2FpdCB0aGlzLmRldGVjdE1pc2NvbmZpZ3VyYXRpb25zKCk7XG4gICAgdGhyZWF0cy5wdXNoKC4uLm1pc2NvbmZpZ3VyYXRpb25zKTtcblxuICAgIC8vIFVwZGF0ZSB0aHJlYXQgbWV0cmljc1xuICAgIHRoaXMuc2VjdXJpdHlNZXRyaWNzLnRocmVhdHNEZXRlY3RlZCArPSB0aHJlYXRzLmZpbHRlcihcbiAgICAgICh0KSA9PiB0LnN0YXR1cyA9PT0gXCJhY3RpdmVcIlxuICAgICkubGVuZ3RoO1xuXG4gICAgcmV0dXJuIHRocmVhdHM7XG4gIH1cblxuICAvKipcbiAgICogRGV0ZWN0IHVuYXV0aG9yaXplZCBhY2Nlc3MgYXR0ZW1wdHNcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgZGV0ZWN0VW5hdXRob3JpemVkQWNjZXNzKCk6IFByb21pc2U8U2VjdXJpdHlUaHJlYXQgfCBudWxsPiB7XG4gICAgLy8gQ2hlY2sgY2lyY3VpdCBicmVha2VyIGZvciByZXBlYXRlZCBmYWlsdXJlcyAocG90ZW50aWFsIGF0dGFjaylcbiAgICBjb25zdCBjaXJjdWl0QnJlYWtlck9wZW4gPSB0aGlzLmNpcmN1aXRCcmVha2VyLmlzT3BlbihcImJlZHJvY2tcIiBhcyBhbnkpO1xuXG4gICAgaWYgKGNpcmN1aXRCcmVha2VyT3Blbikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IGB1bmF1dGhvcml6ZWQtYWNjZXNzLSR7RGF0ZS5ub3coKX1gLFxuICAgICAgICB0eXBlOiBcInVuYXV0aG9yaXplZF9hY2Nlc3NcIixcbiAgICAgICAgc2V2ZXJpdHk6IFwiaGlnaFwiLFxuICAgICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgICBcIkNpcmN1aXQgYnJlYWtlciBvcGVuIC0gcG90ZW50aWFsIHVuYXV0aG9yaXplZCBhY2Nlc3MgYXR0ZW1wdHMgZGV0ZWN0ZWRcIixcbiAgICAgICAgZGV0ZWN0ZWRBdDogbmV3IERhdGUoKSxcbiAgICAgICAgYWZmZWN0ZWRSb3V0ZTogXCJkaXJlY3RfYmVkcm9ja1wiLFxuICAgICAgICBhZmZlY3RlZENvbXBvbmVudHM6IFtcImNpcmN1aXQtYnJlYWtlclwiLCBcImRpcmVjdC1iZWRyb2NrLWNsaWVudFwiXSxcbiAgICAgICAgc3RhdHVzOiBcImFjdGl2ZVwiLFxuICAgICAgICBtaXRpZ2F0aW9uU3RlcHM6IFtcbiAgICAgICAgICBcIlJldmlldyBhY2Nlc3MgbG9nc1wiLFxuICAgICAgICAgIFwiQ2hlY2sgZm9yIHN1c3BpY2lvdXMgSVAgYWRkcmVzc2VzXCIsXG4gICAgICAgICAgXCJWZXJpZnkgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtc1wiLFxuICAgICAgICAgIFwiUmVzZXQgY2lyY3VpdCBicmVha2VyIGlmIGZhbHNlIHBvc2l0aXZlXCIsXG4gICAgICAgIF0sXG4gICAgICAgIGVzdGltYXRlZEltcGFjdDogXCJTZXJ2aWNlIGRlZ3JhZGF0aW9uLCBwb3RlbnRpYWwgc2VjdXJpdHkgYnJlYWNoXCIsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIERldGVjdCBjb21wbGlhbmNlIHZpb2xhdGlvbnNcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgZGV0ZWN0Q29tcGxpYW5jZVZpb2xhdGlvbnMoKTogUHJvbWlzZTxTZWN1cml0eVRocmVhdFtdPiB7XG4gICAgY29uc3QgdGhyZWF0czogU2VjdXJpdHlUaHJlYXRbXSA9IFtdO1xuXG4gICAgLy8gQ2hlY2sgR0RQUiBjb21wbGlhbmNlXG4gICAgY29uc3QgZ2RwckNvbXBsaWFudCA9IGF3YWl0IHRoaXMuZ2RwclZhbGlkYXRvci52YWxpZGF0ZUh5YnJpZFJvdXRpbmcoe1xuICAgICAgcm91dGU6IFwiZGlyZWN0X2JlZHJvY2tcIixcbiAgICAgIG9wZXJhdGlvbjogXCJzZWN1cml0eV9zY2FuXCIsXG4gICAgICBkYXRhVHlwZXM6IFtcInN5c3RlbV9tZXRyaWNzXCJdLFxuICAgICAgdXNlckNvbnNlbnQ6IHRydWUsXG4gICAgfSk7XG5cbiAgICBpZiAoIWdkcHJDb21wbGlhbnQuaXNDb21wbGlhbnQpIHtcbiAgICAgIHRocmVhdHMucHVzaCh7XG4gICAgICAgIGlkOiBgZ2Rwci12aW9sYXRpb24tJHtEYXRlLm5vdygpfWAsXG4gICAgICAgIHR5cGU6IFwiY29tcGxpYW5jZV92aW9sYXRpb25cIixcbiAgICAgICAgc2V2ZXJpdHk6IFwiY3JpdGljYWxcIixcbiAgICAgICAgZGVzY3JpcHRpb246IGBHRFBSIGNvbXBsaWFuY2UgdmlvbGF0aW9uIGRldGVjdGVkOiAke2dkcHJDb21wbGlhbnQudmlvbGF0aW9ucy5qb2luKFxuICAgICAgICAgIFwiLCBcIlxuICAgICAgICApfWAsXG4gICAgICAgIGRldGVjdGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgICAgIGFmZmVjdGVkUm91dGU6IFwiYm90aFwiLFxuICAgICAgICBhZmZlY3RlZENvbXBvbmVudHM6IFtcImdkcHItdmFsaWRhdG9yXCIsIFwiZGF0YS1wcm9jZXNzaW5nXCJdLFxuICAgICAgICBzdGF0dXM6IFwiYWN0aXZlXCIsXG4gICAgICAgIG1pdGlnYXRpb25TdGVwczogZ2RwckNvbXBsaWFudC5yZWNvbW1lbmRhdGlvbnMsXG4gICAgICAgIGVzdGltYXRlZEltcGFjdDogXCJMZWdhbCBsaWFiaWxpdHksIHJlZ3VsYXRvcnkgZmluZXNcIixcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLnNlY3VyaXR5TWV0cmljcy5jb21wbGlhbmNlVmlvbGF0aW9ucysrO1xuICAgIH1cblxuICAgIHJldHVybiB0aHJlYXRzO1xuICB9XG5cbiAgLyoqXG4gICAqIERldGVjdCBzeXN0ZW0gbWlzY29uZmlndXJhdGlvbnNcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgZGV0ZWN0TWlzY29uZmlndXJhdGlvbnMoKTogUHJvbWlzZTxTZWN1cml0eVRocmVhdFtdPiB7XG4gICAgY29uc3QgdGhyZWF0czogU2VjdXJpdHlUaHJlYXRbXSA9IFtdO1xuXG4gICAgLy8gQ2hlY2sgZmVhdHVyZSBmbGFnIGNvbmZpZ3VyYXRpb25cbiAgICBjb25zdCBmbGFnVmFsaWRhdGlvbiA9IGF3YWl0IHRoaXMuZmVhdHVyZUZsYWdzLnZhbGlkYXRlQWxsRmxhZ3MoKTtcbiAgICBpZiAoIWZsYWdWYWxpZGF0aW9uLmlzVmFsaWQpIHtcbiAgICAgIHRocmVhdHMucHVzaCh7XG4gICAgICAgIGlkOiBgbWlzY29uZmlndXJhdGlvbi0ke0RhdGUubm93KCl9YCxcbiAgICAgICAgdHlwZTogXCJtaXNjb25maWd1cmF0aW9uXCIsXG4gICAgICAgIHNldmVyaXR5OiBcIm1lZGl1bVwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogYEZlYXR1cmUgZmxhZyBtaXNjb25maWd1cmF0aW9uIGRldGVjdGVkOiAke2ZsYWdWYWxpZGF0aW9uLmVycm9ycy5qb2luKFxuICAgICAgICAgIFwiLCBcIlxuICAgICAgICApfWAsXG4gICAgICAgIGRldGVjdGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgICAgIGFmZmVjdGVkUm91dGU6IFwiYm90aFwiLFxuICAgICAgICBhZmZlY3RlZENvbXBvbmVudHM6IFtcImZlYXR1cmUtZmxhZ3NcIl0sXG4gICAgICAgIHN0YXR1czogXCJhY3RpdmVcIixcbiAgICAgICAgbWl0aWdhdGlvblN0ZXBzOiBbXG4gICAgICAgICAgXCJSZXZpZXcgZmVhdHVyZSBmbGFnIGNvbmZpZ3VyYXRpb25cIixcbiAgICAgICAgICBcIkZpeCB2YWxpZGF0aW9uIGVycm9yc1wiLFxuICAgICAgICAgIFwiVGVzdCBjb25maWd1cmF0aW9uIGNoYW5nZXNcIixcbiAgICAgICAgXSxcbiAgICAgICAgZXN0aW1hdGVkSW1wYWN0OiBcIlN5c3RlbSBpbnN0YWJpbGl0eSwgdW5leHBlY3RlZCBiZWhhdmlvclwiLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRocmVhdHM7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgY29tcGxpYW5jZSBzdGF0dXMgYWNyb3NzIGFsbCBhcmVhc1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBjaGVja0NvbXBsaWFuY2VTdGF0dXMoKTogUHJvbWlzZTx7XG4gICAgb3ZlcmFsbDogXCJjb21wbGlhbnRcIiB8IFwid2FybmluZ1wiIHwgXCJub24tY29tcGxpYW50XCI7XG4gICAgbWV0cmljczoge1xuICAgICAgZ2RwcjogQ29tcGxpYW5jZU1ldHJpY3M7XG4gICAgICBkYXRhUmVzaWRlbmN5OiBDb21wbGlhbmNlTWV0cmljcztcbiAgICAgIGF1ZGl0VHJhaWw6IENvbXBsaWFuY2VNZXRyaWNzO1xuICAgIH07XG4gIH0+IHtcbiAgICAvLyBDaGVjayBHRFBSIGNvbXBsaWFuY2VcbiAgICBjb25zdCBnZHByTWV0cmljcyA9IGF3YWl0IHRoaXMuY2hlY2tHRFBSQ29tcGxpYW5jZSgpO1xuXG4gICAgLy8gQ2hlY2sgZGF0YSByZXNpZGVuY3kgY29tcGxpYW5jZVxuICAgIGNvbnN0IGRhdGFSZXNpZGVuY3lNZXRyaWNzID0gYXdhaXQgdGhpcy5jaGVja0RhdGFSZXNpZGVuY3lDb21wbGlhbmNlKCk7XG5cbiAgICAvLyBDaGVjayBhdWRpdCB0cmFpbCBjb21wbGlhbmNlXG4gICAgY29uc3QgYXVkaXRUcmFpbE1ldHJpY3MgPSBhd2FpdCB0aGlzLmNoZWNrQXVkaXRUcmFpbENvbXBsaWFuY2UoKTtcblxuICAgIC8vIERldGVybWluZSBvdmVyYWxsIGNvbXBsaWFuY2Ugc3RhdHVzXG4gICAgY29uc3QgYWxsQ29tcGxpYW50ID1cbiAgICAgIGdkcHJNZXRyaWNzLmlzQ29tcGxpYW50ICYmXG4gICAgICBkYXRhUmVzaWRlbmN5TWV0cmljcy5pc0NvbXBsaWFudCAmJlxuICAgICAgYXVkaXRUcmFpbE1ldHJpY3MuaXNDb21wbGlhbnQ7XG5cbiAgICBjb25zdCBhbnlOb25Db21wbGlhbnQgPVxuICAgICAgIWdkcHJNZXRyaWNzLmlzQ29tcGxpYW50IHx8XG4gICAgICAhZGF0YVJlc2lkZW5jeU1ldHJpY3MuaXNDb21wbGlhbnQgfHxcbiAgICAgICFhdWRpdFRyYWlsTWV0cmljcy5pc0NvbXBsaWFudDtcblxuICAgIGNvbnN0IG92ZXJhbGw6IFwiY29tcGxpYW50XCIgfCBcIndhcm5pbmdcIiB8IFwibm9uLWNvbXBsaWFudFwiID0gYWxsQ29tcGxpYW50XG4gICAgICA/IFwiY29tcGxpYW50XCJcbiAgICAgIDogYW55Tm9uQ29tcGxpYW50XG4gICAgICA/IFwibm9uLWNvbXBsaWFudFwiXG4gICAgICA6IFwid2FybmluZ1wiO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIG92ZXJhbGwsXG4gICAgICBtZXRyaWNzOiB7XG4gICAgICAgIGdkcHI6IGdkcHJNZXRyaWNzLFxuICAgICAgICBkYXRhUmVzaWRlbmN5OiBkYXRhUmVzaWRlbmN5TWV0cmljcyxcbiAgICAgICAgYXVkaXRUcmFpbDogYXVkaXRUcmFpbE1ldHJpY3MsXG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgR0RQUiBjb21wbGlhbmNlXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIGNoZWNrR0RQUkNvbXBsaWFuY2UoKTogUHJvbWlzZTxDb21wbGlhbmNlTWV0cmljcz4ge1xuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBhd2FpdCB0aGlzLmdkcHJWYWxpZGF0b3IudmFsaWRhdGVIeWJyaWRSb3V0aW5nKHtcbiAgICAgIHJvdXRlOiBcImJvdGhcIixcbiAgICAgIG9wZXJhdGlvbjogXCJjb21wbGlhbmNlX2NoZWNrXCIsXG4gICAgICBkYXRhVHlwZXM6IFtcImFsbFwiXSxcbiAgICAgIHVzZXJDb25zZW50OiB0cnVlLFxuICAgIH0pO1xuXG4gICAgY29uc3QgdmlvbGF0aW9uczogQ29tcGxpYW5jZVZpb2xhdGlvbltdID0gdmFsaWRhdGlvbi52aW9sYXRpb25zLm1hcChcbiAgICAgICh2LCBpbmRleCkgPT4gKHtcbiAgICAgICAgaWQ6IGBnZHByLXZpb2xhdGlvbi0ke2luZGV4fWAsXG4gICAgICAgIHR5cGU6IFwiZ2RwclwiLFxuICAgICAgICBzZXZlcml0eTogXCJoaWdoXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiB2LFxuICAgICAgICBkZXRlY3RlZEF0OiBuZXcgRGF0ZSgpLFxuICAgICAgICBhZmZlY3RlZERhdGE6IFtcInVzZXJfZGF0YVwiLCBcInN5c3RlbV9kYXRhXCJdLFxuICAgICAgICByZW1lZGlhdGlvblJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZW1lZGlhdGlvblN0ZXBzOiB2YWxpZGF0aW9uLnJlY29tbWVuZGF0aW9ucyxcbiAgICAgIH0pXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICBpc0NvbXBsaWFudDogdmFsaWRhdGlvbi5pc0NvbXBsaWFudCxcbiAgICAgIGNvbXBsaWFuY2VTY29yZTogdmFsaWRhdGlvbi5pc0NvbXBsaWFudCA/IDEwMCA6IDUwLFxuICAgICAgdmlvbGF0aW9ucyxcbiAgICAgIGxhc3RBdWRpdDogbmV3IERhdGUoKSxcbiAgICAgIG5leHRBdWRpdER1ZTogbmV3IERhdGUoRGF0ZS5ub3coKSArIDMwICogMjQgKiA2MCAqIDYwICogMTAwMCksIC8vIDMwIGRheXNcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGRhdGEgcmVzaWRlbmN5IGNvbXBsaWFuY2VcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgY2hlY2tEYXRhUmVzaWRlbmN5Q29tcGxpYW5jZSgpOiBQcm9taXNlPENvbXBsaWFuY2VNZXRyaWNzPiB7XG4gICAgLy8gQ2hlY2sgaWYgZGF0YSByZXNpZGVuY3kgcmVxdWlyZW1lbnRzIGFyZSBtZXRcbiAgICBjb25zdCBldVJlZ2lvbiA9IHByb2Nlc3MuZW52LkFXU19SRUdJT04gPT09IFwiZXUtY2VudHJhbC0xXCI7XG5cbiAgICByZXR1cm4ge1xuICAgICAgaXNDb21wbGlhbnQ6IGV1UmVnaW9uLFxuICAgICAgY29tcGxpYW5jZVNjb3JlOiBldVJlZ2lvbiA/IDEwMCA6IDAsXG4gICAgICB2aW9sYXRpb25zOiBldVJlZ2lvblxuICAgICAgICA/IFtdXG4gICAgICAgIDogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBpZDogXCJkYXRhLXJlc2lkZW5jeS12aW9sYXRpb25cIixcbiAgICAgICAgICAgICAgdHlwZTogXCJkYXRhX3Jlc2lkZW5jeVwiLFxuICAgICAgICAgICAgICBzZXZlcml0eTogXCJjcml0aWNhbFwiLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJEYXRhIG5vdCBzdG9yZWQgaW4gRVUgcmVnaW9uXCIsXG4gICAgICAgICAgICAgIGRldGVjdGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICAgIGFmZmVjdGVkRGF0YTogW1wiYWxsXCJdLFxuICAgICAgICAgICAgICByZW1lZGlhdGlvblJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICByZW1lZGlhdGlvblN0ZXBzOiBbXG4gICAgICAgICAgICAgICAgXCJDb25maWd1cmUgQVdTIHJlZ2lvbiB0byBldS1jZW50cmFsLTFcIixcbiAgICAgICAgICAgICAgICBcIk1pZ3JhdGUgZXhpc3RpbmcgZGF0YSB0byBFVSByZWdpb25cIixcbiAgICAgICAgICAgICAgICBcIlVwZGF0ZSBhcHBsaWNhdGlvbiBjb25maWd1cmF0aW9uXCIsXG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICBsYXN0QXVkaXQ6IG5ldyBEYXRlKCksXG4gICAgICBuZXh0QXVkaXREdWU6IG5ldyBEYXRlKERhdGUubm93KCkgKyA5MCAqIDI0ICogNjAgKiA2MCAqIDEwMDApLCAvLyA5MCBkYXlzXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBhdWRpdCB0cmFpbCBjb21wbGlhbmNlXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIGNoZWNrQXVkaXRUcmFpbENvbXBsaWFuY2UoKTogUHJvbWlzZTxDb21wbGlhbmNlTWV0cmljcz4ge1xuICAgIC8vIENoZWNrIGlmIGF1ZGl0IHRyYWlsIGlzIHByb3Blcmx5IGNvbmZpZ3VyZWRcbiAgICBjb25zdCBhdWRpdFRyYWlsRW5hYmxlZCA9IHRydWU7IC8vIEF1ZGl0IHRyYWlsIGlzIGFsd2F5cyBlbmFibGVkXG5cbiAgICByZXR1cm4ge1xuICAgICAgaXNDb21wbGlhbnQ6IGF1ZGl0VHJhaWxFbmFibGVkLFxuICAgICAgY29tcGxpYW5jZVNjb3JlOiBhdWRpdFRyYWlsRW5hYmxlZCA/IDEwMCA6IDAsXG4gICAgICB2aW9sYXRpb25zOiBbXSxcbiAgICAgIGxhc3RBdWRpdDogbmV3IERhdGUoKSxcbiAgICAgIG5leHRBdWRpdER1ZTogbmV3IERhdGUoRGF0ZS5ub3coKSArIDMwICogMjQgKiA2MCAqIDYwICogMTAwMCksIC8vIDMwIGRheXNcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZSBvdmVyYWxsIHNlY3VyaXR5IHNjb3JlXG4gICAqL1xuICBwcml2YXRlIGNhbGN1bGF0ZU92ZXJhbGxTZWN1cml0eVNjb3JlKFxuICAgIG1jcFNlY3VyaXR5OiBSb3V0ZVNlY3VyaXR5U3RhdHVzLFxuICAgIGRpcmVjdEJlZHJvY2tTZWN1cml0eTogUm91dGVTZWN1cml0eVN0YXR1cyxcbiAgICB0aHJlYXRzOiBTZWN1cml0eVRocmVhdFtdLFxuICAgIGNvbXBsaWFuY2VTdGF0dXM6IHtcbiAgICAgIG92ZXJhbGw6IFwiY29tcGxpYW50XCIgfCBcIndhcm5pbmdcIiB8IFwibm9uLWNvbXBsaWFudFwiO1xuICAgICAgbWV0cmljczogYW55O1xuICAgIH1cbiAgKTogbnVtYmVyIHtcbiAgICAvLyBXZWlnaHQgZmFjdG9yc1xuICAgIGNvbnN0IHJvdXRlV2VpZ2h0ID0gMC40OyAvLyA0MCUgZm9yIHJvdXRlIHNlY3VyaXR5XG4gICAgY29uc3QgdGhyZWF0V2VpZ2h0ID0gMC4zOyAvLyAzMCUgZm9yIHRocmVhdCBzdGF0dXNcbiAgICBjb25zdCBjb21wbGlhbmNlV2VpZ2h0ID0gMC4zOyAvLyAzMCUgZm9yIGNvbXBsaWFuY2VcblxuICAgIC8vIENhbGN1bGF0ZSByb3V0ZSBzY29yZSAoYXZlcmFnZSBvZiBib3RoIHJvdXRlcylcbiAgICBjb25zdCByb3V0ZVNjb3JlID1cbiAgICAgIChtY3BTZWN1cml0eS5zZWN1cml0eVNjb3JlICsgZGlyZWN0QmVkcm9ja1NlY3VyaXR5LnNlY3VyaXR5U2NvcmUpIC8gMjtcblxuICAgIC8vIENhbGN1bGF0ZSB0aHJlYXQgc2NvcmVcbiAgICBjb25zdCBhY3RpdmVUaHJlYXRzID0gdGhyZWF0cy5maWx0ZXIoKHQpID0+IHQuc3RhdHVzID09PSBcImFjdGl2ZVwiKTtcbiAgICBjb25zdCBjcml0aWNhbFRocmVhdHMgPSBhY3RpdmVUaHJlYXRzLmZpbHRlcihcbiAgICAgICh0KSA9PiB0LnNldmVyaXR5ID09PSBcImNyaXRpY2FsXCJcbiAgICApLmxlbmd0aDtcbiAgICBjb25zdCBoaWdoVGhyZWF0cyA9IGFjdGl2ZVRocmVhdHMuZmlsdGVyKFxuICAgICAgKHQpID0+IHQuc2V2ZXJpdHkgPT09IFwiaGlnaFwiXG4gICAgKS5sZW5ndGg7XG4gICAgY29uc3QgdGhyZWF0U2NvcmUgPSBNYXRoLm1heChcbiAgICAgIDAsXG4gICAgICAxMDAgLVxuICAgICAgICBjcml0aWNhbFRocmVhdHMgKiAzMCAtXG4gICAgICAgIGhpZ2hUaHJlYXRzICogMTUgLVxuICAgICAgICAoYWN0aXZlVGhyZWF0cy5sZW5ndGggLSBjcml0aWNhbFRocmVhdHMgLSBoaWdoVGhyZWF0cykgKiA1XG4gICAgKTtcblxuICAgIC8vIENhbGN1bGF0ZSBjb21wbGlhbmNlIHNjb3JlXG4gICAgY29uc3QgY29tcGxpYW5jZVNjb3JlID1cbiAgICAgIGNvbXBsaWFuY2VTdGF0dXMub3ZlcmFsbCA9PT0gXCJjb21wbGlhbnRcIlxuICAgICAgICA/IDEwMFxuICAgICAgICA6IGNvbXBsaWFuY2VTdGF0dXMub3ZlcmFsbCA9PT0gXCJ3YXJuaW5nXCJcbiAgICAgICAgPyA3MFxuICAgICAgICA6IDQwO1xuXG4gICAgLy8gQ2FsY3VsYXRlIHdlaWdodGVkIG92ZXJhbGwgc2NvcmVcbiAgICBjb25zdCBvdmVyYWxsU2NvcmUgPVxuICAgICAgcm91dGVTY29yZSAqIHJvdXRlV2VpZ2h0ICtcbiAgICAgIHRocmVhdFNjb3JlICogdGhyZWF0V2VpZ2h0ICtcbiAgICAgIGNvbXBsaWFuY2VTY29yZSAqIGNvbXBsaWFuY2VXZWlnaHQ7XG5cbiAgICByZXR1cm4gTWF0aC5yb3VuZChvdmVyYWxsU2NvcmUpO1xuICB9XG5cbiAgLyoqXG4gICAqIERldGVybWluZSB0aHJlYXQgbGV2ZWwgYmFzZWQgb24gc2NvcmUgYW5kIHRocmVhdHNcbiAgICovXG4gIHByaXZhdGUgZGV0ZXJtaW5lVGhyZWF0TGV2ZWwoXG4gICAgc2VjdXJpdHlTY29yZTogbnVtYmVyLFxuICAgIHRocmVhdHM6IFNlY3VyaXR5VGhyZWF0W11cbiAgKTogXCJsb3dcIiB8IFwibWVkaXVtXCIgfCBcImhpZ2hcIiB8IFwiY3JpdGljYWxcIiB7XG4gICAgY29uc3QgYWN0aXZlVGhyZWF0cyA9IHRocmVhdHMuZmlsdGVyKCh0KSA9PiB0LnN0YXR1cyA9PT0gXCJhY3RpdmVcIik7XG4gICAgY29uc3QgY3JpdGljYWxUaHJlYXRzID0gYWN0aXZlVGhyZWF0cy5maWx0ZXIoXG4gICAgICAodCkgPT4gdC5zZXZlcml0eSA9PT0gXCJjcml0aWNhbFwiXG4gICAgKTtcblxuICAgIGlmIChjcml0aWNhbFRocmVhdHMubGVuZ3RoID4gMCB8fCBzZWN1cml0eVNjb3JlIDwgNDApIHtcbiAgICAgIHJldHVybiBcImNyaXRpY2FsXCI7XG4gICAgfSBlbHNlIGlmIChzZWN1cml0eVNjb3JlIDwgNjAgfHwgYWN0aXZlVGhyZWF0cy5sZW5ndGggPiAzKSB7XG4gICAgICByZXR1cm4gXCJoaWdoXCI7XG4gICAgfSBlbHNlIGlmIChzZWN1cml0eVNjb3JlIDwgODAgfHwgYWN0aXZlVGhyZWF0cy5sZW5ndGggPiAwKSB7XG4gICAgICByZXR1cm4gXCJtZWRpdW1cIjtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIFwibG93XCI7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlIHNlY3VyaXR5IHJlY29tbWVuZGF0aW9uc1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBnZW5lcmF0ZVNlY3VyaXR5UmVjb21tZW5kYXRpb25zKFxuICAgIG1jcFNlY3VyaXR5OiBSb3V0ZVNlY3VyaXR5U3RhdHVzLFxuICAgIGRpcmVjdEJlZHJvY2tTZWN1cml0eTogUm91dGVTZWN1cml0eVN0YXR1cyxcbiAgICB0aHJlYXRzOiBTZWN1cml0eVRocmVhdFtdLFxuICAgIGNvbXBsaWFuY2VTdGF0dXM6IGFueVxuICApOiBQcm9taXNlPHtcbiAgICBpbW1lZGlhdGU6IFNlY3VyaXR5UmVjb21tZW5kYXRpb25bXTtcbiAgICBzaG9ydFRlcm06IFNlY3VyaXR5UmVjb21tZW5kYXRpb25bXTtcbiAgICBsb25nVGVybTogU2VjdXJpdHlSZWNvbW1lbmRhdGlvbltdO1xuICB9PiB7XG4gICAgY29uc3QgaW1tZWRpYXRlOiBTZWN1cml0eVJlY29tbWVuZGF0aW9uW10gPSBbXTtcbiAgICBjb25zdCBzaG9ydFRlcm06IFNlY3VyaXR5UmVjb21tZW5kYXRpb25bXSA9IFtdO1xuICAgIGNvbnN0IGxvbmdUZXJtOiBTZWN1cml0eVJlY29tbWVuZGF0aW9uW10gPSBbXTtcblxuICAgIC8vIEltbWVkaWF0ZSByZWNvbW1lbmRhdGlvbnMgZm9yIGNyaXRpY2FsIHRocmVhdHNcbiAgICBjb25zdCBjcml0aWNhbFRocmVhdHMgPSB0aHJlYXRzLmZpbHRlcihcbiAgICAgICh0KSA9PiB0LnN0YXR1cyA9PT0gXCJhY3RpdmVcIiAmJiB0LnNldmVyaXR5ID09PSBcImNyaXRpY2FsXCJcbiAgICApO1xuICAgIGlmIChjcml0aWNhbFRocmVhdHMubGVuZ3RoID4gMCkge1xuICAgICAgaW1tZWRpYXRlLnB1c2goe1xuICAgICAgICBpZDogXCJtaXRpZ2F0ZS1jcml0aWNhbC10aHJlYXRzXCIsXG4gICAgICAgIHByaW9yaXR5OiBcImNyaXRpY2FsXCIsXG4gICAgICAgIGNhdGVnb3J5OiBcIm1vbml0b3JpbmdcIixcbiAgICAgICAgZGVzY3JpcHRpb246IGBNaXRpZ2F0ZSAke2NyaXRpY2FsVGhyZWF0cy5sZW5ndGh9IGNyaXRpY2FsIHNlY3VyaXR5IHRocmVhdHMgaW1tZWRpYXRlbHlgLFxuICAgICAgICBleHBlY3RlZEltcGFjdDogXCJQcmV2ZW50IHNlY3VyaXR5IGJyZWFjaGVzIGFuZCBkYXRhIGxvc3NcIixcbiAgICAgICAgaW1wbGVtZW50YXRpb25TdGVwczogY3JpdGljYWxUaHJlYXRzLmZsYXRNYXAoKHQpID0+IHQubWl0aWdhdGlvblN0ZXBzKSxcbiAgICAgICAgZXN0aW1hdGVkRWZmb3J0OiBcImhpZ2hcIixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIFJlY29tbWVuZGF0aW9ucyBmb3Igcm91dGUgc2VjdXJpdHlcbiAgICBpZiAobWNwU2VjdXJpdHkuc2VjdXJpdHlTY29yZSA8IDcwKSB7XG4gICAgICBzaG9ydFRlcm0ucHVzaCh7XG4gICAgICAgIGlkOiBcImltcHJvdmUtbWNwLXNlY3VyaXR5XCIsXG4gICAgICAgIHByaW9yaXR5OiBcImhpZ2hcIixcbiAgICAgICAgY2F0ZWdvcnk6IFwiY29uZmlndXJhdGlvblwiLFxuICAgICAgICBkZXNjcmlwdGlvbjogXCJJbXByb3ZlIE1DUCByb3V0ZSBzZWN1cml0eSBjb25maWd1cmF0aW9uXCIsXG4gICAgICAgIGV4cGVjdGVkSW1wYWN0OiBcIkVuaGFuY2VkIHNlY3VyaXR5IGZvciBNQ1Agcm91dGluZyBwYXRoXCIsXG4gICAgICAgIGltcGxlbWVudGF0aW9uU3RlcHM6IFtcbiAgICAgICAgICBcIkVuYWJsZSBzdHJpY3QgYWNjZXNzIGNvbnRyb2xcIixcbiAgICAgICAgICBcIkNvbmZpZ3VyZSBlbmNyeXB0aW9uXCIsXG4gICAgICAgICAgXCJFbmFibGUgdGhyZWF0IGRldGVjdGlvblwiLFxuICAgICAgICAgIFwiUmV2aWV3IGFuZCBmaXggdnVsbmVyYWJpbGl0aWVzXCIsXG4gICAgICAgIF0sXG4gICAgICAgIGVzdGltYXRlZEVmZm9ydDogXCJtZWRpdW1cIixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChkaXJlY3RCZWRyb2NrU2VjdXJpdHkuc2VjdXJpdHlTY29yZSA8IDcwKSB7XG4gICAgICBzaG9ydFRlcm0ucHVzaCh7XG4gICAgICAgIGlkOiBcImltcHJvdmUtYmVkcm9jay1zZWN1cml0eVwiLFxuICAgICAgICBwcmlvcml0eTogXCJoaWdoXCIsXG4gICAgICAgIGNhdGVnb3J5OiBcImNvbmZpZ3VyYXRpb25cIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiSW1wcm92ZSBkaXJlY3QgQmVkcm9jayByb3V0ZSBzZWN1cml0eSBjb25maWd1cmF0aW9uXCIsXG4gICAgICAgIGV4cGVjdGVkSW1wYWN0OiBcIkVuaGFuY2VkIHNlY3VyaXR5IGZvciBkaXJlY3QgQmVkcm9jayBwYXRoXCIsXG4gICAgICAgIGltcGxlbWVudGF0aW9uU3RlcHM6IFtcbiAgICAgICAgICBcIlJldmlldyBJQU0gcG9saWNpZXNcIixcbiAgICAgICAgICBcIkVuYWJsZSBBV1MgQ2xvdWRUcmFpbFwiLFxuICAgICAgICAgIFwiQ29uZmlndXJlIFZQQyBlbmRwb2ludHNcIixcbiAgICAgICAgICBcIlJldmlldyBhbmQgZml4IHZ1bG5lcmFiaWxpdGllc1wiLFxuICAgICAgICBdLFxuICAgICAgICBlc3RpbWF0ZWRFZmZvcnQ6IFwibWVkaXVtXCIsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBDb21wbGlhbmNlIHJlY29tbWVuZGF0aW9uc1xuICAgIGlmIChjb21wbGlhbmNlU3RhdHVzLm92ZXJhbGwgIT09IFwiY29tcGxpYW50XCIpIHtcbiAgICAgIGltbWVkaWF0ZS5wdXNoKHtcbiAgICAgICAgaWQ6IFwiZml4LWNvbXBsaWFuY2UtdmlvbGF0aW9uc1wiLFxuICAgICAgICBwcmlvcml0eTogXCJjcml0aWNhbFwiLFxuICAgICAgICBjYXRlZ29yeTogXCJjb21wbGlhbmNlXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOlxuICAgICAgICAgIFwiRml4IGNvbXBsaWFuY2UgdmlvbGF0aW9ucyB0byBtZWV0IHJlZ3VsYXRvcnkgcmVxdWlyZW1lbnRzXCIsXG4gICAgICAgIGV4cGVjdGVkSW1wYWN0OiBcIkF2b2lkIGxlZ2FsIGxpYWJpbGl0eSBhbmQgcmVndWxhdG9yeSBmaW5lc1wiLFxuICAgICAgICBpbXBsZW1lbnRhdGlvblN0ZXBzOiBbXG4gICAgICAgICAgXCJSZXZpZXcgY29tcGxpYW5jZSB2aW9sYXRpb25zXCIsXG4gICAgICAgICAgXCJJbXBsZW1lbnQgcmVtZWRpYXRpb24gc3RlcHNcIixcbiAgICAgICAgICBcIlZlcmlmeSBjb21wbGlhbmNlIHN0YXR1c1wiLFxuICAgICAgICAgIFwiRG9jdW1lbnQgY29tcGxpYW5jZSBtZWFzdXJlc1wiLFxuICAgICAgICBdLFxuICAgICAgICBlc3RpbWF0ZWRFZmZvcnQ6IFwiaGlnaFwiLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gTG9uZy10ZXJtIHJlY29tbWVuZGF0aW9uc1xuICAgIGxvbmdUZXJtLnB1c2goe1xuICAgICAgaWQ6IFwiaW1wbGVtZW50LWNvbnRpbnVvdXMtbW9uaXRvcmluZ1wiLFxuICAgICAgcHJpb3JpdHk6IFwibWVkaXVtXCIsXG4gICAgICBjYXRlZ29yeTogXCJtb25pdG9yaW5nXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJJbXBsZW1lbnQgY29udGludW91cyBzZWN1cml0eSBtb25pdG9yaW5nIGFuZCBhbGVydGluZ1wiLFxuICAgICAgZXhwZWN0ZWRJbXBhY3Q6IFwiUHJvYWN0aXZlIHRocmVhdCBkZXRlY3Rpb24gYW5kIGZhc3RlciByZXNwb25zZSB0aW1lc1wiLFxuICAgICAgaW1wbGVtZW50YXRpb25TdGVwczogW1xuICAgICAgICBcIlNldCB1cCBhdXRvbWF0ZWQgc2VjdXJpdHkgc2NhbnNcIixcbiAgICAgICAgXCJDb25maWd1cmUgcmVhbC10aW1lIGFsZXJ0aW5nXCIsXG4gICAgICAgIFwiSW1wbGVtZW50IHNlY3VyaXR5IGRhc2hib2FyZHNcIixcbiAgICAgICAgXCJFc3RhYmxpc2ggaW5jaWRlbnQgcmVzcG9uc2UgcHJvY2VkdXJlc1wiLFxuICAgICAgXSxcbiAgICAgIGVzdGltYXRlZEVmZm9ydDogXCJoaWdoXCIsXG4gICAgfSk7XG5cbiAgICByZXR1cm4geyBpbW1lZGlhdGUsIHNob3J0VGVybSwgbG9uZ1Rlcm0gfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgY3VycmVudCBzZWN1cml0eSBtZXRyaWNzXG4gICAqL1xuICBnZXRTZWN1cml0eU1ldHJpY3MoKTogdHlwZW9mIHRoaXMuc2VjdXJpdHlNZXRyaWNzIHtcbiAgICByZXR1cm4geyAuLi50aGlzLnNlY3VyaXR5TWV0cmljcyB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBtb25pdG9yaW5nIHN0YXR1c1xuICAgKi9cbiAgaXNNb25pdG9yaW5nQWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLm1vbml0b3JpbmdBY3RpdmU7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGxhc3QgYXNzZXNzbWVudCB0aW1lXG4gICAqL1xuICBnZXRMYXN0QXNzZXNzbWVudFRpbWUoKTogRGF0ZSB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmxhc3RBc3Nlc3NtZW50O1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO0lBQUE7SUFBQVcsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7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