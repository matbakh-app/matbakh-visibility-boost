{"version":3,"names":["cov_205m929pp4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","basic_logger_1","require","AuditTrailSystem","constructor","config","lastEventHash","eventCounter","Object","assign","enableAuditTrail","enableIntegrityChecking","enablePIILogging","retentionDays","complianceMode","encryptionEnabled","anonymizationEnabled","logger","BasicLogger","logRequestStart","requestId","request","userId","tenantId","event","eventId","generateEventId","timestamp","Date","toISOString","eventType","hashUserId","contentHash","hashContent","prompt","contentLength","length","contentType","dataClassification","classifyContent","context","complianceStatus","gdprLawfulBasis","determineLawfulBasis","dataProcessingPurpose","eventHash","previousEventHash","calculateEventHash","persistAuditEvent","info","logProviderSelection","selectedProvider","modelId","reason","alternatives","provider","operation","metadata","selectionReason","alternativeProviders","logSafetyCheck","safetyResult","safetyCheckResult","allowed","confidence","violationTypes","violations","map","v","processingTimeMs","piiViolations","filter","piiDetected","piiTypes","details","logComplianceViolation","logRequestComplete","response","text","_a","latencyMs","costEuro","tokensUsed","success","input","output","_b","split","error","message","logProviderFallback","fromProvider","toProvider","fallbackReason","violationType","logCostTracking","logHybridRoutingDecision","routingDecision","operationType","priority","routingReason","selectedRoute","fallbackAvailable","estimatedLatency","logDirectBedrockOperation","complianceValidation","routingPath","gdprCompliant","piiRedacted","auditLogged","logMCPRoutingOperation","queueSize","retryCount","logIntelligentRoutingFallback","fromRoute","toRoute","primaryError","warn","logRouteHealthCheck","route","isHealthy","successRate","consecutiveFailures","now","routeHealth","healthStatus","logRoutingOptimization","recommendations","metrics","totalRequests","directRouteUsage","mcpRouteUsage","fallbackUsage","averageLatency","directUsagePercent","mcpUsagePercent","fallbackUsagePercent","recommendationsCount","logGDPRComplianceValidation","isCompliant","validationReason","logPIIRedaction","redactionApplied","piiViolationsCount","originalLength","redactedLength","isEmergencyRedaction","redactionPercentage","logMCPFallbackInitiation","correlationId","primaryFailureReason","auditEvent","fallbackRoute","logEvent","logMCPFallbackCompletion","attempts","totalLatency","logMCPFallbackReliabilityIssue","currentSuccessRate","targetSuccessRate","generateCorrelationId","severity","eventData","generateComplianceReport","startDate","endDate","reportId","generatedAt","timeRange","summary","totalEvents","complianceViolations","piiDetections","safetyBlocks","totalCost","verifyIntegrity","events","valid","errors","i","calculatedHash","push","previousEvent","content","char","charCodeAt","Math","abs","toString","reduce","a","pii","domain","tenant","eventString","JSON","stringify","keys","sort","console","log","logCostOptimizationStart","strategy","targetReduction","action","logCostOptimizationStop","achievedReduction","totalSavings","logCostAwareRoutingDecision","decision","estimatedCost","costSavings","costEfficiencyScore","alternativeRouteCosts","fromEntries","logCostPerformanceEvaluation","costReductionPercentage","evaluationPeriod","logCostOptimizationRecommendationApplied","recommendationId","expectedSavings","logCostOptimizationEffectiveness","actualReduction","targetMet","exports","auditTrail","createAuditTrail"],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/audit-trail-system.ts"],"sourcesContent":["/**\n * AI Operations Audit Trail System\n *\n * Comprehensive audit logging for all AI operations with GDPR compliance\n * Provides structured audit logs for compliance reporting and security monitoring\n */\n\nimport { BasicLogger } from \"./basic-logger\";\nimport { SafetyCheckResult } from \"./safety/guardrails-service\";\nimport { AiRequest, AiResponse, Provider, RouterInputContext } from \"./types\";\n\nexport type AuditEventType =\n  | \"ai_request_start\"\n  | \"ai_request_complete\"\n  | \"ai_request_error\"\n  | \"provider_selection\"\n  | \"provider_fallback\"\n  | \"safety_check\"\n  | \"pii_detection\"\n  | \"content_filtering\"\n  | \"cache_operation\"\n  | \"cost_tracking\"\n  | \"cost_optimization\"\n  | \"cost_aware_routing\"\n  | \"performance_metrics\"\n  | \"compliance_violation\"\n  | \"data_retention\"\n  | \"user_consent\"\n  // Hybrid routing specific events\n  | \"hybrid_routing_decision\"\n  | \"direct_bedrock_operation\"\n  | \"mcp_routing_operation\"\n  | \"intelligent_routing_fallback\"\n  | \"route_health_check\"\n  | \"routing_optimization\"\n  | \"hybrid_compliance_validation\"\n  | \"emergency_pii_redaction\"\n  | \"gdpr_compliance_validation\"\n  | \"pii_redaction\"\n  // MCP fallback reliability events\n  | \"mcp_fallback_initiation\"\n  | \"mcp_fallback_completion\"\n  | \"mcp_fallback_reliability_issue\";\n\nexport type ComplianceStatus =\n  | \"compliant\"\n  | \"violation\"\n  | \"warning\"\n  | \"pending\";\n\nexport interface AuditEvent {\n  // Core identification\n  eventId: string;\n  timestamp: string;\n  eventType: AuditEventType;\n  requestId: string;\n\n  // User and context\n  userId?: string;\n  tenantId?: string;\n  sessionId?: string;\n\n  // AI operation details\n  provider?: Provider;\n  modelId?: string;\n  operation?: string;\n\n  // Content metadata (no actual content for privacy)\n  contentHash?: string;\n  contentLength?: number;\n  contentType?: \"prompt\" | \"response\" | \"tool_call\" | \"system_message\";\n\n  // Performance and cost\n  latencyMs?: number;\n  costEuro?: number;\n  tokensUsed?: {\n    input: number;\n    output: number;\n  };\n\n  // Safety and compliance\n  safetyCheckResult?: {\n    allowed: boolean;\n    confidence: number;\n    violationTypes: string[];\n    processingTimeMs: number;\n  };\n\n  // PII and data protection\n  piiDetected?: boolean;\n  piiTypes?: string[];\n  dataClassification?: \"public\" | \"internal\" | \"confidential\" | \"restricted\";\n  retentionPolicy?: string;\n\n  // Compliance tracking\n  complianceStatus: ComplianceStatus;\n  gdprLawfulBasis?: string;\n  consentId?: string;\n  dataProcessingPurpose?: string;\n\n  // Error handling\n  error?: {\n    type: string;\n    message: string;\n    code?: string;\n  };\n\n  // Hybrid routing specific fields\n  routingDecision?: {\n    selectedRoute: \"direct\" | \"mcp\";\n    reason: string;\n    fallbackAvailable: boolean;\n    estimatedLatency: number;\n    correlationId: string;\n    primaryRouteHealth?: boolean;\n    fallbackRouteHealth?: boolean;\n  };\n\n  // Route health information\n  routeHealth?: {\n    route: \"direct\" | \"mcp\";\n    isHealthy: boolean;\n    latencyMs: number;\n    successRate: number;\n    consecutiveFailures: number;\n  };\n\n  // Additional metadata\n  metadata?: Record<string, any>;\n\n  // Audit trail integrity\n  previousEventHash?: string;\n  eventHash: string;\n}\n\nexport interface AuditTrailConfig {\n  enableAuditTrail: boolean;\n  enableIntegrityChecking: boolean;\n  enablePIILogging: boolean;\n  retentionDays: number;\n  complianceMode: \"strict\" | \"standard\" | \"minimal\";\n  encryptionEnabled: boolean;\n  anonymizationEnabled: boolean;\n}\n\nexport interface ComplianceReport {\n  reportId: string;\n  generatedAt: string;\n  timeRange: {\n    start: string;\n    end: string;\n  };\n  summary: {\n    totalEvents: number;\n    complianceViolations: number;\n    piiDetections: number;\n    safetyBlocks: number;\n    averageLatency: number;\n    totalCost: number;\n  };\n  violations: AuditEvent[];\n  recommendations: string[];\n}\n\n/**\n * Audit Trail System for AI Operations\n */\nexport class AuditTrailSystem {\n  private logger: BasicLogger;\n  private config: AuditTrailConfig;\n  private lastEventHash: string = \"\";\n  private eventCounter: number = 0;\n\n  constructor(config: Partial<AuditTrailConfig> = {}) {\n    this.config = {\n      enableAuditTrail: true,\n      enableIntegrityChecking: true,\n      enablePIILogging: false, // GDPR compliance - no PII in logs by default\n      retentionDays: 90,\n      complianceMode: \"standard\",\n      encryptionEnabled: true,\n      anonymizationEnabled: true,\n      ...config,\n    };\n\n    this.logger = new BasicLogger(\"audit-trail-system\");\n  }\n\n  /**\n   * Log AI request start\n   */\n  async logRequestStart(\n    requestId: string,\n    request: AiRequest,\n    userId?: string,\n    tenantId?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"ai_request_start\",\n      requestId,\n      userId: this.config.anonymizationEnabled\n        ? this.hashUserId(userId)\n        : userId,\n      tenantId,\n      contentHash: await this.hashContent(request.prompt),\n      contentLength: request.prompt.length,\n      contentType: \"prompt\",\n      dataClassification: this.classifyContent(request.context),\n      complianceStatus: \"pending\",\n      gdprLawfulBasis: this.determineLawfulBasis(request.context),\n      dataProcessingPurpose: \"ai_analysis\",\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"AI request audit logged\", {\n      requestId,\n      eventId: event.eventId,\n      eventType: event.eventType,\n    });\n  }\n\n  /**\n   * Log provider selection decision\n   */\n  async logProviderSelection(\n    requestId: string,\n    selectedProvider: Provider,\n    modelId: string,\n    reason: string,\n    alternatives?: Provider[]\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"provider_selection\",\n      requestId,\n      provider: selectedProvider,\n      modelId,\n      operation: \"provider_routing\",\n      complianceStatus: \"compliant\",\n      metadata: {\n        selectionReason: reason,\n        alternativeProviders: alternatives,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log safety check results\n   */\n  async logSafetyCheck(\n    requestId: string,\n    provider: Provider,\n    safetyResult: SafetyCheckResult,\n    contentType: \"prompt\" | \"response\"\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"safety_check\",\n      requestId,\n      provider,\n      contentType,\n      safetyCheckResult: {\n        allowed: safetyResult.allowed,\n        confidence: safetyResult.confidence,\n        violationTypes: safetyResult.violations.map((v) => v.type),\n        processingTimeMs: safetyResult.processingTimeMs,\n      },\n      complianceStatus: safetyResult.allowed ? \"compliant\" : \"violation\",\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    // Log PII detection if found\n    const piiViolations = safetyResult.violations.filter(\n      (v) => v.type === \"PII\"\n    );\n    if (piiViolations.length > 0) {\n      event.piiDetected = true;\n      event.piiTypes = piiViolations.map((v) => v.details);\n      event.eventType = \"pii_detection\";\n    }\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    // Log compliance violation if safety check failed\n    if (!safetyResult.allowed) {\n      await this.logComplianceViolation(requestId, \"safety_violation\", {\n        violations: safetyResult.violations,\n        provider,\n      });\n    }\n  }\n\n  /**\n   * Log AI request completion\n   */\n  async logRequestComplete(\n    requestId: string,\n    response: AiResponse,\n    userId?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"ai_request_complete\",\n      requestId,\n      userId: this.config.anonymizationEnabled\n        ? this.hashUserId(userId)\n        : userId,\n      provider: response.provider,\n      modelId: response.modelId,\n      contentHash: response.text\n        ? await this.hashContent(response.text)\n        : undefined,\n      contentLength: response.text?.length,\n      contentType: \"response\",\n      latencyMs: response.latencyMs,\n      costEuro: response.costEuro,\n      tokensUsed: response.success\n        ? {\n            input: 0, // Would need to be passed from request\n            output: response.text?.split(\" \").length || 0,\n          }\n        : undefined,\n      complianceStatus: response.success ? \"compliant\" : \"violation\",\n      error: response.error\n        ? {\n            type: \"ai_response_error\",\n            message: response.error,\n          }\n        : undefined,\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log provider fallback\n   */\n  async logProviderFallback(\n    requestId: string,\n    fromProvider: Provider,\n    toProvider: Provider,\n    reason: string,\n    error?: Error\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"provider_fallback\",\n      requestId,\n      provider: fromProvider,\n      operation: \"fallback_routing\",\n      complianceStatus: \"warning\",\n      error: error\n        ? {\n            type: error.name,\n            message: error.message,\n          }\n        : undefined,\n      metadata: {\n        fromProvider,\n        toProvider,\n        fallbackReason: reason,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log compliance violation\n   */\n  async logComplianceViolation(\n    requestId: string,\n    violationType: string,\n    details: Record<string, any>\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"compliance_violation\",\n      requestId,\n      complianceStatus: \"violation\",\n      metadata: {\n        violationType,\n        details,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    // Alert on compliance violations\n    this.logger.error(\"Compliance violation detected\", undefined, {\n      requestId,\n      violationType,\n      eventId: event.eventId,\n    });\n  }\n\n  /**\n   * Log cost tracking\n   */\n  async logCostTracking(\n    requestId: string,\n    provider: Provider,\n    modelId: string,\n    costEuro: number,\n    tokensUsed: { input: number; output: number }\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_tracking\",\n      requestId,\n      provider,\n      modelId,\n      costEuro,\n      tokensUsed,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log hybrid routing decision\n   */\n  async logHybridRoutingDecision(\n    requestId: string,\n    routingDecision: {\n      selectedRoute: \"direct\" | \"mcp\";\n      reason: string;\n      fallbackAvailable: boolean;\n      estimatedLatency: number;\n      correlationId: string;\n      primaryRouteHealth?: boolean;\n      fallbackRouteHealth?: boolean;\n    },\n    operationType: string,\n    priority: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"hybrid_routing_decision\",\n      requestId,\n      operation: \"hybrid_routing\",\n      routingDecision,\n      complianceStatus: \"compliant\",\n      metadata: {\n        operationType,\n        priority,\n        routingReason: routingDecision.reason,\n        selectedRoute: routingDecision.selectedRoute,\n        fallbackAvailable: routingDecision.fallbackAvailable,\n        estimatedLatency: routingDecision.estimatedLatency,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Hybrid routing decision logged\", {\n      requestId,\n      eventId: event.eventId,\n      selectedRoute: routingDecision.selectedRoute,\n      reason: routingDecision.reason,\n    });\n  }\n\n  /**\n   * Log direct Bedrock operation\n   */\n  async logDirectBedrockOperation(\n    requestId: string,\n    operationType: string,\n    priority: string,\n    latencyMs: number,\n    success: boolean,\n    tokensUsed?: { input: number; output: number },\n    costEuro?: number,\n    error?: string,\n    piiDetected?: boolean,\n    complianceValidation?: {\n      gdprCompliant: boolean;\n      piiRedacted: boolean;\n      auditLogged: boolean;\n    }\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"direct_bedrock_operation\",\n      requestId,\n      provider: \"bedrock\",\n      operation: operationType,\n      latencyMs,\n      tokensUsed,\n      costEuro,\n      piiDetected,\n      complianceStatus: success ? \"compliant\" : \"violation\",\n      error: error\n        ? {\n            type: \"direct_bedrock_error\",\n            message: error,\n          }\n        : undefined,\n      metadata: {\n        operationType,\n        priority,\n        routingPath: \"direct_bedrock\",\n        success,\n        gdprCompliant: complianceValidation?.gdprCompliant,\n        piiRedacted: complianceValidation?.piiRedacted,\n        auditLogged: complianceValidation?.auditLogged,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Direct Bedrock operation logged\", {\n      requestId,\n      eventId: event.eventId,\n      operationType,\n      success,\n      latencyMs,\n    });\n  }\n\n  /**\n   * Log MCP routing operation\n   */\n  async logMCPRoutingOperation(\n    requestId: string,\n    operationType: string,\n    priority: string,\n    latencyMs: number,\n    success: boolean,\n    queueSize?: number,\n    retryCount?: number,\n    error?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"mcp_routing_operation\",\n      requestId,\n      provider: \"bedrock\", // MCP routes to Bedrock\n      operation: operationType,\n      latencyMs,\n      complianceStatus: success ? \"compliant\" : \"violation\",\n      error: error\n        ? {\n            type: \"mcp_routing_error\",\n            message: error,\n          }\n        : undefined,\n      metadata: {\n        operationType,\n        priority,\n        routingPath: \"mcp_integration\",\n        success,\n        queueSize,\n        retryCount,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"MCP routing operation logged\", {\n      requestId,\n      eventId: event.eventId,\n      operationType,\n      success,\n      latencyMs,\n    });\n  }\n\n  /**\n   * Log intelligent routing fallback\n   */\n  async logIntelligentRoutingFallback(\n    requestId: string,\n    fromRoute: \"direct\" | \"mcp\",\n    toRoute: \"direct\" | \"mcp\",\n    reason: string,\n    operationType: string,\n    primaryError?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"intelligent_routing_fallback\",\n      requestId,\n      operation: \"routing_fallback\",\n      complianceStatus: \"warning\",\n      error: primaryError\n        ? {\n            type: \"primary_route_error\",\n            message: primaryError,\n          }\n        : undefined,\n      metadata: {\n        fromRoute,\n        toRoute,\n        fallbackReason: reason,\n        operationType,\n        primaryError,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.warn(\"Intelligent routing fallback logged\", {\n      requestId,\n      eventId: event.eventId,\n      fromRoute,\n      toRoute,\n      reason,\n    });\n  }\n\n  /**\n   * Log route health check\n   */\n  async logRouteHealthCheck(\n    route: \"direct\" | \"mcp\",\n    isHealthy: boolean,\n    latencyMs: number,\n    successRate: number,\n    consecutiveFailures: number,\n    error?: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"route_health_check\",\n      requestId: `health-check-${route}-${Date.now()}`,\n      operation: \"health_monitoring\",\n      latencyMs,\n      routeHealth: {\n        route,\n        isHealthy,\n        latencyMs,\n        successRate,\n        consecutiveFailures,\n      },\n      complianceStatus: isHealthy ? \"compliant\" : \"warning\",\n      error: error\n        ? {\n            type: \"health_check_error\",\n            message: error,\n          }\n        : undefined,\n      metadata: {\n        route,\n        healthStatus: isHealthy ? \"healthy\" : \"unhealthy\",\n        successRate,\n        consecutiveFailures,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    if (!isHealthy) {\n      this.logger.warn(\"Route health check failed\", {\n        route,\n        eventId: event.eventId,\n        consecutiveFailures,\n        error,\n      });\n    }\n  }\n\n  /**\n   * Log routing optimization\n   */\n  async logRoutingOptimization(\n    recommendations: string[],\n    metrics: {\n      totalRequests: number;\n      directRouteUsage: number;\n      mcpRouteUsage: number;\n      fallbackUsage: number;\n      averageLatency: number;\n      successRate: number;\n    }\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"routing_optimization\",\n      requestId: `optimization-${Date.now()}`,\n      operation: \"routing_analysis\",\n      complianceStatus: \"compliant\",\n      metadata: {\n        recommendations,\n        totalRequests: metrics.totalRequests,\n        directRouteUsage: metrics.directRouteUsage,\n        mcpRouteUsage: metrics.mcpRouteUsage,\n        fallbackUsage: metrics.fallbackUsage,\n        averageLatency: metrics.averageLatency,\n        successRate: metrics.successRate,\n        directUsagePercent:\n          (metrics.directRouteUsage / metrics.totalRequests) * 100,\n        mcpUsagePercent: (metrics.mcpRouteUsage / metrics.totalRequests) * 100,\n        fallbackUsagePercent:\n          (metrics.fallbackUsage / metrics.totalRequests) * 100,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Routing optimization logged\", {\n      eventId: event.eventId,\n      recommendationsCount: recommendations.length,\n      totalRequests: metrics.totalRequests,\n    });\n  }\n\n  /**\n   * Log GDPR compliance validation for hybrid routing\n   */\n  async logGDPRComplianceValidation(\n    requestId: string,\n    routingPath: \"direct_bedrock\" | \"mcp_integration\",\n    operationType: string,\n    isCompliant: boolean,\n    reason?: string,\n    processingTimeMs?: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"gdpr_compliance_validation\",\n      requestId,\n      operation: \"gdpr_validation\",\n      complianceStatus: isCompliant ? \"compliant\" : \"violation\",\n      gdprLawfulBasis: isCompliant ? \"legitimate_interests\" : undefined,\n      error: !isCompliant\n        ? {\n            type: \"gdpr_compliance_error\",\n            message: reason || \"GDPR compliance validation failed\",\n          }\n        : undefined,\n      metadata: {\n        routingPath,\n        operationType,\n        gdprCompliant: isCompliant,\n        validationReason: reason,\n        processingTimeMs,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    if (!isCompliant) {\n      this.logger.error(\"GDPR compliance validation failed\", undefined, {\n        requestId,\n        eventId: event.eventId,\n        routingPath,\n        reason,\n      });\n    }\n  }\n\n  /**\n   * Log PII redaction for hybrid routing\n   */\n  async logPIIRedaction(\n    requestId: string,\n    routingPath: \"direct_bedrock\" | \"mcp_integration\",\n    operationType: string,\n    redactionApplied: boolean,\n    piiViolationsCount: number,\n    originalLength?: number,\n    redactedLength?: number,\n    isEmergencyRedaction?: boolean\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const eventType = isEmergencyRedaction\n      ? \"emergency_pii_redaction\"\n      : \"pii_redaction\";\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType,\n      requestId,\n      operation: \"pii_redaction\",\n      piiDetected: piiViolationsCount > 0,\n      complianceStatus: redactionApplied ? \"compliant\" : \"violation\",\n      gdprLawfulBasis: \"data_protection\",\n      metadata: {\n        routingPath,\n        operationType,\n        redactionApplied,\n        piiViolationsCount,\n        originalLength,\n        redactedLength,\n        isEmergencyRedaction,\n        redactionPercentage:\n          originalLength && redactedLength\n            ? ((originalLength - redactedLength) / originalLength) * 100\n            : 0,\n      },\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"PII redaction logged\", {\n      requestId,\n      eventId: event.eventId,\n      routingPath,\n      redactionApplied,\n      piiViolationsCount,\n      isEmergencyRedaction,\n    });\n  }\n\n  /**\n   * Log MCP fallback initiation\n   */\n  async logMCPFallbackInitiation(\n    correlationId: string,\n    operation: string,\n    priority: string,\n    primaryFailureReason: string\n  ): Promise<void> {\n    const auditEvent = {\n      eventType: \"mcp_fallback_initiation\" as const,\n      requestId: correlationId,\n      timestamp: new Date(),\n      metadata: {\n        operation,\n        priority,\n        primaryFailureReason,\n        fallbackRoute: \"mcp\",\n      },\n    };\n\n    await this.logEvent(auditEvent);\n  }\n\n  /**\n   * Log MCP fallback completion\n   */\n  async logMCPFallbackCompletion(\n    correlationId: string,\n    success: boolean,\n    attempts: number,\n    totalLatency: number,\n    error?: string\n  ): Promise<void> {\n    const auditEvent = {\n      eventType: \"mcp_fallback_completion\" as const,\n      requestId: correlationId,\n      timestamp: new Date(),\n      metadata: {\n        success,\n        attempts,\n        totalLatency,\n        error,\n        fallbackRoute: \"mcp\",\n      },\n    };\n\n    await this.logEvent(auditEvent);\n  }\n\n  /**\n   * Log MCP fallback reliability issue\n   */\n  async logMCPFallbackReliabilityIssue(\n    currentSuccessRate: number,\n    targetSuccessRate: number,\n    recommendations: string[]\n  ): Promise<void> {\n    const auditEvent = {\n      eventType: \"mcp_fallback_reliability_issue\" as const,\n      requestId: this.generateCorrelationId(),\n      timestamp: new Date(),\n      metadata: {\n        currentSuccessRate,\n        targetSuccessRate,\n        recommendations,\n        severity: currentSuccessRate < 0.95 ? \"high\" : \"medium\",\n      },\n    };\n\n    await this.logEvent(auditEvent);\n  }\n\n  /**\n   * Log general event (flexible method for custom hybrid routing events)\n   */\n  async logEvent(eventData: {\n    eventType: AuditEventType;\n    requestId: string;\n    provider?: Provider;\n    complianceStatus: ComplianceStatus;\n    metadata?: Record<string, any>;\n    error?: {\n      type: string;\n      message: string;\n    };\n  }): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: eventData.eventType,\n      requestId: eventData.requestId,\n      provider: eventData.provider,\n      complianceStatus: eventData.complianceStatus,\n      error: eventData.error,\n      metadata: eventData.metadata,\n      eventHash: \"\",\n      previousEventHash: this.lastEventHash,\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    this.lastEventHash = event.eventHash;\n\n    await this.persistAuditEvent(event);\n\n    this.logger.info(\"Custom audit event logged\", {\n      requestId: eventData.requestId,\n      eventId: event.eventId,\n      eventType: eventData.eventType,\n    });\n  }\n\n  /**\n   * Generate compliance report\n   */\n  async generateComplianceReport(\n    startDate: Date,\n    endDate: Date\n  ): Promise<ComplianceReport> {\n    // This would typically query a database\n    // For now, return a mock report structure\n    const reportId = this.generateEventId();\n\n    return {\n      reportId,\n      generatedAt: new Date().toISOString(),\n      timeRange: {\n        start: startDate.toISOString(),\n        end: endDate.toISOString(),\n      },\n      summary: {\n        totalEvents: 0,\n        complianceViolations: 0,\n        piiDetections: 0,\n        safetyBlocks: 0,\n        averageLatency: 0,\n        totalCost: 0,\n      },\n      violations: [],\n      recommendations: [\n        \"Implement regular compliance audits\",\n        \"Review PII detection accuracy\",\n        \"Monitor safety check performance\",\n        \"Optimize cost per request\",\n      ],\n    };\n  }\n\n  /**\n   * Verify audit trail integrity\n   */\n  async verifyIntegrity(events: AuditEvent[]): Promise<{\n    valid: boolean;\n    errors: string[];\n  }> {\n    if (!this.config.enableIntegrityChecking) {\n      return { valid: true, errors: [] };\n    }\n\n    const errors: string[] = [];\n\n    for (let i = 0; i < events.length; i++) {\n      const event = events[i];\n\n      // Verify event hash\n      const calculatedHash = await this.calculateEventHash({\n        ...event,\n        eventHash: \"\",\n      });\n\n      if (calculatedHash !== event.eventHash) {\n        errors.push(`Event ${event.eventId} has invalid hash`);\n      }\n\n      // Verify chain integrity\n      if (i > 0) {\n        const previousEvent = events[i - 1];\n        if (event.previousEventHash !== previousEvent.eventHash) {\n          errors.push(`Event ${event.eventId} has broken chain link`);\n        }\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Private helper methods\n   */\n  private generateEventId(): string {\n    this.eventCounter++;\n    return `audit_${Date.now()}_${this.eventCounter}`;\n  }\n\n  private async hashContent(content: string): Promise<string> {\n    // Simple hash for content identification (not for security)\n    let hash = 0;\n    for (let i = 0; i < content.length; i++) {\n      const char = content.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash).toString(16);\n  }\n\n  private hashUserId(userId?: string): string | undefined {\n    if (!userId) return undefined;\n    // Simple hash for user anonymization\n    return `user_${userId.split(\"\").reduce((a, b) => {\n      a = (a << 5) - a + b.charCodeAt(0);\n      return a & a;\n    }, 0)}`;\n  }\n\n  private classifyContent(\n    context: RouterInputContext\n  ): \"public\" | \"internal\" | \"confidential\" | \"restricted\" {\n    if (context.pii) return \"restricted\";\n    if (context.domain === \"legal\" || context.domain === \"medical\")\n      return \"confidential\";\n    if (context.tenant) return \"internal\";\n    return \"public\";\n  }\n\n  private determineLawfulBasis(context: RouterInputContext): string {\n    // GDPR Article 6 lawful basis\n    if (context.pii) return \"consent\"; // Article 6(1)(a)\n    if (context.domain === \"legal\") return \"legal_obligation\"; // Article 6(1)(c)\n    return \"legitimate_interests\"; // Article 6(1)(f)\n  }\n\n  private async calculateEventHash(\n    event: Omit<AuditEvent, \"eventHash\">\n  ): Promise<string> {\n    // Simple hash calculation for event integrity\n    const eventString = JSON.stringify(event, Object.keys(event).sort());\n    let hash = 0;\n    for (let i = 0; i < eventString.length; i++) {\n      const char = eventString.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash;\n    }\n    return Math.abs(hash).toString(16);\n  }\n\n  private async persistAuditEvent(event: AuditEvent): Promise<void> {\n    // In production, this would write to a secure audit database\n    // For now, use structured logging\n    this.logger.info(\"Audit event\", {\n      eventId: event.eventId,\n      eventType: event.eventType,\n      requestId: event.requestId,\n      complianceStatus: event.complianceStatus,\n      timestamp: event.timestamp,\n    });\n\n    // In strict compliance mode, also write to separate audit log\n    if (this.config.complianceMode === \"strict\") {\n      console.log(`AUDIT: ${JSON.stringify(event)}`);\n    }\n  }\n\n  /**\n   * Log cost optimization start\n   */\n  async logCostOptimizationStart(\n    strategy: string,\n    targetReduction: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      strategy,\n      targetReduction,\n      action: \"start\",\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost optimization stop\n   */\n  async logCostOptimizationStop(\n    achievedReduction: number,\n    totalSavings: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      achievedReduction,\n      totalSavings,\n      action: \"stop\",\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost-aware routing decision\n   */\n  async logCostAwareRoutingDecision(\n    correlationId: string,\n    decision: any,\n    operation: string,\n    priority: string\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_aware_routing\",\n      correlationId,\n      selectedRoute: decision.selectedRoute,\n      estimatedCost: decision.estimatedCost,\n      costSavings: decision.costSavings,\n      costEfficiencyScore: decision.costEfficiencyScore,\n      operation,\n      priority,\n      reason: decision.reason,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        alternativeRouteCosts: decision.alternativeRouteCosts\n          ? Object.fromEntries(decision.alternativeRouteCosts)\n          : {},\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost performance evaluation\n   */\n  async logCostPerformanceEvaluation(\n    costReductionPercentage: number,\n    totalSavings: number,\n    evaluationPeriod: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      action: \"performance_evaluation\",\n      costReductionPercentage,\n      totalSavings,\n      evaluationPeriod,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost optimization recommendation applied\n   */\n  async logCostOptimizationRecommendationApplied(\n    recommendationId: string,\n    type: string,\n    expectedSavings: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      action: \"recommendation_applied\",\n      recommendationId,\n      type,\n      expectedSavings,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n\n  /**\n   * Log cost optimization effectiveness\n   */\n  async logCostOptimizationEffectiveness(\n    actualReduction: number,\n    totalSavings: number,\n    targetReduction: number\n  ): Promise<void> {\n    if (!this.config.enableAuditTrail) return;\n\n    const event: AuditEvent = {\n      eventId: this.generateEventId(),\n      timestamp: new Date().toISOString(),\n      eventType: \"cost_optimization\",\n      action: \"effectiveness_evaluation\",\n      actualReduction,\n      totalSavings,\n      targetReduction,\n      targetMet: actualReduction >= targetReduction,\n      complianceStatus: \"compliant\",\n      eventHash: \"\",\n      metadata: {\n        timestamp: new Date().toISOString(),\n      },\n    };\n\n    event.eventHash = await this.calculateEventHash(event);\n    await this.persistAuditEvent(event);\n  }\n}\n\n/**\n * Default audit trail instance\n */\nexport const auditTrail = new AuditTrailSystem();\n\n/**\n * Create audit trail with custom config\n */\nexport const createAuditTrail = (\n  config: Partial<AuditTrailConfig>\n): AuditTrailSystem => {\n  return new AuditTrailSystem(config);\n};\n"],"mappings":"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","ignoreList":[]}