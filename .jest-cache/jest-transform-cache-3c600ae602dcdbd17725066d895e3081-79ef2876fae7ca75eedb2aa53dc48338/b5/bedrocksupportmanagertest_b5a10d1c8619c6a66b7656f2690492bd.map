{"file":"/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/__tests__/bedrock-support-manager.test.ts","mappings":"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","names":[],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/__tests__/bedrock-support-manager.test.ts"],"sourcesContent":["/**\n * Bedrock Support Manager Tests\n *\n * Unit tests for the Bedrock Support Manager core functionality\n */\n\n// Mock the dependencies first\njest.mock(\"../ai-feature-flags\");\njest.mock(\"../adapters/bedrock-adapter\");\njest.mock(\"../compliance-integration\", () => ({\n  ComplianceIntegration: jest.fn().mockImplementation(() => ({\n    validateCompliance: jest.fn().mockResolvedValue({\n      compliant: true,\n      violations: [],\n      warnings: [],\n      score: 100,\n    }),\n    enforceCompliance: jest.fn().mockResolvedValue({\n      allowed: true,\n      reason: \"Test compliance enforcement\",\n    }),\n    getComplianceSummary: jest.fn().mockResolvedValue({\n      overallCompliance: \"compliant\",\n      providers: {\n        bedrock: { compliant: true, violations: [], warnings: [] },\n        google: { compliant: true, violations: [], warnings: [] },\n        meta: { compliant: true, violations: [], warnings: [] },\n      },\n    }),\n  })),\n}));\njest.mock(\"../gdpr-hybrid-compliance-validator\", () => ({\n  GDPRHybridComplianceValidator: jest.fn().mockImplementation(() => ({\n    validateBeforeRouting: jest\n      .fn()\n      .mockResolvedValue({ allowed: true, reason: \"Test compliance\" }),\n    generateHybridComplianceReport: jest.fn().mockResolvedValue({\n      overallCompliance: \"compliant\",\n      complianceScore: 100,\n      routingPathCompliance: {\n        directBedrock: { isCompliant: true, violations: [], warnings: [] },\n        mcpIntegration: { isCompliant: true, violations: [], warnings: [] },\n      },\n      crossPathCompliance: {},\n      recommendations: [],\n      criticalIssues: [],\n      nextActions: [],\n    }),\n  })),\n}));\n\nimport { BedrockAdapter } from \"../adapters/bedrock-adapter\";\nimport { AiFeatureFlags } from \"../ai-feature-flags\";\nimport {\n  BedrockSupportConfig,\n  BedrockSupportManager,\n  FailureContext,\n  createBedrockSupportManager,\n} from \"../bedrock-support-manager\";\n\ndescribe(\"BedrockSupportManager\", () => {\n  let supportManager: BedrockSupportManager;\n  let mockFeatureFlags: jest.Mocked<AiFeatureFlags>;\n  let mockBedrockAdapter: jest.Mocked<BedrockAdapter>;\n\n  beforeEach(() => {\n    // Create mocked instances\n    mockFeatureFlags = new AiFeatureFlags() as jest.Mocked<AiFeatureFlags>;\n    mockBedrockAdapter = new BedrockAdapter() as jest.Mocked<BedrockAdapter>;\n\n    // Setup default mock implementations\n    mockFeatureFlags.isBedrockSupportModeEnabled.mockResolvedValue(true);\n    mockFeatureFlags.validateBedrockSupportModeFlags.mockResolvedValue({\n      isValid: true,\n      errors: [],\n      warnings: [],\n    });\n    mockFeatureFlags.isProviderEnabled.mockResolvedValue(true);\n    mockFeatureFlags.validateAllFlags.mockResolvedValue({\n      isValid: true,\n      errors: [],\n      warnings: [],\n    });\n\n    // Create support manager instance\n    supportManager = new BedrockSupportManager(\n      undefined,\n      mockFeatureFlags,\n      mockBedrockAdapter\n    );\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Constructor and Factory\", () => {\n    it(\"should create instance with default configuration\", () => {\n      const manager = new BedrockSupportManager();\n      expect(manager).toBeInstanceOf(BedrockSupportManager);\n      expect(manager.isActive()).toBe(false);\n    });\n\n    it(\"should create instance with custom configuration\", () => {\n      const config: Partial<BedrockSupportConfig> = {\n        enabled: true,\n        monitoringLevel: \"comprehensive\",\n      };\n      const manager = new BedrockSupportManager(config);\n      expect(manager).toBeInstanceOf(BedrockSupportManager);\n    });\n\n    it(\"should create instance using factory function\", () => {\n      const manager = createBedrockSupportManager();\n      expect(manager).toBeInstanceOf(BedrockSupportManager);\n    });\n  });\n\n  describe(\"Activation and Deactivation\", () => {\n    it(\"should activate successfully when conditions are met\", async () => {\n      const result = await supportManager.activate();\n\n      expect(result.success).toBe(true);\n      expect(result.message).toContain(\"activated successfully\");\n      expect(result.timestamp).toBeInstanceOf(Date);\n      expect(supportManager.isActive()).toBe(true);\n\n      // Verify feature flag checks were called\n      expect(mockFeatureFlags.isBedrockSupportModeEnabled).toHaveBeenCalled();\n      expect(\n        mockFeatureFlags.validateBedrockSupportModeFlags\n      ).toHaveBeenCalled();\n      expect(mockFeatureFlags.isProviderEnabled).toHaveBeenCalledWith(\n        \"bedrock\"\n      );\n    });\n\n    it(\"should fail activation when feature flag is disabled\", async () => {\n      mockFeatureFlags.isBedrockSupportModeEnabled.mockResolvedValue(false);\n\n      const result = await supportManager.activate();\n\n      expect(result.success).toBe(false);\n      expect(result.message).toContain(\"disabled via feature flag\");\n      expect(supportManager.isActive()).toBe(false);\n    });\n\n    it(\"should fail activation when validation fails\", async () => {\n      mockFeatureFlags.validateBedrockSupportModeFlags.mockResolvedValue({\n        isValid: false,\n        errors: [\"Test validation error\"],\n        warnings: [],\n      });\n\n      const result = await supportManager.activate();\n\n      expect(result.success).toBe(false);\n      expect(result.message).toContain(\"validation failed\");\n      expect(result.validationResults).toBeDefined();\n      expect(supportManager.isActive()).toBe(false);\n    });\n\n    it(\"should fail activation when Bedrock provider is disabled\", async () => {\n      mockFeatureFlags.isProviderEnabled.mockResolvedValue(false);\n\n      const result = await supportManager.activate();\n\n      expect(result.success).toBe(false);\n      expect(result.message).toContain(\"not enabled\");\n      expect(supportManager.isActive()).toBe(false);\n    });\n\n    it(\"should fail activation when infrastructure audit shows critical issues\", async () => {\n      // Mock critical infrastructure issues\n      mockFeatureFlags.validateAllFlags.mockResolvedValue({\n        isValid: false,\n        errors: [\"Critical system error\"],\n        warnings: [],\n      });\n\n      const result = await supportManager.activate();\n\n      expect(result.success).toBe(false);\n      expect(result.message).toContain(\"critical infrastructure issues\");\n      expect(supportManager.isActive()).toBe(false);\n    });\n\n    it(\"should handle activation errors gracefully\", async () => {\n      mockFeatureFlags.isBedrockSupportModeEnabled.mockRejectedValue(\n        new Error(\"Test error\")\n      );\n\n      const result = await supportManager.activate();\n\n      expect(result.success).toBe(false);\n      expect(result.message).toContain(\"Failed to activate\");\n      expect(supportManager.isActive()).toBe(false);\n    });\n\n    it(\"should deactivate successfully\", async () => {\n      // First activate\n      await supportManager.activate();\n      expect(supportManager.isActive()).toBe(true);\n\n      // Then deactivate\n      await supportManager.deactivate();\n      expect(supportManager.isActive()).toBe(false);\n      expect(\n        mockFeatureFlags.disableBedrockSupportModeSafely\n      ).toHaveBeenCalled();\n    });\n\n    it(\"should handle deactivation errors\", async () => {\n      mockFeatureFlags.disableBedrockSupportModeSafely.mockRejectedValue(\n        new Error(\"Deactivation error\")\n      );\n\n      await expect(supportManager.deactivate()).rejects.toThrow(\n        \"Deactivation error\"\n      );\n    });\n  });\n\n  describe(\"Infrastructure Audit\", () => {\n    it(\"should run infrastructure audit successfully\", async () => {\n      const result = await supportManager.runInfrastructureAudit();\n\n      expect(result).toBeDefined();\n      expect(result.timestamp).toBeInstanceOf(Date);\n      expect(result.overallHealth).toMatch(/^(healthy|warning|critical)$/);\n      expect(Array.isArray(result.detectedIssues)).toBe(true);\n      expect(Array.isArray(result.implementationGaps)).toBe(true);\n      expect(Array.isArray(result.recommendations)).toBe(true);\n      expect(result.complianceStatus).toBeDefined();\n    });\n\n    it(\"should detect feature flag issues during audit\", async () => {\n      mockFeatureFlags.validateAllFlags.mockResolvedValue({\n        isValid: false,\n        errors: [\"Feature flag error\"],\n        warnings: [],\n      });\n\n      const result = await supportManager.runInfrastructureAudit();\n\n      expect(result.detectedIssues.length).toBeGreaterThan(0);\n      expect(result.detectedIssues[0].category).toBe(\"compliance\");\n      expect(result.overallHealth).toBe(\"warning\");\n    });\n\n    it(\"should detect provider issues during audit\", async () => {\n      mockFeatureFlags.isProviderEnabled.mockImplementation((provider) => {\n        return Promise.resolve(provider !== \"bedrock\");\n      });\n\n      const result = await supportManager.runInfrastructureAudit();\n\n      expect(result.detectedIssues.length).toBeGreaterThan(0);\n      const bedrockIssue = result.detectedIssues.find(\n        (issue) => issue.id === \"provider-bedrock-disabled\"\n      );\n      expect(bedrockIssue).toBeDefined();\n      expect(bedrockIssue?.severity).toBe(\"high\");\n    });\n\n    it(\"should handle audit errors gracefully\", async () => {\n      mockFeatureFlags.validateAllFlags.mockRejectedValue(\n        new Error(\"Audit error\")\n      );\n\n      const result = await supportManager.runInfrastructureAudit();\n\n      expect(result.overallHealth).toBe(\"critical\");\n      expect(result.detectedIssues.length).toBe(1);\n      expect(result.detectedIssues[0].severity).toBe(\"critical\");\n      expect(result.detectedIssues[0].description).toContain(\"audit failed\");\n    });\n  });\n\n  describe(\"Meta Monitoring\", () => {\n    it(\"should enable meta monitoring when active\", async () => {\n      await supportManager.activate();\n\n      await expect(\n        supportManager.enableMetaMonitoring()\n      ).resolves.not.toThrow();\n    });\n\n    it(\"should fail to enable meta monitoring when not active\", async () => {\n      await expect(supportManager.enableMetaMonitoring()).rejects.toThrow(\n        \"Cannot enable meta-monitoring: Support mode is not active\"\n      );\n    });\n  });\n\n  describe(\"Fallback Support\", () => {\n    const mockFailureContext: FailureContext = {\n      operation: \"test-operation\",\n      errorType: \"timeout\",\n      errorMessage: \"Operation timed out\",\n      timestamp: new Date(),\n      affectedSystems: [\"api-gateway\"],\n      severity: \"medium\",\n    };\n\n    it(\"should provide fallback support successfully\", async () => {\n      const result = await supportManager.provideFallbackSupport(\n        mockFailureContext\n      );\n\n      expect(result.success).toBe(true);\n      expect(result.supportType).toMatch(\n        /^(infrastructure|execution|implementation)$/\n      );\n      expect(Array.isArray(result.actionsPerformed)).toBe(true);\n      expect(result.actionsPerformed.length).toBeGreaterThan(0);\n      expect(result.diagnostics).toBeDefined();\n      expect(Array.isArray(result.nextSteps)).toBe(true);\n    });\n\n    it(\"should determine support type based on failure context\", async () => {\n      const infrastructureContext: FailureContext = {\n        ...mockFailureContext,\n        affectedSystems: [\"infrastructure\", \"database\"],\n      };\n\n      const result = await supportManager.provideFallbackSupport(\n        infrastructureContext\n      );\n      expect(result.supportType).toBe(\"infrastructure\");\n    });\n\n    it(\"should escalate critical failures\", async () => {\n      const criticalContext: FailureContext = {\n        ...mockFailureContext,\n        severity: \"critical\",\n      };\n\n      const result = await supportManager.provideFallbackSupport(\n        criticalContext\n      );\n      expect(result.nextSteps).toContain(\"Escalate to on-call team\");\n      expect(result.nextSteps).toContain(\"Activate emergency procedures\");\n    });\n\n    it(\"should handle fallback support errors gracefully\", async () => {\n      // Force an error by passing invalid context\n      const invalidContext = null as any;\n\n      const result = await supportManager.provideFallbackSupport(\n        invalidContext\n      );\n      expect(result.success).toBe(false);\n      expect(result.nextSteps).toContain(\"Manual intervention required\");\n    });\n  });\n\n  describe(\"Kiro Integration\", () => {\n    it(\"should send diagnostics to Kiro\", async () => {\n      const diagnostics = {\n        systemHealth: { status: \"ok\" },\n        performanceMetrics: {\n          responseTime: 100,\n          memoryUsage: 50,\n          cpuUsage: 25,\n          networkLatency: 10,\n        },\n        errorLogs: [],\n        recommendations: [\"Optimize performance\"],\n      };\n\n      await expect(\n        supportManager.sendDiagnosticsToKiro(diagnostics)\n      ).resolves.not.toThrow();\n    });\n\n    it(\"should receive execution data from Kiro\", async () => {\n      const executionData = {\n        executionId: \"test-123\",\n        timestamp: new Date(),\n        operation: \"test-operation\",\n        duration: 1000,\n        success: true,\n        performanceMetrics: {\n          responseTime: 100,\n          memoryUsage: 50,\n          cpuUsage: 25,\n          networkLatency: 10,\n        },\n      };\n\n      await expect(\n        supportManager.receiveKiroExecutionData(executionData)\n      ).resolves.not.toThrow();\n    });\n\n    it(\"should handle failed execution data\", async () => {\n      const executionData = {\n        executionId: \"test-456\",\n        timestamp: new Date(),\n        operation: \"failed-operation\",\n        duration: 5000,\n        success: false,\n        errorDetails: \"Operation failed due to timeout\",\n        performanceMetrics: {\n          responseTime: 5000,\n          memoryUsage: 80,\n          cpuUsage: 90,\n          networkLatency: 1000,\n        },\n      };\n\n      await expect(\n        supportManager.receiveKiroExecutionData(executionData)\n      ).resolves.not.toThrow();\n    });\n  });\n\n  describe(\"Security and Compliance\", () => {\n    it(\"should validate compliance status\", async () => {\n      const result = await supportManager.validateComplianceStatus();\n\n      expect(result).toBeDefined();\n      expect(typeof result.isCompliant).toBe(\"boolean\");\n      expect(Array.isArray(result.violations)).toBe(true);\n      expect(Array.isArray(result.recommendations)).toBe(true);\n      expect(result.lastChecked).toBeInstanceOf(Date);\n    });\n\n    it(\"should enable circuit breaker\", async () => {\n      await expect(\n        supportManager.enableCircuitBreaker()\n      ).resolves.not.toThrow();\n    });\n\n    it(\"should check security posture\", async () => {\n      const result = await supportManager.checkSecurityPosture();\n\n      expect(result).toBeDefined();\n      expect(typeof result.securityScore).toBe(\"number\");\n      expect(Array.isArray(result.vulnerabilities)).toBe(true);\n      expect(Array.isArray(result.recommendations)).toBe(true);\n      expect(result.lastAudit).toBeInstanceOf(Date);\n    });\n  });\n\n  describe(\"Cost and Performance Management\", () => {\n    it(\"should monitor cost thresholds\", async () => {\n      const result = await supportManager.monitorCostThresholds();\n\n      expect(result).toBeDefined();\n      expect(typeof result.currentSpend).toBe(\"number\");\n      expect(typeof result.projectedSpend).toBe(\"number\");\n      expect(typeof result.budgetUtilization).toBe(\"number\");\n      expect(typeof result.costBreakdown).toBe(\"object\");\n      expect(Array.isArray(result.recommendations)).toBe(true);\n    });\n\n    it(\"should optimize performance\", async () => {\n      const result = await supportManager.optimizePerformance();\n\n      expect(result).toBeDefined();\n      expect(result.currentMetrics).toBeDefined();\n      expect(Array.isArray(result.optimizationOpportunities)).toBe(true);\n      expect(typeof result.expectedImprovements).toBe(\"object\");\n    });\n\n    it(\"should enable emergency mode\", async () => {\n      await expect(supportManager.enableEmergencyMode()).resolves.not.toThrow();\n    });\n  });\n\n  describe(\"Template and Prompt Management\", () => {\n    it(\"should validate prompt templates\", async () => {\n      const result = await supportManager.validatePromptTemplates();\n\n      expect(result).toBeDefined();\n      expect(typeof result.isValid).toBe(\"boolean\");\n      expect(Array.isArray(result.errors)).toBe(true);\n      expect(Array.isArray(result.warnings)).toBe(true);\n      expect(typeof result.templateCount).toBe(\"number\");\n    });\n\n    it(\"should enable PII redaction\", async () => {\n      await expect(supportManager.enablePIIRedaction()).resolves.not.toThrow();\n    });\n\n    it(\"should run red team evaluations\", async () => {\n      const result = await supportManager.runRedTeamEvaluations();\n\n      expect(result).toBeDefined();\n      expect(typeof result.passed).toBe(\"boolean\");\n      expect(Array.isArray(result.testResults)).toBe(true);\n      expect(typeof result.overallScore).toBe(\"number\");\n      expect(Array.isArray(result.recommendations)).toBe(true);\n    });\n  });\n\n  describe(\"Compliance Reporting\", () => {\n    it(\"should create compliance report for support mode\", async () => {\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result).toBeDefined();\n      expect(result.reportId).toMatch(/^bedrock-support-compliance-\\d+$/);\n      expect(result.timestamp).toBeInstanceOf(Date);\n      expect(result.supportModeCompliance).toBeDefined();\n      expect(result.hybridRoutingCompliance).toBeDefined();\n      expect(Array.isArray(result.violations)).toBe(true);\n      expect(Array.isArray(result.recommendations)).toBe(true);\n    });\n\n    it(\"should include support mode compliance details\", async () => {\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      // Overall compliance may be false if EU data residency is not met\n      expect(typeof result.supportModeCompliance.overallCompliant).toBe(\n        \"boolean\"\n      );\n      expect(result.supportModeCompliance.bedrockCompliant).toBe(true);\n      expect(result.supportModeCompliance.gdprCompliant).toBe(true);\n      // EU data residency may be false if using us-east-1 region\n      expect(typeof result.supportModeCompliance.euDataResidencyCompliant).toBe(\n        \"boolean\"\n      );\n    });\n\n    it(\"should include hybrid routing compliance details\", async () => {\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result.hybridRoutingCompliance.mcpPathCompliant).toBe(true);\n      expect(result.hybridRoutingCompliance.directBedrockPathCompliant).toBe(\n        true\n      );\n      expect(result.hybridRoutingCompliance.auditTrailComplete).toBe(true);\n    });\n\n    it(\"should include recommendations for compliance improvement\", async () => {\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result.recommendations).toContain(\n        \"Regularly review provider agreements for compliance updates\"\n      );\n      expect(result.recommendations).toContain(\n        \"Monitor PII detection and redaction effectiveness\"\n      );\n      expect(result.recommendations).toContain(\n        \"Ensure audit trail completeness for all support operations\"\n      );\n    });\n\n    it(\"should handle compliance report generation errors\", async () => {\n      // Mock a failure in compliance validation\n      const mockComplianceIntegration = supportManager[\n        \"complianceIntegration\"\n      ] as any;\n      mockComplianceIntegration.getComplianceSummary.mockRejectedValue(\n        new Error(\"Compliance validation failed\")\n      );\n\n      await expect(\n        supportManager.createComplianceReportForSupportMode()\n      ).rejects.toThrow(\"Compliance report generation failed\");\n    });\n\n    it(\"should log compliance report generation\", async () => {\n      const consoleSpy = jest.spyOn(console, \"log\").mockImplementation();\n\n      await supportManager.createComplianceReportForSupportMode();\n\n      expect(consoleSpy).toHaveBeenCalledWith(\n        expect.stringContaining(\n          \"[bedrock-activation] Generating compliance report for support mode\"\n        )\n      );\n      expect(consoleSpy).toHaveBeenCalledWith(\n        expect.stringContaining(\n          \"[bedrock-activation] Compliance report generated successfully\"\n        )\n      );\n\n      consoleSpy.mockRestore();\n    });\n\n    it(\"should include violation details when compliance issues exist\", async () => {\n      // Mock compliance issues by creating a spy on the method\n      const mockVerifyCompliance = jest\n        .spyOn(supportManager[\"providerCompliance\"], \"verifyProviderCompliance\")\n        .mockResolvedValue({\n          compliant: false,\n          agreement: undefined,\n          violations: [\"Test violation 1\", \"Test violation 2\"],\n          warnings: [\"Test warning\"],\n        });\n\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result.violations).toContain(\"Test violation 1\");\n      expect(result.violations).toContain(\"Test violation 2\");\n      expect(result.supportModeCompliance.bedrockCompliant).toBe(false);\n\n      // Restore the original method\n      mockVerifyCompliance.mockRestore();\n    });\n\n    it(\"should generate unique report IDs\", async () => {\n      const result1 =\n        await supportManager.createComplianceReportForSupportMode();\n      const result2 =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result1.reportId).not.toBe(result2.reportId);\n      expect(result1.reportId).toMatch(/^bedrock-support-compliance-\\d+$/);\n      expect(result2.reportId).toMatch(/^bedrock-support-compliance-\\d+$/);\n    });\n\n    it(\"should validate GDPR compliance in report\", async () => {\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result.supportModeCompliance.gdprCompliant).toBe(true);\n      // EU data residency may be false if using us-east-1 region\n      expect(typeof result.supportModeCompliance.euDataResidencyCompliant).toBe(\n        \"boolean\"\n      );\n    });\n\n    it(\"should validate audit trail completeness\", async () => {\n      const result =\n        await supportManager.createComplianceReportForSupportMode();\n\n      expect(result.hybridRoutingCompliance.auditTrailComplete).toBe(true);\n    });\n  });\n\n  describe(\"Logging\", () => {\n    it(\"should log with bedrock-activation prefix\", async () => {\n      const consoleSpy = jest.spyOn(console, \"log\").mockImplementation();\n\n      await supportManager.activate();\n\n      expect(consoleSpy).toHaveBeenCalledWith(\n        expect.stringContaining(\"[bedrock-activation]\")\n      );\n\n      consoleSpy.mockRestore();\n    });\n  });\n});\n"],"version":3}