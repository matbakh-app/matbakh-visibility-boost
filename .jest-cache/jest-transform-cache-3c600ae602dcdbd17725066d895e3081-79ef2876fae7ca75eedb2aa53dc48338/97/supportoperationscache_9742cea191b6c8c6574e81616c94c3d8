181601330fe561a53d526d7873808a51
"use strict";

/**
 * Support Operations Caching Layer
 *
 * Specialized caching for Bedrock Support Manager operations with:
 * - Infrastructure audit result caching
 * - Meta-monitoring data caching
 * - Implementation gap analysis caching
 * - Compliance validation caching
 * - Intelligent cache invalidation
 * - Performance optimization for support operations
 */
/* istanbul ignore next */
function cov_2g4ctd0uid() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/support-operations-cache.ts";
  var hash = "9bba8c1a80495ceff97f0bd7ade6f8b79aa09af9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/support-operations-cache.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "1": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 111
        }
      },
      "2": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "3": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 29,
          column: 103
        }
      },
      "5": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "6": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 44
        }
      },
      "7": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "8": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "9": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 60
        }
      },
      "10": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "11": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 68
        }
      },
      "12": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "13": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "14": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "15": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 69
        }
      },
      "16": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "17": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 62
        }
      },
      "18": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "19": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "20": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "21": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "22": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "23": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 71
        }
      },
      "24": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "25": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 60
        }
      },
      "26": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "27": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 68
        }
      },
      "28": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "29": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 59
        }
      },
      "30": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "31": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 69
        }
      },
      "32": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "33": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "34": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 28
        }
      },
      "35": {
        start: {
          line: 156,
          column: 30
        },
        end: {
          line: 156,
          column: 40
        }
      },
      "36": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 157,
          column: 74
        }
      },
      "37": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "38": {
        start: {
          line: 159,
          column: 30
        },
        end: {
          line: 159,
          column: 54
        }
      },
      "39": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 178,
          column: 17
        }
      },
      "40": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 167,
          column: 21
        }
      },
      "41": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 52
        }
      },
      "42": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "43": {
        start: {
          line: 165,
          column: 24
        },
        end: {
          line: 165,
          column: 79
        }
      },
      "44": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "45": {
        start: {
          line: 169,
          column: 20
        },
        end: {
          line: 169,
          column: 40
        }
      },
      "46": {
        start: {
          line: 170,
          column: 20
        },
        end: {
          line: 170,
          column: 61
        }
      },
      "47": {
        start: {
          line: 172,
          column: 31
        },
        end: {
          line: 172,
          column: 41
        }
      },
      "48": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 175,
          column: 21
        }
      },
      "49": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 59
        }
      },
      "50": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 74
        }
      },
      "51": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 32
        }
      },
      "52": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 71
        }
      },
      "53": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 28
        }
      },
      "54": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 86
        }
      },
      "55": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 71
        }
      },
      "56": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 28
        }
      },
      "57": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "58": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "59": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 23
        }
      },
      "60": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "61": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 52
        }
      },
      "62": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 201,
          column: 74
        }
      },
      "63": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 61
        }
      },
      "64": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "65": {
        start: {
          line: 204,
          column: 34
        },
        end: {
          line: 204,
          column: 38
        }
      },
      "66": {
        start: {
          line: 205,
          column: 33
        },
        end: {
          line: 205,
          column: 38
        }
      },
      "67": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 208,
          column: 60
        }
      },
      "68": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 215,
          column: 17
        }
      },
      "69": {
        start: {
          line: 210,
          column: 41
        },
        end: {
          line: 210,
          column: 49
        }
      },
      "70": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 60
        }
      },
      "71": {
        start: {
          line: 212,
          column: 43
        },
        end: {
          line: 212,
          column: 77
        }
      },
      "72": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "73": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 69
        }
      },
      "74": {
        start: {
          line: 216,
          column: 28
        },
        end: {
          line: 216,
          column: 38
        }
      },
      "75": {
        start: {
          line: 217,
          column: 34
        },
        end: {
          line: 217,
          column: 70
        }
      },
      "76": {
        start: {
          line: 218,
          column: 30
        },
        end: {
          line: 232,
          column: 17
        }
      },
      "77": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 48
        }
      },
      "78": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 55
        }
      },
      "79": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 238,
          column: 17
        }
      },
      "80": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 63
        }
      },
      "81": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 86
        }
      },
      "82": {
        start: {
          line: 249,
          column: 24
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "83": {
        start: {
          line: 253,
          column: 21
        },
        end: {
          line: 255,
          column: 26
        }
      },
      "84": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 56
        }
      },
      "85": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 46
        }
      },
      "86": {
        start: {
          line: 265,
          column: 22
        },
        end: {
          line: 269,
          column: 29
        }
      },
      "87": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 40
        }
      },
      "88": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 53
        }
      },
      "89": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 51
        }
      },
      "90": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 53
        }
      },
      "91": {
        start: {
          line: 276,
          column: 22
        },
        end: {
          line: 276,
          column: 59
        }
      },
      "92": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "93": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 32
        }
      },
      "94": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 53
        }
      },
      "95": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "96": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "97": {
        start: {
          line: 289,
          column: 33
        },
        end: {
          line: 289,
          column: 78
        }
      },
      "98": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 44
        }
      },
      "99": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 54
        }
      },
      "100": {
        start: {
          line: 295,
          column: 37
        },
        end: {
          line: 295,
          column: 39
        }
      },
      "101": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "102": {
        start: {
          line: 297,
          column: 20
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "103": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 47
        }
      },
      "104": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 304,
          column: 17
        }
      },
      "105": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 43
        }
      },
      "106": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 303,
          column: 53
        }
      },
      "107": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 51
        }
      },
      "108": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 321,
          column: 11
        }
      },
      "109": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 31
        }
      },
      "110": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "111": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 36
        }
      },
      "112": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 44
        }
      },
      "113": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 37
        }
      },
      "114": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "115": {
        start: {
          line: 328,
          column: 28
        },
        end: {
          line: 328,
          column: 32
        }
      },
      "116": {
        start: {
          line: 329,
          column: 29
        },
        end: {
          line: 329,
          column: 39
        }
      },
      "117": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "118": {
        start: {
          line: 331,
          column: 37
        },
        end: {
          line: 331,
          column: 74
        }
      },
      "119": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "120": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 46
        }
      },
      "121": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 36
        }
      },
      "122": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 341,
          column: 13
        }
      },
      "123": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 338,
          column: 45
        }
      },
      "124": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 55
        }
      },
      "125": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 55
        }
      },
      "126": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "127": {
        start: {
          line: 350,
          column: 31
        },
        end: {
          line: 350,
          column: 51
        }
      },
      "128": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 76
        }
      },
      "129": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 365,
          column: 11
        }
      },
      "130": {
        start: {
          line: 360,
          column: 31
        },
        end: {
          line: 360,
          column: 35
        }
      },
      "131": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 363,
          column: 13
        }
      },
      "132": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 51
        }
      },
      "133": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 24
        }
      },
      "134": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 26
        }
      },
      "135": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 35
        }
      },
      "136": {
        start: {
          line: 373,
          column: 24
        },
        end: {
          line: 373,
          column: 64
        }
      },
      "137": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 23
        }
      },
      "138": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 40
        }
      },
      "139": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 52
        }
      },
      "140": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 40
        }
      },
      "141": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 28
        }
      },
      "142": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 35
        }
      },
      "143": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 385,
          column: 64
        }
      },
      "144": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 25
        }
      },
      "145": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 40
        }
      },
      "146": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 52
        }
      },
      "147": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 40
        }
      },
      "148": {
        start: {
          line: 395,
          column: 30
        },
        end: {
          line: 395,
          column: 59
        }
      },
      "149": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 79
        }
      },
      "150": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 72
        }
      },
      "151": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 406,
          column: 20
        }
      },
      "152": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 78
        }
      },
      "153": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 44
        }
      },
      "154": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 420,
          column: 10
        }
      },
      "155": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 54
        }
      },
      "156": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 84
        }
      },
      "157": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 51
        }
      },
      "158": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 55
        }
      },
      "159": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 79
        }
      },
      "160": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "161": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 116
        }
      },
      "162": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      },
      "163": {
        start: {
          line: 461,
          column: 27
        },
        end: {
          line: 461,
          column: 29
        }
      },
      "164": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 478,
          column: 13
        }
      },
      "165": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 466,
          column: 17
        }
      },
      "166": {
        start: {
          line: 465,
          column: 20
        },
        end: {
          line: 465,
          column: 112
        }
      },
      "167": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 470,
          column: 17
        }
      },
      "168": {
        start: {
          line: 469,
          column: 20
        },
        end: {
          line: 469,
          column: 97
        }
      },
      "169": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 474,
          column: 17
        }
      },
      "170": {
        start: {
          line: 473,
          column: 20
        },
        end: {
          line: 473,
          column: 97
        }
      },
      "171": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 60
        }
      },
      "172": {
        start: {
          line: 479,
          column: 28
        },
        end: {
          line: 479,
          column: 47
        }
      },
      "173": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 486,
          column: 14
        }
      },
      "174": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 499,
          column: 11
        }
      },
      "175": {
        start: {
          line: 494,
          column: 12
        },
        end: {
          line: 494,
          column: 89
        }
      },
      "176": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 497,
          column: 13
        }
      },
      "177": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 82
        }
      },
      "178": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 124
        }
      },
      "179": {
        start: {
          line: 505,
          column: 24
        },
        end: {
          line: 505,
          column: 26
        }
      },
      "180": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "181": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 513,
          column: 15
        }
      },
      "182": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 23
        }
      },
      "183": {
        start: {
          line: 518,
          column: 0
        },
        end: {
          line: 518,
          column: 56
        }
      },
      "184": {
        start: {
          line: 522,
          column: 37
        },
        end: {
          line: 524,
          column: 1
        }
      },
      "185": {
        start: {
          line: 523,
          column: 4
        },
        end: {
          line: 523,
          column: 46
        }
      },
      "186": {
        start: {
          line: 525,
          column: 0
        },
        end: {
          line: 525,
          column: 68
        }
      },
      "187": {
        start: {
          line: 529,
          column: 0
        },
        end: {
          line: 566,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 36
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 53
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 55
          },
          end: {
            line: 54,
            column: 56
          }
        },
        loc: {
          start: {
            line: 54,
            column: 68
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 44
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 55
          },
          end: {
            line: 62,
            column: 56
          }
        },
        loc: {
          start: {
            line: 62,
            column: 68
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 56
          }
        },
        loc: {
          start: {
            line: 70,
            column: 68
          },
          end: {
            line: 72,
            column: 9
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 77
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 55
          },
          end: {
            line: 78,
            column: 56
          }
        },
        loc: {
          start: {
            line: 78,
            column: 68
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 34
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 85
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 86,
            column: 55
          },
          end: {
            line: 86,
            column: 56
          }
        },
        loc: {
          start: {
            line: 86,
            column: 68
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 86
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 40
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 93
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 94,
            column: 56
          }
        },
        loc: {
          start: {
            line: 94,
            column: 68
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 94
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 35
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 101
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 102,
            column: 55
          },
          end: {
            line: 102,
            column: 56
          }
        },
        loc: {
          start: {
            line: 102,
            column: 68
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 102
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 111
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 112,
            column: 55
          },
          end: {
            line: 112,
            column: 56
          }
        },
        loc: {
          start: {
            line: 112,
            column: 68
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 112
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 32
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 119
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 120,
            column: 56
          }
        },
        loc: {
          start: {
            line: 120,
            column: 68
          },
          end: {
            line: 122,
            column: 9
          }
        },
        line: 120
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 40
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 127
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 128,
            column: 55
          },
          end: {
            line: 128,
            column: 56
          }
        },
        loc: {
          start: {
            line: 128,
            column: 68
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 128
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 31
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 135
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 136,
            column: 55
          },
          end: {
            line: 136,
            column: 56
          }
        },
        loc: {
          start: {
            line: 136,
            column: 68
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 136
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 41
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 143
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 144,
            column: 55
          },
          end: {
            line: 144,
            column: 56
          }
        },
        loc: {
          start: {
            line: 144,
            column: 68
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 144
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 32
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 151
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 152,
            column: 55
          },
          end: {
            line: 152,
            column: 56
          }
        },
        loc: {
          start: {
            line: 152,
            column: 68
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 152
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 38
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 192
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 56
          }
        },
        loc: {
          start: {
            line: 193,
            column: 68
          },
          end: {
            line: 243,
            column: 9
          }
        },
        line: 193
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 45
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 248
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 49
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 261
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 265,
            column: 33
          },
          end: {
            line: 265,
            column: 34
          }
        },
        loc: {
          start: {
            line: 265,
            column: 39
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 265
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 37
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 275
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 39
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 285
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 286,
            column: 55
          },
          end: {
            line: 286,
            column: 56
          }
        },
        loc: {
          start: {
            line: 286,
            column: 68
          },
          end: {
            line: 307,
            column: 9
          }
        },
        line: 286
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 20
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 312
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 313,
            column: 55
          },
          end: {
            line: 313,
            column: 56
          }
        },
        loc: {
          start: {
            line: 313,
            column: 68
          },
          end: {
            line: 321,
            column: 9
          }
        },
        line: 313
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 29
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 326
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 327,
            column: 55
          },
          end: {
            line: 327,
            column: 56
          }
        },
        loc: {
          start: {
            line: 327,
            column: 68
          },
          end: {
            line: 342,
            column: 9
          }
        },
        line: 327
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 19
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 347
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 348,
            column: 55
          },
          end: {
            line: 348,
            column: 56
          }
        },
        loc: {
          start: {
            line: 348,
            column: 68
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 348
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 21
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 357
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 358,
            column: 55
          },
          end: {
            line: 358,
            column: 56
          }
        },
        loc: {
          start: {
            line: 358,
            column: 68
          },
          end: {
            line: 365,
            column: 9
          }
        },
        line: 358
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 38
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 370
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 39
          },
          end: {
            line: 390,
            column: 5
          }
        },
        line: 382
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        loc: {
          start: {
            line: 394,
            column: 43
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 394
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 402,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        loc: {
          start: {
            line: 402,
            column: 31
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 402
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 27
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 413
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 425,
            column: 4
          },
          end: {
            line: 425,
            column: 5
          }
        },
        loc: {
          start: {
            line: 425,
            column: 15
          },
          end: {
            line: 427,
            column: 5
          }
        },
        line: 425
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 431,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        loc: {
          start: {
            line: 431,
            column: 37
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 431
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        loc: {
          start: {
            line: 437,
            column: 45
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 437
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 443,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        loc: {
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 443
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 449,
            column: 5
          }
        },
        loc: {
          start: {
            line: 449,
            column: 28
          },
          end: {
            line: 455,
            column: 5
          }
        },
        line: 449
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 5
          }
        },
        loc: {
          start: {
            line: 459,
            column: 18
          },
          end: {
            line: 488,
            column: 5
          }
        },
        line: 459
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 460,
            column: 55
          },
          end: {
            line: 460,
            column: 56
          }
        },
        loc: {
          start: {
            line: 460,
            column: 68
          },
          end: {
            line: 487,
            column: 9
          }
        },
        line: 460
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 492,
            column: 5
          }
        },
        loc: {
          start: {
            line: 492,
            column: 23
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 492
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 493,
            column: 55
          },
          end: {
            line: 493,
            column: 56
          }
        },
        loc: {
          start: {
            line: 493,
            column: 68
          },
          end: {
            line: 499,
            column: 9
          }
        },
        line: 493
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 22
          },
          end: {
            line: 516,
            column: 5
          }
        },
        line: 504
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 522,
            column: 37
          },
          end: {
            line: 522,
            column: 38
          }
        },
        loc: {
          start: {
            line: 522,
            column: 49
          },
          end: {
            line: 524,
            column: 1
          }
        },
        line: 522
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "1": {
        loc: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 178,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "2": {
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 167,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 167,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "3": {
        loc: {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 175,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 175,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "4": {
        loc: {
          start: {
            line: 173,
            column: 24
          },
          end: {
            line: 173,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 24
          },
          end: {
            line: 173,
            column: 40
          }
        }, {
          start: {
            line: 173,
            column: 44
          },
          end: {
            line: 173,
            column: 74
          }
        }],
        line: 173
      },
      "5": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "6": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "7": {
        loc: {
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "8": {
        loc: {
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 35
          }
        }, {
          start: {
            line: 209,
            column: 39
          },
          end: {
            line: 209,
            column: 69
          }
        }],
        line: 209
      },
      "9": {
        loc: {
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 16
          },
          end: {
            line: 238,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "10": {
        loc: {
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 251,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 251,
            column: 28
          }
        }, {
          start: {
            line: 251,
            column: 32
          },
          end: {
            line: 251,
            column: 34
          }
        }],
        line: 251
      },
      "11": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "12": {
        loc: {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 305,
            column: 13
          }
        }, {
          start: {
            line: 293,
            column: 17
          },
          end: {
            line: 305,
            column: 13
          }
        }],
        line: 287
      },
      "13": {
        loc: {
          start: {
            line: 297,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "14": {
        loc: {
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "15": {
        loc: {
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 341,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "16": {
        loc: {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 363,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 363,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "17": {
        loc: {
          start: {
            line: 361,
            column: 16
          },
          end: {
            line: 361,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 16
          },
          end: {
            line: 361,
            column: 37
          }
        }, {
          start: {
            line: 361,
            column: 41
          },
          end: {
            line: 361,
            column: 56
          }
        }],
        line: 361
      },
      "18": {
        loc: {
          start: {
            line: 396,
            column: 26
          },
          end: {
            line: 396,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 46
          },
          end: {
            line: 396,
            column: 74
          }
        }, {
          start: {
            line: 396,
            column: 77
          },
          end: {
            line: 396,
            column: 78
          }
        }],
        line: 396
      },
      "19": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 406,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 405,
            column: 18
          },
          end: {
            line: 405,
            column: 60
          }
        }, {
          start: {
            line: 406,
            column: 18
          },
          end: {
            line: 406,
            column: 19
          }
        }],
        line: 404
      },
      "20": {
        loc: {
          start: {
            line: 437,
            column: 24
          },
          end: {
            line: 437,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 437,
            column: 40
          },
          end: {
            line: 437,
            column: 43
          }
        }],
        line: 437
      },
      "21": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "22": {
        loc: {
          start: {
            line: 464,
            column: 16
          },
          end: {
            line: 466,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 16
          },
          end: {
            line: 466,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "23": {
        loc: {
          start: {
            line: 468,
            column: 16
          },
          end: {
            line: 470,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 16
          },
          end: {
            line: 470,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "24": {
        loc: {
          start: {
            line: 468,
            column: 20
          },
          end: {
            line: 468,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 20
          },
          end: {
            line: 468,
            column: 44
          }
        }, {
          start: {
            line: 468,
            column: 48
          },
          end: {
            line: 468,
            column: 77
          }
        }],
        line: 468
      },
      "25": {
        loc: {
          start: {
            line: 472,
            column: 16
          },
          end: {
            line: 474,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 16
          },
          end: {
            line: 474,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/support-operations-cache.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/support-operations-cache.ts"],
      sourcesContent: ["/**\n * Support Operations Caching Layer\n *\n * Specialized caching for Bedrock Support Manager operations with:\n * - Infrastructure audit result caching\n * - Meta-monitoring data caching\n * - Implementation gap analysis caching\n * - Compliance validation caching\n * - Intelligent cache invalidation\n * - Performance optimization for support operations\n */\n\nimport { createHash } from \"crypto\";\nimport {\n  ComplianceValidationResult,\n  CostAnalysis,\n  ExecutionMetadata,\n  ImplementationGap,\n  InfrastructureAuditResult,\n  SecurityAuditResult,\n} from \"./bedrock-support-manager\";\n\nexport interface SupportCacheConfig {\n  enabled: boolean;\n  ttlSeconds: {\n    infrastructureAudit: number;\n    metaMonitoring: number;\n    implementationGaps: number;\n    complianceValidation: number;\n    securityAudit: number;\n    costAnalysis: number;\n  };\n  maxCacheSize: number;\n  compressionEnabled: boolean;\n  invalidationStrategy: \"ttl\" | \"event\" | \"hybrid\";\n}\n\nexport interface SupportCacheStats {\n  hits: number;\n  misses: number;\n  hitRate: number;\n  totalRequests: number;\n  averageLatency: number;\n  cacheSize: number;\n  lastUpdated: Date;\n  operationStats: {\n    infrastructureAudit: OperationCacheStats;\n    metaMonitoring: OperationCacheStats;\n    implementationGaps: OperationCacheStats;\n    complianceValidation: OperationCacheStats;\n    securityAudit: OperationCacheStats;\n    costAnalysis: OperationCacheStats;\n  };\n}\n\nexport interface OperationCacheStats {\n  hits: number;\n  misses: number;\n  hitRate: number;\n  averageLatency: number;\n  lastAccess: Date | null;\n}\n\nexport interface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  ttl: number;\n  compressed: boolean;\n  accessCount: number;\n  operationType: SupportOperationType;\n  metadata: CacheEntryMetadata;\n}\n\nexport interface CacheEntryMetadata {\n  createdAt: Date;\n  lastAccessed: Date;\n  expiresAt: Date;\n  size: number;\n  compressionRatio?: number;\n}\n\nexport type SupportOperationType =\n  | \"infrastructureAudit\"\n  | \"metaMonitoring\"\n  | \"implementationGaps\"\n  | \"complianceValidation\"\n  | \"securityAudit\"\n  | \"costAnalysis\";\n\n/**\n * Support Operations Caching Layer\n */\nexport class SupportOperationsCache {\n  private config: SupportCacheConfig;\n  private stats: SupportCacheStats;\n  private cache: Map<string, CacheEntry<any>>;\n  private invalidationTimers: Map<string, NodeJS.Timeout>;\n\n  constructor(config?: Partial<SupportCacheConfig>) {\n    this.config = {\n      enabled: true,\n      ttlSeconds: {\n        infrastructureAudit: 300, // 5 minutes - infrastructure changes frequently\n        metaMonitoring: 60, // 1 minute - real-time monitoring\n        implementationGaps: 600, // 10 minutes - gaps change less frequently\n        complianceValidation: 1800, // 30 minutes - compliance is relatively stable\n        securityAudit: 900, // 15 minutes - security needs regular checks\n        costAnalysis: 300, // 5 minutes - cost data updates frequently\n      },\n      maxCacheSize: 1000, // Maximum number of cached entries\n      compressionEnabled: true,\n      invalidationStrategy: \"hybrid\", // Use both TTL and event-based invalidation\n      ...config,\n    };\n\n    this.cache = new Map();\n    this.invalidationTimers = new Map();\n\n    this.stats = {\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      totalRequests: 0,\n      averageLatency: 0,\n      cacheSize: 0,\n      lastUpdated: new Date(),\n      operationStats: {\n        infrastructureAudit: this.createOperationStats(),\n        metaMonitoring: this.createOperationStats(),\n        implementationGaps: this.createOperationStats(),\n        complianceValidation: this.createOperationStats(),\n        securityAudit: this.createOperationStats(),\n        costAnalysis: this.createOperationStats(),\n      },\n    };\n  }\n\n  /**\n   * Get cached infrastructure audit result\n   */\n  async getInfrastructureAudit(\n    context?: Record<string, any>\n  ): Promise<InfrastructureAuditResult | null> {\n    return this.get<InfrastructureAuditResult>(\"infrastructureAudit\", context);\n  }\n\n  /**\n   * Cache infrastructure audit result\n   */\n  async setInfrastructureAudit(\n    result: InfrastructureAuditResult,\n    context?: Record<string, any>\n  ): Promise<void> {\n    return this.set(\"infrastructureAudit\", result, context);\n  }\n\n  /**\n   * Get cached meta-monitoring data\n   */\n  async getMetaMonitoring(\n    executionId: string\n  ): Promise<ExecutionMetadata | null> {\n    return this.get<ExecutionMetadata>(\"metaMonitoring\", { executionId });\n  }\n\n  /**\n   * Cache meta-monitoring data\n   */\n  async setMetaMonitoring(\n    data: ExecutionMetadata,\n    executionId: string\n  ): Promise<void> {\n    return this.set(\"metaMonitoring\", data, { executionId });\n  }\n\n  /**\n   * Get cached implementation gaps\n   */\n  async getImplementationGaps(\n    module?: string\n  ): Promise<ImplementationGap[] | null> {\n    return this.get<ImplementationGap[]>(\"implementationGaps\", { module });\n  }\n\n  /**\n   * Cache implementation gaps\n   */\n  async setImplementationGaps(\n    gaps: ImplementationGap[],\n    module?: string\n  ): Promise<void> {\n    return this.set(\"implementationGaps\", gaps, { module });\n  }\n\n  /**\n   * Get cached compliance validation result\n   */\n  async getComplianceValidation(\n    scope?: string\n  ): Promise<ComplianceValidationResult | null> {\n    return this.get<ComplianceValidationResult>(\"complianceValidation\", {\n      scope,\n    });\n  }\n\n  /**\n   * Cache compliance validation result\n   */\n  async setComplianceValidation(\n    result: ComplianceValidationResult,\n    scope?: string\n  ): Promise<void> {\n    return this.set(\"complianceValidation\", result, { scope });\n  }\n\n  /**\n   * Get cached security audit result\n   */\n  async getSecurityAudit(\n    component?: string\n  ): Promise<SecurityAuditResult | null> {\n    return this.get<SecurityAuditResult>(\"securityAudit\", { component });\n  }\n\n  /**\n   * Cache security audit result\n   */\n  async setSecurityAudit(\n    result: SecurityAuditResult,\n    component?: string\n  ): Promise<void> {\n    return this.set(\"securityAudit\", result, { component });\n  }\n\n  /**\n   * Get cached cost analysis\n   */\n  async getCostAnalysis(timeRange?: string): Promise<CostAnalysis | null> {\n    return this.get<CostAnalysis>(\"costAnalysis\", { timeRange });\n  }\n\n  /**\n   * Cache cost analysis\n   */\n  async setCostAnalysis(\n    analysis: CostAnalysis,\n    timeRange?: string\n  ): Promise<void> {\n    return this.set(\"costAnalysis\", analysis, { timeRange });\n  }\n\n  /**\n   * Generic get method for any support operation\n   */\n  private async get<T>(\n    operationType: SupportOperationType,\n    context?: Record<string, any>\n  ): Promise<T | null> {\n    if (!this.config.enabled) {\n      return null;\n    }\n\n    const startTime = Date.now();\n    const cacheKey = this.generateCacheKey(operationType, context);\n\n    try {\n      const entry = this.cache.get(cacheKey);\n\n      if (entry) {\n        // Check if entry has expired\n        if (Date.now() > entry.metadata.expiresAt.getTime()) {\n          this.cache.delete(cacheKey);\n          this.clearInvalidationTimer(cacheKey);\n          this.recordMiss(operationType, Date.now() - startTime);\n          return null;\n        }\n\n        // Update access metadata\n        entry.accessCount++;\n        entry.metadata.lastAccessed = new Date();\n\n        // Decompress if needed\n        let data = entry.data;\n        if (entry.compressed && this.config.compressionEnabled) {\n          data = await this.decompress(data);\n        }\n\n        this.recordHit(operationType, Date.now() - startTime);\n        return data as T;\n      }\n\n      this.recordMiss(operationType, Date.now() - startTime);\n      return null;\n    } catch (error) {\n      console.error(`Support cache get error for ${operationType}:`, error);\n      this.recordMiss(operationType, Date.now() - startTime);\n      return null;\n    }\n  }\n\n  /**\n   * Generic set method for any support operation\n   */\n  private async set<T>(\n    operationType: SupportOperationType,\n    data: T,\n    context?: Record<string, any>\n  ): Promise<void> {\n    if (!this.config.enabled) {\n      return;\n    }\n\n    // Check cache size limit\n    if (this.cache.size >= this.config.maxCacheSize) {\n      await this.evictLeastRecentlyUsed();\n    }\n\n    const cacheKey = this.generateCacheKey(operationType, context);\n    const ttl = this.config.ttlSeconds[operationType];\n\n    try {\n      let dataToCache = data;\n      let compressed = false;\n      let compressionRatio: number | undefined;\n\n      // Compress large data\n      const dataSize = JSON.stringify(data).length;\n      if (dataSize > 1024 && this.config.compressionEnabled) {\n        const originalSize = dataSize;\n        dataToCache = await this.compress(data);\n        const compressedSize = JSON.stringify(dataToCache).length;\n        compressed = true;\n        compressionRatio = compressedSize / originalSize;\n      }\n\n      const now = new Date();\n      const expiresAt = new Date(now.getTime() + ttl * 1000);\n\n      const entry: CacheEntry<T> = {\n        data: dataToCache,\n        timestamp: Date.now(),\n        ttl,\n        compressed,\n        accessCount: 0,\n        operationType,\n        metadata: {\n          createdAt: now,\n          lastAccessed: now,\n          expiresAt,\n          size: dataSize,\n          compressionRatio,\n        },\n      };\n\n      this.cache.set(cacheKey, entry);\n      this.stats.cacheSize = this.cache.size;\n\n      // Set up TTL-based invalidation\n      if (this.config.invalidationStrategy !== \"event\") {\n        this.setupInvalidationTimer(cacheKey, ttl);\n      }\n    } catch (error) {\n      console.error(`Support cache set error for ${operationType}:`, error);\n    }\n  }\n\n  /**\n   * Generate cache key from operation type and context\n   */\n  private generateCacheKey(\n    operationType: SupportOperationType,\n    context?: Record<string, any>\n  ): string {\n    const keyData = {\n      operationType,\n      context: context || {},\n    };\n\n    const hash = createHash(\"sha256\")\n      .update(JSON.stringify(keyData))\n      .digest(\"hex\");\n\n    return `support-cache:${operationType}:${hash}`;\n  }\n\n  /**\n   * Setup automatic cache invalidation timer\n   */\n  private setupInvalidationTimer(cacheKey: string, ttlSeconds: number): void {\n    // Clear existing timer if any\n    this.clearInvalidationTimer(cacheKey);\n\n    // Set new timer\n    const timer = setTimeout(() => {\n      this.cache.delete(cacheKey);\n      this.invalidationTimers.delete(cacheKey);\n      this.stats.cacheSize = this.cache.size;\n    }, ttlSeconds * 1000);\n\n    this.invalidationTimers.set(cacheKey, timer);\n  }\n\n  /**\n   * Clear invalidation timer\n   */\n  private clearInvalidationTimer(cacheKey: string): void {\n    const timer = this.invalidationTimers.get(cacheKey);\n    if (timer) {\n      clearTimeout(timer);\n      this.invalidationTimers.delete(cacheKey);\n    }\n  }\n\n  /**\n   * Invalidate cache for specific operation type\n   */\n  async invalidate(\n    operationType: SupportOperationType,\n    context?: Record<string, any>\n  ): Promise<void> {\n    if (context) {\n      // Invalidate specific entry\n      const cacheKey = this.generateCacheKey(operationType, context);\n      this.cache.delete(cacheKey);\n      this.clearInvalidationTimer(cacheKey);\n    } else {\n      // Invalidate all entries of this operation type\n      const keysToDelete: string[] = [];\n\n      for (const [key, entry] of this.cache.entries()) {\n        if (entry.operationType === operationType) {\n          keysToDelete.push(key);\n        }\n      }\n\n      for (const key of keysToDelete) {\n        this.cache.delete(key);\n        this.clearInvalidationTimer(key);\n      }\n    }\n\n    this.stats.cacheSize = this.cache.size;\n  }\n\n  /**\n   * Invalidate all cache entries\n   */\n  async invalidateAll(): Promise<void> {\n    this.cache.clear();\n\n    // Clear all timers\n    for (const timer of this.invalidationTimers.values()) {\n      clearTimeout(timer);\n    }\n    this.invalidationTimers.clear();\n\n    this.stats.cacheSize = 0;\n  }\n\n  /**\n   * Evict least recently used entry\n   */\n  private async evictLeastRecentlyUsed(): Promise<void> {\n    let oldestKey: string | null = null;\n    let oldestTime = Date.now();\n\n    for (const [key, entry] of this.cache.entries()) {\n      const lastAccessed = entry.metadata.lastAccessed.getTime();\n      if (lastAccessed < oldestTime) {\n        oldestTime = lastAccessed;\n        oldestKey = key;\n      }\n    }\n\n    if (oldestKey) {\n      this.cache.delete(oldestKey);\n      this.clearInvalidationTimer(oldestKey);\n      this.stats.cacheSize = this.cache.size;\n    }\n  }\n\n  /**\n   * Compress data\n   */\n  private async compress<T>(data: T): Promise<T> {\n    // Simple compression simulation - in production use zlib\n    const jsonString = JSON.stringify(data);\n    return JSON.parse(`{\"compressed\":true,\"data\":\"${jsonString}\"}`) as T;\n  }\n\n  /**\n   * Decompress data\n   */\n  private async decompress<T>(data: T): Promise<T> {\n    // Simple decompression simulation\n    const compressed = data as any;\n    if (compressed.compressed && compressed.data) {\n      return JSON.parse(compressed.data) as T;\n    }\n    return data;\n  }\n\n  /**\n   * Record cache hit\n   */\n  private recordHit(\n    operationType: SupportOperationType,\n    latency: number\n  ): void {\n    this.stats.hits++;\n    this.stats.totalRequests++;\n\n    const opStats = this.stats.operationStats[operationType];\n    opStats.hits++;\n    opStats.lastAccess = new Date();\n    this.updateOperationStats(opStats, latency);\n\n    this.updateGlobalStats(latency);\n  }\n\n  /**\n   * Record cache miss\n   */\n  private recordMiss(\n    operationType: SupportOperationType,\n    latency: number\n  ): void {\n    this.stats.misses++;\n    this.stats.totalRequests++;\n\n    const opStats = this.stats.operationStats[operationType];\n    opStats.misses++;\n    opStats.lastAccess = new Date();\n    this.updateOperationStats(opStats, latency);\n\n    this.updateGlobalStats(latency);\n  }\n\n  /**\n   * Update operation-specific statistics\n   */\n  private updateOperationStats(\n    opStats: OperationCacheStats,\n    latency: number\n  ): void {\n    const totalRequests = opStats.hits + opStats.misses;\n    opStats.hitRate = totalRequests > 0 ? opStats.hits / totalRequests : 0;\n    opStats.averageLatency = (opStats.averageLatency + latency) / 2;\n  }\n\n  /**\n   * Update global statistics\n   */\n  private updateGlobalStats(latency: number): void {\n    this.stats.hitRate =\n      this.stats.totalRequests > 0\n        ? this.stats.hits / this.stats.totalRequests\n        : 0;\n\n    this.stats.averageLatency = (this.stats.averageLatency + latency) / 2;\n    this.stats.lastUpdated = new Date();\n  }\n\n  /**\n   * Create initial operation statistics\n   */\n  private createOperationStats(): OperationCacheStats {\n    return {\n      hits: 0,\n      misses: 0,\n      hitRate: 0,\n      averageLatency: 0,\n      lastAccess: null,\n    };\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getStats(): SupportCacheStats {\n    return JSON.parse(JSON.stringify(this.stats));\n  }\n\n  /**\n   * Get statistics for specific operation type\n   */\n  getOperationStats(operationType: SupportOperationType): OperationCacheStats {\n    return JSON.parse(JSON.stringify(this.stats.operationStats[operationType]));\n  }\n\n  /**\n   * Check if cache performance meets targets\n   */\n  isPerformanceTarget(targetHitRate: number = 0.7): boolean {\n    return this.stats.hitRate >= targetHitRate;\n  }\n\n  /**\n   * Get cache configuration\n   */\n  getConfig(): SupportCacheConfig {\n    return JSON.parse(JSON.stringify(this.config));\n  }\n\n  /**\n   * Update cache configuration\n   */\n  updateConfig(newConfig: Partial<SupportCacheConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n\n    // Update TTL for specific operation types if provided\n    if (newConfig.ttlSeconds) {\n      this.config.ttlSeconds = {\n        ...this.config.ttlSeconds,\n        ...newConfig.ttlSeconds,\n      };\n    }\n  }\n\n  /**\n   * Health check for cache system\n   */\n  async healthCheck(): Promise<{\n    healthy: boolean;\n    cacheSize: number;\n    hitRate: number;\n    averageLatency: number;\n    errors: string[];\n  }> {\n    const errors: string[] = [];\n\n    try {\n      // Check cache size\n      if (this.cache.size > this.config.maxCacheSize * 0.9) {\n        errors.push(\n          `Cache size approaching limit: ${this.cache.size}/${this.config.maxCacheSize}`\n        );\n      }\n\n      // Check hit rate\n      if (this.stats.hitRate < 0.5 && this.stats.totalRequests > 10) {\n        errors.push(\n          `Low cache hit rate: ${(this.stats.hitRate * 100).toFixed(1)}%`\n        );\n      }\n\n      // Check average latency\n      if (this.stats.averageLatency > 100) {\n        errors.push(\n          `High cache latency: ${this.stats.averageLatency.toFixed(0)}ms`\n        );\n      }\n    } catch (error) {\n      errors.push(`Health check error: ${error}`);\n    }\n\n    const healthy = errors.length === 0;\n\n    return {\n      healthy,\n      cacheSize: this.cache.size,\n      hitRate: this.stats.hitRate,\n      averageLatency: this.stats.averageLatency,\n      errors,\n    };\n  }\n\n  /**\n   * Warm up cache with common support operations\n   */\n  async warmUp(\n    operations: Array<{\n      type: SupportOperationType;\n      data: any;\n      context?: Record<string, any>;\n    }>\n  ): Promise<void> {\n    console.log(\n      `Warming up support cache with ${operations.length} operations`\n    );\n\n    for (const operation of operations) {\n      await this.set(operation.type, operation.data, operation.context);\n    }\n\n    console.log(\n      `Cache warmed up: ${this.cache.size} entries, hit rate: ${(\n        this.stats.hitRate * 100\n      ).toFixed(1)}%`\n    );\n  }\n\n  /**\n   * Get cache entries for debugging\n   */\n  getCacheEntries(): Array<{\n    key: string;\n    operationType: SupportOperationType;\n    size: number;\n    accessCount: number;\n    expiresAt: Date;\n  }> {\n    const entries: Array<{\n      key: string;\n      operationType: SupportOperationType;\n      size: number;\n      accessCount: number;\n      expiresAt: Date;\n    }> = [];\n\n    for (const [key, entry] of this.cache.entries()) {\n      entries.push({\n        key,\n        operationType: entry.operationType,\n        size: entry.metadata.size,\n        accessCount: entry.accessCount,\n        expiresAt: entry.metadata.expiresAt,\n      });\n    }\n\n    return entries;\n  }\n}\n\n/**\n * Factory function for creating support operations cache\n */\nexport const createSupportOperationsCache = (\n  config?: Partial<SupportCacheConfig>\n): SupportOperationsCache => {\n  return new SupportOperationsCache(config);\n};\n\n/**\n * Default cache configurations for different environments\n */\nexport const SUPPORT_CACHE_CONFIGS = {\n  development: {\n    enabled: true,\n    ttlSeconds: {\n      infrastructureAudit: 60, // 1 minute\n      metaMonitoring: 30, // 30 seconds\n      implementationGaps: 120, // 2 minutes\n      complianceValidation: 300, // 5 minutes\n      securityAudit: 180, // 3 minutes\n      costAnalysis: 60, // 1 minute\n    },\n    maxCacheSize: 100,\n  },\n  staging: {\n    enabled: true,\n    ttlSeconds: {\n      infrastructureAudit: 180, // 3 minutes\n      metaMonitoring: 45, // 45 seconds\n      implementationGaps: 300, // 5 minutes\n      complianceValidation: 900, // 15 minutes\n      securityAudit: 450, // 7.5 minutes\n      costAnalysis: 180, // 3 minutes\n    },\n    maxCacheSize: 500,\n  },\n  production: {\n    enabled: true,\n    ttlSeconds: {\n      infrastructureAudit: 300, // 5 minutes\n      metaMonitoring: 60, // 1 minute\n      implementationGaps: 600, // 10 minutes\n      complianceValidation: 1800, // 30 minutes\n      securityAudit: 900, // 15 minutes\n      costAnalysis: 300, // 5 minutes\n    },\n    maxCacheSize: 1000,\n  },\n} as const;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9bba8c1a80495ceff97f0bd7ade6f8b79aa09af9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g4ctd0uid = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g4ctd0uid();
cov_2g4ctd0uid().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2g4ctd0uid().s[1]++;
exports.SUPPORT_CACHE_CONFIGS = exports.createSupportOperationsCache = exports.SupportOperationsCache = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2g4ctd0uid().s[2]++, require("tslib"));
const crypto_1 =
/* istanbul ignore next */
(cov_2g4ctd0uid().s[3]++, require("crypto"));
/**
 * Support Operations Caching Layer
 */
class SupportOperationsCache {
  constructor(config) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[0]++;
    cov_2g4ctd0uid().s[4]++;
    this.config = Object.assign({
      enabled: true,
      ttlSeconds: {
        infrastructureAudit: 300,
        // 5 minutes - infrastructure changes frequently
        metaMonitoring: 60,
        // 1 minute - real-time monitoring
        implementationGaps: 600,
        // 10 minutes - gaps change less frequently
        complianceValidation: 1800,
        // 30 minutes - compliance is relatively stable
        securityAudit: 900,
        // 15 minutes - security needs regular checks
        costAnalysis: 300 // 5 minutes - cost data updates frequently
      },
      maxCacheSize: 1000,
      compressionEnabled: true,
      invalidationStrategy: "hybrid"
    }, config);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[5]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[6]++;
    this.invalidationTimers = new Map();
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[7]++;
    this.stats = {
      hits: 0,
      misses: 0,
      hitRate: 0,
      totalRequests: 0,
      averageLatency: 0,
      cacheSize: 0,
      lastUpdated: new Date(),
      operationStats: {
        infrastructureAudit: this.createOperationStats(),
        metaMonitoring: this.createOperationStats(),
        implementationGaps: this.createOperationStats(),
        complianceValidation: this.createOperationStats(),
        securityAudit: this.createOperationStats(),
        costAnalysis: this.createOperationStats()
      }
    };
  }
  /**
   * Get cached infrastructure audit result
   */
  getInfrastructureAudit(context) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[1]++;
    cov_2g4ctd0uid().s[8]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[2]++;
      cov_2g4ctd0uid().s[9]++;
      return this.get("infrastructureAudit", context);
    });
  }
  /**
   * Cache infrastructure audit result
   */
  setInfrastructureAudit(result, context) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[3]++;
    cov_2g4ctd0uid().s[10]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[4]++;
      cov_2g4ctd0uid().s[11]++;
      return this.set("infrastructureAudit", result, context);
    });
  }
  /**
   * Get cached meta-monitoring data
   */
  getMetaMonitoring(executionId) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[5]++;
    cov_2g4ctd0uid().s[12]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[6]++;
      cov_2g4ctd0uid().s[13]++;
      return this.get("metaMonitoring", {
        executionId
      });
    });
  }
  /**
   * Cache meta-monitoring data
   */
  setMetaMonitoring(data, executionId) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[7]++;
    cov_2g4ctd0uid().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[8]++;
      cov_2g4ctd0uid().s[15]++;
      return this.set("metaMonitoring", data, {
        executionId
      });
    });
  }
  /**
   * Get cached implementation gaps
   */
  getImplementationGaps(module) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[9]++;
    cov_2g4ctd0uid().s[16]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[10]++;
      cov_2g4ctd0uid().s[17]++;
      return this.get("implementationGaps", {
        module
      });
    });
  }
  /**
   * Cache implementation gaps
   */
  setImplementationGaps(gaps, module) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[11]++;
    cov_2g4ctd0uid().s[18]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[12]++;
      cov_2g4ctd0uid().s[19]++;
      return this.set("implementationGaps", gaps, {
        module
      });
    });
  }
  /**
   * Get cached compliance validation result
   */
  getComplianceValidation(scope) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[13]++;
    cov_2g4ctd0uid().s[20]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[14]++;
      cov_2g4ctd0uid().s[21]++;
      return this.get("complianceValidation", {
        scope
      });
    });
  }
  /**
   * Cache compliance validation result
   */
  setComplianceValidation(result, scope) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[15]++;
    cov_2g4ctd0uid().s[22]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[16]++;
      cov_2g4ctd0uid().s[23]++;
      return this.set("complianceValidation", result, {
        scope
      });
    });
  }
  /**
   * Get cached security audit result
   */
  getSecurityAudit(component) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[17]++;
    cov_2g4ctd0uid().s[24]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[18]++;
      cov_2g4ctd0uid().s[25]++;
      return this.get("securityAudit", {
        component
      });
    });
  }
  /**
   * Cache security audit result
   */
  setSecurityAudit(result, component) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[19]++;
    cov_2g4ctd0uid().s[26]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[20]++;
      cov_2g4ctd0uid().s[27]++;
      return this.set("securityAudit", result, {
        component
      });
    });
  }
  /**
   * Get cached cost analysis
   */
  getCostAnalysis(timeRange) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[21]++;
    cov_2g4ctd0uid().s[28]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[22]++;
      cov_2g4ctd0uid().s[29]++;
      return this.get("costAnalysis", {
        timeRange
      });
    });
  }
  /**
   * Cache cost analysis
   */
  setCostAnalysis(analysis, timeRange) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[23]++;
    cov_2g4ctd0uid().s[30]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[24]++;
      cov_2g4ctd0uid().s[31]++;
      return this.set("costAnalysis", analysis, {
        timeRange
      });
    });
  }
  /**
   * Generic get method for any support operation
   */
  get(operationType, context) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[25]++;
    cov_2g4ctd0uid().s[32]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[26]++;
      cov_2g4ctd0uid().s[33]++;
      if (!this.config.enabled) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[0][0]++;
        cov_2g4ctd0uid().s[34]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_2g4ctd0uid().b[0][1]++;
      }
      const startTime =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[35]++, Date.now());
      const cacheKey =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[36]++, this.generateCacheKey(operationType, context));
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[37]++;
      try {
        const entry =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[38]++, this.cache.get(cacheKey));
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[39]++;
        if (entry) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[1][0]++;
          cov_2g4ctd0uid().s[40]++;
          // Check if entry has expired
          if (Date.now() > entry.metadata.expiresAt.getTime()) {
            /* istanbul ignore next */
            cov_2g4ctd0uid().b[2][0]++;
            cov_2g4ctd0uid().s[41]++;
            this.cache.delete(cacheKey);
            /* istanbul ignore next */
            cov_2g4ctd0uid().s[42]++;
            this.clearInvalidationTimer(cacheKey);
            /* istanbul ignore next */
            cov_2g4ctd0uid().s[43]++;
            this.recordMiss(operationType, Date.now() - startTime);
            /* istanbul ignore next */
            cov_2g4ctd0uid().s[44]++;
            return null;
          } else
          /* istanbul ignore next */
          {
            cov_2g4ctd0uid().b[2][1]++;
          }
          // Update access metadata
          cov_2g4ctd0uid().s[45]++;
          entry.accessCount++;
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[46]++;
          entry.metadata.lastAccessed = new Date();
          // Decompress if needed
          let data =
          /* istanbul ignore next */
          (cov_2g4ctd0uid().s[47]++, entry.data);
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[48]++;
          if (
          /* istanbul ignore next */
          (cov_2g4ctd0uid().b[4][0]++, entry.compressed) &&
          /* istanbul ignore next */
          (cov_2g4ctd0uid().b[4][1]++, this.config.compressionEnabled)) {
            /* istanbul ignore next */
            cov_2g4ctd0uid().b[3][0]++;
            cov_2g4ctd0uid().s[49]++;
            data = yield this.decompress(data);
          } else
          /* istanbul ignore next */
          {
            cov_2g4ctd0uid().b[3][1]++;
          }
          cov_2g4ctd0uid().s[50]++;
          this.recordHit(operationType, Date.now() - startTime);
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[51]++;
          return data;
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[1][1]++;
        }
        cov_2g4ctd0uid().s[52]++;
        this.recordMiss(operationType, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[53]++;
        return null;
      } catch (error) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[54]++;
        console.error(`Support cache get error for ${operationType}:`, error);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[55]++;
        this.recordMiss(operationType, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[56]++;
        return null;
      }
    });
  }
  /**
   * Generic set method for any support operation
   */
  set(operationType, data, context) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[27]++;
    cov_2g4ctd0uid().s[57]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[28]++;
      cov_2g4ctd0uid().s[58]++;
      if (!this.config.enabled) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[5][0]++;
        cov_2g4ctd0uid().s[59]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2g4ctd0uid().b[5][1]++;
      }
      // Check cache size limit
      cov_2g4ctd0uid().s[60]++;
      if (this.cache.size >= this.config.maxCacheSize) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[6][0]++;
        cov_2g4ctd0uid().s[61]++;
        yield this.evictLeastRecentlyUsed();
      } else
      /* istanbul ignore next */
      {
        cov_2g4ctd0uid().b[6][1]++;
      }
      const cacheKey =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[62]++, this.generateCacheKey(operationType, context));
      const ttl =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[63]++, this.config.ttlSeconds[operationType]);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[64]++;
      try {
        let dataToCache =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[65]++, data);
        let compressed =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[66]++, false);
        let compressionRatio;
        // Compress large data
        const dataSize =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[67]++, JSON.stringify(data).length);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[68]++;
        if (
        /* istanbul ignore next */
        (cov_2g4ctd0uid().b[8][0]++, dataSize > 1024) &&
        /* istanbul ignore next */
        (cov_2g4ctd0uid().b[8][1]++, this.config.compressionEnabled)) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[7][0]++;
          const originalSize =
          /* istanbul ignore next */
          (cov_2g4ctd0uid().s[69]++, dataSize);
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[70]++;
          dataToCache = yield this.compress(data);
          const compressedSize =
          /* istanbul ignore next */
          (cov_2g4ctd0uid().s[71]++, JSON.stringify(dataToCache).length);
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[72]++;
          compressed = true;
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[73]++;
          compressionRatio = compressedSize / originalSize;
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[7][1]++;
        }
        const now =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[74]++, new Date());
        const expiresAt =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[75]++, new Date(now.getTime() + ttl * 1000));
        const entry =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[76]++, {
          data: dataToCache,
          timestamp: Date.now(),
          ttl,
          compressed,
          accessCount: 0,
          operationType,
          metadata: {
            createdAt: now,
            lastAccessed: now,
            expiresAt,
            size: dataSize,
            compressionRatio
          }
        });
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[77]++;
        this.cache.set(cacheKey, entry);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[78]++;
        this.stats.cacheSize = this.cache.size;
        // Set up TTL-based invalidation
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[79]++;
        if (this.config.invalidationStrategy !== "event") {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[9][0]++;
          cov_2g4ctd0uid().s[80]++;
          this.setupInvalidationTimer(cacheKey, ttl);
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[9][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[81]++;
        console.error(`Support cache set error for ${operationType}:`, error);
      }
    });
  }
  /**
   * Generate cache key from operation type and context
   */
  generateCacheKey(operationType, context) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[29]++;
    const keyData =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[82]++, {
      operationType,
      context:
      /* istanbul ignore next */
      (cov_2g4ctd0uid().b[10][0]++, context) ||
      /* istanbul ignore next */
      (cov_2g4ctd0uid().b[10][1]++, {})
    });
    const hash =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[83]++, (0, crypto_1.createHash)("sha256").update(JSON.stringify(keyData)).digest("hex"));
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[84]++;
    return `support-cache:${operationType}:${hash}`;
  }
  /**
   * Setup automatic cache invalidation timer
   */
  setupInvalidationTimer(cacheKey, ttlSeconds) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[30]++;
    cov_2g4ctd0uid().s[85]++;
    // Clear existing timer if any
    this.clearInvalidationTimer(cacheKey);
    // Set new timer
    const timer =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[86]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[31]++;
      cov_2g4ctd0uid().s[87]++;
      this.cache.delete(cacheKey);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[88]++;
      this.invalidationTimers.delete(cacheKey);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[89]++;
      this.stats.cacheSize = this.cache.size;
    }, ttlSeconds * 1000));
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[90]++;
    this.invalidationTimers.set(cacheKey, timer);
  }
  /**
   * Clear invalidation timer
   */
  clearInvalidationTimer(cacheKey) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[32]++;
    const timer =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[91]++, this.invalidationTimers.get(cacheKey));
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[92]++;
    if (timer) {
      /* istanbul ignore next */
      cov_2g4ctd0uid().b[11][0]++;
      cov_2g4ctd0uid().s[93]++;
      clearTimeout(timer);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[94]++;
      this.invalidationTimers.delete(cacheKey);
    } else
    /* istanbul ignore next */
    {
      cov_2g4ctd0uid().b[11][1]++;
    }
  }
  /**
   * Invalidate cache for specific operation type
   */
  invalidate(operationType, context) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[33]++;
    cov_2g4ctd0uid().s[95]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[34]++;
      cov_2g4ctd0uid().s[96]++;
      if (context) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[12][0]++;
        // Invalidate specific entry
        const cacheKey =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[97]++, this.generateCacheKey(operationType, context));
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[98]++;
        this.cache.delete(cacheKey);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[99]++;
        this.clearInvalidationTimer(cacheKey);
      } else {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[12][1]++;
        // Invalidate all entries of this operation type
        const keysToDelete =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[100]++, []);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[101]++;
        for (const [key, entry] of this.cache.entries()) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[102]++;
          if (entry.operationType === operationType) {
            /* istanbul ignore next */
            cov_2g4ctd0uid().b[13][0]++;
            cov_2g4ctd0uid().s[103]++;
            keysToDelete.push(key);
          } else
          /* istanbul ignore next */
          {
            cov_2g4ctd0uid().b[13][1]++;
          }
        }
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[104]++;
        for (const key of keysToDelete) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[105]++;
          this.cache.delete(key);
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[106]++;
          this.clearInvalidationTimer(key);
        }
      }
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[107]++;
      this.stats.cacheSize = this.cache.size;
    });
  }
  /**
   * Invalidate all cache entries
   */
  invalidateAll() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[35]++;
    cov_2g4ctd0uid().s[108]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[36]++;
      cov_2g4ctd0uid().s[109]++;
      this.cache.clear();
      // Clear all timers
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[110]++;
      for (const timer of this.invalidationTimers.values()) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[111]++;
        clearTimeout(timer);
      }
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[112]++;
      this.invalidationTimers.clear();
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[113]++;
      this.stats.cacheSize = 0;
    });
  }
  /**
   * Evict least recently used entry
   */
  evictLeastRecentlyUsed() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[37]++;
    cov_2g4ctd0uid().s[114]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[38]++;
      let oldestKey =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[115]++, null);
      let oldestTime =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[116]++, Date.now());
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[117]++;
      for (const [key, entry] of this.cache.entries()) {
        const lastAccessed =
        /* istanbul ignore next */
        (cov_2g4ctd0uid().s[118]++, entry.metadata.lastAccessed.getTime());
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[119]++;
        if (lastAccessed < oldestTime) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[14][0]++;
          cov_2g4ctd0uid().s[120]++;
          oldestTime = lastAccessed;
          /* istanbul ignore next */
          cov_2g4ctd0uid().s[121]++;
          oldestKey = key;
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[14][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[122]++;
      if (oldestKey) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[15][0]++;
        cov_2g4ctd0uid().s[123]++;
        this.cache.delete(oldestKey);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[124]++;
        this.clearInvalidationTimer(oldestKey);
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[125]++;
        this.stats.cacheSize = this.cache.size;
      } else
      /* istanbul ignore next */
      {
        cov_2g4ctd0uid().b[15][1]++;
      }
    });
  }
  /**
   * Compress data
   */
  compress(data) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[39]++;
    cov_2g4ctd0uid().s[126]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[40]++;
      // Simple compression simulation - in production use zlib
      const jsonString =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[127]++, JSON.stringify(data));
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[128]++;
      return JSON.parse(`{"compressed":true,"data":"${jsonString}"}`);
    });
  }
  /**
   * Decompress data
   */
  decompress(data) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[41]++;
    cov_2g4ctd0uid().s[129]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[42]++;
      // Simple decompression simulation
      const compressed =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[130]++, data);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[131]++;
      if (
      /* istanbul ignore next */
      (cov_2g4ctd0uid().b[17][0]++, compressed.compressed) &&
      /* istanbul ignore next */
      (cov_2g4ctd0uid().b[17][1]++, compressed.data)) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().b[16][0]++;
        cov_2g4ctd0uid().s[132]++;
        return JSON.parse(compressed.data);
      } else
      /* istanbul ignore next */
      {
        cov_2g4ctd0uid().b[16][1]++;
      }
      cov_2g4ctd0uid().s[133]++;
      return data;
    });
  }
  /**
   * Record cache hit
   */
  recordHit(operationType, latency) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[43]++;
    cov_2g4ctd0uid().s[134]++;
    this.stats.hits++;
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[135]++;
    this.stats.totalRequests++;
    const opStats =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[136]++, this.stats.operationStats[operationType]);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[137]++;
    opStats.hits++;
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[138]++;
    opStats.lastAccess = new Date();
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[139]++;
    this.updateOperationStats(opStats, latency);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[140]++;
    this.updateGlobalStats(latency);
  }
  /**
   * Record cache miss
   */
  recordMiss(operationType, latency) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[44]++;
    cov_2g4ctd0uid().s[141]++;
    this.stats.misses++;
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[142]++;
    this.stats.totalRequests++;
    const opStats =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[143]++, this.stats.operationStats[operationType]);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[144]++;
    opStats.misses++;
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[145]++;
    opStats.lastAccess = new Date();
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[146]++;
    this.updateOperationStats(opStats, latency);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[147]++;
    this.updateGlobalStats(latency);
  }
  /**
   * Update operation-specific statistics
   */
  updateOperationStats(opStats, latency) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[45]++;
    const totalRequests =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[148]++, opStats.hits + opStats.misses);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[149]++;
    opStats.hitRate = totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_2g4ctd0uid().b[18][0]++, opStats.hits / totalRequests) :
    /* istanbul ignore next */
    (cov_2g4ctd0uid().b[18][1]++, 0);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[150]++;
    opStats.averageLatency = (opStats.averageLatency + latency) / 2;
  }
  /**
   * Update global statistics
   */
  updateGlobalStats(latency) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[46]++;
    cov_2g4ctd0uid().s[151]++;
    this.stats.hitRate = this.stats.totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_2g4ctd0uid().b[19][0]++, this.stats.hits / this.stats.totalRequests) :
    /* istanbul ignore next */
    (cov_2g4ctd0uid().b[19][1]++, 0);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[152]++;
    this.stats.averageLatency = (this.stats.averageLatency + latency) / 2;
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[153]++;
    this.stats.lastUpdated = new Date();
  }
  /**
   * Create initial operation statistics
   */
  createOperationStats() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[47]++;
    cov_2g4ctd0uid().s[154]++;
    return {
      hits: 0,
      misses: 0,
      hitRate: 0,
      averageLatency: 0,
      lastAccess: null
    };
  }
  /**
   * Get cache statistics
   */
  getStats() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[48]++;
    cov_2g4ctd0uid().s[155]++;
    return JSON.parse(JSON.stringify(this.stats));
  }
  /**
   * Get statistics for specific operation type
   */
  getOperationStats(operationType) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[49]++;
    cov_2g4ctd0uid().s[156]++;
    return JSON.parse(JSON.stringify(this.stats.operationStats[operationType]));
  }
  /**
   * Check if cache performance meets targets
   */
  isPerformanceTarget(targetHitRate =
  /* istanbul ignore next */
  (cov_2g4ctd0uid().b[20][0]++, 0.7)) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[50]++;
    cov_2g4ctd0uid().s[157]++;
    return this.stats.hitRate >= targetHitRate;
  }
  /**
   * Get cache configuration
   */
  getConfig() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[51]++;
    cov_2g4ctd0uid().s[158]++;
    return JSON.parse(JSON.stringify(this.config));
  }
  /**
   * Update cache configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[52]++;
    cov_2g4ctd0uid().s[159]++;
    this.config = Object.assign(Object.assign({}, this.config), newConfig);
    // Update TTL for specific operation types if provided
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[160]++;
    if (newConfig.ttlSeconds) {
      /* istanbul ignore next */
      cov_2g4ctd0uid().b[21][0]++;
      cov_2g4ctd0uid().s[161]++;
      this.config.ttlSeconds = Object.assign(Object.assign({}, this.config.ttlSeconds), newConfig.ttlSeconds);
    } else
    /* istanbul ignore next */
    {
      cov_2g4ctd0uid().b[21][1]++;
    }
  }
  /**
   * Health check for cache system
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[53]++;
    cov_2g4ctd0uid().s[162]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[54]++;
      const errors =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[163]++, []);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[164]++;
      try {
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[165]++;
        // Check cache size
        if (this.cache.size > this.config.maxCacheSize * 0.9) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[22][0]++;
          cov_2g4ctd0uid().s[166]++;
          errors.push(`Cache size approaching limit: ${this.cache.size}/${this.config.maxCacheSize}`);
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[22][1]++;
        }
        // Check hit rate
        cov_2g4ctd0uid().s[167]++;
        if (
        /* istanbul ignore next */
        (cov_2g4ctd0uid().b[24][0]++, this.stats.hitRate < 0.5) &&
        /* istanbul ignore next */
        (cov_2g4ctd0uid().b[24][1]++, this.stats.totalRequests > 10)) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[23][0]++;
          cov_2g4ctd0uid().s[168]++;
          errors.push(`Low cache hit rate: ${(this.stats.hitRate * 100).toFixed(1)}%`);
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[23][1]++;
        }
        // Check average latency
        cov_2g4ctd0uid().s[169]++;
        if (this.stats.averageLatency > 100) {
          /* istanbul ignore next */
          cov_2g4ctd0uid().b[25][0]++;
          cov_2g4ctd0uid().s[170]++;
          errors.push(`High cache latency: ${this.stats.averageLatency.toFixed(0)}ms`);
        } else
        /* istanbul ignore next */
        {
          cov_2g4ctd0uid().b[25][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[171]++;
        errors.push(`Health check error: ${error}`);
      }
      const healthy =
      /* istanbul ignore next */
      (cov_2g4ctd0uid().s[172]++, errors.length === 0);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[173]++;
      return {
        healthy,
        cacheSize: this.cache.size,
        hitRate: this.stats.hitRate,
        averageLatency: this.stats.averageLatency,
        errors
      };
    });
  }
  /**
   * Warm up cache with common support operations
   */
  warmUp(operations) {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[55]++;
    cov_2g4ctd0uid().s[174]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2g4ctd0uid().f[56]++;
      cov_2g4ctd0uid().s[175]++;
      console.log(`Warming up support cache with ${operations.length} operations`);
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[176]++;
      for (const operation of operations) {
        /* istanbul ignore next */
        cov_2g4ctd0uid().s[177]++;
        yield this.set(operation.type, operation.data, operation.context);
      }
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[178]++;
      console.log(`Cache warmed up: ${this.cache.size} entries, hit rate: ${(this.stats.hitRate * 100).toFixed(1)}%`);
    });
  }
  /**
   * Get cache entries for debugging
   */
  getCacheEntries() {
    /* istanbul ignore next */
    cov_2g4ctd0uid().f[57]++;
    const entries =
    /* istanbul ignore next */
    (cov_2g4ctd0uid().s[179]++, []);
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[180]++;
    for (const [key, entry] of this.cache.entries()) {
      /* istanbul ignore next */
      cov_2g4ctd0uid().s[181]++;
      entries.push({
        key,
        operationType: entry.operationType,
        size: entry.metadata.size,
        accessCount: entry.accessCount,
        expiresAt: entry.metadata.expiresAt
      });
    }
    /* istanbul ignore next */
    cov_2g4ctd0uid().s[182]++;
    return entries;
  }
}
/* istanbul ignore next */
cov_2g4ctd0uid().s[183]++;
exports.SupportOperationsCache = SupportOperationsCache;
/**
 * Factory function for creating support operations cache
 */
/* istanbul ignore next */
cov_2g4ctd0uid().s[184]++;
const createSupportOperationsCache = config => {
  /* istanbul ignore next */
  cov_2g4ctd0uid().f[58]++;
  cov_2g4ctd0uid().s[185]++;
  return new SupportOperationsCache(config);
};
/* istanbul ignore next */
cov_2g4ctd0uid().s[186]++;
exports.createSupportOperationsCache = createSupportOperationsCache;
/**
 * Default cache configurations for different environments
 */
/* istanbul ignore next */
cov_2g4ctd0uid().s[187]++;
exports.SUPPORT_CACHE_CONFIGS = {
  development: {
    enabled: true,
    ttlSeconds: {
      infrastructureAudit: 60,
      // 1 minute
      metaMonitoring: 30,
      // 30 seconds
      implementationGaps: 120,
      // 2 minutes
      complianceValidation: 300,
      // 5 minutes
      securityAudit: 180,
      // 3 minutes
      costAnalysis: 60 // 1 minute
    },
    maxCacheSize: 100
  },
  staging: {
    enabled: true,
    ttlSeconds: {
      infrastructureAudit: 180,
      // 3 minutes
      metaMonitoring: 45,
      // 45 seconds
      implementationGaps: 300,
      // 5 minutes
      complianceValidation: 900,
      // 15 minutes
      securityAudit: 450,
      // 7.5 minutes
      costAnalysis: 180 // 3 minutes
    },
    maxCacheSize: 500
  },
  production: {
    enabled: true,
    ttlSeconds: {
      infrastructureAudit: 300,
      // 5 minutes
      metaMonitoring: 60,
      // 1 minute
      implementationGaps: 600,
      // 10 minutes
      complianceValidation: 1800,
      // 30 minutes
      securityAudit: 900,
      // 15 minutes
      costAnalysis: 300 // 5 minutes
    },
    maxCacheSize: 1000
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,