8fa147aa8e9ee291ca3780a62caffe09
"use strict";

/**
 * System Resource Monitor
 *
 * Monitors CPU and memory usage to ensure Bedrock Support Mode overhead
 * stays under 5% of system resources (< 1% CPU, < 50MB memory).
 *
 * @module system-resource-monitor
 */
/* istanbul ignore next */
function cov_2blpxxrbme() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/system-resource-monitor.ts";
  var hash = "eada7f9d7a8fb4b33e64b30d139e70ec180f7aeb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/system-resource-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "2": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 32
        }
      },
      "3": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "4": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "5": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "6": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "7": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "8": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 25
        }
      },
      "9": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "10": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 34
        }
      },
      "11": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "12": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "13": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 92
        }
      },
      "14": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "15": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "16": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 74
        }
      },
      "17": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "18": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 80
        }
      },
      "19": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "20": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 70
        }
      },
      "21": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 71,
          column: 15
        }
      },
      "22": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 118
        }
      },
      "23": {
        start: {
          line: 73,
          column: 53
        },
        end: {
          line: 73,
          column: 82
        }
      },
      "24": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "25": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 114
        }
      },
      "26": {
        start: {
          line: 76,
          column: 52
        },
        end: {
          line: 76,
          column: 78
        }
      },
      "27": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "28": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "29": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 23
        }
      },
      "30": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 80
        }
      },
      "31": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 38
        }
      },
      "32": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "33": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 52
        }
      },
      "34": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 49
        }
      },
      "35": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "36": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 47
        }
      },
      "37": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 44
        }
      },
      "38": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "39": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "40": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 104
        }
      },
      "41": {
        start: {
          line: 114,
          column: 63
        },
        end: {
          line: 114,
          column: 103
        }
      },
      "42": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 94
        }
      },
      "43": {
        start: {
          line: 115,
          column: 58
        },
        end: {
          line: 115,
          column: 93
        }
      },
      "44": {
        start: {
          line: 117,
          column: 32
        },
        end: {
          line: 117,
          column: 53
        }
      },
      "45": {
        start: {
          line: 118,
          column: 32
        },
        end: {
          line: 118,
          column: 45
        }
      },
      "46": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 119,
          column: 65
        }
      },
      "47": {
        start: {
          line: 120,
          column: 34
        },
        end: {
          line: 120,
          column: 61
        }
      },
      "48": {
        start: {
          line: 121,
          column: 39
        },
        end: {
          line: 121,
          column: 76
        }
      },
      "49": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 47
        }
      },
      "50": {
        start: {
          line: 124,
          column: 36
        },
        end: {
          line: 124,
          column: 75
        }
      },
      "51": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 133,
          column: 14
        }
      },
      "52": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 142,
          column: 60
        }
      },
      "53": {
        start: {
          line: 143,
          column: 26
        },
        end: {
          line: 143,
          column: 52
        }
      },
      "54": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 63
        }
      },
      "55": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "56": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "57": {
        start: {
          line: 152,
          column: 39
        },
        end: {
          line: 152,
          column: 73
        }
      },
      "58": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 50
        }
      },
      "59": {
        start: {
          line: 155,
          column: 35
        },
        end: {
          line: 155,
          column: 78
        }
      },
      "60": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 104
        }
      },
      "61": {
        start: {
          line: 156,
          column: 63
        },
        end: {
          line: 156,
          column: 102
        }
      },
      "62": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 170,
          column: 17
        }
      },
      "63": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 169,
          column: 23
        }
      },
      "64": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 90
        }
      },
      "65": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "66": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 184,
          column: 13
        }
      },
      "67": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 23
        }
      },
      "68": {
        start: {
          line: 185,
          column: 34
        },
        end: {
          line: 185,
          column: 71
        }
      },
      "69": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 34
        }
      },
      "70": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "71": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 195,
          column: 19
        }
      },
      "72": {
        start: {
          line: 197,
          column: 17
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "73": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "74": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "75": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 214,
          column: 19
        }
      },
      "76": {
        start: {
          line: 216,
          column: 17
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "77": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 223,
          column: 19
        }
      },
      "78": {
        start: {
          line: 231,
          column: 25
        },
        end: {
          line: 231,
          column: 66
        }
      },
      "79": {
        start: {
          line: 232,
          column: 26
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "80": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 30
        }
      },
      "81": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "82": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 19
        }
      },
      "83": {
        start: {
          line: 239,
          column: 22
        },
        end: {
          line: 239,
          column: 176
        }
      },
      "84": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 32
        }
      },
      "85": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 46
        }
      },
      "86": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 99
        }
      },
      "87": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "88": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "89": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 54
        }
      },
      "90": {
        start: {
          line: 265,
          column: 27
        },
        end: {
          line: 265,
          column: 50
        }
      },
      "91": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 88
        }
      },
      "92": {
        start: {
          line: 266,
          column: 47
        },
        end: {
          line: 266,
          column: 86
        }
      },
      "93": {
        start: {
          line: 272,
          column: 24
        },
        end: {
          line: 272,
          column: 94
        }
      },
      "94": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "95": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 283,
          column: 14
        }
      },
      "96": {
        start: {
          line: 285,
          column: 32
        },
        end: {
          line: 286,
          column: 31
        }
      },
      "97": {
        start: {
          line: 285,
          column: 64
        },
        end: {
          line: 285,
          column: 87
        }
      },
      "98": {
        start: {
          line: 287,
          column: 35
        },
        end: {
          line: 288,
          column: 31
        }
      },
      "99": {
        start: {
          line: 287,
          column: 67
        },
        end: {
          line: 287,
          column: 88
        }
      },
      "100": {
        start: {
          line: 289,
          column: 29
        },
        end: {
          line: 289,
          column: 84
        }
      },
      "101": {
        start: {
          line: 289,
          column: 65
        },
        end: {
          line: 289,
          column: 82
        }
      },
      "102": {
        start: {
          line: 290,
          column: 32
        },
        end: {
          line: 290,
          column: 85
        }
      },
      "103": {
        start: {
          line: 290,
          column: 68
        },
        end: {
          line: 290,
          column: 83
        }
      },
      "104": {
        start: {
          line: 291,
          column: 35
        },
        end: {
          line: 292,
          column: 70
        }
      },
      "105": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 302,
          column: 10
        }
      },
      "106": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 308,
          column: 49
        }
      },
      "107": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 42
        }
      },
      "108": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 66
        }
      },
      "109": {
        start: {
          line: 315,
          column: 45
        },
        end: {
          line: 315,
          column: 64
        }
      },
      "110": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 32
        }
      },
      "111": {
        start: {
          line: 327,
          column: 22
        },
        end: {
          line: 327,
          column: 63
        }
      },
      "112": {
        start: {
          line: 327,
          column: 46
        },
        end: {
          line: 327,
          column: 62
        }
      },
      "113": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "114": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 38
        }
      },
      "115": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 82
        }
      },
      "116": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 24
        }
      },
      "117": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 21
        }
      },
      "118": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 76
        }
      },
      "119": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 69
        }
      },
      "120": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 26
        }
      },
      "121": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 25
        }
      },
      "122": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 35
        }
      },
      "123": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 41
        }
      },
      "124": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 72
        }
      },
      "125": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 360,
          column: 11
        }
      },
      "126": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 40
        }
      },
      "127": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 25
        }
      },
      "128": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 69
        }
      },
      "129": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "130": {
        start: {
          line: 377,
          column: 0
        },
        end: {
          line: 377,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 50
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 37
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 22
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 49
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 55
          },
          end: {
            line: 50,
            column: 56
          }
        },
        loc: {
          start: {
            line: 50,
            column: 68
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 50
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 73,
            column: 47
          },
          end: {
            line: 73,
            column: 48
          }
        },
        loc: {
          start: {
            line: 73,
            column: 53
          },
          end: {
            line: 73,
            column: 82
          }
        },
        line: 73
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 76,
            column: 46
          },
          end: {
            line: 76,
            column: 47
          }
        },
        loc: {
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 76,
            column: 78
          }
        },
        line: 76
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 21
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 84,
            column: 55
          },
          end: {
            line: 84,
            column: 56
          }
        },
        loc: {
          start: {
            line: 84,
            column: 68
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 84
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 28
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 55
          },
          end: {
            line: 113,
            column: 56
          }
        },
        loc: {
          start: {
            line: 113,
            column: 68
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 113
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 57
          },
          end: {
            line: 114,
            column: 58
          }
        },
        loc: {
          start: {
            line: 114,
            column: 63
          },
          end: {
            line: 114,
            column: 103
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 52
          },
          end: {
            line: 115,
            column: 53
          }
        },
        loc: {
          start: {
            line: 115,
            column: 58
          },
          end: {
            line: 115,
            column: 93
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 39
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 139
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 149
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 150,
            column: 55
          },
          end: {
            line: 150,
            column: 56
          }
        },
        loc: {
          start: {
            line: 150,
            column: 68
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 150
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 156,
            column: 51
          },
          end: {
            line: 156,
            column: 52
          }
        },
        loc: {
          start: {
            line: 156,
            column: 63
          },
          end: {
            line: 156,
            column: 102
          }
        },
        line: 156
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 180
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 181,
            column: 55
          },
          end: {
            line: 181,
            column: 56
          }
        },
        loc: {
          start: {
            line: 181,
            column: 68
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 181
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 27
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 230
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 256
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 257,
            column: 55
          },
          end: {
            line: 257,
            column: 56
          }
        },
        loc: {
          start: {
            line: 257,
            column: 68
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 257
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 42
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 264
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 266,
            column: 36
          }
        },
        loc: {
          start: {
            line: 266,
            column: 47
          },
          end: {
            line: 266,
            column: 86
          }
        },
        line: 266
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 25
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 271
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 285,
            column: 52
          },
          end: {
            line: 285,
            column: 53
          }
        },
        loc: {
          start: {
            line: 285,
            column: 64
          },
          end: {
            line: 285,
            column: 87
          }
        },
        line: 285
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 287,
            column: 55
          },
          end: {
            line: 287,
            column: 56
          }
        },
        loc: {
          start: {
            line: 287,
            column: 67
          },
          end: {
            line: 287,
            column: 88
          }
        },
        line: 287
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 289,
            column: 58
          },
          end: {
            line: 289,
            column: 59
          }
        },
        loc: {
          start: {
            line: 289,
            column: 65
          },
          end: {
            line: 289,
            column: 82
          }
        },
        line: 289
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 290,
            column: 61
          },
          end: {
            line: 290,
            column: 62
          }
        },
        loc: {
          start: {
            line: 290,
            column: 68
          },
          end: {
            line: 290,
            column: 83
          }
        },
        line: 290
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 33
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 307
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 22
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 314
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 315,
            column: 34
          },
          end: {
            line: 315,
            column: 35
          }
        },
        loc: {
          start: {
            line: 315,
            column: 45
          },
          end: {
            line: 315,
            column: 64
          }
        },
        line: 315
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 19
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 320
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 30
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 326
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 327,
            column: 39
          },
          end: {
            line: 327,
            column: 40
          }
        },
        loc: {
          start: {
            line: 327,
            column: 46
          },
          end: {
            line: 327,
            column: 62
          }
        },
        line: 327
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 25
          },
          end: {
            line: 341,
            column: 5
          }
        },
        line: 338
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 345
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 14
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 355
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 356,
            column: 55
          },
          end: {
            line: 356,
            column: 56
          }
        },
        loc: {
          start: {
            line: 356,
            column: 68
          },
          end: {
            line: 360,
            column: 9
          }
        },
        line: 356
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 365
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 170,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "7": {
        loc: {
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 160,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 20
          },
          end: {
            line: 159,
            column: 60
          }
        }, {
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 89
          }
        }],
        line: 158
      },
      "8": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 184,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "9": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: 197,
            column: 17
          },
          end: {
            line: 205,
            column: 13
          }
        }],
        line: 188
      },
      "10": {
        loc: {
          start: {
            line: 197,
            column: 17
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 17
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "11": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: 216,
            column: 17
          },
          end: {
            line: 224,
            column: 13
          }
        }],
        line: 207
      },
      "12": {
        loc: {
          start: {
            line: 216,
            column: 17
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 17
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "13": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "14": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 236,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 235,
            column: 21
          }
        }, {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 77
          }
        }],
        line: 235
      },
      "15": {
        loc: {
          start: {
            line: 264,
            column: 21
          },
          end: {
            line: 264,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 264,
            column: 34
          },
          end: {
            line: 264,
            column: 40
          }
        }],
        line: 264
      },
      "16": {
        loc: {
          start: {
            line: 272,
            column: 24
          },
          end: {
            line: 272,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 50
          },
          end: {
            line: 272,
            column: 87
          }
        }, {
          start: {
            line: 272,
            column: 90
          },
          end: {
            line: 272,
            column: 94
          }
        }],
        line: 272
      },
      "17": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "18": {
        loc: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 46
          }
        }, {
          start: {
            line: 276,
            column: 50
          },
          end: {
            line: 276,
            column: 54
          }
        }],
        line: 276
      },
      "19": {
        loc: {
          start: {
            line: 291,
            column: 35
          },
          end: {
            line: 292,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 35
          },
          end: {
            line: 291,
            column: 92
          }
        }, {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 70
          }
        }],
        line: 291
      },
      "20": {
        loc: {
          start: {
            line: 295,
            column: 22
          },
          end: {
            line: 295,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 22
          },
          end: {
            line: 295,
            column: 42
          }
        }, {
          start: {
            line: 295,
            column: 46
          },
          end: {
            line: 295,
            column: 50
          }
        }],
        line: 295
      },
      "21": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "22": {
        loc: {
          start: {
            line: 371,
            column: 20
          },
          end: {
            line: 373,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 18
          },
          end: {
            line: 372,
            column: 71
          }
        }, {
          start: {
            line: 373,
            column: 18
          },
          end: {
            line: 373,
            column: 19
          }
        }],
        line: 371
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/system-resource-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/system-resource-monitor.ts"],
      sourcesContent: ["/**\n * System Resource Monitor\n *\n * Monitors CPU and memory usage to ensure Bedrock Support Mode overhead\n * stays under 5% of system resources (< 1% CPU, < 50MB memory).\n *\n * @module system-resource-monitor\n */\n\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\n\n/**\n * System resource metrics\n */\nexport interface SystemResourceMetrics {\n  timestamp: Date;\n  cpuUsagePercent: number;\n  memoryUsageMB: number;\n  memoryUsagePercent: number;\n  totalMemoryMB: number;\n  processId: number;\n  uptime: number;\n}\n\n/**\n * Resource usage thresholds\n */\nexport interface ResourceThresholds {\n  cpuWarningPercent: number;\n  cpuCriticalPercent: number;\n  memoryWarningMB: number;\n  memoryCriticalMB: number;\n}\n\n/**\n * Resource alert\n */\nexport interface ResourceAlert {\n  id: string;\n  type: \"cpu\" | \"memory\";\n  severity: \"warning\" | \"critical\";\n  message: string;\n  currentValue: number;\n  threshold: number;\n  timestamp: Date;\n  acknowledged: boolean;\n}\n\n/**\n * Resource monitoring configuration\n */\nexport interface ResourceMonitorConfig {\n  enabled: boolean;\n  monitoringIntervalMs: number;\n  alertCheckIntervalMs: number;\n  metricsRetentionMs: number;\n  thresholds: ResourceThresholds;\n  enableAlerts: boolean;\n  alertCooldownMs: number;\n}\n\n/**\n * Default configuration for Bedrock Support Mode\n * Target: < 1% CPU, < 50MB memory (5% of typical system resources)\n */\nconst DEFAULT_CONFIG: ResourceMonitorConfig = {\n  enabled: true,\n  monitoringIntervalMs: 5000, // 5 seconds\n  alertCheckIntervalMs: 10000, // 10 seconds\n  metricsRetentionMs: 3600000, // 1 hour\n  thresholds: {\n    cpuWarningPercent: 0.8, // 0.8% CPU warning\n    cpuCriticalPercent: 1.0, // 1% CPU critical\n    memoryWarningMB: 40, // 40MB memory warning\n    memoryCriticalMB: 50, // 50MB memory critical\n  },\n  enableAlerts: true,\n  alertCooldownMs: 300000, // 5 minutes\n};\n\n/**\n * System Resource Monitor\n *\n * Tracks CPU and memory usage for Bedrock Support Mode operations.\n */\nexport class SystemResourceMonitor {\n  private config: ResourceMonitorConfig;\n  private metrics: SystemResourceMetrics[];\n  private alerts: ResourceAlert[];\n  private lastAlertTime: Map<string, Date>;\n  private monitoringTimer?: NodeJS.Timeout;\n  private alertTimer?: NodeJS.Timeout;\n  private isMonitoring: boolean;\n  private baselineMetrics?: SystemResourceMetrics;\n\n  constructor(\n    private featureFlags: AiFeatureFlags,\n    private auditTrail: AuditTrailSystem,\n    config?: Partial<ResourceMonitorConfig>\n  ) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.metrics = [];\n    this.alerts = [];\n    this.lastAlertTime = new Map();\n    this.isMonitoring = false;\n  }\n\n  /**\n   * Start resource monitoring\n   */\n  public async startMonitoring(): Promise<void> {\n    if (!this.config.enabled) {\n      console.log(\n        \"[SystemResourceMonitor] Monitoring disabled by configuration\"\n      );\n      return;\n    }\n\n    if (this.isMonitoring) {\n      console.log(\"[SystemResourceMonitor] Already monitoring\");\n      return;\n    }\n\n    console.log(\"[SystemResourceMonitor] Starting resource monitoring\");\n    this.isMonitoring = true;\n\n    // Capture baseline metrics\n    this.baselineMetrics = await this.collectCurrentMetrics();\n\n    await this.auditTrail.logEvent({\n      eventType: \"system_monitoring_started\",\n      timestamp: new Date(),\n      details: {\n        component: \"SystemResourceMonitor\",\n        baseline: this.baselineMetrics,\n        thresholds: this.config.thresholds,\n      },\n    });\n\n    // Start monitoring timer\n    this.monitoringTimer = setInterval(\n      () => this.collectAndStoreMetrics(),\n      this.config.monitoringIntervalMs\n    );\n\n    // Start alert checking timer\n    if (this.config.enableAlerts) {\n      this.alertTimer = setInterval(\n        () => this.checkResourceAlerts(),\n        this.config.alertCheckIntervalMs\n      );\n    }\n  }\n\n  /**\n   * Stop resource monitoring\n   */\n  public async stopMonitoring(): Promise<void> {\n    if (!this.isMonitoring) {\n      return;\n    }\n\n    console.log(\"[SystemResourceMonitor] Stopping resource monitoring\");\n    this.isMonitoring = false;\n\n    if (this.monitoringTimer) {\n      clearInterval(this.monitoringTimer);\n      this.monitoringTimer = undefined;\n    }\n\n    if (this.alertTimer) {\n      clearInterval(this.alertTimer);\n      this.alertTimer = undefined;\n    }\n\n    await this.auditTrail.logEvent({\n      eventType: \"system_monitoring_stopped\",\n      timestamp: new Date(),\n      details: {\n        component: \"SystemResourceMonitor\",\n        finalMetrics: await this.collectCurrentMetrics(),\n        totalAlerts: this.alerts.length,\n      },\n    });\n  }\n\n  /**\n   * Collect current system metrics\n   */\n  private async collectCurrentMetrics(): Promise<SystemResourceMetrics> {\n    const process = await import(\"process\");\n    const os = await import(\"os\");\n\n    // Get memory usage\n    const memoryUsage = process.memoryUsage();\n    const totalMemory = os.totalmem();\n    const memoryUsageMB = memoryUsage.rss / (1024 * 1024); // Convert to MB\n    const totalMemoryMB = totalMemory / (1024 * 1024);\n    const memoryUsagePercent = (memoryUsageMB / totalMemoryMB) * 100;\n\n    // Get CPU usage (simplified - in production you'd want more accurate measurement)\n    const cpuUsage = process.cpuUsage();\n    const cpuUsagePercent = this.calculateCpuUsagePercent(cpuUsage);\n\n    return {\n      timestamp: new Date(),\n      cpuUsagePercent,\n      memoryUsageMB,\n      memoryUsagePercent,\n      totalMemoryMB,\n      processId: process.pid,\n      uptime: process.uptime(),\n    };\n  }\n\n  /**\n   * Calculate CPU usage percentage\n   */\n  private calculateCpuUsagePercent(cpuUsage: NodeJS.CpuUsage): number {\n    // This is a simplified calculation\n    // In production, you'd want to track deltas over time\n    const totalCpuTime = cpuUsage.user + cpuUsage.system;\n    const totalTime = process.uptime() * 1000000; // Convert to microseconds\n    return Math.min((totalCpuTime / totalTime) * 100, 100);\n  }\n\n  /**\n   * Collect and store metrics\n   */\n  private async collectAndStoreMetrics(): Promise<void> {\n    try {\n      const currentMetrics = await this.collectCurrentMetrics();\n      this.metrics.push(currentMetrics);\n\n      // Clean up old metrics\n      const cutoffTime = Date.now() - this.config.metricsRetentionMs;\n      this.metrics = this.metrics.filter(\n        (metric) => metric.timestamp.getTime() > cutoffTime\n      );\n\n      // Log high resource usage\n      if (\n        currentMetrics.cpuUsagePercent >\n          this.config.thresholds.cpuWarningPercent ||\n        currentMetrics.memoryUsageMB > this.config.thresholds.memoryWarningMB\n      ) {\n        await this.auditTrail.logEvent({\n          eventType: \"high_resource_usage_detected\",\n          timestamp: new Date(),\n          details: {\n            component: \"SystemResourceMonitor\",\n            metrics: currentMetrics,\n            thresholds: this.config.thresholds,\n          },\n        });\n      }\n    } catch (error) {\n      console.error(\"[SystemResourceMonitor] Error collecting metrics:\", error);\n    }\n  }\n\n  /**\n   * Check for resource alerts\n   */\n  private async checkResourceAlerts(): Promise<void> {\n    if (this.metrics.length === 0) {\n      return;\n    }\n\n    const latestMetrics = this.metrics[this.metrics.length - 1];\n    const now = new Date();\n\n    // Check CPU usage\n    if (\n      latestMetrics.cpuUsagePercent > this.config.thresholds.cpuCriticalPercent\n    ) {\n      this.createAlert({\n        type: \"cpu\",\n        severity: \"critical\",\n        message: `Critical CPU usage: ${latestMetrics.cpuUsagePercent.toFixed(\n          2\n        )}% (threshold: ${this.config.thresholds.cpuCriticalPercent}%)`,\n        currentValue: latestMetrics.cpuUsagePercent,\n        threshold: this.config.thresholds.cpuCriticalPercent,\n      });\n    } else if (\n      latestMetrics.cpuUsagePercent > this.config.thresholds.cpuWarningPercent\n    ) {\n      this.createAlert({\n        type: \"cpu\",\n        severity: \"warning\",\n        message: `Warning CPU usage: ${latestMetrics.cpuUsagePercent.toFixed(\n          2\n        )}% (threshold: ${this.config.thresholds.cpuWarningPercent}%)`,\n        currentValue: latestMetrics.cpuUsagePercent,\n        threshold: this.config.thresholds.cpuWarningPercent,\n      });\n    }\n\n    // Check memory usage\n    if (latestMetrics.memoryUsageMB > this.config.thresholds.memoryCriticalMB) {\n      this.createAlert({\n        type: \"memory\",\n        severity: \"critical\",\n        message: `Critical memory usage: ${latestMetrics.memoryUsageMB.toFixed(\n          2\n        )}MB (threshold: ${this.config.thresholds.memoryCriticalMB}MB)`,\n        currentValue: latestMetrics.memoryUsageMB,\n        threshold: this.config.thresholds.memoryCriticalMB,\n      });\n    } else if (\n      latestMetrics.memoryUsageMB > this.config.thresholds.memoryWarningMB\n    ) {\n      this.createAlert({\n        type: \"memory\",\n        severity: \"warning\",\n        message: `Warning memory usage: ${latestMetrics.memoryUsageMB.toFixed(\n          2\n        )}MB (threshold: ${this.config.thresholds.memoryWarningMB}MB)`,\n        currentValue: latestMetrics.memoryUsageMB,\n        threshold: this.config.thresholds.memoryWarningMB,\n      });\n    }\n  }\n\n  /**\n   * Create a resource alert\n   */\n  private createAlert(\n    alertData: Omit<ResourceAlert, \"id\" | \"timestamp\" | \"acknowledged\">\n  ): void {\n    const alertKey = `${alertData.type}_${alertData.severity}`;\n    const lastAlert = this.lastAlertTime.get(alertKey);\n    const now = new Date();\n\n    // Check cooldown period\n    if (\n      lastAlert &&\n      now.getTime() - lastAlert.getTime() < this.config.alertCooldownMs\n    ) {\n      return;\n    }\n\n    const alert: ResourceAlert = {\n      id: `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      ...alertData,\n      timestamp: now,\n      acknowledged: false,\n    };\n\n    this.alerts.push(alert);\n    this.lastAlertTime.set(alertKey, now);\n\n    console.log(\n      `[SystemResourceMonitor] Alert created: ${alert.severity} - ${alert.message}`\n    );\n\n    // Log alert to audit trail\n    this.auditTrail.logEvent({\n      eventType: \"resource_alert_created\",\n      timestamp: now,\n      details: {\n        component: \"SystemResourceMonitor\",\n        alert,\n      },\n    });\n  }\n\n  /**\n   * Get current resource metrics\n   */\n  public async getCurrentMetrics(): Promise<SystemResourceMetrics> {\n    return await this.collectCurrentMetrics();\n  }\n\n  /**\n   * Get recent metrics\n   */\n  public getRecentMetrics(\n    durationMs: number = 300000\n  ): SystemResourceMetrics[] {\n    const cutoffTime = Date.now() - durationMs;\n    return this.metrics.filter(\n      (metric) => metric.timestamp.getTime() > cutoffTime\n    );\n  }\n\n  /**\n   * Get resource usage summary\n   */\n  public getResourceSummary(): {\n    current: SystemResourceMetrics | null;\n    baseline: SystemResourceMetrics | null;\n    averageCpuUsage: number;\n    averageMemoryUsage: number;\n    peakCpuUsage: number;\n    peakMemoryUsage: number;\n    isWithinThresholds: boolean;\n    activeAlerts: ResourceAlert[];\n  } {\n    const current =\n      this.metrics.length > 0 ? this.metrics[this.metrics.length - 1] : null;\n\n    if (this.metrics.length === 0) {\n      return {\n        current: null,\n        baseline: this.baselineMetrics || null,\n        averageCpuUsage: 0,\n        averageMemoryUsage: 0,\n        peakCpuUsage: 0,\n        peakMemoryUsage: 0,\n        isWithinThresholds: true,\n        activeAlerts: [],\n      };\n    }\n\n    const averageCpuUsage =\n      this.metrics.reduce((sum, m) => sum + m.cpuUsagePercent, 0) /\n      this.metrics.length;\n    const averageMemoryUsage =\n      this.metrics.reduce((sum, m) => sum + m.memoryUsageMB, 0) /\n      this.metrics.length;\n    const peakCpuUsage = Math.max(\n      ...this.metrics.map((m) => m.cpuUsagePercent)\n    );\n    const peakMemoryUsage = Math.max(\n      ...this.metrics.map((m) => m.memoryUsageMB)\n    );\n\n    const isWithinThresholds =\n      peakCpuUsage <= this.config.thresholds.cpuCriticalPercent &&\n      peakMemoryUsage <= this.config.thresholds.memoryCriticalMB;\n\n    return {\n      current,\n      baseline: this.baselineMetrics || null,\n      averageCpuUsage,\n      averageMemoryUsage,\n      peakCpuUsage,\n      peakMemoryUsage,\n      isWithinThresholds,\n      activeAlerts: this.getActiveAlerts(),\n    };\n  }\n\n  /**\n   * Check if support mode is within resource thresholds\n   */\n  public isWithinResourceThresholds(): boolean {\n    const summary = this.getResourceSummary();\n    return summary.isWithinThresholds;\n  }\n\n  /**\n   * Get active alerts\n   */\n  public getActiveAlerts(): ResourceAlert[] {\n    return this.alerts.filter((alert) => !alert.acknowledged);\n  }\n\n  /**\n   * Get all alerts\n   */\n  public getAllAlerts(): ResourceAlert[] {\n    return [...this.alerts];\n  }\n\n  /**\n   * Acknowledge an alert\n   */\n  public acknowledgeAlert(alertId: string): boolean {\n    const alert = this.alerts.find((a) => a.id === alertId);\n    if (alert) {\n      alert.acknowledged = true;\n      console.log(`[SystemResourceMonitor] Alert acknowledged: ${alertId}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Update configuration\n   */\n  public updateConfig(config: Partial<ResourceMonitorConfig>): void {\n    this.config = { ...this.config, ...config };\n    console.log(\"[SystemResourceMonitor] Configuration updated\");\n  }\n\n  /**\n   * Reset metrics and alerts\n   */\n  public reset(): void {\n    this.metrics = [];\n    this.alerts = [];\n    this.lastAlertTime.clear();\n    this.baselineMetrics = undefined;\n    console.log(\"[SystemResourceMonitor] Metrics and alerts reset\");\n  }\n\n  /**\n   * Cleanup resources\n   */\n  public async cleanup(): Promise<void> {\n    await this.stopMonitoring();\n    this.reset();\n    console.log(\"[SystemResourceMonitor] Cleanup completed\");\n  }\n\n  /**\n   * Get monitoring status\n   */\n  public getStatus(): {\n    isMonitoring: boolean;\n    config: ResourceMonitorConfig;\n    metricsCount: number;\n    alertsCount: number;\n    uptime: number;\n  } {\n    return {\n      isMonitoring: this.isMonitoring,\n      config: this.config,\n      metricsCount: this.metrics.length,\n      alertsCount: this.alerts.length,\n      uptime: this.baselineMetrics\n        ? Date.now() - this.baselineMetrics.timestamp.getTime()\n        : 0,\n    };\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eada7f9d7a8fb4b33e64b30d139e70ec180f7aeb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2blpxxrbme = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2blpxxrbme();
cov_2blpxxrbme().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2blpxxrbme().s[1]++;
exports.SystemResourceMonitor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2blpxxrbme().s[2]++, require("tslib"));
/**
 * Default configuration for Bedrock Support Mode
 * Target: < 1% CPU, < 50MB memory (5% of typical system resources)
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_2blpxxrbme().s[3]++, {
  enabled: true,
  monitoringIntervalMs: 5000,
  // 5 seconds
  alertCheckIntervalMs: 10000,
  // 10 seconds
  metricsRetentionMs: 3600000,
  // 1 hour
  thresholds: {
    cpuWarningPercent: 0.8,
    // 0.8% CPU warning
    cpuCriticalPercent: 1.0,
    // 1% CPU critical
    memoryWarningMB: 40,
    // 40MB memory warning
    memoryCriticalMB: 50 // 50MB memory critical
  },
  enableAlerts: true,
  alertCooldownMs: 300000 // 5 minutes
});
/**
 * System Resource Monitor
 *
 * Tracks CPU and memory usage for Bedrock Support Mode operations.
 */
class SystemResourceMonitor {
  constructor(featureFlags, auditTrail, config) {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[0]++;
    cov_2blpxxrbme().s[4]++;
    this.featureFlags = featureFlags;
    /* istanbul ignore next */
    cov_2blpxxrbme().s[5]++;
    this.auditTrail = auditTrail;
    /* istanbul ignore next */
    cov_2blpxxrbme().s[6]++;
    this.config = Object.assign(Object.assign({}, DEFAULT_CONFIG), config);
    /* istanbul ignore next */
    cov_2blpxxrbme().s[7]++;
    this.metrics = [];
    /* istanbul ignore next */
    cov_2blpxxrbme().s[8]++;
    this.alerts = [];
    /* istanbul ignore next */
    cov_2blpxxrbme().s[9]++;
    this.lastAlertTime = new Map();
    /* istanbul ignore next */
    cov_2blpxxrbme().s[10]++;
    this.isMonitoring = false;
  }
  /**
   * Start resource monitoring
   */
  startMonitoring() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[1]++;
    cov_2blpxxrbme().s[11]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[2]++;
      cov_2blpxxrbme().s[12]++;
      if (!this.config.enabled) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[0][0]++;
        cov_2blpxxrbme().s[13]++;
        console.log("[SystemResourceMonitor] Monitoring disabled by configuration");
        /* istanbul ignore next */
        cov_2blpxxrbme().s[14]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[0][1]++;
      }
      cov_2blpxxrbme().s[15]++;
      if (this.isMonitoring) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[1][0]++;
        cov_2blpxxrbme().s[16]++;
        console.log("[SystemResourceMonitor] Already monitoring");
        /* istanbul ignore next */
        cov_2blpxxrbme().s[17]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[1][1]++;
      }
      cov_2blpxxrbme().s[18]++;
      console.log("[SystemResourceMonitor] Starting resource monitoring");
      /* istanbul ignore next */
      cov_2blpxxrbme().s[19]++;
      this.isMonitoring = true;
      // Capture baseline metrics
      /* istanbul ignore next */
      cov_2blpxxrbme().s[20]++;
      this.baselineMetrics = yield this.collectCurrentMetrics();
      /* istanbul ignore next */
      cov_2blpxxrbme().s[21]++;
      yield this.auditTrail.logEvent({
        eventType: "system_monitoring_started",
        timestamp: new Date(),
        details: {
          component: "SystemResourceMonitor",
          baseline: this.baselineMetrics,
          thresholds: this.config.thresholds
        }
      });
      // Start monitoring timer
      /* istanbul ignore next */
      cov_2blpxxrbme().s[22]++;
      this.monitoringTimer = setInterval(() => {
        /* istanbul ignore next */
        cov_2blpxxrbme().f[3]++;
        cov_2blpxxrbme().s[23]++;
        return this.collectAndStoreMetrics();
      }, this.config.monitoringIntervalMs);
      // Start alert checking timer
      /* istanbul ignore next */
      cov_2blpxxrbme().s[24]++;
      if (this.config.enableAlerts) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[2][0]++;
        cov_2blpxxrbme().s[25]++;
        this.alertTimer = setInterval(() => {
          /* istanbul ignore next */
          cov_2blpxxrbme().f[4]++;
          cov_2blpxxrbme().s[26]++;
          return this.checkResourceAlerts();
        }, this.config.alertCheckIntervalMs);
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[2][1]++;
      }
    });
  }
  /**
   * Stop resource monitoring
   */
  stopMonitoring() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[5]++;
    cov_2blpxxrbme().s[27]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[6]++;
      cov_2blpxxrbme().s[28]++;
      if (!this.isMonitoring) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[3][0]++;
        cov_2blpxxrbme().s[29]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[3][1]++;
      }
      cov_2blpxxrbme().s[30]++;
      console.log("[SystemResourceMonitor] Stopping resource monitoring");
      /* istanbul ignore next */
      cov_2blpxxrbme().s[31]++;
      this.isMonitoring = false;
      /* istanbul ignore next */
      cov_2blpxxrbme().s[32]++;
      if (this.monitoringTimer) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[4][0]++;
        cov_2blpxxrbme().s[33]++;
        clearInterval(this.monitoringTimer);
        /* istanbul ignore next */
        cov_2blpxxrbme().s[34]++;
        this.monitoringTimer = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[4][1]++;
      }
      cov_2blpxxrbme().s[35]++;
      if (this.alertTimer) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[5][0]++;
        cov_2blpxxrbme().s[36]++;
        clearInterval(this.alertTimer);
        /* istanbul ignore next */
        cov_2blpxxrbme().s[37]++;
        this.alertTimer = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[5][1]++;
      }
      cov_2blpxxrbme().s[38]++;
      yield this.auditTrail.logEvent({
        eventType: "system_monitoring_stopped",
        timestamp: new Date(),
        details: {
          component: "SystemResourceMonitor",
          finalMetrics: yield this.collectCurrentMetrics(),
          totalAlerts: this.alerts.length
        }
      });
    });
  }
  /**
   * Collect current system metrics
   */
  collectCurrentMetrics() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[7]++;
    cov_2blpxxrbme().s[39]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[8]++;
      const process =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[40]++, yield Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2blpxxrbme().f[9]++;
        cov_2blpxxrbme().s[41]++;
        return tslib_1.__importStar(require("process"));
      }));
      const os =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[42]++, yield Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_2blpxxrbme().f[10]++;
        cov_2blpxxrbme().s[43]++;
        return tslib_1.__importStar(require("os"));
      }));
      // Get memory usage
      const memoryUsage =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[44]++, process.memoryUsage());
      const totalMemory =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[45]++, os.totalmem());
      const memoryUsageMB =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[46]++, memoryUsage.rss / (1024 * 1024)); // Convert to MB
      const totalMemoryMB =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[47]++, totalMemory / (1024 * 1024));
      const memoryUsagePercent =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[48]++, memoryUsageMB / totalMemoryMB * 100);
      // Get CPU usage (simplified - in production you'd want more accurate measurement)
      const cpuUsage =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[49]++, process.cpuUsage());
      const cpuUsagePercent =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[50]++, this.calculateCpuUsagePercent(cpuUsage));
      /* istanbul ignore next */
      cov_2blpxxrbme().s[51]++;
      return {
        timestamp: new Date(),
        cpuUsagePercent,
        memoryUsageMB,
        memoryUsagePercent,
        totalMemoryMB,
        processId: process.pid,
        uptime: process.uptime()
      };
    });
  }
  /**
   * Calculate CPU usage percentage
   */
  calculateCpuUsagePercent(cpuUsage) {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[11]++;
    // This is a simplified calculation
    // In production, you'd want to track deltas over time
    const totalCpuTime =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[52]++, cpuUsage.user + cpuUsage.system);
    const totalTime =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[53]++, process.uptime() * 1000000); // Convert to microseconds
    /* istanbul ignore next */
    cov_2blpxxrbme().s[54]++;
    return Math.min(totalCpuTime / totalTime * 100, 100);
  }
  /**
   * Collect and store metrics
   */
  collectAndStoreMetrics() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[12]++;
    cov_2blpxxrbme().s[55]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[13]++;
      cov_2blpxxrbme().s[56]++;
      try {
        const currentMetrics =
        /* istanbul ignore next */
        (cov_2blpxxrbme().s[57]++, yield this.collectCurrentMetrics());
        /* istanbul ignore next */
        cov_2blpxxrbme().s[58]++;
        this.metrics.push(currentMetrics);
        // Clean up old metrics
        const cutoffTime =
        /* istanbul ignore next */
        (cov_2blpxxrbme().s[59]++, Date.now() - this.config.metricsRetentionMs);
        /* istanbul ignore next */
        cov_2blpxxrbme().s[60]++;
        this.metrics = this.metrics.filter(metric => {
          /* istanbul ignore next */
          cov_2blpxxrbme().f[14]++;
          cov_2blpxxrbme().s[61]++;
          return metric.timestamp.getTime() > cutoffTime;
        });
        // Log high resource usage
        /* istanbul ignore next */
        cov_2blpxxrbme().s[62]++;
        if (
        /* istanbul ignore next */
        (cov_2blpxxrbme().b[7][0]++, currentMetrics.cpuUsagePercent > this.config.thresholds.cpuWarningPercent) ||
        /* istanbul ignore next */
        (cov_2blpxxrbme().b[7][1]++, currentMetrics.memoryUsageMB > this.config.thresholds.memoryWarningMB)) {
          /* istanbul ignore next */
          cov_2blpxxrbme().b[6][0]++;
          cov_2blpxxrbme().s[63]++;
          yield this.auditTrail.logEvent({
            eventType: "high_resource_usage_detected",
            timestamp: new Date(),
            details: {
              component: "SystemResourceMonitor",
              metrics: currentMetrics,
              thresholds: this.config.thresholds
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_2blpxxrbme().b[6][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2blpxxrbme().s[64]++;
        console.error("[SystemResourceMonitor] Error collecting metrics:", error);
      }
    });
  }
  /**
   * Check for resource alerts
   */
  checkResourceAlerts() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[15]++;
    cov_2blpxxrbme().s[65]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[16]++;
      cov_2blpxxrbme().s[66]++;
      if (this.metrics.length === 0) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[8][0]++;
        cov_2blpxxrbme().s[67]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2blpxxrbme().b[8][1]++;
      }
      const latestMetrics =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[68]++, this.metrics[this.metrics.length - 1]);
      const now =
      /* istanbul ignore next */
      (cov_2blpxxrbme().s[69]++, new Date());
      // Check CPU usage
      /* istanbul ignore next */
      cov_2blpxxrbme().s[70]++;
      if (latestMetrics.cpuUsagePercent > this.config.thresholds.cpuCriticalPercent) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[9][0]++;
        cov_2blpxxrbme().s[71]++;
        this.createAlert({
          type: "cpu",
          severity: "critical",
          message: `Critical CPU usage: ${latestMetrics.cpuUsagePercent.toFixed(2)}% (threshold: ${this.config.thresholds.cpuCriticalPercent}%)`,
          currentValue: latestMetrics.cpuUsagePercent,
          threshold: this.config.thresholds.cpuCriticalPercent
        });
      } else {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[9][1]++;
        cov_2blpxxrbme().s[72]++;
        if (latestMetrics.cpuUsagePercent > this.config.thresholds.cpuWarningPercent) {
          /* istanbul ignore next */
          cov_2blpxxrbme().b[10][0]++;
          cov_2blpxxrbme().s[73]++;
          this.createAlert({
            type: "cpu",
            severity: "warning",
            message: `Warning CPU usage: ${latestMetrics.cpuUsagePercent.toFixed(2)}% (threshold: ${this.config.thresholds.cpuWarningPercent}%)`,
            currentValue: latestMetrics.cpuUsagePercent,
            threshold: this.config.thresholds.cpuWarningPercent
          });
        } else
        /* istanbul ignore next */
        {
          cov_2blpxxrbme().b[10][1]++;
        }
      }
      // Check memory usage
      /* istanbul ignore next */
      cov_2blpxxrbme().s[74]++;
      if (latestMetrics.memoryUsageMB > this.config.thresholds.memoryCriticalMB) {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[11][0]++;
        cov_2blpxxrbme().s[75]++;
        this.createAlert({
          type: "memory",
          severity: "critical",
          message: `Critical memory usage: ${latestMetrics.memoryUsageMB.toFixed(2)}MB (threshold: ${this.config.thresholds.memoryCriticalMB}MB)`,
          currentValue: latestMetrics.memoryUsageMB,
          threshold: this.config.thresholds.memoryCriticalMB
        });
      } else {
        /* istanbul ignore next */
        cov_2blpxxrbme().b[11][1]++;
        cov_2blpxxrbme().s[76]++;
        if (latestMetrics.memoryUsageMB > this.config.thresholds.memoryWarningMB) {
          /* istanbul ignore next */
          cov_2blpxxrbme().b[12][0]++;
          cov_2blpxxrbme().s[77]++;
          this.createAlert({
            type: "memory",
            severity: "warning",
            message: `Warning memory usage: ${latestMetrics.memoryUsageMB.toFixed(2)}MB (threshold: ${this.config.thresholds.memoryWarningMB}MB)`,
            currentValue: latestMetrics.memoryUsageMB,
            threshold: this.config.thresholds.memoryWarningMB
          });
        } else
        /* istanbul ignore next */
        {
          cov_2blpxxrbme().b[12][1]++;
        }
      }
    });
  }
  /**
   * Create a resource alert
   */
  createAlert(alertData) {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[17]++;
    const alertKey =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[78]++, `${alertData.type}_${alertData.severity}`);
    const lastAlert =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[79]++, this.lastAlertTime.get(alertKey));
    const now =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[80]++, new Date());
    // Check cooldown period
    /* istanbul ignore next */
    cov_2blpxxrbme().s[81]++;
    if (
    /* istanbul ignore next */
    (cov_2blpxxrbme().b[14][0]++, lastAlert) &&
    /* istanbul ignore next */
    (cov_2blpxxrbme().b[14][1]++, now.getTime() - lastAlert.getTime() < this.config.alertCooldownMs)) {
      /* istanbul ignore next */
      cov_2blpxxrbme().b[13][0]++;
      cov_2blpxxrbme().s[82]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2blpxxrbme().b[13][1]++;
    }
    const alert =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[83]++, Object.assign(Object.assign({
      id: `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
    }, alertData), {
      timestamp: now,
      acknowledged: false
    }));
    /* istanbul ignore next */
    cov_2blpxxrbme().s[84]++;
    this.alerts.push(alert);
    /* istanbul ignore next */
    cov_2blpxxrbme().s[85]++;
    this.lastAlertTime.set(alertKey, now);
    /* istanbul ignore next */
    cov_2blpxxrbme().s[86]++;
    console.log(`[SystemResourceMonitor] Alert created: ${alert.severity} - ${alert.message}`);
    // Log alert to audit trail
    /* istanbul ignore next */
    cov_2blpxxrbme().s[87]++;
    this.auditTrail.logEvent({
      eventType: "resource_alert_created",
      timestamp: now,
      details: {
        component: "SystemResourceMonitor",
        alert
      }
    });
  }
  /**
   * Get current resource metrics
   */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[18]++;
    cov_2blpxxrbme().s[88]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[19]++;
      cov_2blpxxrbme().s[89]++;
      return yield this.collectCurrentMetrics();
    });
  }
  /**
   * Get recent metrics
   */
  getRecentMetrics(durationMs =
  /* istanbul ignore next */
  (cov_2blpxxrbme().b[15][0]++, 300000)) {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[20]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[90]++, Date.now() - durationMs);
    /* istanbul ignore next */
    cov_2blpxxrbme().s[91]++;
    return this.metrics.filter(metric => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[21]++;
      cov_2blpxxrbme().s[92]++;
      return metric.timestamp.getTime() > cutoffTime;
    });
  }
  /**
   * Get resource usage summary
   */
  getResourceSummary() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[22]++;
    const current =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[93]++, this.metrics.length > 0 ?
    /* istanbul ignore next */
    (cov_2blpxxrbme().b[16][0]++, this.metrics[this.metrics.length - 1]) :
    /* istanbul ignore next */
    (cov_2blpxxrbme().b[16][1]++, null));
    /* istanbul ignore next */
    cov_2blpxxrbme().s[94]++;
    if (this.metrics.length === 0) {
      /* istanbul ignore next */
      cov_2blpxxrbme().b[17][0]++;
      cov_2blpxxrbme().s[95]++;
      return {
        current: null,
        baseline:
        /* istanbul ignore next */
        (cov_2blpxxrbme().b[18][0]++, this.baselineMetrics) ||
        /* istanbul ignore next */
        (cov_2blpxxrbme().b[18][1]++, null),
        averageCpuUsage: 0,
        averageMemoryUsage: 0,
        peakCpuUsage: 0,
        peakMemoryUsage: 0,
        isWithinThresholds: true,
        activeAlerts: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_2blpxxrbme().b[17][1]++;
    }
    const averageCpuUsage =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[96]++, this.metrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[23]++;
      cov_2blpxxrbme().s[97]++;
      return sum + m.cpuUsagePercent;
    }, 0) / this.metrics.length);
    const averageMemoryUsage =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[98]++, this.metrics.reduce((sum, m) => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[24]++;
      cov_2blpxxrbme().s[99]++;
      return sum + m.memoryUsageMB;
    }, 0) / this.metrics.length);
    const peakCpuUsage =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[100]++, Math.max(...this.metrics.map(m => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[25]++;
      cov_2blpxxrbme().s[101]++;
      return m.cpuUsagePercent;
    })));
    const peakMemoryUsage =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[102]++, Math.max(...this.metrics.map(m => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[26]++;
      cov_2blpxxrbme().s[103]++;
      return m.memoryUsageMB;
    })));
    const isWithinThresholds =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[104]++,
    /* istanbul ignore next */
    (cov_2blpxxrbme().b[19][0]++, peakCpuUsage <= this.config.thresholds.cpuCriticalPercent) &&
    /* istanbul ignore next */
    (cov_2blpxxrbme().b[19][1]++, peakMemoryUsage <= this.config.thresholds.memoryCriticalMB));
    /* istanbul ignore next */
    cov_2blpxxrbme().s[105]++;
    return {
      current,
      baseline:
      /* istanbul ignore next */
      (cov_2blpxxrbme().b[20][0]++, this.baselineMetrics) ||
      /* istanbul ignore next */
      (cov_2blpxxrbme().b[20][1]++, null),
      averageCpuUsage,
      averageMemoryUsage,
      peakCpuUsage,
      peakMemoryUsage,
      isWithinThresholds,
      activeAlerts: this.getActiveAlerts()
    };
  }
  /**
   * Check if support mode is within resource thresholds
   */
  isWithinResourceThresholds() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[27]++;
    const summary =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[106]++, this.getResourceSummary());
    /* istanbul ignore next */
    cov_2blpxxrbme().s[107]++;
    return summary.isWithinThresholds;
  }
  /**
   * Get active alerts
   */
  getActiveAlerts() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[28]++;
    cov_2blpxxrbme().s[108]++;
    return this.alerts.filter(alert => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[29]++;
      cov_2blpxxrbme().s[109]++;
      return !alert.acknowledged;
    });
  }
  /**
   * Get all alerts
   */
  getAllAlerts() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[30]++;
    cov_2blpxxrbme().s[110]++;
    return [...this.alerts];
  }
  /**
   * Acknowledge an alert
   */
  acknowledgeAlert(alertId) {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[31]++;
    const alert =
    /* istanbul ignore next */
    (cov_2blpxxrbme().s[111]++, this.alerts.find(a => {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[32]++;
      cov_2blpxxrbme().s[112]++;
      return a.id === alertId;
    }));
    /* istanbul ignore next */
    cov_2blpxxrbme().s[113]++;
    if (alert) {
      /* istanbul ignore next */
      cov_2blpxxrbme().b[21][0]++;
      cov_2blpxxrbme().s[114]++;
      alert.acknowledged = true;
      /* istanbul ignore next */
      cov_2blpxxrbme().s[115]++;
      console.log(`[SystemResourceMonitor] Alert acknowledged: ${alertId}`);
      /* istanbul ignore next */
      cov_2blpxxrbme().s[116]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2blpxxrbme().b[21][1]++;
    }
    cov_2blpxxrbme().s[117]++;
    return false;
  }
  /**
   * Update configuration
   */
  updateConfig(config) {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[33]++;
    cov_2blpxxrbme().s[118]++;
    this.config = Object.assign(Object.assign({}, this.config), config);
    /* istanbul ignore next */
    cov_2blpxxrbme().s[119]++;
    console.log("[SystemResourceMonitor] Configuration updated");
  }
  /**
   * Reset metrics and alerts
   */
  reset() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[34]++;
    cov_2blpxxrbme().s[120]++;
    this.metrics = [];
    /* istanbul ignore next */
    cov_2blpxxrbme().s[121]++;
    this.alerts = [];
    /* istanbul ignore next */
    cov_2blpxxrbme().s[122]++;
    this.lastAlertTime.clear();
    /* istanbul ignore next */
    cov_2blpxxrbme().s[123]++;
    this.baselineMetrics = undefined;
    /* istanbul ignore next */
    cov_2blpxxrbme().s[124]++;
    console.log("[SystemResourceMonitor] Metrics and alerts reset");
  }
  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[35]++;
    cov_2blpxxrbme().s[125]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2blpxxrbme().f[36]++;
      cov_2blpxxrbme().s[126]++;
      yield this.stopMonitoring();
      /* istanbul ignore next */
      cov_2blpxxrbme().s[127]++;
      this.reset();
      /* istanbul ignore next */
      cov_2blpxxrbme().s[128]++;
      console.log("[SystemResourceMonitor] Cleanup completed");
    });
  }
  /**
   * Get monitoring status
   */
  getStatus() {
    /* istanbul ignore next */
    cov_2blpxxrbme().f[37]++;
    cov_2blpxxrbme().s[129]++;
    return {
      isMonitoring: this.isMonitoring,
      config: this.config,
      metricsCount: this.metrics.length,
      alertsCount: this.alerts.length,
      uptime: this.baselineMetrics ?
      /* istanbul ignore next */
      (cov_2blpxxrbme().b[22][0]++, Date.now() - this.baselineMetrics.timestamp.getTime()) :
      /* istanbul ignore next */
      (cov_2blpxxrbme().b[22][1]++, 0)
    };
  }
}
/* istanbul ignore next */
cov_2blpxxrbme().s[130]++;
exports.SystemResourceMonitor = SystemResourceMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,