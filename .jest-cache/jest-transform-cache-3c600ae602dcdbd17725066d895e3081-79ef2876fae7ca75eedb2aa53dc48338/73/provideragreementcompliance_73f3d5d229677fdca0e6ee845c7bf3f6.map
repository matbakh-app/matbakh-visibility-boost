{"file":"/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts","mappings":";AAAA;;;;;;GAMG;;;AAEH,6DAAwD;AACxD,iDAA6C;AAiG7C;;GAEG;AACH,MAAa,2BAA2B;IAC9B,MAAM,CAAc;IACpB,UAAU,CAAmB;IAC7B,UAAU,GAAqC,IAAI,GAAG,EAAE,CAAC;IACzD,UAAU,GAA0B,EAAE,CAAC;IAE/C;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,0BAAW,CAAC,+BAA+B,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,qCAAgB,CAAC;YACrC,cAAc,EAAE,QAAQ;YACxB,uBAAuB,EAAE,IAAI;YAC7B,aAAa,EAAE,IAAI,EAAE,yBAAyB;SAC/C,CAAC,CAAC;QAEH,4CAA4C;QAC5C,IAAI,CAAC,4BAA4B,EAAE,CAAC;IACtC,CAAC;IAED;;OAEG;IACK,4BAA4B;QAClC,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE7C,wBAAwB;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,EAAE;YAC7B,UAAU,EAAE,SAAS;YACrB,YAAY,EAAE,+BAA+B;YAC7C,WAAW,EAAE,sBAAsB;YACnC,UAAU,EAAE,sBAAsB;YAClC,UAAU,EAAE,sBAAsB;YAClC,OAAO,EAAE,QAAQ;YAEjB,wBAAwB,EAAE,IAAI;YAC9B,uBAAuB,EAAE,IAAI;YAC7B,aAAa,EAAE,IAAI;YACnB,eAAe,EAAE,IAAI;YAErB,YAAY,EAAE,uCAAuC;YACrD,YAAY,EAAE,oBAAoB;YAClC,iBAAiB,EAAE,kBAAkB;YAErC,YAAY,EAAE,WAAW;YACzB,kBAAkB,EAAE,iBAAiB;YACrC,kBAAkB,EAAE,UAAU;YAE9B,UAAU,EAAE;gBACV;oBACE,SAAS,EAAE,sBAAsB;oBACjC,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,8CAA8C;oBACvD,WAAW,EAAE,QAAQ;oBACrB,QAAQ,EAAE,6CAA6C;iBACxD;aACF;SACF,CAAC,CAAC;QAEH,sBAAsB;QACtB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE;YAC5B,UAAU,EAAE,QAAQ;YACpB,YAAY,EAAE,0BAA0B;YACxC,WAAW,EAAE,oBAAoB;YACjC,UAAU,EAAE,sBAAsB;YAClC,UAAU,EAAE,sBAAsB;YAClC,OAAO,EAAE,QAAQ;YAEjB,wBAAwB,EAAE,IAAI;YAC9B,uBAAuB,EAAE,IAAI;YAC7B,aAAa,EAAE,IAAI;YACnB,eAAe,EAAE,IAAI;YAErB,YAAY,EAAE,yDAAyD;YACvE,YAAY,EAAE,oBAAoB;YAClC,iBAAiB,EAAE,qBAAqB;YAExC,YAAY,EAAE,WAAW;YACzB,kBAAkB,EAAE,iBAAiB;YACrC,kBAAkB,EAAE,UAAU;YAE9B,UAAU,EAAE;gBACV;oBACE,SAAS,EAAE,sBAAsB;oBACjC,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,kDAAkD;oBAC3D,WAAW,EAAE,QAAQ;oBACrB,QAAQ,EAAE,uCAAuC;iBAClD;aACF;SACF,CAAC,CAAC;QAEH,oBAAoB;QACpB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE;YAC1B,UAAU,EAAE,MAAM;YAClB,YAAY,EAAE,kBAAkB;YAChC,WAAW,EAAE,kBAAkB;YAC/B,UAAU,EAAE,sBAAsB;YAClC,UAAU,EAAE,sBAAsB;YAClC,OAAO,EAAE,QAAQ;YAEjB,wBAAwB,EAAE,IAAI;YAC9B,uBAAuB,EAAE,IAAI;YAC7B,aAAa,EAAE,IAAI;YACnB,eAAe,EAAE,KAAK,EAAE,yBAAyB;YAEjD,YAAY,EAAE,wCAAwC;YACtD,YAAY,EAAE,kBAAkB;YAChC,iBAAiB,EAAE,mBAAmB;YAEtC,YAAY,EAAE,WAAW;YACzB,kBAAkB,EAAE,iBAAiB;YACrC,kBAAkB,EAAE,UAAU;YAE9B,UAAU,EAAE;gBACV;oBACE,SAAS,EAAE,sBAAsB;oBACjC,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,0CAA0C;oBACnD,WAAW,EAAE,QAAQ;oBACrB,QAAQ,EAAE,yCAAyC;iBACpD;aACF;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iCAAiC,EAAE;YAClD,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YACpC,iBAAiB,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAC5D,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,kBAAkB,KAAK,UAAU,CAC3C,CAAC,MAAM;SACT,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,wBAAwB,CAAC,UAAoB;QAMjD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClD,MAAM,UAAU,GAAa,EAAE,CAAC;QAChC,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,UAAU,CAAC,IAAI,CAAC,oCAAoC,UAAU,EAAE,CAAC,CAAC;YAClE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;QACpD,CAAC;QAED,yBAAyB;QACzB,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,UAAU,EAAE,CAAC;YACrB,UAAU,CAAC,IAAI,CAAC,wBAAwB,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;QAClE,CAAC;QAED,qCAAqC;QACrC,IAAI,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC;YACxC,UAAU,CAAC,IAAI,CACb,0DAA0D,CAC3D,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,uBAAuB,EAAE,CAAC;YACvC,UAAU,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QACxD,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;YAC7B,UAAU,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QAED,4BAA4B;QAC5B,IAAI,SAAS,CAAC,kBAAkB,KAAK,UAAU,EAAE,CAAC;YAChD,UAAU,CAAC,IAAI,CACb,kCAAkC,SAAS,CAAC,kBAAkB,EAAE,CACjE,CAAC;QACJ,CAAC;QAED,4DAA4D;QAC5D,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACtD,MAAM,qBAAqB,GACzB,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACnE,IAAI,qBAAqB,GAAG,EAAE,EAAE,CAAC;YAC/B,QAAQ,CAAC,IAAI,CACX,6BAA6B,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,OAAO,CACtE,CAAC;QACJ,CAAC;QAED,8BAA8B;QAC9B,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAC7C,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,UAAU,KAAK,UAAU;YAC3B,CAAC,CAAC,MAAM,KAAK,MAAM;YACnB,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;gBACnB,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,eAAe;SACvE,CAAC;QAEF,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAChC,UAAU,CAAC,IAAI,CACb,GAAG,gBAAgB,CAAC,MAAM,wCAAwC,CACnE,CAAC;QACJ,CAAC;QAED,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,EAAE;YAC/C,UAAU;YACV,SAAS;YACT,UAAU,EAAE,UAAU,CAAC,MAAM;YAC7B,QAAQ,EAAE,QAAQ,CAAC,MAAM;SAC1B,CAAC,CAAC;QAEH,OAAO;YACL,SAAS;YACT,SAAS;YACT,UAAU;YACV,QAAQ;SACT,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CACnB,SAA4E;QAE5E,MAAM,WAAW,GAAG,aAAa,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;aACzD,QAAQ,CAAC,EAAE,CAAC;aACZ,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;QAElB,MAAM,aAAa,GAAwB;YACzC,WAAW;YACX,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,MAAM,EAAE,MAAM;YACd,GAAG,SAAS;SACb,CAAC;QAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEpC,qBAAqB;QACrB,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC7B,SAAS,EAAE,sBAAsB;YACjC,SAAS,EAAE,WAAW;YACtB,QAAQ,EAAE,SAAS,CAAC,UAAU;YAC9B,gBAAgB,EAAE,WAAW;YAC7B,QAAQ,EAAE;gBACR,aAAa,EAAE,SAAS,CAAC,aAAa;gBACtC,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,WAAW,EAAE,SAAS,CAAC,WAAW;aACnC;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE;YACjD,WAAW;YACX,UAAU,EAAE,SAAS,CAAC,UAAU;YAChC,aAAa,EAAE,SAAS,CAAC,aAAa;YACtC,QAAQ,EAAE,SAAS,CAAC,QAAQ;SAC7B,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,2BAA2B,CAC/B,UAAoB,EACpB,kBAA2D,EAC3D,kBAA2D,EAC3D,QAAiB;QAEjB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,oCAAoC,UAAU,EAAE,CAAC,CAAC;QACpE,CAAC;QAED,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAClD,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAClD,SAAS,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAElD,qBAAqB;QACrB,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC;YACxB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,MAAM,EAAE,UAAU;YAClB,OAAO,EAAE,2BAA2B,kBAAkB,QAAQ,kBAAkB,EAAE;YAClF,WAAW,EAAE,QAAQ;YACrB,QAAQ;SACT,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,EAAE;YACjD,UAAU;YACV,kBAAkB;YAClB,kBAAkB;SACnB,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,wBAAwB,CAC5B,SAAiB,EACjB,OAAe;QAEf,MAAM,QAAQ,GAAG,qBAAqB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;QACnD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAErC,+BAA+B;QAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAC5C,MAAM,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CACpE,CAAC,SAAS,EAAE,EAAE;YACZ,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAClD,OAAO,CACL,SAAS,CAAC,kBAAkB,KAAK,UAAU;gBAC3C,SAAS,CAAC,wBAAwB;gBAClC,SAAS,CAAC,uBAAuB;gBACjC,GAAG,IAAI,UAAU,CAClB,CAAC;QACJ,CAAC,CACF,CAAC,MAAM,CAAC;QAET,MAAM,eAAe,GACnB,cAAc,GAAG,CAAC;YAChB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,kBAAkB,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC;YACzD,CAAC,CAAC,CAAC,CAAC;QACR,MAAM,iBAAiB,GACrB,eAAe,IAAI,EAAE;YACnB,CAAC,CAAC,WAAW;YACb,CAAC,CAAC,eAAe,IAAI,EAAE;gBACvB,CAAC,CAAC,SAAS;gBACX,CAAC,CAAC,eAAe,CAAC;QAEtB,kBAAkB;QAClB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CACzD,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,EAAE;YAC1B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAClD,MAAM,eAAe,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;YAEhE,MAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAC/C,CAAC,CAAC,EAAE,EAAE,CACJ,CAAC,CAAC,UAAU,KAAK,UAAU;gBAC3B,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;gBAC5C,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAC7C,CAAC,MAAM,CAAC;YAET,OAAO;gBACL,UAAU;gBACV,SAAS,EACP,SAAS,CAAC,kBAAkB,KAAK,UAAU;oBAC3C,SAAS,CAAC,wBAAwB;oBAClC,eAAe,KAAK,QAAQ;gBAC9B,eAAe;gBACf,YAAY,EAAE,SAAS,CAAC,YAAY;gBACpC,UAAU,EAAE,kBAAkB;aAC/B,CAAC;QACJ,CAAC,CACF,CAAC;QAEF,qBAAqB;QACrB,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAC7C,CAAC,CAAC,EAAE,EAAE,CACJ,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;YAC5C,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,CAC7C,CAAC;QAEF,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1D,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACvD,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAA4B,CAAC,CAAC;QAEjC,MAAM,oBAAoB,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAC9D,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7C,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,EAA4B,CAAC,CAAC;QAEjC,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,MAAM,CAChD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,UAAU,CAC/B,CAAC,MAAM,CAAC;QACT,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,MAAM,CAC/C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,eAAe,CAC3D,CAAC,MAAM,CAAC;QAET,2BAA2B;QAC3B,MAAM,eAAe,GAAa,EAAE,CAAC;QACrC,IAAI,eAAe,GAAG,GAAG,EAAE,CAAC;YAC1B,eAAe,CAAC,IAAI,CAClB,0DAA0D,CAC3D,CAAC;QACJ,CAAC;QACD,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC;YAC1B,eAAe,CAAC,IAAI,CAClB,WAAW,iBAAiB,gCAAgC,CAC7D,CAAC;QACJ,CAAC;QACD,IACE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YAC9C,MAAM,qBAAqB,GACzB,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC;gBAC3D,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YACxB,OAAO,qBAAqB,GAAG,EAAE,CAAC;QACpC,CAAC,CAAC,EACF,CAAC;YACD,eAAe,CAAC,IAAI,CAClB,uDAAuD,CACxD,CAAC;QACJ,CAAC;QAED,eAAe;QACf,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;YACrE,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;YAC1C,MAAM,eAAe,GACnB,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YACxE,OAAO,eAAe,IAAI,EAAE,IAAI,eAAe,GAAG,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,KAAK,MAAM,SAAS,IAAI,YAAY,EAAE,CAAC;YACrC,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAClD,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAChC,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CACtE,CAAC;YACF,WAAW,CAAC,IAAI,CAAC;gBACf,MAAM,EAAE,wBAAwB,SAAS,CAAC,YAAY,EAAE;gBACxD,QAAQ,EACN,eAAe,IAAI,EAAE,CAAC,CAAC,CAAE,UAAoB,CAAC,CAAC,CAAE,MAAgB;gBACnE,OAAO,EAAE,IAAI,IAAI,CACf,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAChD,CAAC,WAAW,EAAE,EAAE,wBAAwB;aAC1C,CAAC,CAAC;QACL,CAAC;QAED,MAAM,MAAM,GAAqB;YAC/B,QAAQ;YACR,WAAW,EAAE,GAAG;YAChB,eAAe,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE;YACnD,iBAAiB;YACjB,eAAe;YACf,SAAS;YACT,UAAU,EAAE;gBACV,KAAK,EAAE,gBAAgB,CAAC,MAAM;gBAC9B,MAAM,EAAE,gBAAgB;gBACxB,UAAU,EAAE,oBAAoB;gBAChC,QAAQ,EAAE,kBAAkB;gBAC5B,OAAO,EAAE,iBAAiB;aAC3B;YACD,eAAe;YACf,WAAW;SACZ,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,EAAE;YAC9C,QAAQ;YACR,iBAAiB;YACjB,eAAe;YACf,eAAe,EAAE,gBAAgB,CAAC,MAAM;SACzC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,UAAoB;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,OAAO,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,gBAAgB,CACpB,WAAmB,EACnB,eAAuB;QAEvB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CACpC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,KAAK,WAAW,CACrC,CAAC;QACF,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,wBAAwB,WAAW,EAAE,CAAC,CAAC;QACzD,CAAC;QAED,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC;QAC9B,SAAS,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACpD,SAAS,CAAC,eAAe,GAAG,eAAe,CAAC;QAE5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE;YACrC,WAAW;YACX,UAAU,EAAE,SAAS,CAAC,UAAU;YAChC,eAAe;SAChB,CAAC,CAAC;IACL,CAAC;CACF;AAzfD,kEAyfC;AAED,2DAA2D;AAC9C,QAAA,2BAA2B,GAAG,IAAI,2BAA2B,EAAE,CAAC","names":[],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/provider-agreement-compliance.ts"],"sourcesContent":["/**\n * Provider Agreement Compliance System\n *\n * Ensures all AI providers comply with \"no training on customer data\" agreements\n * Validates and monitors compliance with data processing agreements (DPAs)\n * Provides audit trail for regulatory compliance\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { BasicLogger } from \"./basic-logger\";\nimport { Provider } from \"./types\";\n\nexport interface ProviderAgreement {\n  providerId: Provider;\n  providerName: string;\n  agreementId: string;\n  signedDate: string;\n  expiryDate: string;\n  version: string;\n\n  // Core compliance requirements\n  noTrainingOnCustomerData: boolean;\n  dataProcessingAgreement: boolean;\n  gdprCompliant: boolean;\n  euDataResidency: boolean;\n\n  // Agreement details\n  agreementUrl?: string;\n  contactEmail?: string;\n  complianceOfficer?: string;\n\n  // Verification\n  lastVerified: string;\n  verificationMethod: \"contract_review\" | \"api_confirmation\" | \"certification\";\n  verificationStatus: \"verified\" | \"pending\" | \"expired\" | \"violated\";\n\n  // Audit trail\n  auditTrail: ProviderAgreementAudit[];\n}\n\nexport interface ProviderAgreementAudit {\n  timestamp: string;\n  action: \"created\" | \"updated\" | \"verified\" | \"violation_detected\" | \"expired\";\n  details: string;\n  performedBy: string;\n  evidence?: string;\n}\n\nexport interface ComplianceViolation {\n  violationId: string;\n  providerId: Provider;\n  timestamp: string;\n  violationType:\n    | \"training_detected\"\n    | \"data_retention\"\n    | \"unauthorized_access\"\n    | \"agreement_expired\";\n  severity: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  evidence: string;\n  status: \"open\" | \"investigating\" | \"resolved\" | \"false_positive\";\n  resolutionDate?: string;\n  resolutionNotes?: string;\n}\n\nexport interface ComplianceReport {\n  reportId: string;\n  generatedAt: string;\n  reportingPeriod: {\n    start: string;\n    end: string;\n  };\n\n  // Overall compliance status\n  overallCompliance: \"compliant\" | \"non_compliant\" | \"warning\";\n  complianceScore: number; // 0-100\n\n  // Provider status\n  providers: Array<{\n    providerId: Provider;\n    compliant: boolean;\n    agreementStatus: \"active\" | \"expired\" | \"missing\";\n    lastVerified: string;\n    violations: number;\n  }>;\n\n  // Violations summary\n  violations: {\n    total: number;\n    byType: Record<string, number>;\n    bySeverity: Record<string, number>;\n    resolved: number;\n    pending: number;\n  };\n\n  // Recommendations\n  recommendations: string[];\n\n  // Next actions\n  nextActions: Array<{\n    action: string;\n    priority: \"low\" | \"medium\" | \"high\" | \"critical\";\n    dueDate: string;\n  }>;\n}\n\n/**\n * Provider Agreement Compliance Manager\n */\nexport class ProviderAgreementCompliance {\n  private logger: BasicLogger;\n  private auditTrail: AuditTrailSystem;\n  private agreements: Map<Provider, ProviderAgreement> = new Map();\n  private violations: ComplianceViolation[] = [];\n\n  constructor() {\n    this.logger = new BasicLogger(\"provider-agreement-compliance\");\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for compliance\n    });\n\n    // Initialize with known provider agreements\n    this.initializeProviderAgreements();\n  }\n\n  /**\n   * Initialize provider agreements with current status\n   */\n  private initializeProviderAgreements(): void {\n    const currentDate = new Date().toISOString();\n\n    // AWS Bedrock Agreement\n    this.agreements.set(\"bedrock\", {\n      providerId: \"bedrock\",\n      providerName: \"Amazon Web Services (Bedrock)\",\n      agreementId: \"AWS-BEDROCK-DPA-2024\",\n      signedDate: \"2024-01-15T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: true,\n\n      agreementUrl: \"https://aws.amazon.com/service-terms/\",\n      contactEmail: \"privacy@amazon.com\",\n      complianceOfficer: \"AWS Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-01-15T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with AWS Bedrock DPA\",\n          performedBy: \"system\",\n          evidence: \"AWS Service Terms and Bedrock documentation\",\n        },\n      ],\n    });\n\n    // Google AI Agreement\n    this.agreements.set(\"google\", {\n      providerId: \"google\",\n      providerName: \"Google Cloud AI Platform\",\n      agreementId: \"GOOGLE-AI-DPA-2024\",\n      signedDate: \"2024-02-01T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: true,\n\n      agreementUrl: \"https://cloud.google.com/terms/data-processing-addendum\",\n      contactEmail: \"privacy@google.com\",\n      complianceOfficer: \"Google Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-02-01T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with Google Cloud AI DPA\",\n          performedBy: \"system\",\n          evidence: \"Google Cloud Data Processing Addendum\",\n        },\n      ],\n    });\n\n    // Meta AI Agreement\n    this.agreements.set(\"meta\", {\n      providerId: \"meta\",\n      providerName: \"Meta AI Platform\",\n      agreementId: \"META-AI-DPA-2024\",\n      signedDate: \"2024-03-01T00:00:00Z\",\n      expiryDate: \"2030-12-31T23:59:59Z\",\n      version: \"2024.1\",\n\n      noTrainingOnCustomerData: true,\n      dataProcessingAgreement: true,\n      gdprCompliant: true,\n      euDataResidency: false, // Meta may process in US\n\n      agreementUrl: \"https://developers.facebook.com/terms/\",\n      contactEmail: \"privacy@meta.com\",\n      complianceOfficer: \"Meta Privacy Team\",\n\n      lastVerified: currentDate,\n      verificationMethod: \"contract_review\",\n      verificationStatus: \"verified\",\n\n      auditTrail: [\n        {\n          timestamp: \"2024-03-01T00:00:00Z\",\n          action: \"created\",\n          details: \"Initial agreement setup with Meta AI DPA\",\n          performedBy: \"system\",\n          evidence: \"Meta Developer Terms and Privacy Policy\",\n        },\n      ],\n    });\n\n    this.logger.info(\"Provider agreements initialized\", {\n      totalProviders: this.agreements.size,\n      verifiedProviders: Array.from(this.agreements.values()).filter(\n        (a) => a.verificationStatus === \"verified\"\n      ).length,\n    });\n  }\n\n  /**\n   * Verify provider compliance before AI request\n   */\n  async verifyProviderCompliance(providerId: Provider): Promise<{\n    compliant: boolean;\n    agreement?: ProviderAgreement;\n    violations: string[];\n    warnings: string[];\n  }> {\n    const agreement = this.agreements.get(providerId);\n    const violations: string[] = [];\n    const warnings: string[] = [];\n\n    if (!agreement) {\n      violations.push(`No agreement found for provider: ${providerId}`);\n      return { compliant: false, violations, warnings };\n    }\n\n    // Check agreement expiry\n    const now = new Date();\n    const expiryDate = new Date(agreement.expiryDate);\n    if (now > expiryDate) {\n      violations.push(`Agreement expired on ${agreement.expiryDate}`);\n    }\n\n    // Check core compliance requirements\n    if (!agreement.noTrainingOnCustomerData) {\n      violations.push(\n        \"Provider does not guarantee no training on customer data\"\n      );\n    }\n\n    if (!agreement.dataProcessingAgreement) {\n      violations.push(\"No valid Data Processing Agreement\");\n    }\n\n    if (!agreement.gdprCompliant) {\n      violations.push(\"Provider is not GDPR compliant\");\n    }\n\n    // Check verification status\n    if (agreement.verificationStatus !== \"verified\") {\n      violations.push(\n        `Agreement verification status: ${agreement.verificationStatus}`\n      );\n    }\n\n    // Check last verification date (warn if older than 90 days)\n    const lastVerified = new Date(agreement.lastVerified);\n    const daysSinceVerification =\n      (now.getTime() - lastVerified.getTime()) / (1000 * 60 * 60 * 24);\n    if (daysSinceVerification > 90) {\n      warnings.push(\n        `Agreement not verified in ${Math.floor(daysSinceVerification)} days`\n      );\n    }\n\n    // Check for recent violations\n    const recentViolations = this.violations.filter(\n      (v) =>\n        v.providerId === providerId &&\n        v.status === \"open\" &&\n        new Date(v.timestamp) >\n          new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000) // Last 30 days\n    );\n\n    if (recentViolations.length > 0) {\n      violations.push(\n        `${recentViolations.length} unresolved violations in last 30 days`\n      );\n    }\n\n    const compliant = violations.length === 0;\n\n    this.logger.info(\"Provider compliance verified\", {\n      providerId,\n      compliant,\n      violations: violations.length,\n      warnings: warnings.length,\n    });\n\n    return {\n      compliant,\n      agreement,\n      violations,\n      warnings,\n    };\n  }\n\n  /**\n   * Record compliance violation\n   */\n  async recordViolation(\n    violation: Omit<ComplianceViolation, \"violationId\" | \"timestamp\" | \"status\">\n  ): Promise<string> {\n    const violationId = `violation-${Date.now()}-${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n    const fullViolation: ComplianceViolation = {\n      violationId,\n      timestamp: new Date().toISOString(),\n      status: \"open\",\n      ...violation,\n    };\n\n    this.violations.push(fullViolation);\n\n    // Log to audit trail\n    await this.auditTrail.logEvent({\n      eventType: \"compliance_violation\",\n      requestId: violationId,\n      provider: violation.providerId,\n      complianceStatus: \"violation\",\n      metadata: {\n        violationType: violation.violationType,\n        severity: violation.severity,\n        description: violation.description,\n      },\n    });\n\n    this.logger.error(\"Compliance violation recorded\", {\n      violationId,\n      providerId: violation.providerId,\n      violationType: violation.violationType,\n      severity: violation.severity,\n    });\n\n    return violationId;\n  }\n\n  /**\n   * Update agreement verification\n   */\n  async updateAgreementVerification(\n    providerId: Provider,\n    verificationStatus: ProviderAgreement[\"verificationStatus\"],\n    verificationMethod: ProviderAgreement[\"verificationMethod\"],\n    evidence?: string\n  ): Promise<void> {\n    const agreement = this.agreements.get(providerId);\n    if (!agreement) {\n      throw new Error(`No agreement found for provider: ${providerId}`);\n    }\n\n    agreement.verificationStatus = verificationStatus;\n    agreement.verificationMethod = verificationMethod;\n    agreement.lastVerified = new Date().toISOString();\n\n    // Add to audit trail\n    agreement.auditTrail.push({\n      timestamp: new Date().toISOString(),\n      action: \"verified\",\n      details: `Verification updated to ${verificationStatus} via ${verificationMethod}`,\n      performedBy: \"system\",\n      evidence,\n    });\n\n    this.logger.info(\"Agreement verification updated\", {\n      providerId,\n      verificationStatus,\n      verificationMethod,\n    });\n  }\n\n  /**\n   * Generate compliance report\n   */\n  async generateComplianceReport(\n    startDate: string,\n    endDate: string\n  ): Promise<ComplianceReport> {\n    const reportId = `compliance-report-${Date.now()}`;\n    const now = new Date().toISOString();\n\n    // Calculate overall compliance\n    const totalProviders = this.agreements.size;\n    const compliantProviders = Array.from(this.agreements.values()).filter(\n      (agreement) => {\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        return (\n          agreement.verificationStatus === \"verified\" &&\n          agreement.noTrainingOnCustomerData &&\n          agreement.dataProcessingAgreement &&\n          now <= expiryDate\n        );\n      }\n    ).length;\n\n    const complianceScore =\n      totalProviders > 0\n        ? Math.round((compliantProviders / totalProviders) * 100)\n        : 0;\n    const overallCompliance: ComplianceReport[\"overallCompliance\"] =\n      complianceScore >= 95\n        ? \"compliant\"\n        : complianceScore >= 80\n        ? \"warning\"\n        : \"non_compliant\";\n\n    // Provider status\n    const providers = Array.from(this.agreements.entries()).map(\n      ([providerId, agreement]) => {\n        const now = new Date();\n        const expiryDate = new Date(agreement.expiryDate);\n        const agreementStatus = now > expiryDate ? \"expired\" : \"active\";\n\n        const providerViolations = this.violations.filter(\n          (v) =>\n            v.providerId === providerId &&\n            new Date(v.timestamp) >= new Date(startDate) &&\n            new Date(v.timestamp) <= new Date(endDate)\n        ).length;\n\n        return {\n          providerId,\n          compliant:\n            agreement.verificationStatus === \"verified\" &&\n            agreement.noTrainingOnCustomerData &&\n            agreementStatus === \"active\",\n          agreementStatus,\n          lastVerified: agreement.lastVerified,\n          violations: providerViolations,\n        };\n      }\n    );\n\n    // Violations summary\n    const periodViolations = this.violations.filter(\n      (v) =>\n        new Date(v.timestamp) >= new Date(startDate) &&\n        new Date(v.timestamp) <= new Date(endDate)\n    );\n\n    const violationsByType = periodViolations.reduce((acc, v) => {\n      acc[v.violationType] = (acc[v.violationType] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const violationsBySeverity = periodViolations.reduce((acc, v) => {\n      acc[v.severity] = (acc[v.severity] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const resolvedViolations = periodViolations.filter(\n      (v) => v.status === \"resolved\"\n    ).length;\n    const pendingViolations = periodViolations.filter(\n      (v) => v.status === \"open\" || v.status === \"investigating\"\n    ).length;\n\n    // Generate recommendations\n    const recommendations: string[] = [];\n    if (complianceScore < 100) {\n      recommendations.push(\n        \"Review and update expired or missing provider agreements\"\n      );\n    }\n    if (pendingViolations > 0) {\n      recommendations.push(\n        `Resolve ${pendingViolations} pending compliance violations`\n      );\n    }\n    if (\n      Array.from(this.agreements.values()).some((a) => {\n        const daysSinceVerification =\n          (new Date().getTime() - new Date(a.lastVerified).getTime()) /\n          (1000 * 60 * 60 * 24);\n        return daysSinceVerification > 90;\n      })\n    ) {\n      recommendations.push(\n        \"Update verification for agreements older than 90 days\"\n      );\n    }\n\n    // Next actions\n    const nextActions = [];\n    const expiringSoon = Array.from(this.agreements.values()).filter((a) => {\n      const expiryDate = new Date(a.expiryDate);\n      const daysUntilExpiry =\n        (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24);\n      return daysUntilExpiry <= 90 && daysUntilExpiry > 0;\n    });\n\n    for (const agreement of expiringSoon) {\n      const expiryDate = new Date(agreement.expiryDate);\n      const daysUntilExpiry = Math.floor(\n        (expiryDate.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)\n      );\n      nextActions.push({\n        action: `Renew agreement with ${agreement.providerName}`,\n        priority:\n          daysUntilExpiry <= 30 ? (\"critical\" as const) : (\"high\" as const),\n        dueDate: new Date(\n          expiryDate.getTime() - 30 * 24 * 60 * 60 * 1000\n        ).toISOString(), // 30 days before expiry\n      });\n    }\n\n    const report: ComplianceReport = {\n      reportId,\n      generatedAt: now,\n      reportingPeriod: { start: startDate, end: endDate },\n      overallCompliance,\n      complianceScore,\n      providers,\n      violations: {\n        total: periodViolations.length,\n        byType: violationsByType,\n        bySeverity: violationsBySeverity,\n        resolved: resolvedViolations,\n        pending: pendingViolations,\n      },\n      recommendations,\n      nextActions,\n    };\n\n    this.logger.info(\"Compliance report generated\", {\n      reportId,\n      overallCompliance,\n      complianceScore,\n      totalViolations: periodViolations.length,\n    });\n\n    return report;\n  }\n\n  /**\n   * Get all provider agreements\n   */\n  getAllAgreements(): ProviderAgreement[] {\n    return Array.from(this.agreements.values());\n  }\n\n  /**\n   * Get agreement for specific provider\n   */\n  getAgreement(providerId: Provider): ProviderAgreement | undefined {\n    return this.agreements.get(providerId);\n  }\n\n  /**\n   * Get all violations\n   */\n  getAllViolations(): ComplianceViolation[] {\n    return [...this.violations];\n  }\n\n  /**\n   * Resolve violation\n   */\n  async resolveViolation(\n    violationId: string,\n    resolutionNotes: string\n  ): Promise<void> {\n    const violation = this.violations.find(\n      (v) => v.violationId === violationId\n    );\n    if (!violation) {\n      throw new Error(`Violation not found: ${violationId}`);\n    }\n\n    violation.status = \"resolved\";\n    violation.resolutionDate = new Date().toISOString();\n    violation.resolutionNotes = resolutionNotes;\n\n    this.logger.info(\"Violation resolved\", {\n      violationId,\n      providerId: violation.providerId,\n      resolutionNotes,\n    });\n  }\n}\n\n// Singleton instance - create fresh instance for each test\nexport const providerAgreementCompliance = new ProviderAgreementCompliance();\n"],"version":3}