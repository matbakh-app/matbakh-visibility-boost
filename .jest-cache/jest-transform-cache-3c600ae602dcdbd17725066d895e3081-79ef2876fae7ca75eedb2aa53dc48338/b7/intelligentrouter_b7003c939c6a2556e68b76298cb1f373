00291ce15e848221e08ad01151bd377e
"use strict";

/**
 * Intelligent Router - Hybrid Routing for Bedrock Support Operations
 *
 * This module implements intelligent routing decisions between direct Bedrock access
 * and MCP integration based on operation type, priority, latency requirements,
 * and system health status.
 */
/* istanbul ignore next */
function cov_1tpwcygpgi() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/intelligent-router.ts";
  var hash = "91dcbb3e7814e09788c7eb853a2f729489ba2c2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/intelligent-router.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "5": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "6": {
        start: {
          line: 15,
          column: 43
        },
        end: {
          line: 15,
          column: 88
        }
      },
      "7": {
        start: {
          line: 16,
          column: 42
        },
        end: {
          line: 16,
          column: 86
        }
      },
      "8": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 42
        }
      },
      "9": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 119
        }
      },
      "10": {
        start: {
          line: 19,
          column: 83
        },
        end: {
          line: 19,
          column: 113
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 70,
          column: 10
        }
      },
      "15": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "16": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 43
        }
      },
      "17": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 68
        }
      },
      "18": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "19": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 106
        }
      },
      "20": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "21": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 58
        }
      },
      "22": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "23": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 55
        }
      },
      "24": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "25": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "26": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 124
        }
      },
      "27": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 81
        }
      },
      "28": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 46
        }
      },
      "29": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 42
        }
      },
      "30": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 37
        }
      },
      "31": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "32": {
        start: {
          line: 110,
          column: 30
        },
        end: {
          line: 110,
          column: 40
        }
      },
      "33": {
        start: {
          line: 111,
          column: 34
        },
        end: {
          line: 111,
          column: 62
        }
      },
      "34": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "35": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "36": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 94
        }
      },
      "37": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 148
        }
      },
      "38": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 86
        }
      },
      "39": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 125
        }
      },
      "40": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "41": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 91
        }
      },
      "42": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 85
        }
      },
      "43": {
        start: {
          line: 132,
          column: 41
        },
        end: {
          line: 132,
          column: 153
        }
      },
      "44": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 137,
          column: 17
        }
      },
      "45": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 72
        }
      },
      "46": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 136,
          column: 76
        }
      },
      "47": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 40
        }
      },
      "48": {
        start: {
          line: 141,
          column: 34
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "49": {
        start: {
          line: 143,
          column: 41
        },
        end: {
          line: 143,
          column: 94
        }
      },
      "50": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "51": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 148,
          column: 121
        }
      },
      "52": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 156,
          column: 58
        }
      },
      "53": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 44
        }
      },
      "54": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 167,
          column: 43
        }
      },
      "55": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 175,
          column: 18
        }
      },
      "56": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "57": {
        start: {
          line: 185,
          column: 25
        },
        end: {
          line: 185,
          column: 55
        }
      },
      "58": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "59": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 93
        }
      },
      "60": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 86
        }
      },
      "61": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "62": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 200,
          column: 18
        }
      },
      "63": {
        start: {
          line: 203,
          column: 39
        },
        end: {
          line: 203,
          column: 85
        }
      },
      "64": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "65": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 213,
          column: 18
        }
      },
      "66": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "67": {
        start: {
          line: 217,
          column: 44
        },
        end: {
          line: 217,
          column: 91
        }
      },
      "68": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 227,
          column: 17
        }
      },
      "69": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 226,
          column: 22
        }
      },
      "70": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "71": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 239,
          column: 18
        }
      },
      "72": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 249,
          column: 14
        }
      },
      "73": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "74": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "75": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 91
        }
      },
      "76": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 263,
          column: 21
        }
      },
      "77": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 68
        }
      },
      "78": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 264,
          column: 81
        }
      },
      "79": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 68
        }
      },
      "80": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "81": {
        start: {
          line: 275,
          column: 25
        },
        end: {
          line: 275,
          column: 55
        }
      },
      "82": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "83": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 28
        }
      },
      "84": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "85": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 118
        }
      },
      "86": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "87": {
        start: {
          line: 283,
          column: 43
        },
        end: {
          line: 283,
          column: 142
        }
      },
      "88": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "89": {
        start: {
          line: 286,
          column: 24
        },
        end: {
          line: 286,
          column: 166
        }
      },
      "90": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 289,
          column: 87
        }
      },
      "91": {
        start: {
          line: 294,
          column: 37
        },
        end: {
          line: 294,
          column: 91
        }
      },
      "92": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 123
        }
      },
      "93": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 76
        }
      },
      "94": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 28
        }
      },
      "95": {
        start: {
          line: 309,
          column: 27
        },
        end: {
          line: 310,
          column: 47
        }
      },
      "96": {
        start: {
          line: 309,
          column: 60
        },
        end: {
          line: 310,
          column: 46
        }
      },
      "97": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 312,
          column: 30
        }
      },
      "98": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 30
        }
      },
      "99": {
        start: {
          line: 313,
          column: 31
        },
        end: {
          line: 313,
          column: 105
        }
      },
      "100": {
        start: {
          line: 313,
          column: 64
        },
        end: {
          line: 313,
          column: 104
        }
      },
      "101": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 315,
          column: 34
        }
      },
      "102": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 34
        }
      },
      "103": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "104": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 114
        }
      },
      "105": {
        start: {
          line: 320,
          column: 34
        },
        end: {
          line: 325,
          column: 23
        }
      },
      "106": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 333,
          column: 14
        }
      },
      "107": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 20
        }
      },
      "108": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 401,
          column: 11
        }
      },
      "109": {
        start: {
          line: 342,
          column: 27
        },
        end: {
          line: 342,
          column: 60
        }
      },
      "110": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "111": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 30
        }
      },
      "112": {
        start: {
          line: 348,
          column: 30
        },
        end: {
          line: 348,
          column: 40
        }
      },
      "113": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 400,
          column: 13
        }
      },
      "114": {
        start: {
          line: 350,
          column: 32
        },
        end: {
          line: 350,
          column: 37
        }
      },
      "115": {
        start: {
          line: 351,
          column: 32
        },
        end: {
          line: 351,
          column: 33
        }
      },
      "116": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 369,
          column: 17
        }
      },
      "117": {
        start: {
          line: 354,
          column: 45
        },
        end: {
          line: 354,
          column: 96
        }
      },
      "118": {
        start: {
          line: 355,
          column: 24
        },
        end: {
          line: 355,
          column: 59
        }
      },
      "119": {
        start: {
          line: 356,
          column: 24
        },
        end: {
          line: 356,
          column: 59
        }
      },
      "120": {
        start: {
          line: 357,
          column: 24
        },
        end: {
          line: 357,
          column: 30
        }
      },
      "121": {
        start: {
          line: 359,
          column: 24
        },
        end: {
          line: 367,
          column: 25
        }
      },
      "122": {
        start: {
          line: 360,
          column: 46
        },
        end: {
          line: 360,
          column: 84
        }
      },
      "123": {
        start: {
          line: 361,
          column: 28
        },
        end: {
          line: 361,
          column: 60
        }
      },
      "124": {
        start: {
          line: 362,
          column: 28
        },
        end: {
          line: 362,
          column: 60
        }
      },
      "125": {
        start: {
          line: 365,
          column: 28
        },
        end: {
          line: 365,
          column: 46
        }
      },
      "126": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 42
        }
      },
      "127": {
        start: {
          line: 368,
          column: 24
        },
        end: {
          line: 368,
          column: 30
        }
      },
      "128": {
        start: {
          line: 370,
          column: 31
        },
        end: {
          line: 379,
          column: 17
        }
      },
      "129": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 381,
          column: 197
        }
      },
      "130": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 58
        }
      },
      "131": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 30
        }
      },
      "132": {
        start: {
          line: 386,
          column: 31
        },
        end: {
          line: 393,
          column: 17
        }
      },
      "133": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 397,
          column: 60
        }
      },
      "134": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 58
        }
      },
      "135": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 30
        }
      },
      "136": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 54
        }
      },
      "137": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 47
        }
      },
      "138": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 445,
          column: 11
        }
      },
      "139": {
        start: {
          line: 420,
          column: 36
        },
        end: {
          line: 420,
          column: 38
        }
      },
      "140": {
        start: {
          line: 421,
          column: 31
        },
        end: {
          line: 421,
          column: 50
        }
      },
      "141": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "142": {
        start: {
          line: 425,
          column: 43
        },
        end: {
          line: 425,
          column: 105
        }
      },
      "143": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 428,
          column: 17
        }
      },
      "144": {
        start: {
          line: 427,
          column: 20
        },
        end: {
          line: 427,
          column: 114
        }
      },
      "145": {
        start: {
          line: 430,
          column: 40
        },
        end: {
          line: 430,
          column: 99
        }
      },
      "146": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 433,
          column: 17
        }
      },
      "147": {
        start: {
          line: 432,
          column: 20
        },
        end: {
          line: 432,
          column: 113
        }
      },
      "148": {
        start: {
          line: 435,
          column: 40
        },
        end: {
          line: 435,
          column: 99
        }
      },
      "149": {
        start: {
          line: 436,
          column: 16
        },
        end: {
          line: 438,
          column: 17
        }
      },
      "150": {
        start: {
          line: 437,
          column: 20
        },
        end: {
          line: 437,
          column: 115
        }
      },
      "151": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 442,
          column: 17
        }
      },
      "152": {
        start: {
          line: 441,
          column: 20
        },
        end: {
          line: 441,
          column: 113
        }
      },
      "153": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 35
        }
      },
      "154": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 42
        }
      },
      "155": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 452,
          column: 72
        }
      },
      "156": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 35
        }
      },
      "157": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "158": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 468,
          column: 13
        }
      },
      "159": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 119
        }
      },
      "160": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 466,
          column: 81
        }
      },
      "161": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 46
        }
      },
      "162": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 78
        }
      },
      "163": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 43
        }
      },
      "164": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 73
        }
      },
      "165": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 116
        }
      },
      "166": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 493,
          column: 11
        }
      },
      "167": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 128
        }
      },
      "168": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 502,
          column: 11
        }
      },
      "169": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 129
        }
      },
      "170": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 509,
          column: 120
        }
      },
      "171": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 119
        }
      },
      "172": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 119
        }
      },
      "173": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 38
        }
      },
      "174": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 537,
          column: 9
        }
      },
      "175": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 52
        }
      },
      "176": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 541,
          column: 9
        }
      },
      "177": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 45
        }
      },
      "178": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "179": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 544,
          column: 41
        }
      },
      "180": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 558,
          column: 10
        }
      },
      "181": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 570,
          column: 11
        }
      },
      "182": {
        start: {
          line: 571,
          column: 8
        },
        end: {
          line: 578,
          column: 11
        }
      },
      "183": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 611,
          column: 19
        }
      },
      "184": {
        start: {
          line: 581,
          column: 53
        },
        end: {
          line: 611,
          column: 10
        }
      },
      "185": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 610,
          column: 13
        }
      },
      "186": {
        start: {
          line: 584,
          column: 37
        },
        end: {
          line: 584,
          column: 74
        }
      },
      "187": {
        start: {
          line: 585,
          column: 16
        },
        end: {
          line: 587,
          column: 58
        }
      },
      "188": {
        start: {
          line: 588,
          column: 16
        },
        end: {
          line: 591,
          column: 17
        }
      },
      "189": {
        start: {
          line: 589,
          column: 38
        },
        end: {
          line: 589,
          column: 72
        }
      },
      "190": {
        start: {
          line: 590,
          column: 20
        },
        end: {
          line: 590,
          column: 232
        }
      },
      "191": {
        start: {
          line: 593,
          column: 40
        },
        end: {
          line: 593,
          column: 68
        }
      },
      "192": {
        start: {
          line: 594,
          column: 16
        },
        end: {
          line: 606,
          column: 17
        }
      },
      "193": {
        start: {
          line: 595,
          column: 20
        },
        end: {
          line: 595,
          column: 86
        }
      },
      "194": {
        start: {
          line: 597,
          column: 20
        },
        end: {
          line: 604,
          column: 23
        }
      },
      "195": {
        start: {
          line: 605,
          column: 20
        },
        end: {
          line: 605,
          column: 90
        }
      },
      "196": {
        start: {
          line: 609,
          column: 16
        },
        end: {
          line: 609,
          column: 65
        }
      },
      "197": {
        start: {
          line: 614,
          column: 8
        },
        end: {
          line: 614,
          column: 44
        }
      },
      "198": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 621,
          column: 9
        }
      },
      "199": {
        start: {
          line: 617,
          column: 12
        },
        end: {
          line: 617,
          column: 51
        }
      },
      "200": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 48
        }
      },
      "201": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 625,
          column: 9
        }
      },
      "202": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 624,
          column: 48
        }
      },
      "203": {
        start: {
          line: 627,
          column: 29
        },
        end: {
          line: 629,
          column: 21
        }
      },
      "204": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 631,
          column: 61
        }
      },
      "205": {
        start: {
          line: 633,
          column: 29
        },
        end: {
          line: 635,
          column: 29
        }
      },
      "206": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 637,
          column: 61
        }
      },
      "207": {
        start: {
          line: 639,
          column: 33
        },
        end: {
          line: 639,
          column: 36
        }
      },
      "208": {
        start: {
          line: 640,
          column: 30
        },
        end: {
          line: 640,
          column: 33
        }
      },
      "209": {
        start: {
          line: 641,
          column: 27
        },
        end: {
          line: 641,
          column: 97
        }
      },
      "210": {
        start: {
          line: 642,
          column: 26
        },
        end: {
          line: 644,
          column: 22
        }
      },
      "211": {
        start: {
          line: 645,
          column: 8
        },
        end: {
          line: 646,
          column: 58
        }
      },
      "212": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 161
        }
      },
      "213": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 652,
          column: 81
        }
      },
      "214": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 696,
          column: 11
        }
      },
      "215": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 695,
          column: 13
        }
      },
      "216": {
        start: {
          line: 661,
          column: 38
        },
        end: {
          line: 661,
          column: 90
        }
      },
      "217": {
        start: {
          line: 663,
          column: 43
        },
        end: {
          line: 668,
          column: 17
        }
      },
      "218": {
        start: {
          line: 670,
          column: 42
        },
        end: {
          line: 670,
          column: 142
        }
      },
      "219": {
        start: {
          line: 671,
          column: 16
        },
        end: {
          line: 690,
          column: 17
        }
      },
      "220": {
        start: {
          line: 673,
          column: 20
        },
        end: {
          line: 689,
          column: 21
        }
      },
      "221": {
        start: {
          line: 674,
          column: 52
        },
        end: {
          line: 681,
          column: 25
        }
      },
      "222": {
        start: {
          line: 682,
          column: 51
        },
        end: {
          line: 682,
          column: 153
        }
      },
      "223": {
        start: {
          line: 683,
          column: 24
        },
        end: {
          line: 685,
          column: 25
        }
      },
      "224": {
        start: {
          line: 684,
          column: 28
        },
        end: {
          line: 684,
          column: 179
        }
      },
      "225": {
        start: {
          line: 688,
          column: 24
        },
        end: {
          line: 688,
          column: 134
        }
      },
      "226": {
        start: {
          line: 693,
          column: 37
        },
        end: {
          line: 693,
          column: 91
        }
      },
      "227": {
        start: {
          line: 694,
          column: 16
        },
        end: {
          line: 694,
          column: 98
        }
      },
      "228": {
        start: {
          line: 702,
          column: 8
        },
        end: {
          line: 715,
          column: 9
        }
      },
      "229": {
        start: {
          line: 704,
          column: 16
        },
        end: {
          line: 704,
          column: 35
        }
      },
      "230": {
        start: {
          line: 706,
          column: 16
        },
        end: {
          line: 706,
          column: 40
        }
      },
      "231": {
        start: {
          line: 708,
          column: 16
        },
        end: {
          line: 708,
          column: 38
        }
      },
      "232": {
        start: {
          line: 710,
          column: 16
        },
        end: {
          line: 710,
          column: 40
        }
      },
      "233": {
        start: {
          line: 712,
          column: 16
        },
        end: {
          line: 712,
          column: 43
        }
      },
      "234": {
        start: {
          line: 714,
          column: 16
        },
        end: {
          line: 714,
          column: 42
        }
      },
      "235": {
        start: {
          line: 718,
          column: 0
        },
        end: {
          line: 718,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 69
          },
          end: {
            line: 19,
            column: 70
          }
        },
        loc: {
          start: {
            line: 19,
            column: 81
          },
          end: {
            line: 19,
            column: 115
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 37
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 108
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 109,
            column: 55
          },
          end: {
            line: 109,
            column: 56
          }
        },
        loc: {
          start: {
            line: 109,
            column: 68
          },
          end: {
            line: 177,
            column: 9
          }
        },
        line: 109
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 48
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 182
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 183,
            column: 55
          },
          end: {
            line: 183,
            column: 56
          }
        },
        loc: {
          start: {
            line: 183,
            column: 68
          },
          end: {
            line: 250,
            column: 9
          }
        },
        line: 183
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 35
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 255
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 256,
            column: 55
          },
          end: {
            line: 256,
            column: 56
          }
        },
        loc: {
          start: {
            line: 256,
            column: 68
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 256
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 54
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 273
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 274,
            column: 55
          },
          end: {
            line: 274,
            column: 56
          }
        },
        loc: {
          start: {
            line: 274,
            column: 68
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 274
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 30
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 308
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 309,
            column: 50
          },
          end: {
            line: 309,
            column: 51
          }
        },
        loc: {
          start: {
            line: 309,
            column: 60
          },
          end: {
            line: 310,
            column: 46
          }
        },
        line: 309
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 313,
            column: 54
          },
          end: {
            line: 313,
            column: 55
          }
        },
        loc: {
          start: {
            line: 313,
            column: 64
          },
          end: {
            line: 313,
            column: 104
          }
        },
        line: 313
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 28
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 340
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 341,
            column: 55
          },
          end: {
            line: 341,
            column: 56
          }
        },
        loc: {
          start: {
            line: 341,
            column: 68
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 341
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 27
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 406
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        },
        loc: {
          start: {
            line: 412,
            column: 27
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 412
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 418,
            column: 5
          }
        },
        loc: {
          start: {
            line: 418,
            column: 22
          },
          end: {
            line: 446,
            column: 5
          }
        },
        line: 418
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 419,
            column: 55
          },
          end: {
            line: 419,
            column: 56
          }
        },
        loc: {
          start: {
            line: 419,
            column: 68
          },
          end: {
            line: 445,
            column: 9
          }
        },
        line: 419
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 450
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 457,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        },
        loc: {
          start: {
            line: 457,
            column: 28
          },
          end: {
            line: 471,
            column: 5
          }
        },
        line: 457
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 475,
            column: 4
          },
          end: {
            line: 475,
            column: 5
          }
        },
        loc: {
          start: {
            line: 475,
            column: 36
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 475
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 28
          },
          end: {
            line: 485,
            column: 5
          }
        },
        line: 482
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 489,
            column: 4
          },
          end: {
            line: 489,
            column: 5
          }
        },
        loc: {
          start: {
            line: 489,
            column: 37
          },
          end: {
            line: 494,
            column: 5
          }
        },
        line: 489
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 490,
            column: 55
          },
          end: {
            line: 490,
            column: 56
          }
        },
        loc: {
          start: {
            line: 490,
            column: 68
          },
          end: {
            line: 493,
            column: 9
          }
        },
        line: 490
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        loc: {
          start: {
            line: 498,
            column: 31
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 498
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 499,
            column: 55
          },
          end: {
            line: 499,
            column: 56
          }
        },
        loc: {
          start: {
            line: 499,
            column: 68
          },
          end: {
            line: 502,
            column: 9
          }
        },
        line: 499
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        },
        loc: {
          start: {
            line: 507,
            column: 33
          },
          end: {
            line: 510,
            column: 5
          }
        },
        line: 507
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 32
          },
          end: {
            line: 517,
            column: 5
          }
        },
        line: 514
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 521,
            column: 5
          }
        },
        loc: {
          start: {
            line: 521,
            column: 31
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 521
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 528,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        },
        loc: {
          start: {
            line: 528,
            column: 22
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 528
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        loc: {
          start: {
            line: 534,
            column: 14
          },
          end: {
            line: 546,
            column: 5
          }
        },
        line: 534
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 548,
            column: 4
          },
          end: {
            line: 548,
            column: 5
          }
        },
        loc: {
          start: {
            line: 548,
            column: 24
          },
          end: {
            line: 559,
            column: 5
          }
        },
        line: 548
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 560,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        },
        loc: {
          start: {
            line: 560,
            column: 33
          },
          end: {
            line: 579,
            column: 5
          }
        },
        line: 560
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 580,
            column: 4
          },
          end: {
            line: 580,
            column: 5
          }
        },
        loc: {
          start: {
            line: 580,
            column: 28
          },
          end: {
            line: 612,
            column: 5
          }
        },
        line: 580
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 581,
            column: 47
          },
          end: {
            line: 581,
            column: 48
          }
        },
        loc: {
          start: {
            line: 581,
            column: 53
          },
          end: {
            line: 611,
            column: 10
          }
        },
        line: 581
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 581,
            column: 93
          },
          end: {
            line: 581,
            column: 94
          }
        },
        loc: {
          start: {
            line: 581,
            column: 106
          },
          end: {
            line: 611,
            column: 9
          }
        },
        line: 581
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 613,
            column: 4
          },
          end: {
            line: 613,
            column: 5
          }
        },
        loc: {
          start: {
            line: 613,
            column: 58
          },
          end: {
            line: 647,
            column: 5
          }
        },
        line: 613
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 648,
            column: 4
          },
          end: {
            line: 648,
            column: 5
          }
        },
        loc: {
          start: {
            line: 648,
            column: 42
          },
          end: {
            line: 650,
            column: 5
          }
        },
        line: 648
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 651,
            column: 4
          },
          end: {
            line: 651,
            column: 5
          }
        },
        loc: {
          start: {
            line: 651,
            column: 28
          },
          end: {
            line: 653,
            column: 5
          }
        },
        line: 651
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 657,
            column: 4
          },
          end: {
            line: 657,
            column: 5
          }
        },
        loc: {
          start: {
            line: 657,
            column: 67
          },
          end: {
            line: 697,
            column: 5
          }
        },
        line: 657
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 658,
            column: 55
          },
          end: {
            line: 658,
            column: 56
          }
        },
        loc: {
          start: {
            line: 658,
            column: 68
          },
          end: {
            line: 696,
            column: 9
          }
        },
        line: 658
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 701,
            column: 4
          },
          end: {
            line: 701,
            column: 5
          }
        },
        loc: {
          start: {
            line: 701,
            column: 44
          },
          end: {
            line: 716,
            column: 5
          }
        },
        line: 701
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 72,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 72,
            column: 34
          }
        }, {
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 72,
            column: 42
          }
        }],
        line: 72
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 122,
            column: 17
          }
        }],
        line: 115
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 116,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 38
          }
        }, {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 88
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "5": {
        loc: {
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "6": {
        loc: {
          start: {
            line: 148,
            column: 63
          },
          end: {
            line: 148,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 88
          },
          end: {
            line: 148,
            column: 101
          }
        }, {
          start: {
            line: 148,
            column: 104
          },
          end: {
            line: 148,
            column: 119
          }
        }],
        line: 148
      },
      "7": {
        loc: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 52
          },
          end: {
            line: 172,
            column: 65
          }
        }, {
          start: {
            line: 172,
            column: 68
          },
          end: {
            line: 172,
            column: 91
          }
        }],
        line: 172
      },
      "8": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "9": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "10": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "11": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "12": {
        loc: {
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 227,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 227,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "13": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "14": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 259,
            column: 91
          }
        }, {
          start: {
            line: 260,
            column: 16
          },
          end: {
            line: 264,
            column: 81
          }
        }, {
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 266,
            column: 68
          }
        }],
        line: 257
      },
      "15": {
        loc: {
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 263,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 20
          },
          end: {
            line: 263,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "16": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "17": {
        loc: {
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 276,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 16
          },
          end: {
            line: 276,
            column: 21
          }
        }, {
          start: {
            line: 276,
            column: 25
          },
          end: {
            line: 276,
            column: 44
          }
        }],
        line: 276
      },
      "18": {
        loc: {
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 297,
            column: 17
          }
        }, {
          start: {
            line: 292,
            column: 21
          },
          end: {
            line: 297,
            column: 17
          }
        }],
        line: 282
      },
      "19": {
        loc: {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 48
          }
        }, {
          start: {
            line: 282,
            column: 52
          },
          end: {
            line: 282,
            column: 74
          }
        }],
        line: 282
      },
      "20": {
        loc: {
          start: {
            line: 284,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 20
          },
          end: {
            line: 290,
            column: 21
          }
        }, {
          start: {
            line: 288,
            column: 25
          },
          end: {
            line: 290,
            column: 21
          }
        }],
        line: 284
      },
      "21": {
        loc: {
          start: {
            line: 284,
            column: 24
          },
          end: {
            line: 284,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 24
          },
          end: {
            line: 284,
            column: 46
          }
        }, {
          start: {
            line: 284,
            column: 50
          },
          end: {
            line: 284,
            column: 73
          }
        }],
        line: 284
      },
      "22": {
        loc: {
          start: {
            line: 289,
            column: 40
          },
          end: {
            line: 289,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 40
          },
          end: {
            line: 289,
            column: 60
          }
        }, {
          start: {
            line: 289,
            column: 64
          },
          end: {
            line: 289,
            column: 85
          }
        }],
        line: 289
      },
      "23": {
        loc: {
          start: {
            line: 309,
            column: 60
          },
          end: {
            line: 310,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 60
          },
          end: {
            line: 309,
            column: 100
          }
        }, {
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 310,
            column: 46
          }
        }],
        line: 309
      },
      "24": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 312,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 312,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "25": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 315,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 315,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "26": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "27": {
        loc: {
          start: {
            line: 320,
            column: 34
          },
          end: {
            line: 325,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 18
          },
          end: {
            line: 324,
            column: 26
          }
        }, {
          start: {
            line: 325,
            column: 18
          },
          end: {
            line: 325,
            column: 23
          }
        }],
        line: 320
      },
      "28": {
        loc: {
          start: {
            line: 320,
            column: 34
          },
          end: {
            line: 323,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 34
          },
          end: {
            line: 320,
            column: 67
          }
        }, {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 321,
            column: 54
          }
        }, {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 322,
            column: 52
          }
        }, {
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 323,
            column: 54
          }
        }],
        line: 320
      },
      "29": {
        loc: {
          start: {
            line: 328,
            column: 26
          },
          end: {
            line: 328,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 328,
            column: 26
          },
          end: {
            line: 328,
            column: 42
          }
        }, {
          start: {
            line: 328,
            column: 46
          },
          end: {
            line: 328,
            column: 54
          }
        }],
        line: 328
      },
      "30": {
        loc: {
          start: {
            line: 331,
            column: 31
          },
          end: {
            line: 331,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 331,
            column: 60
          },
          end: {
            line: 331,
            column: 65
          }
        }, {
          start: {
            line: 331,
            column: 68
          },
          end: {
            line: 331,
            column: 76
          }
        }],
        line: 331
      },
      "31": {
        loc: {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "32": {
        loc: {
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 344,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 344,
            column: 22
          }
        }, {
          start: {
            line: 344,
            column: 26
          },
          end: {
            line: 344,
            column: 73
          }
        }],
        line: 344
      },
      "33": {
        loc: {
          start: {
            line: 352,
            column: 16
          },
          end: {
            line: 369,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 353,
            column: 20
          },
          end: {
            line: 357,
            column: 30
          }
        }, {
          start: {
            line: 358,
            column: 20
          },
          end: {
            line: 368,
            column: 30
          }
        }],
        line: 352
      },
      "34": {
        loc: {
          start: {
            line: 359,
            column: 24
          },
          end: {
            line: 367,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 24
          },
          end: {
            line: 367,
            column: 25
          }
        }, {
          start: {
            line: 364,
            column: 29
          },
          end: {
            line: 367,
            column: 25
          }
        }],
        line: 359
      },
      "35": {
        loc: {
          start: {
            line: 374,
            column: 33
          },
          end: {
            line: 374,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 45
          },
          end: {
            line: 374,
            column: 48
          }
        }, {
          start: {
            line: 374,
            column: 51
          },
          end: {
            line: 374,
            column: 54
          }
        }],
        line: 374
      },
      "36": {
        loc: {
          start: {
            line: 376,
            column: 41
          },
          end: {
            line: 378,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 26
          },
          end: {
            line: 377,
            column: 27
          }
        }, {
          start: {
            line: 378,
            column: 26
          },
          end: {
            line: 378,
            column: 113
          }
        }],
        line: 376
      },
      "37": {
        loc: {
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 28
          },
          end: {
            line: 378,
            column: 102
          }
        }, {
          start: {
            line: 378,
            column: 107
          },
          end: {
            line: 378,
            column: 108
          }
        }],
        line: 378
      },
      "38": {
        loc: {
          start: {
            line: 378,
            column: 28
          },
          end: {
            line: 378,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 378,
            column: 67
          },
          end: {
            line: 378,
            column: 73
          }
        }, {
          start: {
            line: 378,
            column: 76
          },
          end: {
            line: 378,
            column: 102
          }
        }],
        line: 378
      },
      "39": {
        loc: {
          start: {
            line: 378,
            column: 28
          },
          end: {
            line: 378,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 28
          },
          end: {
            line: 378,
            column: 43
          }
        }, {
          start: {
            line: 378,
            column: 47
          },
          end: {
            line: 378,
            column: 64
          }
        }],
        line: 378
      },
      "40": {
        loc: {
          start: {
            line: 381,
            column: 135
          },
          end: {
            line: 381,
            column: 195
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 147
          },
          end: {
            line: 381,
            column: 156
          }
        }, {
          start: {
            line: 381,
            column: 159
          },
          end: {
            line: 381,
            column: 195
          }
        }],
        line: 381
      },
      "41": {
        loc: {
          start: {
            line: 392,
            column: 42
          },
          end: {
            line: 392,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 43
          },
          end: {
            line: 392,
            column: 117
          }
        }, {
          start: {
            line: 392,
            column: 122
          },
          end: {
            line: 392,
            column: 123
          }
        }],
        line: 392
      },
      "42": {
        loc: {
          start: {
            line: 392,
            column: 43
          },
          end: {
            line: 392,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 392,
            column: 82
          },
          end: {
            line: 392,
            column: 88
          }
        }, {
          start: {
            line: 392,
            column: 91
          },
          end: {
            line: 392,
            column: 117
          }
        }],
        line: 392
      },
      "43": {
        loc: {
          start: {
            line: 392,
            column: 43
          },
          end: {
            line: 392,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 43
          },
          end: {
            line: 392,
            column: 58
          }
        }, {
          start: {
            line: 392,
            column: 62
          },
          end: {
            line: 392,
            column: 79
          }
        }],
        line: 392
      },
      "44": {
        loc: {
          start: {
            line: 395,
            column: 138
          },
          end: {
            line: 397,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 396,
            column: 35
          }
        }, {
          start: {
            line: 397,
            column: 22
          },
          end: {
            line: 397,
            column: 58
          }
        }],
        line: 395
      },
      "45": {
        loc: {
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 443,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 443,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "46": {
        loc: {
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 428,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 428,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "47": {
        loc: {
          start: {
            line: 426,
            column: 20
          },
          end: {
            line: 426,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 20
          },
          end: {
            line: 426,
            column: 43
          }
        }, {
          start: {
            line: 426,
            column: 47
          },
          end: {
            line: 426,
            column: 80
          }
        }],
        line: 426
      },
      "48": {
        loc: {
          start: {
            line: 431,
            column: 16
          },
          end: {
            line: 433,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 16
          },
          end: {
            line: 433,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "49": {
        loc: {
          start: {
            line: 431,
            column: 20
          },
          end: {
            line: 431,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 431,
            column: 20
          },
          end: {
            line: 431,
            column: 40
          }
        }, {
          start: {
            line: 431,
            column: 44
          },
          end: {
            line: 431,
            column: 73
          }
        }],
        line: 431
      },
      "50": {
        loc: {
          start: {
            line: 436,
            column: 16
          },
          end: {
            line: 438,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 16
          },
          end: {
            line: 438,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "51": {
        loc: {
          start: {
            line: 440,
            column: 16
          },
          end: {
            line: 442,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 16
          },
          end: {
            line: 442,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "52": {
        loc: {
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "53": {
        loc: {
          start: {
            line: 484,
            column: 15
          },
          end: {
            line: 484,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 16
          },
          end: {
            line: 484,
            column: 106
          }
        }, {
          start: {
            line: 484,
            column: 111
          },
          end: {
            line: 484,
            column: 115
          }
        }],
        line: 484
      },
      "54": {
        loc: {
          start: {
            line: 484,
            column: 16
          },
          end: {
            line: 484,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 484,
            column: 74
          },
          end: {
            line: 484,
            column: 80
          }
        }, {
          start: {
            line: 484,
            column: 83
          },
          end: {
            line: 484,
            column: 106
          }
        }],
        line: 484
      },
      "55": {
        loc: {
          start: {
            line: 484,
            column: 16
          },
          end: {
            line: 484,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 16
          },
          end: {
            line: 484,
            column: 54
          }
        }, {
          start: {
            line: 484,
            column: 58
          },
          end: {
            line: 484,
            column: 71
          }
        }],
        line: 484
      },
      "56": {
        loc: {
          start: {
            line: 492,
            column: 19
          },
          end: {
            line: 492,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 492,
            column: 20
          },
          end: {
            line: 492,
            column: 118
          }
        }, {
          start: {
            line: 492,
            column: 123
          },
          end: {
            line: 492,
            column: 127
          }
        }],
        line: 492
      },
      "57": {
        loc: {
          start: {
            line: 492,
            column: 20
          },
          end: {
            line: 492,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 492,
            column: 78
          },
          end: {
            line: 492,
            column: 84
          }
        }, {
          start: {
            line: 492,
            column: 87
          },
          end: {
            line: 492,
            column: 118
          }
        }],
        line: 492
      },
      "58": {
        loc: {
          start: {
            line: 492,
            column: 20
          },
          end: {
            line: 492,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 492,
            column: 20
          },
          end: {
            line: 492,
            column: 58
          }
        }, {
          start: {
            line: 492,
            column: 62
          },
          end: {
            line: 492,
            column: 75
          }
        }],
        line: 492
      },
      "59": {
        loc: {
          start: {
            line: 501,
            column: 19
          },
          end: {
            line: 501,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 119
          }
        }, {
          start: {
            line: 501,
            column: 124
          },
          end: {
            line: 501,
            column: 128
          }
        }],
        line: 501
      },
      "60": {
        loc: {
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 501,
            column: 78
          },
          end: {
            line: 501,
            column: 84
          }
        }, {
          start: {
            line: 501,
            column: 87
          },
          end: {
            line: 501,
            column: 119
          }
        }],
        line: 501
      },
      "61": {
        loc: {
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 20
          },
          end: {
            line: 501,
            column: 58
          }
        }, {
          start: {
            line: 501,
            column: 62
          },
          end: {
            line: 501,
            column: 75
          }
        }],
        line: 501
      },
      "62": {
        loc: {
          start: {
            line: 509,
            column: 15
          },
          end: {
            line: 509,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 16
          },
          end: {
            line: 509,
            column: 110
          }
        }, {
          start: {
            line: 509,
            column: 115
          },
          end: {
            line: 509,
            column: 119
          }
        }],
        line: 509
      },
      "63": {
        loc: {
          start: {
            line: 509,
            column: 16
          },
          end: {
            line: 509,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 509,
            column: 70
          },
          end: {
            line: 509,
            column: 76
          }
        }, {
          start: {
            line: 509,
            column: 79
          },
          end: {
            line: 509,
            column: 110
          }
        }],
        line: 509
      },
      "64": {
        loc: {
          start: {
            line: 509,
            column: 16
          },
          end: {
            line: 509,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 16
          },
          end: {
            line: 509,
            column: 50
          }
        }, {
          start: {
            line: 509,
            column: 54
          },
          end: {
            line: 509,
            column: 67
          }
        }],
        line: 509
      },
      "65": {
        loc: {
          start: {
            line: 516,
            column: 15
          },
          end: {
            line: 516,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 516,
            column: 109
          }
        }, {
          start: {
            line: 516,
            column: 114
          },
          end: {
            line: 516,
            column: 118
          }
        }],
        line: 516
      },
      "66": {
        loc: {
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 516,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 516,
            column: 70
          },
          end: {
            line: 516,
            column: 76
          }
        }, {
          start: {
            line: 516,
            column: 79
          },
          end: {
            line: 516,
            column: 109
          }
        }],
        line: 516
      },
      "67": {
        loc: {
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 516,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 16
          },
          end: {
            line: 516,
            column: 50
          }
        }, {
          start: {
            line: 516,
            column: 54
          },
          end: {
            line: 516,
            column: 67
          }
        }],
        line: 516
      },
      "68": {
        loc: {
          start: {
            line: 523,
            column: 15
          },
          end: {
            line: 523,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 16
          },
          end: {
            line: 523,
            column: 108
          }
        }, {
          start: {
            line: 523,
            column: 113
          },
          end: {
            line: 523,
            column: 118
          }
        }],
        line: 523
      },
      "69": {
        loc: {
          start: {
            line: 523,
            column: 16
          },
          end: {
            line: 523,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 523,
            column: 70
          },
          end: {
            line: 523,
            column: 76
          }
        }, {
          start: {
            line: 523,
            column: 79
          },
          end: {
            line: 523,
            column: 108
          }
        }],
        line: 523
      },
      "70": {
        loc: {
          start: {
            line: 523,
            column: 16
          },
          end: {
            line: 523,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 16
          },
          end: {
            line: 523,
            column: 50
          }
        }, {
          start: {
            line: 523,
            column: 54
          },
          end: {
            line: 523,
            column: 67
          }
        }],
        line: 523
      },
      "71": {
        loc: {
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 537,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 537,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "72": {
        loc: {
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 541,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 8
          },
          end: {
            line: 541,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "73": {
        loc: {
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 545,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 545,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "74": {
        loc: {
          start: {
            line: 573,
            column: 23
          },
          end: {
            line: 573,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 573,
            column: 99
          }
        }, {
          start: {
            line: 573,
            column: 104
          },
          end: {
            line: 573,
            column: 109
          }
        }],
        line: 573
      },
      "75": {
        loc: {
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 573,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 573,
            column: 74
          },
          end: {
            line: 573,
            column: 80
          }
        }, {
          start: {
            line: 573,
            column: 83
          },
          end: {
            line: 573,
            column: 99
          }
        }],
        line: 573
      },
      "76": {
        loc: {
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 573,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 573,
            column: 24
          },
          end: {
            line: 573,
            column: 54
          }
        }, {
          start: {
            line: 573,
            column: 58
          },
          end: {
            line: 573,
            column: 71
          }
        }],
        line: 573
      },
      "77": {
        loc: {
          start: {
            line: 585,
            column: 176
          },
          end: {
            line: 587,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 586,
            column: 22
          },
          end: {
            line: 586,
            column: 31
          }
        }, {
          start: {
            line: 587,
            column: 22
          },
          end: {
            line: 587,
            column: 56
          }
        }],
        line: 585
      },
      "78": {
        loc: {
          start: {
            line: 588,
            column: 16
          },
          end: {
            line: 591,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 16
          },
          end: {
            line: 591,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "79": {
        loc: {
          start: {
            line: 590,
            column: 165
          },
          end: {
            line: 590,
            column: 230
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 590,
            column: 187
          },
          end: {
            line: 590,
            column: 196
          }
        }, {
          start: {
            line: 590,
            column: 199
          },
          end: {
            line: 590,
            column: 230
          }
        }],
        line: 590
      },
      "80": {
        loc: {
          start: {
            line: 594,
            column: 16
          },
          end: {
            line: 606,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 16
          },
          end: {
            line: 606,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 594
      },
      "81": {
        loc: {
          start: {
            line: 616,
            column: 8
          },
          end: {
            line: 621,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 616,
            column: 8
          },
          end: {
            line: 621,
            column: 9
          }
        }, {
          start: {
            line: 619,
            column: 13
          },
          end: {
            line: 621,
            column: 9
          }
        }],
        line: 616
      },
      "82": {
        loc: {
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 625,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 623,
            column: 8
          },
          end: {
            line: 625,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 623
      },
      "83": {
        loc: {
          start: {
            line: 635,
            column: 13
          },
          end: {
            line: 635,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 635,
            column: 23
          },
          end: {
            line: 635,
            column: 24
          }
        }, {
          start: {
            line: 635,
            column: 27
          },
          end: {
            line: 635,
            column: 28
          }
        }],
        line: 635
      },
      "84": {
        loc: {
          start: {
            line: 641,
            column: 27
          },
          end: {
            line: 641,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 641,
            column: 65
          },
          end: {
            line: 641,
            column: 81
          }
        }, {
          start: {
            line: 641,
            column: 84
          },
          end: {
            line: 641,
            column: 97
          }
        }],
        line: 641
      },
      "85": {
        loc: {
          start: {
            line: 664,
            column: 31
          },
          end: {
            line: 664,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 664,
            column: 64
          },
          end: {
            line: 664,
            column: 80
          }
        }, {
          start: {
            line: 664,
            column: 83
          },
          end: {
            line: 664,
            column: 100
          }
        }],
        line: 664
      },
      "86": {
        loc: {
          start: {
            line: 671,
            column: 16
          },
          end: {
            line: 690,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 671,
            column: 16
          },
          end: {
            line: 690,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 671
      },
      "87": {
        loc: {
          start: {
            line: 673,
            column: 20
          },
          end: {
            line: 689,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 673,
            column: 20
          },
          end: {
            line: 689,
            column: 21
          }
        }, {
          start: {
            line: 687,
            column: 25
          },
          end: {
            line: 689,
            column: 21
          }
        }],
        line: 673
      },
      "88": {
        loc: {
          start: {
            line: 675,
            column: 39
          },
          end: {
            line: 677,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 676,
            column: 34
          },
          end: {
            line: 676,
            column: 50
          }
        }, {
          start: {
            line: 677,
            column: 34
          },
          end: {
            line: 677,
            column: 51
          }
        }],
        line: 675
      },
      "89": {
        loc: {
          start: {
            line: 683,
            column: 24
          },
          end: {
            line: 685,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 683,
            column: 24
          },
          end: {
            line: 685,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 683
      },
      "90": {
        loc: {
          start: {
            line: 693,
            column: 37
          },
          end: {
            line: 693,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 693,
            column: 62
          },
          end: {
            line: 693,
            column: 75
          }
        }, {
          start: {
            line: 693,
            column: 78
          },
          end: {
            line: 693,
            column: 91
          }
        }],
        line: 693
      },
      "91": {
        loc: {
          start: {
            line: 702,
            column: 8
          },
          end: {
            line: 715,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 703,
            column: 12
          },
          end: {
            line: 704,
            column: 35
          }
        }, {
          start: {
            line: 705,
            column: 12
          },
          end: {
            line: 706,
            column: 40
          }
        }, {
          start: {
            line: 707,
            column: 12
          },
          end: {
            line: 708,
            column: 38
          }
        }, {
          start: {
            line: 709,
            column: 12
          },
          end: {
            line: 710,
            column: 40
          }
        }, {
          start: {
            line: 711,
            column: 12
          },
          end: {
            line: 712,
            column: 43
          }
        }, {
          start: {
            line: 713,
            column: 12
          },
          end: {
            line: 714,
            column: 42
          }
        }],
        line: 702
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/intelligent-router.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/intelligent-router.ts"],
      sourcesContent: ["/**\n * Intelligent Router - Hybrid Routing for Bedrock Support Operations\n *\n * This module implements intelligent routing decisions between direct Bedrock access\n * and MCP integration based on operation type, priority, latency requirements,\n * and system health status.\n */\n\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { CircuitBreaker } from \"./circuit-breaker\";\nimport {\n  DirectBedrockClient,\n  OperationPriority,\n  OperationType,\n  SupportOperationRequest,\n  SupportOperationResponse,\n} from \"./direct-bedrock-client\";\nimport {\n  GDPRHybridComplianceValidator,\n  HybridRoutingPath,\n} from \"./gdpr-hybrid-compliance-validator\";\nimport { MCPFallbackReliabilitySystem } from \"./mcp-fallback-reliability-system\";\nimport { MCPRouter } from \"./mcp-router\";\n\n// Routing Decision Matrix Configuration\nexport interface RoutingRule {\n  operationType: OperationType;\n  priority: OperationPriority;\n  latencyRequirement: number; // milliseconds\n  primaryRoute: RouteType;\n  fallbackRoute: RouteType | null;\n  healthCheckRequired: boolean;\n}\n\nexport type RouteType = \"direct\" | \"mcp\";\n\n// Routing Decision Result\nexport interface RoutingDecision {\n  selectedRoute: RouteType;\n  reason: string;\n  fallbackAvailable: boolean;\n  estimatedLatency: number;\n  correlationId: string;\n  timestamp: Date;\n}\n\n// Route Health Status\nexport interface RouteHealth {\n  route: RouteType;\n  isHealthy: boolean;\n  latencyMs: number;\n  successRate: number;\n  lastCheck: Date;\n  consecutiveFailures: number;\n}\n\n// Routing Efficiency Metrics\nexport interface RoutingEfficiency {\n  totalRequests: number;\n  directRouteUsage: number;\n  mcpRouteUsage: number;\n  fallbackUsage: number;\n  averageLatency: number;\n  successRate: number;\n  costEfficiency: number;\n  optimizationRecommendations: string[];\n}\n\n// Import MCP Router from implementation\nexport { MCPRouter } from \"./mcp-router\";\n\n/**\n * Intelligent Router for Hybrid Bedrock/MCP Operations\n */\nexport class IntelligentRouter {\n  private directBedrockClient: DirectBedrockClient;\n  private mcpRouter: MCPRouter | null = null;\n  private featureFlags: AiFeatureFlags;\n  private circuitBreaker: CircuitBreaker;\n  private gdprHybridValidator: GDPRHybridComplianceValidator;\n  private auditTrail: AuditTrailSystem;\n  private mcpFallbackSystem: MCPFallbackReliabilitySystem | null = null;\n  private costOptimizer: IntelligentRoutingCostOptimizer | null = null;\n\n  // Routing configuration\n  private routingRules: RoutingRule[];\n  private routeHealthStatus: Map<RouteType, RouteHealth>;\n  private routingMetrics: RoutingEfficiency;\n  private healthCheckInterval?: NodeJS.Timeout;\n\n  // Default routing decision matrix\n  private readonly defaultRoutingRules: RoutingRule[] = [\n    {\n      operationType: \"emergency\",\n      priority: \"critical\",\n      latencyRequirement: 5000, // < 5s\n      primaryRoute: \"direct\",\n      fallbackRoute: null, // No fallback for emergency\n      healthCheckRequired: true,\n    },\n    {\n      operationType: \"infrastructure\",\n      priority: \"critical\",\n      latencyRequirement: 10000, // < 10s\n      primaryRoute: \"direct\",\n      fallbackRoute: \"mcp\",\n      healthCheckRequired: true,\n    },\n    {\n      operationType: \"meta_monitor\",\n      priority: \"high\",\n      latencyRequirement: 15000, // < 15s\n      primaryRoute: \"direct\",\n      fallbackRoute: \"mcp\",\n      healthCheckRequired: true,\n    },\n    {\n      operationType: \"implementation\",\n      priority: \"high\",\n      latencyRequirement: 15000, // < 15s\n      primaryRoute: \"direct\",\n      fallbackRoute: \"mcp\",\n      healthCheckRequired: true,\n    },\n    {\n      operationType: \"standard\",\n      priority: \"medium\",\n      latencyRequirement: 30000, // < 30s\n      primaryRoute: \"mcp\",\n      fallbackRoute: \"direct\",\n      healthCheckRequired: false,\n    },\n  ];\n\n  constructor(directBedrockClient: DirectBedrockClient, mcpRouter?: MCPRouter) {\n    this.directBedrockClient = directBedrockClient;\n    this.mcpRouter = mcpRouter || null;\n    this.featureFlags = new AiFeatureFlags();\n    this.circuitBreaker = new CircuitBreaker({\n      failureThreshold: 3,\n      recoveryTimeout: 30000,\n      halfOpenMaxCalls: 2,\n    });\n    this.gdprHybridValidator = new GDPRHybridComplianceValidator();\n\n    // Initialize audit trail system\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for GDPR compliance\n    });\n\n    // Initialize routing configuration\n    this.routingRules = [...this.defaultRoutingRules];\n    this.routeHealthStatus = new Map();\n    this.routingMetrics = this.initializeMetrics();\n\n    // Initialize MCP fallback reliability system if MCP router is available\n    if (this.mcpRouter) {\n      try {\n        this.mcpFallbackSystem = new MCPFallbackReliabilitySystem(\n          this.mcpRouter\n        );\n      } catch (error) {\n        // In test environments, the class might be mocked\n        console.warn(\"Failed to initialize MCP fallback system:\", error);\n        this.mcpFallbackSystem = null;\n      }\n    }\n\n    // Initialize health monitoring\n    this.initializeHealthMonitoring();\n    this.startHealthMonitoring();\n  }\n\n  /**\n   * Execute support operation with intelligent routing\n   */\n  async executeSupportOperation(\n    request: SupportOperationRequest\n  ): Promise<SupportOperationResponse> {\n    const startTime = Date.now();\n    const correlationId = this.generateCorrelationId();\n\n    try {\n      // Make cost-aware routing decision if cost optimizer is available\n      let decision: RoutingDecision | CostAwareRoutingDecision;\n\n      if (\n        this.costOptimizer &&\n        this.featureFlags.isEnabled(\"intelligent_routing_cost_optimization\")\n      ) {\n        decision = await this.costOptimizer.makeCostAwareRoutingDecision(\n          request\n        );\n        console.log(\n          `[IntelligentRouter] Cost-aware routing: ${\n            decision.selectedRoute\n          } (savings: $${(\n            decision as CostAwareRoutingDecision\n          ).costSavings.toFixed(4)})`\n        );\n      } else {\n        decision = await this.makeRoutingDecision(request, correlationId);\n      }\n\n      // Log routing decision to audit trail\n      await this.auditTrail.logHybridRoutingDecision(\n        correlationId,\n        decision,\n        request.operation,\n        request.priority\n      );\n\n      // Log routing decision (console logging)\n      this.logRoutingDecision(decision, request);\n\n      // Execute operation on selected route\n      const response = await this.executeOnRoute(\n        decision.selectedRoute,\n        request\n      );\n\n      // Update metrics on success\n      this.updateMetrics(decision, response, Date.now() - startTime, true);\n\n      // Add routing information to response\n      const enhancedResponse = {\n        ...response,\n        operationId: `${response.operationId}-${decision.selectedRoute}`,\n      };\n\n      // Add cost information if available\n      if (\"costSavings\" in decision) {\n        (enhancedResponse as any).costSavings = decision.costSavings;\n        (enhancedResponse as any).estimatedCost = decision.estimatedCost;\n      }\n\n      return enhancedResponse;\n    } catch (error) {\n      const latencyMs = Date.now() - startTime;\n\n      // Try fallback if available\n      const fallbackResponse = await this.tryFallback(\n        request,\n        error as Error,\n        correlationId\n      );\n      if (fallbackResponse) {\n        // Log successful fallback to audit trail\n        await this.auditTrail.logIntelligentRoutingFallback(\n          correlationId,\n          \"direct\", // Assuming primary was direct\n          \"mcp\", // Fallback to MCP\n          \"Primary route failed\",\n          request.operation,\n          error instanceof Error ? error.message : \"Unknown error\"\n        );\n\n        this.updateMetrics(\n          {\n            selectedRoute: \"mcp\",\n            reason: \"fallback\",\n            fallbackAvailable: true,\n            estimatedLatency: latencyMs,\n            correlationId,\n            timestamp: new Date(),\n          },\n          fallbackResponse,\n          latencyMs,\n          true\n        );\n        return fallbackResponse;\n      }\n\n      // Update metrics on failure\n      this.updateMetrics(\n        {\n          selectedRoute: \"direct\",\n          reason: \"error\",\n          fallbackAvailable: false,\n          estimatedLatency: latencyMs,\n          correlationId,\n          timestamp: new Date(),\n        },\n        null,\n        latencyMs,\n        false\n      );\n\n      // Return error response\n      return {\n        success: false,\n        latencyMs,\n        error: error instanceof Error ? error.message : \"Unknown routing error\",\n        operationId: `${correlationId}-error`,\n        timestamp: new Date(),\n      };\n    }\n  }\n\n  /**\n   * Make intelligent routing decision based on rules and health\n   */\n  async makeRoutingDecision(\n    request: SupportOperationRequest,\n    correlationId: string\n  ): Promise<RoutingDecision> {\n    // Find matching routing rule\n    const rule = this.findMatchingRule(request);\n    if (!rule) {\n      throw new Error(\n        `No routing rule found for operation: ${request.operation}`\n      );\n    }\n\n    // Validate GDPR compliance for the intended routing path\n    await this.validateGDPRComplianceForRouting(request, rule, correlationId);\n\n    // Check if intelligent routing is enabled\n    if (!this.featureFlags.isEnabled(\"ENABLE_INTELLIGENT_ROUTING\")) {\n      return {\n        selectedRoute: \"mcp\", // Default to MCP when intelligent routing disabled\n        reason: \"Intelligent routing disabled, using MCP\",\n        fallbackAvailable: false,\n        estimatedLatency: 30000,\n        correlationId,\n        timestamp: new Date(),\n      };\n    }\n\n    // Check primary route health\n    const primaryRouteHealth = await this.checkRouteHealth(rule.primaryRoute);\n\n    // If primary route is healthy, use it\n    if (primaryRouteHealth.isHealthy) {\n      return {\n        selectedRoute: rule.primaryRoute,\n        reason: `Primary route (${rule.primaryRoute}) is healthy`,\n        fallbackAvailable: rule.fallbackRoute !== null,\n        estimatedLatency: primaryRouteHealth.latencyMs,\n        correlationId,\n        timestamp: new Date(),\n      };\n    }\n\n    // Primary route unhealthy, try fallback\n    if (rule.fallbackRoute) {\n      const fallbackRouteHealth = await this.checkRouteHealth(\n        rule.fallbackRoute\n      );\n\n      if (fallbackRouteHealth.isHealthy) {\n        return {\n          selectedRoute: rule.fallbackRoute,\n          reason: `Primary route unhealthy, using fallback (${rule.fallbackRoute})`,\n          fallbackAvailable: false, // Already using fallback\n          estimatedLatency: fallbackRouteHealth.latencyMs,\n          correlationId,\n          timestamp: new Date(),\n        };\n      }\n    }\n\n    // Both routes unhealthy or no fallback available\n    if (request.operation === \"emergency\") {\n      // For emergency operations, force direct route even if unhealthy\n      return {\n        selectedRoute: \"direct\",\n        reason:\n          \"Emergency operation - forcing direct route despite health issues\",\n        fallbackAvailable: false,\n        estimatedLatency: 5000,\n        correlationId,\n        timestamp: new Date(),\n      };\n    }\n\n    // Default to primary route and let circuit breaker handle failures\n    return {\n      selectedRoute: rule.primaryRoute,\n      reason:\n        \"All routes unhealthy, using primary route with circuit breaker protection\",\n      fallbackAvailable: rule.fallbackRoute !== null,\n      estimatedLatency: rule.latencyRequirement,\n      correlationId,\n      timestamp: new Date(),\n    };\n  }\n\n  /**\n   * Execute operation on selected route\n   */\n  private async executeOnRoute(\n    route: RouteType,\n    request: SupportOperationRequest\n  ): Promise<SupportOperationResponse> {\n    switch (route) {\n      case \"direct\":\n        return await this.directBedrockClient.executeSupportOperation(request);\n\n      case \"mcp\":\n        if (!this.mcpRouter) {\n          throw new Error(\"MCP router not available\");\n        }\n        return await this.mcpRouter.executeSupportOperation(request);\n\n      default:\n        throw new Error(`Unknown route type: ${route}`);\n    }\n  }\n\n  /**\n   * Try fallback route on primary route failure with reliability system\n   */\n  private async tryFallback(\n    request: SupportOperationRequest,\n    primaryError: Error,\n    correlationId: string\n  ): Promise<SupportOperationResponse | null> {\n    const rule = this.findMatchingRule(request);\n    if (!rule || !rule.fallbackRoute) {\n      return null; // No fallback available\n    }\n\n    try {\n      console.log(\n        `Primary route failed (${primaryError.message}), trying fallback: ${rule.fallbackRoute}`\n      );\n\n      // Use MCP fallback reliability system if available and fallback is MCP\n      if (rule.fallbackRoute === \"mcp\" && this.mcpFallbackSystem) {\n        const fallbackResult =\n          await this.mcpFallbackSystem.executeFallbackOperation(\n            request,\n            correlationId,\n            primaryError.message\n          );\n\n        if (fallbackResult.success && fallbackResult.response) {\n          // Add fallback information to response\n          return {\n            ...fallbackResult.response,\n            operationId: `${fallbackResult.response.operationId}-fallback-reliable`,\n          };\n        } else {\n          throw new Error(fallbackResult.error || \"MCP fallback failed\");\n        }\n      } else {\n        // Use standard fallback execution\n        const response = await this.executeOnRoute(rule.fallbackRoute, request);\n\n        // Add fallback information to response\n        return {\n          ...response,\n          operationId: `${response.operationId}-fallback`,\n        };\n      }\n    } catch (fallbackError) {\n      console.error(`Fallback route also failed:`, fallbackError);\n      return null;\n    }\n  }\n\n  /**\n   * Find matching routing rule for request\n   */\n  private findMatchingRule(\n    request: SupportOperationRequest\n  ): RoutingRule | null {\n    const exactMatch = this.routingRules.find(\n      (rule) =>\n        rule.operationType === request.operation &&\n        rule.priority === request.priority\n    );\n\n    if (exactMatch) return exactMatch;\n\n    const operationMatch = this.routingRules.find(\n      (rule) => rule.operationType === request.operation\n    );\n\n    if (operationMatch) return operationMatch;\n\n    // Development fallback for unknown operations\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(\n        `No routing rule found for operation: ${request.operation}, using development fallback`\n      );\n\n      // Create a fallback rule based on operation type\n      const fallbackRoute: RouteType =\n        request.operation === \"emergency\" ||\n        request.operation === \"infrastructure\" ||\n        request.operation === \"meta_monitor\" ||\n        request.operation === \"implementation\"\n          ? \"direct\"\n          : \"mcp\";\n\n      return {\n        operationType: request.operation,\n        priority: request.priority || \"medium\",\n        latencyRequirement: 30000,\n        primaryRoute: fallbackRoute,\n        fallbackRoute: fallbackRoute === \"direct\" ? \"mcp\" : \"direct\",\n        healthCheckRequired: true,\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Check route health status\n   */\n  async checkRouteHealth(route: RouteType): Promise<RouteHealth> {\n    const cached = this.routeHealthStatus.get(route);\n\n    // Return cached status if recent (< 30s)\n    if (cached && Date.now() - cached.lastCheck.getTime() < 30000) {\n      return cached;\n    }\n\n    // Perform fresh health check\n    const startTime = Date.now();\n\n    try {\n      let isHealthy = false;\n      let latencyMs = 0;\n\n      switch (route) {\n        case \"direct\":\n          const directHealth =\n            await this.directBedrockClient.performHealthCheck();\n          isHealthy = directHealth.isHealthy;\n          latencyMs = directHealth.latencyMs;\n          break;\n\n        case \"mcp\":\n          if (this.mcpRouter) {\n            const mcpHealth = await this.mcpRouter.getHealthStatus();\n            isHealthy = mcpHealth.isHealthy;\n            latencyMs = mcpHealth.latencyMs;\n          } else {\n            isHealthy = false;\n            latencyMs = 0;\n          }\n          break;\n      }\n\n      const health: RouteHealth = {\n        route,\n        isHealthy,\n        latencyMs,\n        successRate: isHealthy ? 1.0 : 0.0,\n        lastCheck: new Date(),\n        consecutiveFailures: isHealthy\n          ? 0\n          : (cached?.consecutiveFailures || 0) + 1,\n      };\n\n      // Log health check to audit trail\n      await this.auditTrail.logRouteHealthCheck(\n        route,\n        isHealthy,\n        latencyMs,\n        health.successRate,\n        health.consecutiveFailures,\n        isHealthy ? undefined : `${route} route health check failed`\n      );\n\n      this.routeHealthStatus.set(route, health);\n      return health;\n    } catch (error) {\n      const health: RouteHealth = {\n        route,\n        isHealthy: false,\n        latencyMs: Date.now() - startTime,\n        successRate: 0.0,\n        lastCheck: new Date(),\n        consecutiveFailures: (cached?.consecutiveFailures || 0) + 1,\n      };\n\n      // Log health check failure to audit trail\n      await this.auditTrail.logRouteHealthCheck(\n        route,\n        false,\n        health.latencyMs,\n        health.successRate,\n        health.consecutiveFailures,\n        error instanceof Error\n          ? error.message\n          : `${route} route health check failed`\n      );\n\n      this.routeHealthStatus.set(route, health);\n      return health;\n    }\n  }\n\n  /**\n   * Get routing efficiency metrics\n   */\n  getRoutingEfficiency(): RoutingEfficiency {\n    return { ...this.routingMetrics };\n  }\n\n  /**\n   * Get current route health status\n   */\n  getRouteHealthStatus(): Map<RouteType, RouteHealth> {\n    return new Map(this.routeHealthStatus);\n  }\n\n  /**\n   * Optimize routing configuration based on metrics\n   */\n  async optimizeRouting(): Promise<string[]> {\n    const recommendations: string[] = [];\n    const efficiency = this.routingMetrics;\n\n    // Analyze routing patterns\n    if (efficiency.totalRequests > 100) {\n      // Check if direct route is underutilized\n      const directUsagePercent =\n        (efficiency.directRouteUsage / efficiency.totalRequests) * 100;\n      if (directUsagePercent < 30 && efficiency.averageLatency > 15000) {\n        recommendations.push(\n          \"Consider routing more operations to direct Bedrock for better latency\"\n        );\n      }\n\n      // Check if MCP route is overloaded\n      const mcpUsagePercent =\n        (efficiency.mcpRouteUsage / efficiency.totalRequests) * 100;\n      if (mcpUsagePercent > 80 && efficiency.successRate < 0.95) {\n        recommendations.push(\n          \"Consider load balancing by routing more operations to direct Bedrock\"\n        );\n      }\n\n      // Check fallback usage\n      const fallbackPercent =\n        (efficiency.fallbackUsage / efficiency.totalRequests) * 100;\n      if (fallbackPercent > 20) {\n        recommendations.push(\n          \"High fallback usage detected - investigate primary route health issues\"\n        );\n      }\n\n      // Check cost efficiency\n      if (efficiency.costEfficiency < 0.7) {\n        recommendations.push(\n          \"Route more standard operations to MCP to reduce direct Bedrock costs\"\n        );\n      }\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Update routing rules (for dynamic configuration)\n   */\n  updateRoutingRules(newRules: RoutingRule[]): void {\n    this.routingRules = [...newRules];\n    console.log(\"Routing rules updated:\", this.routingRules.length);\n  }\n\n  /**\n   * Set MCP router (for late initialization)\n   */\n  setMCPRouter(mcpRouter: MCPRouter): void {\n    this.mcpRouter = mcpRouter;\n\n    // Initialize MCP fallback reliability system\n    if (!this.mcpFallbackSystem) {\n      try {\n        this.mcpFallbackSystem = new MCPFallbackReliabilitySystem(mcpRouter);\n      } catch (error) {\n        // In test environments, the class might be mocked\n        console.warn(\"Failed to initialize MCP fallback system:\", error);\n        this.mcpFallbackSystem = null;\n      }\n    }\n\n    console.log(\"MCP router configured with fallback reliability system\");\n  }\n\n  /**\n   * Set cost optimizer (for cost-aware routing)\n   */\n  setCostOptimizer(costOptimizer: IntelligentRoutingCostOptimizer): void {\n    this.costOptimizer = costOptimizer;\n    console.log(\"Cost optimizer configured for intelligent routing\");\n  }\n\n  /**\n   * Get MCP fallback metrics\n   */\n  getMCPFallbackMetrics(): MCPFallbackMetrics | null {\n    return this.mcpFallbackSystem?.getFallbackMetrics() || null;\n  }\n\n  /**\n   * Validate MCP fallback reliability targets\n   */\n  async validateMCPFallbackReliability(): Promise<{\n    meetsTarget: boolean;\n    currentSuccessRate: number;\n    targetSuccessRate: number;\n    recommendations: string[];\n  } | null> {\n    return this.mcpFallbackSystem?.validateReliabilityTargets() || null;\n  }\n\n  /**\n   * Force MCP fallback health check and recovery\n   */\n  async forceMCPFallbackRecovery(): Promise<{\n    healthImproved: boolean;\n    actions: string[];\n  } | null> {\n    return this.mcpFallbackSystem?.forceHealthCheckAndRecovery() || null;\n  }\n\n  /**\n   * Get cost optimization metrics\n   */\n  getCostOptimizationMetrics(): any | null {\n    return this.costOptimizer?.getCostOptimizationMetrics() || null;\n  }\n\n  /**\n   * Get cost optimization status\n   */\n  getCostOptimizationStatus(): any | null {\n    return this.costOptimizer?.getCostOptimizationStatus() || null;\n  }\n\n  /**\n   * Check if cost reduction target is met\n   */\n  isCostReductionTargetMet(): boolean {\n    return this.costOptimizer?.isCostReductionTargetMet() || false;\n  }\n\n  /**\n   * Get current routing rules\n   */\n  getRoutingRules(): RoutingRule[] {\n    return [...this.routingRules];\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n    }\n\n    // Cleanup MCP fallback system\n    if (this.mcpFallbackSystem) {\n      this.mcpFallbackSystem.destroy();\n    }\n\n    // Cleanup cost optimizer\n    if (this.costOptimizer) {\n      this.costOptimizer.destroy();\n    }\n  }\n\n  // Private helper methods\n\n  private initializeMetrics(): RoutingEfficiency {\n    return {\n      totalRequests: 0,\n      directRouteUsage: 0,\n      mcpRouteUsage: 0,\n      fallbackUsage: 0,\n      averageLatency: 0,\n      successRate: 1.0,\n      costEfficiency: 1.0,\n      optimizationRecommendations: [],\n    };\n  }\n\n  private initializeHealthMonitoring(): void {\n    // Initialize health status for both routes\n    this.routeHealthStatus.set(\"direct\", {\n      route: \"direct\",\n      isHealthy: true,\n      latencyMs: 0,\n      successRate: 1.0,\n      lastCheck: new Date(),\n      consecutiveFailures: 0,\n    });\n\n    this.routeHealthStatus.set(\"mcp\", {\n      route: \"mcp\",\n      isHealthy: this.mcpRouter?.isAvailable() || false,\n      latencyMs: 0,\n      successRate: 1.0,\n      lastCheck: new Date(),\n      consecutiveFailures: 0,\n    });\n  }\n\n  private startHealthMonitoring(): void {\n    this.healthCheckInterval = setInterval(async () => {\n      try {\n        // Check both routes and log health status\n        const directHealth = await this.checkRouteHealth(\"direct\");\n        await this.auditTrail.logRouteHealthCheck(\n          \"direct\",\n          directHealth.isHealthy,\n          directHealth.latencyMs,\n          directHealth.successRate,\n          directHealth.consecutiveFailures,\n          directHealth.isHealthy\n            ? undefined\n            : \"Direct route health check failed\"\n        );\n\n        if (this.mcpRouter) {\n          const mcpHealth = await this.checkRouteHealth(\"mcp\");\n          await this.auditTrail.logRouteHealthCheck(\n            \"mcp\",\n            mcpHealth.isHealthy,\n            mcpHealth.latencyMs,\n            mcpHealth.successRate,\n            mcpHealth.consecutiveFailures,\n            mcpHealth.isHealthy ? undefined : \"MCP route health check failed\"\n          );\n        }\n\n        // Run optimization analysis\n        const recommendations = await this.optimizeRouting();\n        if (recommendations.length > 0) {\n          this.routingMetrics.optimizationRecommendations = recommendations;\n\n          // Log routing optimization to audit trail\n          await this.auditTrail.logRoutingOptimization(recommendations, {\n            totalRequests: this.routingMetrics.totalRequests,\n            directRouteUsage: this.routingMetrics.directRouteUsage,\n            mcpRouteUsage: this.routingMetrics.mcpRouteUsage,\n            fallbackUsage: this.routingMetrics.fallbackUsage,\n            averageLatency: this.routingMetrics.averageLatency,\n            successRate: this.routingMetrics.successRate,\n          });\n\n          console.log(\"Routing optimization recommendations:\", recommendations);\n        }\n      } catch (error) {\n        console.error(\"Health monitoring error:\", error);\n      }\n    }, 60000); // Check every minute\n  }\n\n  private updateMetrics(\n    decision: RoutingDecision,\n    response: SupportOperationResponse | null,\n    latencyMs: number,\n    success: boolean\n  ): void {\n    this.routingMetrics.totalRequests++;\n\n    // Update route usage\n    if (decision.selectedRoute === \"direct\") {\n      this.routingMetrics.directRouteUsage++;\n    } else {\n      this.routingMetrics.mcpRouteUsage++;\n    }\n\n    // Update fallback usage\n    if (decision.reason.includes(\"fallback\")) {\n      this.routingMetrics.fallbackUsage++;\n    }\n\n    // Update average latency (rolling average)\n    const totalLatency =\n      this.routingMetrics.averageLatency *\n        (this.routingMetrics.totalRequests - 1) +\n      latencyMs;\n    this.routingMetrics.averageLatency =\n      totalLatency / this.routingMetrics.totalRequests;\n\n    // Update success rate (rolling average)\n    const totalSuccess =\n      this.routingMetrics.successRate *\n        (this.routingMetrics.totalRequests - 1) +\n      (success ? 1 : 0);\n    this.routingMetrics.successRate =\n      totalSuccess / this.routingMetrics.totalRequests;\n\n    // Update cost efficiency (simplified calculation)\n    const directCostWeight = 1.0; // Direct Bedrock costs more\n    const mcpCostWeight = 0.3; // MCP is cheaper\n    const costWeight =\n      decision.selectedRoute === \"direct\" ? directCostWeight : mcpCostWeight;\n    const totalCost =\n      this.routingMetrics.costEfficiency *\n        (this.routingMetrics.totalRequests - 1) +\n      costWeight;\n    this.routingMetrics.costEfficiency =\n      totalCost / this.routingMetrics.totalRequests;\n  }\n\n  private logRoutingDecision(\n    decision: RoutingDecision,\n    request: SupportOperationRequest\n  ): void {\n    console.log(\n      `[IntelligentRouter] ${decision.correlationId}: ${request.operation}/${request.priority} -> ${decision.selectedRoute} (${decision.reason})`\n    );\n  }\n\n  private generateCorrelationId(): string {\n    return `router-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Validate GDPR compliance for routing decision\n   */\n  private async validateGDPRComplianceForRouting(\n    request: SupportOperationRequest,\n    rule: RoutingRule,\n    correlationId: string\n  ): Promise<void> {\n    try {\n      // Map operation type to hybrid routing path operation type\n      const operationType = this.mapOperationTypeToHybridPath(\n        request.operation\n      );\n\n      // Create routing path for primary route\n      const primaryRoutingPath: HybridRoutingPath = {\n        routeType:\n          rule.primaryRoute === \"direct\" ? \"direct_bedrock\" : \"mcp_integration\",\n        provider: \"bedrock\", // Default to bedrock for support operations\n        operationType,\n        priority: rule.priority,\n      };\n\n      // Validate GDPR compliance for primary route\n      const primaryValidation =\n        await this.gdprHybridValidator.validateBeforeRouting(\n          primaryRoutingPath,\n          `${correlationId}-primary`\n        );\n\n      if (!primaryValidation.allowed) {\n        // If primary route fails GDPR validation, check fallback\n        if (rule.fallbackRoute) {\n          const fallbackRoutingPath: HybridRoutingPath = {\n            routeType:\n              rule.fallbackRoute === \"direct\"\n                ? \"direct_bedrock\"\n                : \"mcp_integration\",\n            provider: \"bedrock\",\n            operationType,\n            priority: rule.priority,\n          };\n\n          const fallbackValidation =\n            await this.gdprHybridValidator.validateBeforeRouting(\n              fallbackRoutingPath,\n              `${correlationId}-fallback`\n            );\n\n          if (!fallbackValidation.allowed) {\n            throw new Error(\n              `Both primary and fallback routes fail GDPR compliance: Primary: ${primaryValidation.reason}, Fallback: ${fallbackValidation.reason}`\n            );\n          }\n        } else {\n          throw new Error(\n            `Primary route fails GDPR compliance and no fallback available: ${primaryValidation.reason}`\n          );\n        }\n      }\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n      throw new Error(\n        `GDPR compliance validation failed for routing: ${errorMessage}`\n      );\n    }\n  }\n\n  /**\n   * Map operation type to hybrid routing path operation type\n   */\n  private mapOperationTypeToHybridPath(\n    operation: OperationType\n  ): HybridRoutingPath[\"operationType\"] {\n    switch (operation) {\n      case \"emergency\":\n        return \"emergency\";\n      case \"infrastructure\":\n        return \"infrastructure\";\n      case \"meta_monitor\":\n        return \"meta_monitor\";\n      case \"implementation\":\n        return \"implementation\";\n      case \"standard\":\n        return \"standard_analysis\";\n      default:\n        return \"background_tasks\";\n    }\n  }\n}\n\n// Types are already exported as interfaces above\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "91dcbb3e7814e09788c7eb853a2f729489ba2c2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tpwcygpgi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tpwcygpgi();
cov_1tpwcygpgi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1tpwcygpgi().s[1]++;
exports.IntelligentRouter = exports.MCPRouter = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[2]++, require("tslib"));
const ai_feature_flags_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[3]++, require("./ai-feature-flags"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[4]++, require("./audit-trail-system"));
const circuit_breaker_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[5]++, require("./circuit-breaker"));
const gdpr_hybrid_compliance_validator_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[6]++, require("./gdpr-hybrid-compliance-validator"));
const mcp_fallback_reliability_system_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[7]++, require("./mcp-fallback-reliability-system"));
// Import MCP Router from implementation
var mcp_router_1 =
/* istanbul ignore next */
(cov_1tpwcygpgi().s[8]++, require("./mcp-router"));
/* istanbul ignore next */
cov_1tpwcygpgi().s[9]++;
Object.defineProperty(exports, "MCPRouter", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[0]++;
    cov_1tpwcygpgi().s[10]++;
    return mcp_router_1.MCPRouter;
  }
});
/**
 * Intelligent Router for Hybrid Bedrock/MCP Operations
 */
class IntelligentRouter {
  constructor(directBedrockClient, mcpRouter) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[1]++;
    cov_1tpwcygpgi().s[11]++;
    this.mcpRouter = null;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[12]++;
    this.mcpFallbackSystem = null;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[13]++;
    this.costOptimizer = null;
    // Default routing decision matrix
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[14]++;
    this.defaultRoutingRules = [{
      operationType: "emergency",
      priority: "critical",
      latencyRequirement: 5000,
      // < 5s
      primaryRoute: "direct",
      fallbackRoute: null,
      // No fallback for emergency
      healthCheckRequired: true
    }, {
      operationType: "infrastructure",
      priority: "critical",
      latencyRequirement: 10000,
      // < 10s
      primaryRoute: "direct",
      fallbackRoute: "mcp",
      healthCheckRequired: true
    }, {
      operationType: "meta_monitor",
      priority: "high",
      latencyRequirement: 15000,
      // < 15s
      primaryRoute: "direct",
      fallbackRoute: "mcp",
      healthCheckRequired: true
    }, {
      operationType: "implementation",
      priority: "high",
      latencyRequirement: 15000,
      // < 15s
      primaryRoute: "direct",
      fallbackRoute: "mcp",
      healthCheckRequired: true
    }, {
      operationType: "standard",
      priority: "medium",
      latencyRequirement: 30000,
      // < 30s
      primaryRoute: "mcp",
      fallbackRoute: "direct",
      healthCheckRequired: false
    }];
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[15]++;
    this.directBedrockClient = directBedrockClient;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[16]++;
    this.mcpRouter =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[0][0]++, mcpRouter) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[0][1]++, null);
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[17]++;
    this.featureFlags = new ai_feature_flags_1.AiFeatureFlags();
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[18]++;
    this.circuitBreaker = new circuit_breaker_1.CircuitBreaker({
      failureThreshold: 3,
      recoveryTimeout: 30000,
      halfOpenMaxCalls: 2
    });
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[19]++;
    this.gdprHybridValidator = new gdpr_hybrid_compliance_validator_1.GDPRHybridComplianceValidator();
    // Initialize audit trail system
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[20]++;
    this.auditTrail = new audit_trail_system_1.AuditTrailSystem({
      complianceMode: "strict",
      enableIntegrityChecking: true,
      retentionDays: 2555 // 7 years for GDPR compliance
    });
    // Initialize routing configuration
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[21]++;
    this.routingRules = [...this.defaultRoutingRules];
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[22]++;
    this.routeHealthStatus = new Map();
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[23]++;
    this.routingMetrics = this.initializeMetrics();
    // Initialize MCP fallback reliability system if MCP router is available
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[24]++;
    if (this.mcpRouter) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[1][0]++;
      cov_1tpwcygpgi().s[25]++;
      try {
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[26]++;
        this.mcpFallbackSystem = new mcp_fallback_reliability_system_1.MCPFallbackReliabilitySystem(this.mcpRouter);
      } catch (error) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[27]++;
        // In test environments, the class might be mocked
        console.warn("Failed to initialize MCP fallback system:", error);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[28]++;
        this.mcpFallbackSystem = null;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[1][1]++;
    }
    // Initialize health monitoring
    cov_1tpwcygpgi().s[29]++;
    this.initializeHealthMonitoring();
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[30]++;
    this.startHealthMonitoring();
  }
  /**
   * Execute support operation with intelligent routing
   */
  executeSupportOperation(request) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[2]++;
    cov_1tpwcygpgi().s[31]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[3]++;
      const startTime =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[32]++, Date.now());
      const correlationId =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[33]++, this.generateCorrelationId());
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[34]++;
      try {
        // Make cost-aware routing decision if cost optimizer is available
        let decision;
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[35]++;
        if (
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[3][0]++, this.costOptimizer) &&
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[3][1]++, this.featureFlags.isEnabled("intelligent_routing_cost_optimization"))) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[2][0]++;
          cov_1tpwcygpgi().s[36]++;
          decision = yield this.costOptimizer.makeCostAwareRoutingDecision(request);
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[37]++;
          console.log(`[IntelligentRouter] Cost-aware routing: ${decision.selectedRoute} (savings: $${decision.costSavings.toFixed(4)})`);
        } else {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[2][1]++;
          cov_1tpwcygpgi().s[38]++;
          decision = yield this.makeRoutingDecision(request, correlationId);
        }
        // Log routing decision to audit trail
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[39]++;
        yield this.auditTrail.logHybridRoutingDecision(correlationId, decision, request.operation, request.priority);
        // Log routing decision (console logging)
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[40]++;
        this.logRoutingDecision(decision, request);
        // Execute operation on selected route
        const response =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[41]++, yield this.executeOnRoute(decision.selectedRoute, request));
        // Update metrics on success
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[42]++;
        this.updateMetrics(decision, response, Date.now() - startTime, true);
        // Add routing information to response
        const enhancedResponse =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[43]++, Object.assign(Object.assign({}, response), {
          operationId: `${response.operationId}-${decision.selectedRoute}`
        }));
        // Add cost information if available
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[44]++;
        if ("costSavings" in decision) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[4][0]++;
          cov_1tpwcygpgi().s[45]++;
          enhancedResponse.costSavings = decision.costSavings;
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[46]++;
          enhancedResponse.estimatedCost = decision.estimatedCost;
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[4][1]++;
        }
        cov_1tpwcygpgi().s[47]++;
        return enhancedResponse;
      } catch (error) {
        const latencyMs =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[48]++, Date.now() - startTime);
        // Try fallback if available
        const fallbackResponse =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[49]++, yield this.tryFallback(request, error, correlationId));
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[50]++;
        if (fallbackResponse) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[5][0]++;
          cov_1tpwcygpgi().s[51]++;
          // Log successful fallback to audit trail
          yield this.auditTrail.logIntelligentRoutingFallback(correlationId, "direct",
          // Assuming primary was direct
          "mcp",
          // Fallback to MCP
          "Primary route failed", request.operation, error instanceof Error ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[6][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[6][1]++, "Unknown error"));
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[52]++;
          this.updateMetrics({
            selectedRoute: "mcp",
            reason: "fallback",
            fallbackAvailable: true,
            estimatedLatency: latencyMs,
            correlationId,
            timestamp: new Date()
          }, fallbackResponse, latencyMs, true);
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[53]++;
          return fallbackResponse;
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[5][1]++;
        }
        // Update metrics on failure
        cov_1tpwcygpgi().s[54]++;
        this.updateMetrics({
          selectedRoute: "direct",
          reason: "error",
          fallbackAvailable: false,
          estimatedLatency: latencyMs,
          correlationId,
          timestamp: new Date()
        }, null, latencyMs, false);
        // Return error response
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[55]++;
        return {
          success: false,
          latencyMs,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[7][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[7][1]++, "Unknown routing error"),
          operationId: `${correlationId}-error`,
          timestamp: new Date()
        };
      }
    });
  }
  /**
   * Make intelligent routing decision based on rules and health
   */
  makeRoutingDecision(request, correlationId) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[4]++;
    cov_1tpwcygpgi().s[56]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[5]++;
      // Find matching routing rule
      const rule =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[57]++, this.findMatchingRule(request));
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[58]++;
      if (!rule) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[8][0]++;
        cov_1tpwcygpgi().s[59]++;
        throw new Error(`No routing rule found for operation: ${request.operation}`);
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[8][1]++;
      }
      // Validate GDPR compliance for the intended routing path
      cov_1tpwcygpgi().s[60]++;
      yield this.validateGDPRComplianceForRouting(request, rule, correlationId);
      // Check if intelligent routing is enabled
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[61]++;
      if (!this.featureFlags.isEnabled("ENABLE_INTELLIGENT_ROUTING")) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[9][0]++;
        cov_1tpwcygpgi().s[62]++;
        return {
          selectedRoute: "mcp",
          // Default to MCP when intelligent routing disabled
          reason: "Intelligent routing disabled, using MCP",
          fallbackAvailable: false,
          estimatedLatency: 30000,
          correlationId,
          timestamp: new Date()
        };
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[9][1]++;
      }
      // Check primary route health
      const primaryRouteHealth =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[63]++, yield this.checkRouteHealth(rule.primaryRoute));
      // If primary route is healthy, use it
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[64]++;
      if (primaryRouteHealth.isHealthy) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[10][0]++;
        cov_1tpwcygpgi().s[65]++;
        return {
          selectedRoute: rule.primaryRoute,
          reason: `Primary route (${rule.primaryRoute}) is healthy`,
          fallbackAvailable: rule.fallbackRoute !== null,
          estimatedLatency: primaryRouteHealth.latencyMs,
          correlationId,
          timestamp: new Date()
        };
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[10][1]++;
      }
      // Primary route unhealthy, try fallback
      cov_1tpwcygpgi().s[66]++;
      if (rule.fallbackRoute) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[11][0]++;
        const fallbackRouteHealth =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[67]++, yield this.checkRouteHealth(rule.fallbackRoute));
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[68]++;
        if (fallbackRouteHealth.isHealthy) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[12][0]++;
          cov_1tpwcygpgi().s[69]++;
          return {
            selectedRoute: rule.fallbackRoute,
            reason: `Primary route unhealthy, using fallback (${rule.fallbackRoute})`,
            fallbackAvailable: false,
            // Already using fallback
            estimatedLatency: fallbackRouteHealth.latencyMs,
            correlationId,
            timestamp: new Date()
          };
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[11][1]++;
      }
      // Both routes unhealthy or no fallback available
      cov_1tpwcygpgi().s[70]++;
      if (request.operation === "emergency") {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[13][0]++;
        cov_1tpwcygpgi().s[71]++;
        // For emergency operations, force direct route even if unhealthy
        return {
          selectedRoute: "direct",
          reason: "Emergency operation - forcing direct route despite health issues",
          fallbackAvailable: false,
          estimatedLatency: 5000,
          correlationId,
          timestamp: new Date()
        };
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[13][1]++;
      }
      // Default to primary route and let circuit breaker handle failures
      cov_1tpwcygpgi().s[72]++;
      return {
        selectedRoute: rule.primaryRoute,
        reason: "All routes unhealthy, using primary route with circuit breaker protection",
        fallbackAvailable: rule.fallbackRoute !== null,
        estimatedLatency: rule.latencyRequirement,
        correlationId,
        timestamp: new Date()
      };
    });
  }
  /**
   * Execute operation on selected route
   */
  executeOnRoute(route, request) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[6]++;
    cov_1tpwcygpgi().s[73]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[7]++;
      cov_1tpwcygpgi().s[74]++;
      switch (route) {
        case "direct":
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[14][0]++;
          cov_1tpwcygpgi().s[75]++;
          return yield this.directBedrockClient.executeSupportOperation(request);
        case "mcp":
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[14][1]++;
          cov_1tpwcygpgi().s[76]++;
          if (!this.mcpRouter) {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[15][0]++;
            cov_1tpwcygpgi().s[77]++;
            throw new Error("MCP router not available");
          } else
          /* istanbul ignore next */
          {
            cov_1tpwcygpgi().b[15][1]++;
          }
          cov_1tpwcygpgi().s[78]++;
          return yield this.mcpRouter.executeSupportOperation(request);
        default:
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[14][2]++;
          cov_1tpwcygpgi().s[79]++;
          throw new Error(`Unknown route type: ${route}`);
      }
    });
  }
  /**
   * Try fallback route on primary route failure with reliability system
   */
  tryFallback(request, primaryError, correlationId) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[8]++;
    cov_1tpwcygpgi().s[80]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[9]++;
      const rule =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[81]++, this.findMatchingRule(request));
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[17][0]++, !rule) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[17][1]++, !rule.fallbackRoute)) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[16][0]++;
        cov_1tpwcygpgi().s[83]++;
        return null; // No fallback available
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[16][1]++;
      }
      cov_1tpwcygpgi().s[84]++;
      try {
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[85]++;
        console.log(`Primary route failed (${primaryError.message}), trying fallback: ${rule.fallbackRoute}`);
        // Use MCP fallback reliability system if available and fallback is MCP
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[86]++;
        if (
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[19][0]++, rule.fallbackRoute === "mcp") &&
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[19][1]++, this.mcpFallbackSystem)) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[18][0]++;
          const fallbackResult =
          /* istanbul ignore next */
          (cov_1tpwcygpgi().s[87]++, yield this.mcpFallbackSystem.executeFallbackOperation(request, correlationId, primaryError.message));
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[88]++;
          if (
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[21][0]++, fallbackResult.success) &&
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[21][1]++, fallbackResult.response)) {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[20][0]++;
            cov_1tpwcygpgi().s[89]++;
            // Add fallback information to response
            return Object.assign(Object.assign({}, fallbackResult.response), {
              operationId: `${fallbackResult.response.operationId}-fallback-reliable`
            });
          } else {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[20][1]++;
            cov_1tpwcygpgi().s[90]++;
            throw new Error(
            /* istanbul ignore next */
            (cov_1tpwcygpgi().b[22][0]++, fallbackResult.error) ||
            /* istanbul ignore next */
            (cov_1tpwcygpgi().b[22][1]++, "MCP fallback failed"));
          }
        } else {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[18][1]++;
          // Use standard fallback execution
          const response =
          /* istanbul ignore next */
          (cov_1tpwcygpgi().s[91]++, yield this.executeOnRoute(rule.fallbackRoute, request));
          // Add fallback information to response
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[92]++;
          return Object.assign(Object.assign({}, response), {
            operationId: `${response.operationId}-fallback`
          });
        }
      } catch (fallbackError) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[93]++;
        console.error(`Fallback route also failed:`, fallbackError);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[94]++;
        return null;
      }
    });
  }
  /**
   * Find matching routing rule for request
   */
  findMatchingRule(request) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[10]++;
    const exactMatch =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[95]++, this.routingRules.find(rule => {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[11]++;
      cov_1tpwcygpgi().s[96]++;
      return /* istanbul ignore next */(cov_1tpwcygpgi().b[23][0]++, rule.operationType === request.operation) &&
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[23][1]++, rule.priority === request.priority);
    }));
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[97]++;
    if (exactMatch) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[24][0]++;
      cov_1tpwcygpgi().s[98]++;
      return exactMatch;
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[24][1]++;
    }
    const operationMatch =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[99]++, this.routingRules.find(rule => {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[12]++;
      cov_1tpwcygpgi().s[100]++;
      return rule.operationType === request.operation;
    }));
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[101]++;
    if (operationMatch) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[25][0]++;
      cov_1tpwcygpgi().s[102]++;
      return operationMatch;
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[25][1]++;
    }
    // Development fallback for unknown operations
    cov_1tpwcygpgi().s[103]++;
    if (process.env.NODE_ENV === "development") {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[26][0]++;
      cov_1tpwcygpgi().s[104]++;
      console.warn(`No routing rule found for operation: ${request.operation}, using development fallback`);
      // Create a fallback rule based on operation type
      const fallbackRoute =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[105]++,
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[28][0]++, request.operation === "emergency") ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[28][1]++, request.operation === "infrastructure") ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[28][2]++, request.operation === "meta_monitor") ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[28][3]++, request.operation === "implementation") ?
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[27][0]++, "direct") :
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[27][1]++, "mcp"));
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[106]++;
      return {
        operationType: request.operation,
        priority:
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[29][0]++, request.priority) ||
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[29][1]++, "medium"),
        latencyRequirement: 30000,
        primaryRoute: fallbackRoute,
        fallbackRoute: fallbackRoute === "direct" ?
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[30][0]++, "mcp") :
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[30][1]++, "direct"),
        healthCheckRequired: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[26][1]++;
    }
    cov_1tpwcygpgi().s[107]++;
    return null;
  }
  /**
   * Check route health status
   */
  checkRouteHealth(route) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[13]++;
    cov_1tpwcygpgi().s[108]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[14]++;
      const cached =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[109]++, this.routeHealthStatus.get(route));
      // Return cached status if recent (< 30s)
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[110]++;
      if (
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[32][0]++, cached) &&
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[32][1]++, Date.now() - cached.lastCheck.getTime() < 30000)) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[31][0]++;
        cov_1tpwcygpgi().s[111]++;
        return cached;
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[31][1]++;
      }
      // Perform fresh health check
      const startTime =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[112]++, Date.now());
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[113]++;
      try {
        let isHealthy =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[114]++, false);
        let latencyMs =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[115]++, 0);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[116]++;
        switch (route) {
          case "direct":
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[33][0]++;
            const directHealth =
            /* istanbul ignore next */
            (cov_1tpwcygpgi().s[117]++, yield this.directBedrockClient.performHealthCheck());
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[118]++;
            isHealthy = directHealth.isHealthy;
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[119]++;
            latencyMs = directHealth.latencyMs;
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[120]++;
            break;
          case "mcp":
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[33][1]++;
            cov_1tpwcygpgi().s[121]++;
            if (this.mcpRouter) {
              /* istanbul ignore next */
              cov_1tpwcygpgi().b[34][0]++;
              const mcpHealth =
              /* istanbul ignore next */
              (cov_1tpwcygpgi().s[122]++, yield this.mcpRouter.getHealthStatus());
              /* istanbul ignore next */
              cov_1tpwcygpgi().s[123]++;
              isHealthy = mcpHealth.isHealthy;
              /* istanbul ignore next */
              cov_1tpwcygpgi().s[124]++;
              latencyMs = mcpHealth.latencyMs;
            } else {
              /* istanbul ignore next */
              cov_1tpwcygpgi().b[34][1]++;
              cov_1tpwcygpgi().s[125]++;
              isHealthy = false;
              /* istanbul ignore next */
              cov_1tpwcygpgi().s[126]++;
              latencyMs = 0;
            }
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[127]++;
            break;
        }
        const health =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[128]++, {
          route,
          isHealthy,
          latencyMs,
          successRate: isHealthy ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[35][0]++, 1.0) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[35][1]++, 0.0),
          lastCheck: new Date(),
          consecutiveFailures: isHealthy ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[36][0]++, 0) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[36][1]++, (
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[37][0]++,
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[39][0]++, cached === null) ||
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[39][1]++, cached === void 0) ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[38][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[38][1]++, cached.consecutiveFailures)) ||
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[37][1]++, 0)) + 1)
        });
        // Log health check to audit trail
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[129]++;
        yield this.auditTrail.logRouteHealthCheck(route, isHealthy, latencyMs, health.successRate, health.consecutiveFailures, isHealthy ?
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[40][0]++, undefined) :
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[40][1]++, `${route} route health check failed`));
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[130]++;
        this.routeHealthStatus.set(route, health);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[131]++;
        return health;
      } catch (error) {
        const health =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[132]++, {
          route,
          isHealthy: false,
          latencyMs: Date.now() - startTime,
          successRate: 0.0,
          lastCheck: new Date(),
          consecutiveFailures: (
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[41][0]++,
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[43][0]++, cached === null) ||
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[43][1]++, cached === void 0) ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[42][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[42][1]++, cached.consecutiveFailures)) ||
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[41][1]++, 0)) + 1
        });
        // Log health check failure to audit trail
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[133]++;
        yield this.auditTrail.logRouteHealthCheck(route, false, health.latencyMs, health.successRate, health.consecutiveFailures, error instanceof Error ?
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[44][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[44][1]++, `${route} route health check failed`));
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[134]++;
        this.routeHealthStatus.set(route, health);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[135]++;
        return health;
      }
    });
  }
  /**
   * Get routing efficiency metrics
   */
  getRoutingEfficiency() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[15]++;
    cov_1tpwcygpgi().s[136]++;
    return Object.assign({}, this.routingMetrics);
  }
  /**
   * Get current route health status
   */
  getRouteHealthStatus() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[16]++;
    cov_1tpwcygpgi().s[137]++;
    return new Map(this.routeHealthStatus);
  }
  /**
   * Optimize routing configuration based on metrics
   */
  optimizeRouting() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[17]++;
    cov_1tpwcygpgi().s[138]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[18]++;
      const recommendations =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[139]++, []);
      const efficiency =
      /* istanbul ignore next */
      (cov_1tpwcygpgi().s[140]++, this.routingMetrics);
      // Analyze routing patterns
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[141]++;
      if (efficiency.totalRequests > 100) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[45][0]++;
        // Check if direct route is underutilized
        const directUsagePercent =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[142]++, efficiency.directRouteUsage / efficiency.totalRequests * 100);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[143]++;
        if (
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[47][0]++, directUsagePercent < 30) &&
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[47][1]++, efficiency.averageLatency > 15000)) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[46][0]++;
          cov_1tpwcygpgi().s[144]++;
          recommendations.push("Consider routing more operations to direct Bedrock for better latency");
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[46][1]++;
        }
        // Check if MCP route is overloaded
        const mcpUsagePercent =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[145]++, efficiency.mcpRouteUsage / efficiency.totalRequests * 100);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[146]++;
        if (
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[49][0]++, mcpUsagePercent > 80) &&
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[49][1]++, efficiency.successRate < 0.95)) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[48][0]++;
          cov_1tpwcygpgi().s[147]++;
          recommendations.push("Consider load balancing by routing more operations to direct Bedrock");
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[48][1]++;
        }
        // Check fallback usage
        const fallbackPercent =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[148]++, efficiency.fallbackUsage / efficiency.totalRequests * 100);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[149]++;
        if (fallbackPercent > 20) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[50][0]++;
          cov_1tpwcygpgi().s[150]++;
          recommendations.push("High fallback usage detected - investigate primary route health issues");
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[50][1]++;
        }
        // Check cost efficiency
        cov_1tpwcygpgi().s[151]++;
        if (efficiency.costEfficiency < 0.7) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[51][0]++;
          cov_1tpwcygpgi().s[152]++;
          recommendations.push("Route more standard operations to MCP to reduce direct Bedrock costs");
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[51][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1tpwcygpgi().b[45][1]++;
      }
      cov_1tpwcygpgi().s[153]++;
      return recommendations;
    });
  }
  /**
   * Update routing rules (for dynamic configuration)
   */
  updateRoutingRules(newRules) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[19]++;
    cov_1tpwcygpgi().s[154]++;
    this.routingRules = [...newRules];
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[155]++;
    console.log("Routing rules updated:", this.routingRules.length);
  }
  /**
   * Set MCP router (for late initialization)
   */
  setMCPRouter(mcpRouter) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[20]++;
    cov_1tpwcygpgi().s[156]++;
    this.mcpRouter = mcpRouter;
    // Initialize MCP fallback reliability system
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[157]++;
    if (!this.mcpFallbackSystem) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[52][0]++;
      cov_1tpwcygpgi().s[158]++;
      try {
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[159]++;
        this.mcpFallbackSystem = new mcp_fallback_reliability_system_1.MCPFallbackReliabilitySystem(mcpRouter);
      } catch (error) {
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[160]++;
        // In test environments, the class might be mocked
        console.warn("Failed to initialize MCP fallback system:", error);
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[161]++;
        this.mcpFallbackSystem = null;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[52][1]++;
    }
    cov_1tpwcygpgi().s[162]++;
    console.log("MCP router configured with fallback reliability system");
  }
  /**
   * Set cost optimizer (for cost-aware routing)
   */
  setCostOptimizer(costOptimizer) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[21]++;
    cov_1tpwcygpgi().s[163]++;
    this.costOptimizer = costOptimizer;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[164]++;
    console.log("Cost optimizer configured for intelligent routing");
  }
  /**
   * Get MCP fallback metrics
   */
  getMCPFallbackMetrics() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[22]++;
    var _a;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[165]++;
    return /* istanbul ignore next */(cov_1tpwcygpgi().b[53][0]++,
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[55][0]++, (_a = this.mcpFallbackSystem) === null) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[55][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[54][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[54][1]++, _a.getFallbackMetrics())) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[53][1]++, null);
  }
  /**
   * Validate MCP fallback reliability targets
   */
  validateMCPFallbackReliability() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[23]++;
    cov_1tpwcygpgi().s[166]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[24]++;
      var _a;
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[167]++;
      return /* istanbul ignore next */(cov_1tpwcygpgi().b[56][0]++,
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[58][0]++, (_a = this.mcpFallbackSystem) === null) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[58][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[57][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[57][1]++, _a.validateReliabilityTargets())) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[56][1]++, null);
    });
  }
  /**
   * Force MCP fallback health check and recovery
   */
  forceMCPFallbackRecovery() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[25]++;
    cov_1tpwcygpgi().s[168]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[26]++;
      var _a;
      /* istanbul ignore next */
      cov_1tpwcygpgi().s[169]++;
      return /* istanbul ignore next */(cov_1tpwcygpgi().b[59][0]++,
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[61][0]++, (_a = this.mcpFallbackSystem) === null) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[61][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[60][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[60][1]++, _a.forceHealthCheckAndRecovery())) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[59][1]++, null);
    });
  }
  /**
   * Get cost optimization metrics
   */
  getCostOptimizationMetrics() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[27]++;
    var _a;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[170]++;
    return /* istanbul ignore next */(cov_1tpwcygpgi().b[62][0]++,
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[64][0]++, (_a = this.costOptimizer) === null) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[64][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[63][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[63][1]++, _a.getCostOptimizationMetrics())) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[62][1]++, null);
  }
  /**
   * Get cost optimization status
   */
  getCostOptimizationStatus() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[28]++;
    var _a;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[171]++;
    return /* istanbul ignore next */(cov_1tpwcygpgi().b[65][0]++,
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[67][0]++, (_a = this.costOptimizer) === null) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[67][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[66][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[66][1]++, _a.getCostOptimizationStatus())) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[65][1]++, null);
  }
  /**
   * Check if cost reduction target is met
   */
  isCostReductionTargetMet() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[29]++;
    var _a;
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[172]++;
    return /* istanbul ignore next */(cov_1tpwcygpgi().b[68][0]++,
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[70][0]++, (_a = this.costOptimizer) === null) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[70][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[69][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[69][1]++, _a.isCostReductionTargetMet())) ||
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[68][1]++, false);
  }
  /**
   * Get current routing rules
   */
  getRoutingRules() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[30]++;
    cov_1tpwcygpgi().s[173]++;
    return [...this.routingRules];
  }
  /**
   * Cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[31]++;
    cov_1tpwcygpgi().s[174]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[71][0]++;
      cov_1tpwcygpgi().s[175]++;
      clearInterval(this.healthCheckInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[71][1]++;
    }
    // Cleanup MCP fallback system
    cov_1tpwcygpgi().s[176]++;
    if (this.mcpFallbackSystem) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[72][0]++;
      cov_1tpwcygpgi().s[177]++;
      this.mcpFallbackSystem.destroy();
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[72][1]++;
    }
    // Cleanup cost optimizer
    cov_1tpwcygpgi().s[178]++;
    if (this.costOptimizer) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[73][0]++;
      cov_1tpwcygpgi().s[179]++;
      this.costOptimizer.destroy();
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[73][1]++;
    }
  }
  // Private helper methods
  initializeMetrics() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[32]++;
    cov_1tpwcygpgi().s[180]++;
    return {
      totalRequests: 0,
      directRouteUsage: 0,
      mcpRouteUsage: 0,
      fallbackUsage: 0,
      averageLatency: 0,
      successRate: 1.0,
      costEfficiency: 1.0,
      optimizationRecommendations: []
    };
  }
  initializeHealthMonitoring() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[33]++;
    var _a;
    // Initialize health status for both routes
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[181]++;
    this.routeHealthStatus.set("direct", {
      route: "direct",
      isHealthy: true,
      latencyMs: 0,
      successRate: 1.0,
      lastCheck: new Date(),
      consecutiveFailures: 0
    });
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[182]++;
    this.routeHealthStatus.set("mcp", {
      route: "mcp",
      isHealthy:
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[74][0]++,
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[76][0]++, (_a = this.mcpRouter) === null) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[76][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[75][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[75][1]++, _a.isAvailable())) ||
      /* istanbul ignore next */
      (cov_1tpwcygpgi().b[74][1]++, false),
      latencyMs: 0,
      successRate: 1.0,
      lastCheck: new Date(),
      consecutiveFailures: 0
    });
  }
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[34]++;
    cov_1tpwcygpgi().s[183]++;
    this.healthCheckInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[35]++;
      cov_1tpwcygpgi().s[184]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_1tpwcygpgi().f[36]++;
        cov_1tpwcygpgi().s[185]++;
        try {
          // Check both routes and log health status
          const directHealth =
          /* istanbul ignore next */
          (cov_1tpwcygpgi().s[186]++, yield this.checkRouteHealth("direct"));
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[187]++;
          yield this.auditTrail.logRouteHealthCheck("direct", directHealth.isHealthy, directHealth.latencyMs, directHealth.successRate, directHealth.consecutiveFailures, directHealth.isHealthy ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[77][0]++, undefined) :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[77][1]++, "Direct route health check failed"));
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[188]++;
          if (this.mcpRouter) {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[78][0]++;
            const mcpHealth =
            /* istanbul ignore next */
            (cov_1tpwcygpgi().s[189]++, yield this.checkRouteHealth("mcp"));
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[190]++;
            yield this.auditTrail.logRouteHealthCheck("mcp", mcpHealth.isHealthy, mcpHealth.latencyMs, mcpHealth.successRate, mcpHealth.consecutiveFailures, mcpHealth.isHealthy ?
            /* istanbul ignore next */
            (cov_1tpwcygpgi().b[79][0]++, undefined) :
            /* istanbul ignore next */
            (cov_1tpwcygpgi().b[79][1]++, "MCP route health check failed"));
          } else
          /* istanbul ignore next */
          {
            cov_1tpwcygpgi().b[78][1]++;
          }
          // Run optimization analysis
          const recommendations =
          /* istanbul ignore next */
          (cov_1tpwcygpgi().s[191]++, yield this.optimizeRouting());
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[192]++;
          if (recommendations.length > 0) {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[80][0]++;
            cov_1tpwcygpgi().s[193]++;
            this.routingMetrics.optimizationRecommendations = recommendations;
            // Log routing optimization to audit trail
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[194]++;
            yield this.auditTrail.logRoutingOptimization(recommendations, {
              totalRequests: this.routingMetrics.totalRequests,
              directRouteUsage: this.routingMetrics.directRouteUsage,
              mcpRouteUsage: this.routingMetrics.mcpRouteUsage,
              fallbackUsage: this.routingMetrics.fallbackUsage,
              averageLatency: this.routingMetrics.averageLatency,
              successRate: this.routingMetrics.successRate
            });
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[195]++;
            console.log("Routing optimization recommendations:", recommendations);
          } else
          /* istanbul ignore next */
          {
            cov_1tpwcygpgi().b[80][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().s[196]++;
          console.error("Health monitoring error:", error);
        }
      });
    }, 60000); // Check every minute
  }
  updateMetrics(decision, response, latencyMs, success) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[37]++;
    cov_1tpwcygpgi().s[197]++;
    this.routingMetrics.totalRequests++;
    // Update route usage
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[198]++;
    if (decision.selectedRoute === "direct") {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[81][0]++;
      cov_1tpwcygpgi().s[199]++;
      this.routingMetrics.directRouteUsage++;
    } else {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[81][1]++;
      cov_1tpwcygpgi().s[200]++;
      this.routingMetrics.mcpRouteUsage++;
    }
    // Update fallback usage
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[201]++;
    if (decision.reason.includes("fallback")) {
      /* istanbul ignore next */
      cov_1tpwcygpgi().b[82][0]++;
      cov_1tpwcygpgi().s[202]++;
      this.routingMetrics.fallbackUsage++;
    } else
    /* istanbul ignore next */
    {
      cov_1tpwcygpgi().b[82][1]++;
    }
    // Update average latency (rolling average)
    const totalLatency =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[203]++, this.routingMetrics.averageLatency * (this.routingMetrics.totalRequests - 1) + latencyMs);
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[204]++;
    this.routingMetrics.averageLatency = totalLatency / this.routingMetrics.totalRequests;
    // Update success rate (rolling average)
    const totalSuccess =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[205]++, this.routingMetrics.successRate * (this.routingMetrics.totalRequests - 1) + (success ?
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[83][0]++, 1) :
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[83][1]++, 0)));
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[206]++;
    this.routingMetrics.successRate = totalSuccess / this.routingMetrics.totalRequests;
    // Update cost efficiency (simplified calculation)
    const directCostWeight =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[207]++, 1.0); // Direct Bedrock costs more
    const mcpCostWeight =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[208]++, 0.3); // MCP is cheaper
    const costWeight =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[209]++, decision.selectedRoute === "direct" ?
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[84][0]++, directCostWeight) :
    /* istanbul ignore next */
    (cov_1tpwcygpgi().b[84][1]++, mcpCostWeight));
    const totalCost =
    /* istanbul ignore next */
    (cov_1tpwcygpgi().s[210]++, this.routingMetrics.costEfficiency * (this.routingMetrics.totalRequests - 1) + costWeight);
    /* istanbul ignore next */
    cov_1tpwcygpgi().s[211]++;
    this.routingMetrics.costEfficiency = totalCost / this.routingMetrics.totalRequests;
  }
  logRoutingDecision(decision, request) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[38]++;
    cov_1tpwcygpgi().s[212]++;
    console.log(`[IntelligentRouter] ${decision.correlationId}: ${request.operation}/${request.priority} -> ${decision.selectedRoute} (${decision.reason})`);
  }
  generateCorrelationId() {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[39]++;
    cov_1tpwcygpgi().s[213]++;
    return `router-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Validate GDPR compliance for routing decision
   */
  validateGDPRComplianceForRouting(request, rule, correlationId) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[40]++;
    cov_1tpwcygpgi().s[214]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tpwcygpgi().f[41]++;
      cov_1tpwcygpgi().s[215]++;
      try {
        // Map operation type to hybrid routing path operation type
        const operationType =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[216]++, this.mapOperationTypeToHybridPath(request.operation));
        // Create routing path for primary route
        const primaryRoutingPath =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[217]++, {
          routeType: rule.primaryRoute === "direct" ?
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[85][0]++, "direct_bedrock") :
          /* istanbul ignore next */
          (cov_1tpwcygpgi().b[85][1]++, "mcp_integration"),
          provider: "bedrock",
          // Default to bedrock for support operations
          operationType,
          priority: rule.priority
        });
        // Validate GDPR compliance for primary route
        const primaryValidation =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[218]++, yield this.gdprHybridValidator.validateBeforeRouting(primaryRoutingPath, `${correlationId}-primary`));
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[219]++;
        if (!primaryValidation.allowed) {
          /* istanbul ignore next */
          cov_1tpwcygpgi().b[86][0]++;
          cov_1tpwcygpgi().s[220]++;
          // If primary route fails GDPR validation, check fallback
          if (rule.fallbackRoute) {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[87][0]++;
            const fallbackRoutingPath =
            /* istanbul ignore next */
            (cov_1tpwcygpgi().s[221]++, {
              routeType: rule.fallbackRoute === "direct" ?
              /* istanbul ignore next */
              (cov_1tpwcygpgi().b[88][0]++, "direct_bedrock") :
              /* istanbul ignore next */
              (cov_1tpwcygpgi().b[88][1]++, "mcp_integration"),
              provider: "bedrock",
              operationType,
              priority: rule.priority
            });
            const fallbackValidation =
            /* istanbul ignore next */
            (cov_1tpwcygpgi().s[222]++, yield this.gdprHybridValidator.validateBeforeRouting(fallbackRoutingPath, `${correlationId}-fallback`));
            /* istanbul ignore next */
            cov_1tpwcygpgi().s[223]++;
            if (!fallbackValidation.allowed) {
              /* istanbul ignore next */
              cov_1tpwcygpgi().b[89][0]++;
              cov_1tpwcygpgi().s[224]++;
              throw new Error(`Both primary and fallback routes fail GDPR compliance: Primary: ${primaryValidation.reason}, Fallback: ${fallbackValidation.reason}`);
            } else
            /* istanbul ignore next */
            {
              cov_1tpwcygpgi().b[89][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_1tpwcygpgi().b[87][1]++;
            cov_1tpwcygpgi().s[225]++;
            throw new Error(`Primary route fails GDPR compliance and no fallback available: ${primaryValidation.reason}`);
          }
        } else
        /* istanbul ignore next */
        {
          cov_1tpwcygpgi().b[86][1]++;
        }
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_1tpwcygpgi().s[226]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[90][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1tpwcygpgi().b[90][1]++, String(error)));
        /* istanbul ignore next */
        cov_1tpwcygpgi().s[227]++;
        throw new Error(`GDPR compliance validation failed for routing: ${errorMessage}`);
      }
    });
  }
  /**
   * Map operation type to hybrid routing path operation type
   */
  mapOperationTypeToHybridPath(operation) {
    /* istanbul ignore next */
    cov_1tpwcygpgi().f[42]++;
    cov_1tpwcygpgi().s[228]++;
    switch (operation) {
      case "emergency":
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[91][0]++;
        cov_1tpwcygpgi().s[229]++;
        return "emergency";
      case "infrastructure":
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[91][1]++;
        cov_1tpwcygpgi().s[230]++;
        return "infrastructure";
      case "meta_monitor":
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[91][2]++;
        cov_1tpwcygpgi().s[231]++;
        return "meta_monitor";
      case "implementation":
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[91][3]++;
        cov_1tpwcygpgi().s[232]++;
        return "implementation";
      case "standard":
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[91][4]++;
        cov_1tpwcygpgi().s[233]++;
        return "standard_analysis";
      default:
        /* istanbul ignore next */
        cov_1tpwcygpgi().b[91][5]++;
        cov_1tpwcygpgi().s[234]++;
        return "background_tasks";
    }
  }
}
/* istanbul ignore next */
cov_1tpwcygpgi().s[235]++;
exports.IntelligentRouter = IntelligentRouter;
// Types are already exported as interfaces above
//# sourceMappingURL=data:application/json;charset=utf-8;base64,