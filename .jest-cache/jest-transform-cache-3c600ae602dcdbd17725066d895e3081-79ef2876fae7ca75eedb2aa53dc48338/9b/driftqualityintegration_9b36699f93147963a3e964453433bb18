886785d2bb2eec0a199898d83184fb10
"use strict";

/**
 * Drift Detection and Quality Monitoring Integration Service
 *
 * Provides unified drift detection and quality monitoring for AI models:
 * - Integrates SageMaker Model Monitor with quality assessments
 * - Correlates drift patterns with quality degradation
 * - Provides comprehensive monitoring dashboard data
 * - Automated alerting and remediation recommendations
 */
/* istanbul ignore next */
function cov_24bcs5uwnw() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/drift-quality-integration.ts";
  var hash = "3af5f4663ee659548d992abe9512237d7054f336";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/drift-quality-integration.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "2": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "4": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "5": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 89
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 103
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 65
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "14": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 74
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "16": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 134
        }
      },
      "17": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 52
        }
      },
      "18": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "19": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 89
        }
      },
      "20": {
        start: {
          line: 56,
          column: 38
        },
        end: {
          line: 56,
          column: 132
        }
      },
      "21": {
        start: {
          line: 58,
          column: 40
        },
        end: {
          line: 58,
          column: 104
        }
      },
      "22": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 60,
          column: 138
        }
      },
      "23": {
        start: {
          line: 62,
          column: 38
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "24": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 69
        }
      },
      "25": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "26": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "27": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 56
        }
      },
      "28": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 67
        }
      },
      "30": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 37
        }
      },
      "31": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "32": {
        start: {
          line: 89,
          column: 28
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "33": {
        start: {
          line: 90,
          column: 36
        },
        end: {
          line: 90,
          column: 121
        }
      },
      "34": {
        start: {
          line: 90,
          column: 58
        },
        end: {
          line: 90,
          column: 120
        }
      },
      "35": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "36": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 109
        }
      },
      "37": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 95,
          column: 77
        }
      },
      "38": {
        start: {
          line: 96,
          column: 34
        },
        end: {
          line: 96,
          column: 76
        }
      },
      "39": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 98,
          column: 72
        }
      },
      "40": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 100,
          column: 62
        }
      },
      "41": {
        start: {
          line: 102,
          column: 33
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "42": {
        start: {
          line: 104,
          column: 39
        },
        end: {
          line: 104,
          column: 87
        }
      },
      "43": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 113,
          column: 14
        }
      },
      "44": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "45": {
        start: {
          line: 121,
          column: 34
        },
        end: {
          line: 121,
          column: 100
        }
      },
      "46": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 69
        }
      },
      "47": {
        start: {
          line: 123,
          column: 36
        },
        end: {
          line: 123,
          column: 121
        }
      },
      "48": {
        start: {
          line: 123,
          column: 58
        },
        end: {
          line: 123,
          column: 120
        }
      },
      "49": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 125,
          column: 90
        }
      },
      "50": {
        start: {
          line: 125,
          column: 59
        },
        end: {
          line: 125,
          column: 89
        }
      },
      "51": {
        start: {
          line: 126,
          column: 34
        },
        end: {
          line: 126,
          column: 94
        }
      },
      "52": {
        start: {
          line: 126,
          column: 61
        },
        end: {
          line: 126,
          column: 93
        }
      },
      "53": {
        start: {
          line: 127,
          column: 37
        },
        end: {
          line: 127,
          column: 90
        }
      },
      "54": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 89
        }
      },
      "55": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 43
        }
      },
      "56": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "57": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 59
        }
      },
      "58": {
        start: {
          line: 147,
          column: 40
        },
        end: {
          line: 147,
          column: 51
        }
      },
      "59": {
        start: {
          line: 149,
          column: 34
        },
        end: {
          line: 149,
          column: 225
        }
      },
      "60": {
        start: {
          line: 151,
          column: 39
        },
        end: {
          line: 153,
          column: 15
        }
      },
      "61": {
        start: {
          line: 155,
          column: 26
        },
        end: {
          line: 158,
          column: 41
        }
      },
      "62": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "63": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 170,
          column: 26
        }
      },
      "64": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "65": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 178,
          column: 32
        }
      },
      "66": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 34
        }
      },
      "67": {
        start: {
          line: 175,
          column: 13
        },
        end: {
          line: 178,
          column: 32
        }
      },
      "68": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 30
        }
      },
      "69": {
        start: {
          line: 177,
          column: 13
        },
        end: {
          line: 178,
          column: 32
        }
      },
      "70": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 32
        }
      },
      "71": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "72": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "73": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "74": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 195,
          column: 15
        }
      },
      "75": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "76": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 204,
          column: 15
        }
      },
      "77": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "78": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "79": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "80": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "81": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 37
        }
      },
      "82": {
        start: {
          line: 230,
          column: 73
        },
        end: {
          line: 230,
          column: 80
        }
      },
      "83": {
        start: {
          line: 232,
          column: 26
        },
        end: {
          line: 232,
          column: 34
        }
      },
      "84": {
        start: {
          line: 233,
          column: 30
        },
        end: {
          line: 233,
          column: 105
        }
      },
      "85": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 36
        }
      },
      "86": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 37
        }
      },
      "87": {
        start: {
          line: 236,
          column: 13
        },
        end: {
          line: 237,
          column: 36
        }
      },
      "88": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 36
        }
      },
      "89": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 239,
          column: 34
        }
      },
      "90": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "91": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 35
        }
      },
      "92": {
        start: {
          line: 242,
          column: 13
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "93": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 38
        }
      },
      "94": {
        start: {
          line: 245,
          column: 32
        },
        end: {
          line: 245,
          column: 41
        }
      },
      "95": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "96": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 39
        }
      },
      "97": {
        start: {
          line: 248,
          column: 13
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "98": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "99": {
        start: {
          line: 251,
          column: 28
        },
        end: {
          line: 251,
          column: 37
        }
      },
      "100": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "101": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 39
        }
      },
      "102": {
        start: {
          line: 257,
          column: 13
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "103": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 38
        }
      },
      "104": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 267,
          column: 10
        }
      },
      "105": {
        start: {
          line: 274,
          column: 23
        },
        end: {
          line: 274,
          column: 50
        }
      },
      "106": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 283,
          column: 10
        }
      },
      "107": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 311,
          column: 10
        }
      },
      "108": {
        start: {
          line: 290,
          column: 39
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "109": {
        start: {
          line: 296,
          column: 41
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "110": {
        start: {
          line: 300,
          column: 45
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "111": {
        start: {
          line: 306,
          column: 31
        },
        end: {
          line: 306,
          column: 63
        }
      },
      "112": {
        start: {
          line: 307,
          column: 29
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "113": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 321,
          column: 11
        }
      },
      "114": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 22
        }
      },
      "115": {
        start: {
          line: 327,
          column: 23
        },
        end: {
          line: 327,
          column: 50
        }
      },
      "116": {
        start: {
          line: 328,
          column: 32
        },
        end: {
          line: 328,
          column: 34
        }
      },
      "117": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "118": {
        start: {
          line: 331,
          column: 34
        },
        end: {
          line: 331,
          column: 51
        }
      },
      "119": {
        start: {
          line: 332,
          column: 33
        },
        end: {
          line: 332,
          column: 121
        }
      },
      "120": {
        start: {
          line: 332,
          column: 87
        },
        end: {
          line: 332,
          column: 119
        }
      },
      "121": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "122": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 339,
          column: 19
        }
      },
      "123": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "124": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 349,
          column: 15
        }
      },
      "125": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 31
        }
      },
      "126": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 358,
          column: 28
        }
      },
      "127": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 28
        }
      },
      "128": {
        start: {
          line: 359,
          column: 22
        },
        end: {
          line: 359,
          column: 31
        }
      },
      "129": {
        start: {
          line: 360,
          column: 21
        },
        end: {
          line: 360,
          column: 46
        }
      },
      "130": {
        start: {
          line: 361,
          column: 23
        },
        end: {
          line: 361,
          column: 45
        }
      },
      "131": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 363,
          column: 28
        }
      },
      "132": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 28
        }
      },
      "133": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 54
        }
      },
      "134": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 371,
          column: 21
        }
      },
      "135": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 21
        }
      },
      "136": {
        start: {
          line: 372,
          column: 18
        },
        end: {
          line: 372,
          column: 26
        }
      },
      "137": {
        start: {
          line: 373,
          column: 21
        },
        end: {
          line: 373,
          column: 49
        }
      },
      "138": {
        start: {
          line: 373,
          column: 40
        },
        end: {
          line: 373,
          column: 45
        }
      },
      "139": {
        start: {
          line: 374,
          column: 21
        },
        end: {
          line: 374,
          column: 49
        }
      },
      "140": {
        start: {
          line: 374,
          column: 40
        },
        end: {
          line: 374,
          column: 45
        }
      },
      "141": {
        start: {
          line: 375,
          column: 22
        },
        end: {
          line: 375,
          column: 66
        }
      },
      "142": {
        start: {
          line: 375,
          column: 47
        },
        end: {
          line: 375,
          column: 62
        }
      },
      "143": {
        start: {
          line: 376,
          column: 22
        },
        end: {
          line: 376,
          column: 61
        }
      },
      "144": {
        start: {
          line: 376,
          column: 44
        },
        end: {
          line: 376,
          column: 57
        }
      },
      "145": {
        start: {
          line: 377,
          column: 22
        },
        end: {
          line: 377,
          column: 61
        }
      },
      "146": {
        start: {
          line: 377,
          column: 44
        },
        end: {
          line: 377,
          column: 57
        }
      },
      "147": {
        start: {
          line: 378,
          column: 26
        },
        end: {
          line: 378,
          column: 49
        }
      },
      "148": {
        start: {
          line: 379,
          column: 28
        },
        end: {
          line: 379,
          column: 92
        }
      },
      "149": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 63
        }
      },
      "150": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 423,
          column: 11
        }
      },
      "151": {
        start: {
          line: 387,
          column: 31
        },
        end: {
          line: 418,
          column: 13
        }
      },
      "152": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 422,
          column: 16
        }
      },
      "153": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 438,
          column: 11
        }
      },
      "154": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 437,
          column: 13
        }
      },
      "155": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 436,
          column: 17
        }
      },
      "156": {
        start: {
          line: 432,
          column: 20
        },
        end: {
          line: 432,
          column: 42
        }
      },
      "157": {
        start: {
          line: 435,
          column: 20
        },
        end: {
          line: 435,
          column: 79
        }
      },
      "158": {
        start: {
          line: 441,
          column: 0
        },
        end: {
          line: 441,
          column: 58
        }
      },
      "159": {
        start: {
          line: 442,
          column: 0
        },
        end: {
          line: 442,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 73
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 55
          },
          end: {
            line: 37,
            column: 56
          }
        },
        loc: {
          start: {
            line: 37,
            column: 68
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 99
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 56
          }
        },
        loc: {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 41
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 87
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 56
          }
        },
        loc: {
          start: {
            line: 88,
            column: 68
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 88
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 90,
            column: 51
          },
          end: {
            line: 90,
            column: 52
          }
        },
        loc: {
          start: {
            line: 90,
            column: 58
          },
          end: {
            line: 90,
            column: 120
          }
        },
        line: 90
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 119
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 120,
            column: 56
          }
        },
        loc: {
          start: {
            line: 120,
            column: 68
          },
          end: {
            line: 129,
            column: 9
          }
        },
        line: 120
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 123,
            column: 51
          },
          end: {
            line: 123,
            column: 52
          }
        },
        loc: {
          start: {
            line: 123,
            column: 58
          },
          end: {
            line: 123,
            column: 120
          }
        },
        line: 123
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 125,
            column: 53
          }
        },
        loc: {
          start: {
            line: 125,
            column: 59
          },
          end: {
            line: 125,
            column: 89
          }
        },
        line: 125
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 126,
            column: 54
          },
          end: {
            line: 126,
            column: 55
          }
        },
        loc: {
          start: {
            line: 126,
            column: 61
          },
          end: {
            line: 126,
            column: 93
          }
        },
        line: 126
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        loc: {
          start: {
            line: 134,
            column: 22
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 134
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 57
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 140
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 95
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 169
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 229
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 33
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 272
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 288
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 290,
            column: 31
          },
          end: {
            line: 290,
            column: 32
          }
        },
        loc: {
          start: {
            line: 290,
            column: 39
          },
          end: {
            line: 295,
            column: 13
          }
        },
        line: 290
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 296,
            column: 33
          },
          end: {
            line: 296,
            column: 34
          }
        },
        loc: {
          start: {
            line: 296,
            column: 41
          },
          end: {
            line: 299,
            column: 13
          }
        },
        line: 296
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 300,
            column: 37
          },
          end: {
            line: 300,
            column: 38
          }
        },
        loc: {
          start: {
            line: 300,
            column: 45
          },
          end: {
            line: 304,
            column: 13
          }
        },
        line: 300
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 306,
            column: 24
          },
          end: {
            line: 306,
            column: 25
          }
        },
        loc: {
          start: {
            line: 306,
            column: 31
          },
          end: {
            line: 306,
            column: 63
          }
        },
        line: 306
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 307,
            column: 21
          },
          end: {
            line: 307,
            column: 22
          }
        },
        loc: {
          start: {
            line: 307,
            column: 29
          },
          end: {
            line: 310,
            column: 13
          }
        },
        line: 307
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 29
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 316
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 317,
            column: 55
          },
          end: {
            line: 317,
            column: 56
          }
        },
        loc: {
          start: {
            line: 317,
            column: 68
          },
          end: {
            line: 321,
            column: 9
          }
        },
        line: 317
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 40
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 326
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 332,
            column: 80
          },
          end: {
            line: 332,
            column: 81
          }
        },
        loc: {
          start: {
            line: 332,
            column: 87
          },
          end: {
            line: 332,
            column: 119
          }
        },
        line: 332
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 356,
            column: 4
          },
          end: {
            line: 356,
            column: 5
          }
        },
        loc: {
          start: {
            line: 356,
            column: 36
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 356
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 31
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 369
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 373,
            column: 30
          },
          end: {
            line: 373,
            column: 31
          }
        },
        loc: {
          start: {
            line: 373,
            column: 40
          },
          end: {
            line: 373,
            column: 45
          }
        },
        line: 373
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 374,
            column: 30
          },
          end: {
            line: 374,
            column: 31
          }
        },
        loc: {
          start: {
            line: 374,
            column: 40
          },
          end: {
            line: 374,
            column: 45
          }
        },
        line: 374
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 375,
            column: 31
          },
          end: {
            line: 375,
            column: 32
          }
        },
        loc: {
          start: {
            line: 375,
            column: 47
          },
          end: {
            line: 375,
            column: 62
          }
        },
        line: 375
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 376,
            column: 31
          },
          end: {
            line: 376,
            column: 32
          }
        },
        loc: {
          start: {
            line: 376,
            column: 44
          },
          end: {
            line: 376,
            column: 57
          }
        },
        line: 376
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 377,
            column: 31
          },
          end: {
            line: 377,
            column: 32
          }
        },
        loc: {
          start: {
            line: 377,
            column: 44
          },
          end: {
            line: 377,
            column: 57
          }
        },
        line: 377
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 38
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 385
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 386,
            column: 55
          },
          end: {
            line: 386,
            column: 56
          }
        },
        loc: {
          start: {
            line: 386,
            column: 68
          },
          end: {
            line: 423,
            column: 9
          }
        },
        line: 386
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 23
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 428
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 429,
            column: 55
          },
          end: {
            line: 429,
            column: 56
          }
        },
        loc: {
          start: {
            line: 429,
            column: 68
          },
          end: {
            line: 438,
            column: 9
          }
        },
        line: 429
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 25,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 22
          }
        }, {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 25,
            column: 18
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 50
          }
        }, {
          start: {
            line: 24,
            column: 54
          },
          end: {
            line: 24,
            column: 68
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 63
          }
        }, {
          start: {
            line: 72,
            column: 67
          },
          end: {
            line: 72,
            column: 69
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 89,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 89,
            column: 63
          }
        }, {
          start: {
            line: 89,
            column: 67
          },
          end: {
            line: 89,
            column: 69
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 90,
            column: 58
          },
          end: {
            line: 90,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 58
          },
          end: {
            line: 90,
            column: 88
          }
        }, {
          start: {
            line: 90,
            column: 92
          },
          end: {
            line: 90,
            column: 120
          }
        }],
        line: 90
      },
      "7": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "8": {
        loc: {
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 63
          }
        }, {
          start: {
            line: 122,
            column: 67
          },
          end: {
            line: 122,
            column: 69
          }
        }],
        line: 122
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 58
          },
          end: {
            line: 123,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 58
          },
          end: {
            line: 123,
            column: 88
          }
        }, {
          start: {
            line: 123,
            column: 92
          },
          end: {
            line: 123,
            column: 120
          }
        }],
        line: 123
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 153,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 14
          },
          end: {
            line: 152,
            column: 74
          }
        }, {
          start: {
            line: 153,
            column: 14
          },
          end: {
            line: 153,
            column: 15
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 178,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 178,
            column: 32
          }
        }, {
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 178,
            column: 32
          }
        }],
        line: 173
      },
      "12": {
        loc: {
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 178,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 13
          },
          end: {
            line: 178,
            column: 32
          }
        }, {
          start: {
            line: 177,
            column: 13
          },
          end: {
            line: 178,
            column: 32
          }
        }],
        line: 175
      },
      "13": {
        loc: {
          start: {
            line: 177,
            column: 13
          },
          end: {
            line: 178,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 13
          },
          end: {
            line: 178,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "14": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "15": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "16": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "17": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "18": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "19": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 36
          }
        }, {
          start: {
            line: 236,
            column: 13
          },
          end: {
            line: 237,
            column: 36
          }
        }],
        line: 234
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 13
          },
          end: {
            line: 237,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 13
          },
          end: {
            line: 237,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 243,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 243,
            column: 38
          }
        }, {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 243,
            column: 38
          }
        }],
        line: 240
      },
      "22": {
        loc: {
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 243,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 13
          },
          end: {
            line: 243,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "23": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 249,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 249,
            column: 43
          }
        }, {
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 249,
            column: 43
          }
        }],
        line: 246
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 249,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 249,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        }],
        line: 252
      },
      "26": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 254,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 252,
            column: 38
          }
        }, {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 36
          }
        }, {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 254,
            column: 40
          }
        }],
        line: 252
      },
      "27": {
        loc: {
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "28": {
        loc: {
          start: {
            line: 257,
            column: 17
          },
          end: {
            line: 259,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 17
          },
          end: {
            line: 257,
            column: 42
          }
        }, {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 39
          }
        }, {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 44
          }
        }],
        line: 257
      },
      "29": {
        loc: {
          start: {
            line: 282,
            column: 35
          },
          end: {
            line: 282,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 282,
            column: 127
          }
        }, {
          start: {
            line: 282,
            column: 132
          },
          end: {
            line: 282,
            column: 133
          }
        }],
        line: 282
      },
      "30": {
        loc: {
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 282,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 109
          },
          end: {
            line: 282,
            column: 115
          }
        }, {
          start: {
            line: 282,
            column: 118
          },
          end: {
            line: 282,
            column: 127
          }
        }],
        line: 282
      },
      "31": {
        loc: {
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 282,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 36
          },
          end: {
            line: 282,
            column: 89
          }
        }, {
          start: {
            line: 282,
            column: 93
          },
          end: {
            line: 282,
            column: 106
          }
        }],
        line: 282
      },
      "32": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 341,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "33": {
        loc: {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 340,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "34": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "35": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 358,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 358,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "36": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 363,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 363,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "37": {
        loc: {
          start: {
            line: 364,
            column: 15
          },
          end: {
            line: 364,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 364,
            column: 39
          }
        }, {
          start: {
            line: 364,
            column: 42
          },
          end: {
            line: 364,
            column: 53
          }
        }],
        line: 364
      },
      "38": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 371,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 371,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "39": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 33
          }
        }, {
          start: {
            line: 370,
            column: 37
          },
          end: {
            line: 370,
            column: 51
          }
        }],
        line: 370
      },
      "40": {
        loc: {
          start: {
            line: 380,
            column: 15
          },
          end: {
            line: 380,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 380,
            column: 35
          },
          end: {
            line: 380,
            column: 36
          }
        }, {
          start: {
            line: 380,
            column: 39
          },
          end: {
            line: 380,
            column: 62
          }
        }],
        line: 380
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/drift-quality-integration.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/drift-quality-integration.ts"],
      sourcesContent: ["/**\n * Drift Detection and Quality Monitoring Integration Service\n *\n * Provides unified drift detection and quality monitoring for AI models:\n * - Integrates SageMaker Model Monitor with quality assessments\n * - Correlates drift patterns with quality degradation\n * - Provides comprehensive monitoring dashboard data\n * - Automated alerting and remediation recommendations\n */\n\nimport {\n  CloudWatchClient,\n  PutMetricDataCommand,\n} from \"@aws-sdk/client-cloudwatch\";\nimport { SageMakerClient } from \"@aws-sdk/client-sagemaker\";\nimport { DriftAlert, DriftMetrics, DriftMonitor } from \"./drift-monitor\";\nimport {\n  QualityAlert,\n  QualityAssessment,\n  QualityMonitor,\n  QualityTrends,\n} from \"./quality-monitor\";\n\nexport interface IntegratedMonitoringMetrics {\n  timestamp: Date;\n  modelId: string;\n  provider: string;\n\n  // Combined drift and quality metrics\n  driftMetrics: DriftMetrics;\n  qualityAssessment: QualityAssessment;\n\n  // Correlation analysis\n  correlationAnalysis: {\n    driftQualityCorrelation: number; // -1 to 1\n    performanceImpact: number; // 0 to 1\n    userSatisfactionImpact: number; // 0 to 1\n    riskScore: number; // 0 to 1 (combined risk assessment)\n  };\n\n  // Recommendations\n  recommendations: {\n    priority: \"low\" | \"medium\" | \"high\" | \"critical\";\n    actions: Array<{\n      type: \"immediate\" | \"short_term\" | \"long_term\";\n      description: string;\n      impact: \"low\" | \"medium\" | \"high\";\n      effort: \"low\" | \"medium\" | \"high\";\n    }>;\n  };\n}\n\nexport interface MonitoringDashboardData {\n  modelId: string;\n  timeRange: {\n    start: Date;\n    end: Date;\n  };\n\n  // Current status\n  currentStatus: {\n    overallHealth: \"healthy\" | \"warning\" | \"critical\";\n    driftStatus: \"stable\" | \"warning\" | \"critical\";\n    qualityStatus: \"good\" | \"warning\" | \"poor\";\n    performanceStatus: \"optimal\" | \"degraded\" | \"poor\";\n  };\n\n  // Key metrics\n  keyMetrics: {\n    overallScore: number;\n    driftScore: number;\n    qualityScore: number;\n    performanceScore: number;\n    userSatisfactionScore: number;\n  };\n\n  // Trends\n  trends: {\n    drift: Array<{ timestamp: Date; score: number }>;\n    quality: Array<{ timestamp: Date; score: number }>;\n    performance: Array<{ timestamp: Date; latency: number; accuracy: number }>;\n    userSatisfaction: Array<{ timestamp: Date; rating: number }>;\n  };\n\n  // Active alerts\n  activeAlerts: Array<DriftAlert | QualityAlert>;\n\n  // Recommendations\n  topRecommendations: Array<{\n    priority: \"high\" | \"medium\" | \"low\";\n    category: \"drift\" | \"quality\" | \"performance\" | \"user_experience\";\n    description: string;\n    expectedImpact: string;\n  }>;\n}\n\nexport class DriftQualityIntegration {\n  private driftMonitor: DriftMonitor;\n  private qualityMonitor: QualityMonitor;\n  private cloudWatch: CloudWatchClient;\n  private monitoringHistory: Map<string, IntegratedMonitoringMetrics[]> =\n    new Map();\n  private alertCallbacks: Array<\n    (alert: DriftAlert | QualityAlert) => Promise<void>\n  > = [];\n\n  constructor(cloudWatch?: CloudWatchClient, sageMaker?: SageMakerClient) {\n    this.cloudWatch =\n      cloudWatch ||\n      new CloudWatchClient({\n        region: process.env.AWS_REGION || \"eu-central-1\",\n      });\n\n    // Initialize monitors\n    this.driftMonitor = new DriftMonitor(this.cloudWatch, sageMaker);\n    this.qualityMonitor = new QualityMonitor(\n      this.driftMonitor,\n      this.cloudWatch\n    );\n\n    // Register for alerts from both monitors\n    this.driftMonitor.onAlert(this.handleAlert.bind(this));\n    this.qualityMonitor.onAlert(this.handleAlert.bind(this));\n  }\n\n  /**\n   * Initialize monitoring for a model\n   */\n  async initializeModelMonitoring(\n    modelId: string,\n    baselineMetrics: DriftMetrics,\n    sageMakerConfig?: {\n      endpointName: string;\n      baselineDataUri: string;\n    }\n  ): Promise<void> {\n    // Set baseline for drift monitoring\n    await this.driftMonitor.setBaseline(modelId, baselineMetrics);\n\n    // Setup SageMaker monitoring if configured\n    if (sageMakerConfig) {\n      await this.driftMonitor.setupSageMakerMonitor(\n        modelId,\n        sageMakerConfig.endpointName,\n        sageMakerConfig.baselineDataUri\n      );\n    }\n\n    // Initialize monitoring history\n    this.monitoringHistory.set(modelId, []);\n  }\n\n  /**\n   * Monitor AI interaction with integrated drift and quality assessment\n   */\n  async monitorInteraction(\n    modelId: string,\n    provider: string,\n    requestId: string,\n    input: string,\n    output: string,\n    metadata: {\n      latency: number;\n      tokenCount: number;\n      cost: number;\n      userFeedback?: QualityAssessment[\"userFeedback\"];\n    },\n    currentDriftMetrics: DriftMetrics\n  ): Promise<IntegratedMonitoringMetrics> {\n    // Perform drift monitoring\n    const driftAlerts = await this.driftMonitor.monitorDrift(\n      currentDriftMetrics\n    );\n\n    // Perform quality assessment\n    const qualityAssessment = await this.qualityMonitor.assessQuality(\n      modelId,\n      provider,\n      requestId,\n      input,\n      output,\n      metadata\n    );\n\n    // Perform correlation analysis\n    const correlationAnalysis = this.analyzeCorrelations(\n      currentDriftMetrics,\n      qualityAssessment\n    );\n\n    // Generate recommendations\n    const recommendations = this.generateRecommendations(\n      currentDriftMetrics,\n      qualityAssessment,\n      correlationAnalysis,\n      driftAlerts\n    );\n\n    // Create integrated metrics\n    const integratedMetrics: IntegratedMonitoringMetrics = {\n      timestamp: new Date(),\n      modelId,\n      provider,\n      driftMetrics: currentDriftMetrics,\n      qualityAssessment,\n      correlationAnalysis,\n      recommendations,\n    };\n\n    // Store in history\n    const history = this.monitoringHistory.get(modelId) || [];\n    history.push(integratedMetrics);\n\n    // Keep only last 500 entries per model\n    if (history.length > 500) {\n      history.splice(0, history.length - 500);\n    }\n    this.monitoringHistory.set(modelId, history);\n\n    // Publish integrated metrics\n    await this.publishIntegratedMetrics(integratedMetrics);\n\n    return integratedMetrics;\n  }\n\n  /**\n   * Get dashboard data for monitoring interface\n   */\n  async getDashboardData(\n    modelId: string,\n    timeRange: { start: Date; end: Date }\n  ): Promise<MonitoringDashboardData> {\n    const history = this.monitoringHistory.get(modelId) || [];\n    const relevantMetrics = history.filter(\n      (m) => m.timestamp >= timeRange.start && m.timestamp <= timeRange.end\n    );\n\n    if (relevantMetrics.length === 0) {\n      throw new Error(\n        `No monitoring data found for model ${modelId} in the specified time range`\n      );\n    }\n\n    // Calculate current status\n    const latestMetrics = relevantMetrics[relevantMetrics.length - 1];\n    const currentStatus = this.calculateCurrentStatus(latestMetrics);\n\n    // Calculate key metrics\n    const keyMetrics = this.calculateKeyMetrics(relevantMetrics);\n\n    // Extract trends\n    const trends = this.extractTrends(relevantMetrics);\n\n    // Get active alerts (last 24 hours)\n    const activeAlerts = await this.getActiveAlerts(modelId);\n\n    // Generate top recommendations\n    const topRecommendations = this.generateTopRecommendations(relevantMetrics);\n\n    return {\n      modelId,\n      timeRange,\n      currentStatus,\n      keyMetrics,\n      trends,\n      activeAlerts,\n      topRecommendations,\n    };\n  }\n\n  /**\n   * Get quality trends with drift correlation\n   */\n  async getQualityTrendsWithDrift(\n    modelId: string,\n    timeRange: { start: Date; end: Date }\n  ): Promise<QualityTrends & { driftCorrelation: number }> {\n    const qualityTrends = await this.qualityMonitor.analyzeQualityTrends(\n      modelId,\n      timeRange\n    );\n\n    const history = this.monitoringHistory.get(modelId) || [];\n    const relevantMetrics = history.filter(\n      (m) => m.timestamp >= timeRange.start && m.timestamp <= timeRange.end\n    );\n\n    // Calculate overall drift-quality correlation\n    const driftScores = relevantMetrics.map(\n      (m) => m.driftMetrics.dataDrift.score\n    );\n    const qualityScores = relevantMetrics.map(\n      (m) => m.qualityAssessment.overallScore\n    );\n    const driftCorrelation = this.calculateCorrelation(\n      driftScores,\n      qualityScores\n    );\n\n    return {\n      ...qualityTrends,\n      driftCorrelation,\n    };\n  }\n\n  /**\n   * Register alert callback\n   */\n  onAlert(callback: (alert: DriftAlert | QualityAlert) => Promise<void>): void {\n    this.alertCallbacks.push(callback);\n  }\n\n  /**\n   * Analyze correlations between drift and quality metrics\n   */\n  private analyzeCorrelations(\n    driftMetrics: DriftMetrics,\n    qualityAssessment: QualityAssessment\n  ): IntegratedMonitoringMetrics[\"correlationAnalysis\"] {\n    // Calculate drift-quality correlation\n    const driftScore =\n      (driftMetrics.dataDrift.score +\n        driftMetrics.promptDrift.driftScore +\n        driftMetrics.performanceRegression.latency.regressionScore) /\n      3;\n\n    const qualityScore = qualityAssessment.overallScore;\n    const driftQualityCorrelation = -driftScore; // Higher drift typically means lower quality\n\n    // Calculate performance impact\n    const performanceImpact = Math.max(\n      driftMetrics.performanceRegression.latency.regressionScore,\n      driftMetrics.performanceRegression.accuracy.regressionScore,\n      driftMetrics.performanceRegression.errorRate.regressionScore\n    );\n\n    // Calculate user satisfaction impact\n    const userSatisfactionImpact = qualityAssessment.userFeedback\n      ? Math.max(0, (5 - qualityAssessment.userFeedback.rating) / 4)\n      : 0;\n\n    // Calculate combined risk score\n    const riskScore = Math.min(\n      1,\n      driftScore * 0.3 +\n        (1 - qualityScore) * 0.4 +\n        performanceImpact * 0.2 +\n        userSatisfactionImpact * 0.1\n    );\n\n    return {\n      driftQualityCorrelation,\n      performanceImpact,\n      userSatisfactionImpact,\n      riskScore,\n    };\n  }\n\n  /**\n   * Generate integrated recommendations\n   */\n  private generateRecommendations(\n    driftMetrics: DriftMetrics,\n    qualityAssessment: QualityAssessment,\n    correlationAnalysis: IntegratedMonitoringMetrics[\"correlationAnalysis\"],\n    driftAlerts: DriftAlert[]\n  ): IntegratedMonitoringMetrics[\"recommendations\"] {\n    const actions: IntegratedMonitoringMetrics[\"recommendations\"][\"actions\"] =\n      [];\n\n    // Determine priority based on risk score\n    let priority: \"low\" | \"medium\" | \"high\" | \"critical\" = \"low\";\n    if (correlationAnalysis.riskScore >= 0.8) priority = \"critical\";\n    else if (correlationAnalysis.riskScore >= 0.6) priority = \"high\";\n    else if (correlationAnalysis.riskScore >= 0.4) priority = \"medium\";\n\n    // Data drift recommendations\n    if (driftMetrics.dataDrift.score > 0.3) {\n      actions.push({\n        type: \"immediate\",\n        description: \"Review and update training data to address data drift\",\n        impact: \"high\",\n        effort: \"medium\",\n      });\n    }\n\n    // Prompt drift recommendations\n    if (driftMetrics.promptDrift.driftScore > 0.2) {\n      actions.push({\n        type: \"short_term\",\n        description: \"Optimize prompt templates based on usage patterns\",\n        impact: \"medium\",\n        effort: \"low\",\n      });\n    }\n\n    // Performance regression recommendations\n    if (correlationAnalysis.performanceImpact > 0.3) {\n      actions.push({\n        type: \"immediate\",\n        description: \"Investigate and resolve performance bottlenecks\",\n        impact: \"high\",\n        effort: \"medium\",\n      });\n    }\n\n    // Quality improvement recommendations\n    if (qualityAssessment.overallScore < 0.7) {\n      actions.push({\n        type: \"short_term\",\n        description:\n          \"Implement quality improvement measures (fine-tuning, RAG)\",\n        impact: \"high\",\n        effort: \"high\",\n      });\n    }\n\n    // User satisfaction recommendations\n    if (correlationAnalysis.userSatisfactionImpact > 0.3) {\n      actions.push({\n        type: \"short_term\",\n        description: \"Analyze user feedback and improve response relevance\",\n        impact: \"medium\",\n        effort: \"medium\",\n      });\n    }\n\n    return { priority, actions };\n  }\n\n  /**\n   * Calculate current status from latest metrics\n   */\n  private calculateCurrentStatus(\n    metrics: IntegratedMonitoringMetrics\n  ): MonitoringDashboardData[\"currentStatus\"] {\n    const { driftMetrics, qualityAssessment, correlationAnalysis } = metrics;\n\n    // Determine drift status\n    let driftStatus: \"stable\" | \"warning\" | \"critical\" = \"stable\";\n    const maxDriftScore = Math.max(\n      driftMetrics.dataDrift.score,\n      driftMetrics.promptDrift.driftScore\n    );\n    if (maxDriftScore >= 0.5) driftStatus = \"critical\";\n    else if (maxDriftScore >= 0.3) driftStatus = \"warning\";\n\n    // Determine quality status\n    let qualityStatus: \"good\" | \"warning\" | \"poor\" = \"good\";\n    if (qualityAssessment.overallScore <= 0.6) qualityStatus = \"poor\";\n    else if (qualityAssessment.overallScore <= 0.7) qualityStatus = \"warning\";\n\n    // Determine performance status\n    let performanceStatus: \"optimal\" | \"degraded\" | \"poor\" = \"optimal\";\n    if (correlationAnalysis.performanceImpact >= 0.5)\n      performanceStatus = \"poor\";\n    else if (correlationAnalysis.performanceImpact >= 0.3)\n      performanceStatus = \"degraded\";\n\n    // Determine overall health\n    let overallHealth: \"healthy\" | \"warning\" | \"critical\" = \"healthy\";\n    if (\n      driftStatus === \"critical\" ||\n      qualityStatus === \"poor\" ||\n      performanceStatus === \"poor\"\n    ) {\n      overallHealth = \"critical\";\n    } else if (\n      driftStatus === \"warning\" ||\n      qualityStatus === \"warning\" ||\n      performanceStatus === \"degraded\"\n    ) {\n      overallHealth = \"warning\";\n    }\n\n    return {\n      overallHealth,\n      driftStatus,\n      qualityStatus,\n      performanceStatus,\n    };\n  }\n\n  /**\n   * Calculate key metrics from historical data\n   */\n  private calculateKeyMetrics(\n    metrics: IntegratedMonitoringMetrics[]\n  ): MonitoringDashboardData[\"keyMetrics\"] {\n    const latest = metrics[metrics.length - 1];\n\n    return {\n      overallScore: latest.correlationAnalysis.riskScore,\n      driftScore:\n        (latest.driftMetrics.dataDrift.score +\n          latest.driftMetrics.promptDrift.driftScore) /\n        2,\n      qualityScore: latest.qualityAssessment.overallScore,\n      performanceScore: 1 - latest.correlationAnalysis.performanceImpact,\n      userSatisfactionScore: latest.qualityAssessment.userFeedback?.rating || 0,\n    };\n  }\n\n  /**\n   * Extract trends from historical metrics\n   */\n  private extractTrends(\n    metrics: IntegratedMonitoringMetrics[]\n  ): MonitoringDashboardData[\"trends\"] {\n    return {\n      drift: metrics.map((m) => ({\n        timestamp: m.timestamp,\n        score:\n          (m.driftMetrics.dataDrift.score +\n            m.driftMetrics.promptDrift.driftScore) /\n          2,\n      })),\n      quality: metrics.map((m) => ({\n        timestamp: m.timestamp,\n        score: m.qualityAssessment.overallScore,\n      })),\n      performance: metrics.map((m) => ({\n        timestamp: m.timestamp,\n        latency: m.qualityAssessment.performance.latency,\n        accuracy: m.driftMetrics.performanceRegression.accuracy.current,\n      })),\n      userSatisfaction: metrics\n        .filter((m) => m.qualityAssessment.userFeedback)\n        .map((m) => ({\n          timestamp: m.timestamp,\n          rating: m.qualityAssessment.userFeedback!.rating,\n        })),\n    };\n  }\n\n  /**\n   * Get active alerts for a model\n   */\n  private async getActiveAlerts(\n    modelId: string\n  ): Promise<Array<DriftAlert | QualityAlert>> {\n    // In a real implementation, this would query a persistent alert store\n    // For now, return empty array as alerts are handled in real-time\n    return [];\n  }\n\n  /**\n   * Generate top recommendations from historical data\n   */\n  private generateTopRecommendations(\n    metrics: IntegratedMonitoringMetrics[]\n  ): MonitoringDashboardData[\"topRecommendations\"] {\n    const latest = metrics[metrics.length - 1];\n    const recommendations: MonitoringDashboardData[\"topRecommendations\"] = [];\n\n    // Analyze trends to generate recommendations\n    if (metrics.length >= 5) {\n      const recentMetrics = metrics.slice(-5);\n      const qualityTrend = this.calculateTrendDirection(\n        recentMetrics.map((m) => m.qualityAssessment.overallScore)\n      );\n\n      if (qualityTrend === \"declining\") {\n        recommendations.push({\n          priority: \"high\",\n          category: \"quality\",\n          description:\n            \"Quality scores are declining - implement immediate quality improvements\",\n          expectedImpact:\n            \"Prevent further quality degradation and improve user satisfaction\",\n        });\n      }\n    }\n\n    // Add recommendations based on current state\n    if (latest.correlationAnalysis.riskScore > 0.7) {\n      recommendations.push({\n        priority: \"high\",\n        category: \"drift\",\n        description:\n          \"High risk score detected - review model performance and data quality\",\n        expectedImpact: \"Reduce system risk and improve overall stability\",\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Calculate trend direction from values\n   */\n  private calculateTrendDirection(\n    values: number[]\n  ): \"improving\" | \"stable\" | \"declining\" {\n    if (values.length < 2) return \"stable\";\n\n    const first = values[0];\n    const last = values[values.length - 1];\n    const change = (last - first) / first;\n\n    if (Math.abs(change) < 0.05) return \"stable\";\n    return change > 0 ? \"improving\" : \"declining\";\n  }\n\n  /**\n   * Calculate correlation coefficient\n   */\n  private calculateCorrelation(x: number[], y: number[]): number {\n    if (x.length !== y.length || x.length === 0) return 0;\n\n    const n = x.length;\n    const sumX = x.reduce((a, b) => a + b, 0);\n    const sumY = y.reduce((a, b) => a + b, 0);\n    const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumX2 = x.reduce((sum, xi) => sum + xi * xi, 0);\n    const sumY2 = y.reduce((sum, yi) => sum + yi * yi, 0);\n\n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt(\n      (n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY)\n    );\n\n    return denominator === 0 ? 0 : numerator / denominator;\n  }\n\n  /**\n   * Publish integrated metrics to CloudWatch\n   */\n  private async publishIntegratedMetrics(\n    metrics: IntegratedMonitoringMetrics\n  ): Promise<void> {\n    const metricData = [\n      {\n        MetricName: \"RiskScore\",\n        Value: metrics.correlationAnalysis.riskScore,\n        Unit: \"None\",\n        Dimensions: [\n          { Name: \"ModelId\", Value: metrics.modelId },\n          { Name: \"Provider\", Value: metrics.provider },\n        ],\n        Timestamp: metrics.timestamp,\n      },\n      {\n        MetricName: \"DriftQualityCorrelation\",\n        Value: metrics.correlationAnalysis.driftQualityCorrelation,\n        Unit: \"None\",\n        Dimensions: [\n          { Name: \"ModelId\", Value: metrics.modelId },\n          { Name: \"Provider\", Value: metrics.provider },\n        ],\n        Timestamp: metrics.timestamp,\n      },\n      {\n        MetricName: \"PerformanceImpact\",\n        Value: metrics.correlationAnalysis.performanceImpact,\n        Unit: \"None\",\n        Dimensions: [\n          { Name: \"ModelId\", Value: metrics.modelId },\n          { Name: \"Provider\", Value: metrics.provider },\n        ],\n        Timestamp: metrics.timestamp,\n      },\n    ];\n\n    await this.cloudWatch.send(\n      new PutMetricDataCommand({\n        Namespace: \"AI/Integrated\",\n        MetricData: metricData,\n      })\n    );\n  }\n\n  /**\n   * Handle alerts from drift and quality monitors\n   */\n  private async handleAlert(alert: DriftAlert | QualityAlert): Promise<void> {\n    for (const callback of this.alertCallbacks) {\n      try {\n        await callback(alert);\n      } catch (error) {\n        console.error(\"Failed to handle integrated alert:\", error);\n      }\n    }\n  }\n}\n\nexport default DriftQualityIntegration;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3af5f4663ee659548d992abe9512237d7054f336"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24bcs5uwnw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24bcs5uwnw();
cov_24bcs5uwnw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_24bcs5uwnw().s[1]++;
exports.DriftQualityIntegration = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_24bcs5uwnw().s[2]++, require("tslib"));
const client_cloudwatch_1 =
/* istanbul ignore next */
(cov_24bcs5uwnw().s[3]++, require("@aws-sdk/client-cloudwatch"));
const drift_monitor_1 =
/* istanbul ignore next */
(cov_24bcs5uwnw().s[4]++, require("./drift-monitor"));
const quality_monitor_1 =
/* istanbul ignore next */
(cov_24bcs5uwnw().s[5]++, require("./quality-monitor"));
class DriftQualityIntegration {
  constructor(cloudWatch, sageMaker) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[0]++;
    cov_24bcs5uwnw().s[6]++;
    this.monitoringHistory = new Map();
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[7]++;
    this.alertCallbacks = [];
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[8]++;
    this.cloudWatch =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[0][0]++, cloudWatch) ||
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[0][1]++, new client_cloudwatch_1.CloudWatchClient({
      region:
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[1][0]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[1][1]++, "eu-central-1")
    }));
    // Initialize monitors
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[9]++;
    this.driftMonitor = new drift_monitor_1.DriftMonitor(this.cloudWatch, sageMaker);
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[10]++;
    this.qualityMonitor = new quality_monitor_1.QualityMonitor(this.driftMonitor, this.cloudWatch);
    // Register for alerts from both monitors
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[11]++;
    this.driftMonitor.onAlert(this.handleAlert.bind(this));
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[12]++;
    this.qualityMonitor.onAlert(this.handleAlert.bind(this));
  }
  /**
   * Initialize monitoring for a model
   */
  initializeModelMonitoring(modelId, baselineMetrics, sageMakerConfig) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[1]++;
    cov_24bcs5uwnw().s[13]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[2]++;
      cov_24bcs5uwnw().s[14]++;
      // Set baseline for drift monitoring
      yield this.driftMonitor.setBaseline(modelId, baselineMetrics);
      // Setup SageMaker monitoring if configured
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[15]++;
      if (sageMakerConfig) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[2][0]++;
        cov_24bcs5uwnw().s[16]++;
        yield this.driftMonitor.setupSageMakerMonitor(modelId, sageMakerConfig.endpointName, sageMakerConfig.baselineDataUri);
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[2][1]++;
      }
      // Initialize monitoring history
      cov_24bcs5uwnw().s[17]++;
      this.monitoringHistory.set(modelId, []);
    });
  }
  /**
   * Monitor AI interaction with integrated drift and quality assessment
   */
  monitorInteraction(modelId, provider, requestId, input, output, metadata, currentDriftMetrics) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[3]++;
    cov_24bcs5uwnw().s[18]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[4]++;
      // Perform drift monitoring
      const driftAlerts =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[19]++, yield this.driftMonitor.monitorDrift(currentDriftMetrics));
      // Perform quality assessment
      const qualityAssessment =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[20]++, yield this.qualityMonitor.assessQuality(modelId, provider, requestId, input, output, metadata));
      // Perform correlation analysis
      const correlationAnalysis =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[21]++, this.analyzeCorrelations(currentDriftMetrics, qualityAssessment));
      // Generate recommendations
      const recommendations =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[22]++, this.generateRecommendations(currentDriftMetrics, qualityAssessment, correlationAnalysis, driftAlerts));
      // Create integrated metrics
      const integratedMetrics =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[23]++, {
        timestamp: new Date(),
        modelId,
        provider,
        driftMetrics: currentDriftMetrics,
        qualityAssessment,
        correlationAnalysis,
        recommendations
      });
      // Store in history
      const history =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[24]++,
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[3][0]++, this.monitoringHistory.get(modelId)) ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[3][1]++, []));
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[25]++;
      history.push(integratedMetrics);
      // Keep only last 500 entries per model
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[26]++;
      if (history.length > 500) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[4][0]++;
        cov_24bcs5uwnw().s[27]++;
        history.splice(0, history.length - 500);
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[4][1]++;
      }
      cov_24bcs5uwnw().s[28]++;
      this.monitoringHistory.set(modelId, history);
      // Publish integrated metrics
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[29]++;
      yield this.publishIntegratedMetrics(integratedMetrics);
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[30]++;
      return integratedMetrics;
    });
  }
  /**
   * Get dashboard data for monitoring interface
   */
  getDashboardData(modelId, timeRange) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[5]++;
    cov_24bcs5uwnw().s[31]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[6]++;
      const history =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[32]++,
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[5][0]++, this.monitoringHistory.get(modelId)) ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[5][1]++, []));
      const relevantMetrics =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[33]++, history.filter(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[7]++;
        cov_24bcs5uwnw().s[34]++;
        return /* istanbul ignore next */(cov_24bcs5uwnw().b[6][0]++, m.timestamp >= timeRange.start) &&
        /* istanbul ignore next */
        (cov_24bcs5uwnw().b[6][1]++, m.timestamp <= timeRange.end);
      }));
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[35]++;
      if (relevantMetrics.length === 0) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[7][0]++;
        cov_24bcs5uwnw().s[36]++;
        throw new Error(`No monitoring data found for model ${modelId} in the specified time range`);
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[7][1]++;
      }
      // Calculate current status
      const latestMetrics =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[37]++, relevantMetrics[relevantMetrics.length - 1]);
      const currentStatus =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[38]++, this.calculateCurrentStatus(latestMetrics));
      // Calculate key metrics
      const keyMetrics =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[39]++, this.calculateKeyMetrics(relevantMetrics));
      // Extract trends
      const trends =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[40]++, this.extractTrends(relevantMetrics));
      // Get active alerts (last 24 hours)
      const activeAlerts =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[41]++, yield this.getActiveAlerts(modelId));
      // Generate top recommendations
      const topRecommendations =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[42]++, this.generateTopRecommendations(relevantMetrics));
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[43]++;
      return {
        modelId,
        timeRange,
        currentStatus,
        keyMetrics,
        trends,
        activeAlerts,
        topRecommendations
      };
    });
  }
  /**
   * Get quality trends with drift correlation
   */
  getQualityTrendsWithDrift(modelId, timeRange) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[8]++;
    cov_24bcs5uwnw().s[44]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[9]++;
      const qualityTrends =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[45]++, yield this.qualityMonitor.analyzeQualityTrends(modelId, timeRange));
      const history =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[46]++,
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[8][0]++, this.monitoringHistory.get(modelId)) ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[8][1]++, []));
      const relevantMetrics =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[47]++, history.filter(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[10]++;
        cov_24bcs5uwnw().s[48]++;
        return /* istanbul ignore next */(cov_24bcs5uwnw().b[9][0]++, m.timestamp >= timeRange.start) &&
        /* istanbul ignore next */
        (cov_24bcs5uwnw().b[9][1]++, m.timestamp <= timeRange.end);
      }));
      // Calculate overall drift-quality correlation
      const driftScores =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[49]++, relevantMetrics.map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[11]++;
        cov_24bcs5uwnw().s[50]++;
        return m.driftMetrics.dataDrift.score;
      }));
      const qualityScores =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[51]++, relevantMetrics.map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[12]++;
        cov_24bcs5uwnw().s[52]++;
        return m.qualityAssessment.overallScore;
      }));
      const driftCorrelation =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[53]++, this.calculateCorrelation(driftScores, qualityScores));
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[54]++;
      return Object.assign(Object.assign({}, qualityTrends), {
        driftCorrelation
      });
    });
  }
  /**
   * Register alert callback
   */
  onAlert(callback) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[13]++;
    cov_24bcs5uwnw().s[55]++;
    this.alertCallbacks.push(callback);
  }
  /**
   * Analyze correlations between drift and quality metrics
   */
  analyzeCorrelations(driftMetrics, qualityAssessment) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[14]++;
    // Calculate drift-quality correlation
    const driftScore =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[56]++, (driftMetrics.dataDrift.score + driftMetrics.promptDrift.driftScore + driftMetrics.performanceRegression.latency.regressionScore) / 3);
    const qualityScore =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[57]++, qualityAssessment.overallScore);
    const driftQualityCorrelation =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[58]++, -driftScore); // Higher drift typically means lower quality
    // Calculate performance impact
    const performanceImpact =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[59]++, Math.max(driftMetrics.performanceRegression.latency.regressionScore, driftMetrics.performanceRegression.accuracy.regressionScore, driftMetrics.performanceRegression.errorRate.regressionScore));
    // Calculate user satisfaction impact
    const userSatisfactionImpact =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[60]++, qualityAssessment.userFeedback ?
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[10][0]++, Math.max(0, (5 - qualityAssessment.userFeedback.rating) / 4)) :
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[10][1]++, 0));
    // Calculate combined risk score
    const riskScore =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[61]++, Math.min(1, driftScore * 0.3 + (1 - qualityScore) * 0.4 + performanceImpact * 0.2 + userSatisfactionImpact * 0.1));
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[62]++;
    return {
      driftQualityCorrelation,
      performanceImpact,
      userSatisfactionImpact,
      riskScore
    };
  }
  /**
   * Generate integrated recommendations
   */
  generateRecommendations(driftMetrics, qualityAssessment, correlationAnalysis, driftAlerts) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[15]++;
    const actions =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[63]++, []);
    // Determine priority based on risk score
    let priority =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[64]++, "low");
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[65]++;
    if (correlationAnalysis.riskScore >= 0.8) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[11][0]++;
      cov_24bcs5uwnw().s[66]++;
      priority = "critical";
    } else {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[11][1]++;
      cov_24bcs5uwnw().s[67]++;
      if (correlationAnalysis.riskScore >= 0.6) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[12][0]++;
        cov_24bcs5uwnw().s[68]++;
        priority = "high";
      } else {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[12][1]++;
        cov_24bcs5uwnw().s[69]++;
        if (correlationAnalysis.riskScore >= 0.4) {
          /* istanbul ignore next */
          cov_24bcs5uwnw().b[13][0]++;
          cov_24bcs5uwnw().s[70]++;
          priority = "medium";
        } else
        /* istanbul ignore next */
        {
          cov_24bcs5uwnw().b[13][1]++;
        }
      }
    }
    // Data drift recommendations
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[71]++;
    if (driftMetrics.dataDrift.score > 0.3) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[14][0]++;
      cov_24bcs5uwnw().s[72]++;
      actions.push({
        type: "immediate",
        description: "Review and update training data to address data drift",
        impact: "high",
        effort: "medium"
      });
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[14][1]++;
    }
    // Prompt drift recommendations
    cov_24bcs5uwnw().s[73]++;
    if (driftMetrics.promptDrift.driftScore > 0.2) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[15][0]++;
      cov_24bcs5uwnw().s[74]++;
      actions.push({
        type: "short_term",
        description: "Optimize prompt templates based on usage patterns",
        impact: "medium",
        effort: "low"
      });
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[15][1]++;
    }
    // Performance regression recommendations
    cov_24bcs5uwnw().s[75]++;
    if (correlationAnalysis.performanceImpact > 0.3) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[16][0]++;
      cov_24bcs5uwnw().s[76]++;
      actions.push({
        type: "immediate",
        description: "Investigate and resolve performance bottlenecks",
        impact: "high",
        effort: "medium"
      });
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[16][1]++;
    }
    // Quality improvement recommendations
    cov_24bcs5uwnw().s[77]++;
    if (qualityAssessment.overallScore < 0.7) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[17][0]++;
      cov_24bcs5uwnw().s[78]++;
      actions.push({
        type: "short_term",
        description: "Implement quality improvement measures (fine-tuning, RAG)",
        impact: "high",
        effort: "high"
      });
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[17][1]++;
    }
    // User satisfaction recommendations
    cov_24bcs5uwnw().s[79]++;
    if (correlationAnalysis.userSatisfactionImpact > 0.3) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[18][0]++;
      cov_24bcs5uwnw().s[80]++;
      actions.push({
        type: "short_term",
        description: "Analyze user feedback and improve response relevance",
        impact: "medium",
        effort: "medium"
      });
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[18][1]++;
    }
    cov_24bcs5uwnw().s[81]++;
    return {
      priority,
      actions
    };
  }
  /**
   * Calculate current status from latest metrics
   */
  calculateCurrentStatus(metrics) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[16]++;
    const {
      driftMetrics,
      qualityAssessment,
      correlationAnalysis
    } =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[82]++, metrics);
    // Determine drift status
    let driftStatus =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[83]++, "stable");
    const maxDriftScore =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[84]++, Math.max(driftMetrics.dataDrift.score, driftMetrics.promptDrift.driftScore));
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[85]++;
    if (maxDriftScore >= 0.5) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[19][0]++;
      cov_24bcs5uwnw().s[86]++;
      driftStatus = "critical";
    } else {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[19][1]++;
      cov_24bcs5uwnw().s[87]++;
      if (maxDriftScore >= 0.3) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[20][0]++;
        cov_24bcs5uwnw().s[88]++;
        driftStatus = "warning";
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[20][1]++;
      }
    }
    // Determine quality status
    let qualityStatus =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[89]++, "good");
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[90]++;
    if (qualityAssessment.overallScore <= 0.6) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[21][0]++;
      cov_24bcs5uwnw().s[91]++;
      qualityStatus = "poor";
    } else {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[21][1]++;
      cov_24bcs5uwnw().s[92]++;
      if (qualityAssessment.overallScore <= 0.7) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[22][0]++;
        cov_24bcs5uwnw().s[93]++;
        qualityStatus = "warning";
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[22][1]++;
      }
    }
    // Determine performance status
    let performanceStatus =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[94]++, "optimal");
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[95]++;
    if (correlationAnalysis.performanceImpact >= 0.5) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[23][0]++;
      cov_24bcs5uwnw().s[96]++;
      performanceStatus = "poor";
    } else {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[23][1]++;
      cov_24bcs5uwnw().s[97]++;
      if (correlationAnalysis.performanceImpact >= 0.3) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[24][0]++;
        cov_24bcs5uwnw().s[98]++;
        performanceStatus = "degraded";
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[24][1]++;
      }
    }
    // Determine overall health
    let overallHealth =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[99]++, "healthy");
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[100]++;
    if (
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[26][0]++, driftStatus === "critical") ||
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[26][1]++, qualityStatus === "poor") ||
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[26][2]++, performanceStatus === "poor")) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[25][0]++;
      cov_24bcs5uwnw().s[101]++;
      overallHealth = "critical";
    } else {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[25][1]++;
      cov_24bcs5uwnw().s[102]++;
      if (
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[28][0]++, driftStatus === "warning") ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[28][1]++, qualityStatus === "warning") ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[28][2]++, performanceStatus === "degraded")) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[27][0]++;
        cov_24bcs5uwnw().s[103]++;
        overallHealth = "warning";
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[27][1]++;
      }
    }
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[104]++;
    return {
      overallHealth,
      driftStatus,
      qualityStatus,
      performanceStatus
    };
  }
  /**
   * Calculate key metrics from historical data
   */
  calculateKeyMetrics(metrics) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[17]++;
    var _a;
    const latest =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[105]++, metrics[metrics.length - 1]);
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[106]++;
    return {
      overallScore: latest.correlationAnalysis.riskScore,
      driftScore: (latest.driftMetrics.dataDrift.score + latest.driftMetrics.promptDrift.driftScore) / 2,
      qualityScore: latest.qualityAssessment.overallScore,
      performanceScore: 1 - latest.correlationAnalysis.performanceImpact,
      userSatisfactionScore:
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[29][0]++,
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[31][0]++, (_a = latest.qualityAssessment.userFeedback) === null) ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[31][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[30][0]++, void 0) :
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[30][1]++, _a.rating)) ||
      /* istanbul ignore next */
      (cov_24bcs5uwnw().b[29][1]++, 0)
    };
  }
  /**
   * Extract trends from historical metrics
   */
  extractTrends(metrics) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[18]++;
    cov_24bcs5uwnw().s[107]++;
    return {
      drift: metrics.map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[19]++;
        cov_24bcs5uwnw().s[108]++;
        return {
          timestamp: m.timestamp,
          score: (m.driftMetrics.dataDrift.score + m.driftMetrics.promptDrift.driftScore) / 2
        };
      }),
      quality: metrics.map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[20]++;
        cov_24bcs5uwnw().s[109]++;
        return {
          timestamp: m.timestamp,
          score: m.qualityAssessment.overallScore
        };
      }),
      performance: metrics.map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[21]++;
        cov_24bcs5uwnw().s[110]++;
        return {
          timestamp: m.timestamp,
          latency: m.qualityAssessment.performance.latency,
          accuracy: m.driftMetrics.performanceRegression.accuracy.current
        };
      }),
      userSatisfaction: metrics.filter(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[22]++;
        cov_24bcs5uwnw().s[111]++;
        return m.qualityAssessment.userFeedback;
      }).map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[23]++;
        cov_24bcs5uwnw().s[112]++;
        return {
          timestamp: m.timestamp,
          rating: m.qualityAssessment.userFeedback.rating
        };
      })
    };
  }
  /**
   * Get active alerts for a model
   */
  getActiveAlerts(modelId) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[24]++;
    cov_24bcs5uwnw().s[113]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[25]++;
      cov_24bcs5uwnw().s[114]++;
      // In a real implementation, this would query a persistent alert store
      // For now, return empty array as alerts are handled in real-time
      return [];
    });
  }
  /**
   * Generate top recommendations from historical data
   */
  generateTopRecommendations(metrics) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[26]++;
    const latest =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[115]++, metrics[metrics.length - 1]);
    const recommendations =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[116]++, []);
    // Analyze trends to generate recommendations
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[117]++;
    if (metrics.length >= 5) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[32][0]++;
      const recentMetrics =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[118]++, metrics.slice(-5));
      const qualityTrend =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[119]++, this.calculateTrendDirection(recentMetrics.map(m => {
        /* istanbul ignore next */
        cov_24bcs5uwnw().f[27]++;
        cov_24bcs5uwnw().s[120]++;
        return m.qualityAssessment.overallScore;
      })));
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[121]++;
      if (qualityTrend === "declining") {
        /* istanbul ignore next */
        cov_24bcs5uwnw().b[33][0]++;
        cov_24bcs5uwnw().s[122]++;
        recommendations.push({
          priority: "high",
          category: "quality",
          description: "Quality scores are declining - implement immediate quality improvements",
          expectedImpact: "Prevent further quality degradation and improve user satisfaction"
        });
      } else
      /* istanbul ignore next */
      {
        cov_24bcs5uwnw().b[33][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[32][1]++;
    }
    // Add recommendations based on current state
    cov_24bcs5uwnw().s[123]++;
    if (latest.correlationAnalysis.riskScore > 0.7) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[34][0]++;
      cov_24bcs5uwnw().s[124]++;
      recommendations.push({
        priority: "high",
        category: "drift",
        description: "High risk score detected - review model performance and data quality",
        expectedImpact: "Reduce system risk and improve overall stability"
      });
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[34][1]++;
    }
    cov_24bcs5uwnw().s[125]++;
    return recommendations;
  }
  /**
   * Calculate trend direction from values
   */
  calculateTrendDirection(values) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[28]++;
    cov_24bcs5uwnw().s[126]++;
    if (values.length < 2) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[35][0]++;
      cov_24bcs5uwnw().s[127]++;
      return "stable";
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[35][1]++;
    }
    const first =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[128]++, values[0]);
    const last =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[129]++, values[values.length - 1]);
    const change =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[130]++, (last - first) / first);
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[131]++;
    if (Math.abs(change) < 0.05) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[36][0]++;
      cov_24bcs5uwnw().s[132]++;
      return "stable";
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[36][1]++;
    }
    cov_24bcs5uwnw().s[133]++;
    return change > 0 ?
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[37][0]++, "improving") :
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[37][1]++, "declining");
  }
  /**
   * Calculate correlation coefficient
   */
  calculateCorrelation(x, y) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[29]++;
    cov_24bcs5uwnw().s[134]++;
    if (
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[39][0]++, x.length !== y.length) ||
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[39][1]++, x.length === 0)) {
      /* istanbul ignore next */
      cov_24bcs5uwnw().b[38][0]++;
      cov_24bcs5uwnw().s[135]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_24bcs5uwnw().b[38][1]++;
    }
    const n =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[136]++, x.length);
    const sumX =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[137]++, x.reduce((a, b) => {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[30]++;
      cov_24bcs5uwnw().s[138]++;
      return a + b;
    }, 0));
    const sumY =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[139]++, y.reduce((a, b) => {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[31]++;
      cov_24bcs5uwnw().s[140]++;
      return a + b;
    }, 0));
    const sumXY =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[141]++, x.reduce((sum, xi, i) => {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[32]++;
      cov_24bcs5uwnw().s[142]++;
      return sum + xi * y[i];
    }, 0));
    const sumX2 =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[143]++, x.reduce((sum, xi) => {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[33]++;
      cov_24bcs5uwnw().s[144]++;
      return sum + xi * xi;
    }, 0));
    const sumY2 =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[145]++, y.reduce((sum, yi) => {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[34]++;
      cov_24bcs5uwnw().s[146]++;
      return sum + yi * yi;
    }, 0));
    const numerator =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[147]++, n * sumXY - sumX * sumY);
    const denominator =
    /* istanbul ignore next */
    (cov_24bcs5uwnw().s[148]++, Math.sqrt((n * sumX2 - sumX * sumX) * (n * sumY2 - sumY * sumY)));
    /* istanbul ignore next */
    cov_24bcs5uwnw().s[149]++;
    return denominator === 0 ?
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[40][0]++, 0) :
    /* istanbul ignore next */
    (cov_24bcs5uwnw().b[40][1]++, numerator / denominator);
  }
  /**
   * Publish integrated metrics to CloudWatch
   */
  publishIntegratedMetrics(metrics) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[35]++;
    cov_24bcs5uwnw().s[150]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[36]++;
      const metricData =
      /* istanbul ignore next */
      (cov_24bcs5uwnw().s[151]++, [{
        MetricName: "RiskScore",
        Value: metrics.correlationAnalysis.riskScore,
        Unit: "None",
        Dimensions: [{
          Name: "ModelId",
          Value: metrics.modelId
        }, {
          Name: "Provider",
          Value: metrics.provider
        }],
        Timestamp: metrics.timestamp
      }, {
        MetricName: "DriftQualityCorrelation",
        Value: metrics.correlationAnalysis.driftQualityCorrelation,
        Unit: "None",
        Dimensions: [{
          Name: "ModelId",
          Value: metrics.modelId
        }, {
          Name: "Provider",
          Value: metrics.provider
        }],
        Timestamp: metrics.timestamp
      }, {
        MetricName: "PerformanceImpact",
        Value: metrics.correlationAnalysis.performanceImpact,
        Unit: "None",
        Dimensions: [{
          Name: "ModelId",
          Value: metrics.modelId
        }, {
          Name: "Provider",
          Value: metrics.provider
        }],
        Timestamp: metrics.timestamp
      }]);
      /* istanbul ignore next */
      cov_24bcs5uwnw().s[152]++;
      yield this.cloudWatch.send(new client_cloudwatch_1.PutMetricDataCommand({
        Namespace: "AI/Integrated",
        MetricData: metricData
      }));
    });
  }
  /**
   * Handle alerts from drift and quality monitors
   */
  handleAlert(alert) {
    /* istanbul ignore next */
    cov_24bcs5uwnw().f[37]++;
    cov_24bcs5uwnw().s[153]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_24bcs5uwnw().f[38]++;
      cov_24bcs5uwnw().s[154]++;
      for (const callback of this.alertCallbacks) {
        /* istanbul ignore next */
        cov_24bcs5uwnw().s[155]++;
        try {
          /* istanbul ignore next */
          cov_24bcs5uwnw().s[156]++;
          yield callback(alert);
        } catch (error) {
          /* istanbul ignore next */
          cov_24bcs5uwnw().s[157]++;
          console.error("Failed to handle integrated alert:", error);
        }
      }
    });
  }
}
/* istanbul ignore next */
cov_24bcs5uwnw().s[158]++;
exports.DriftQualityIntegration = DriftQualityIntegration;
/* istanbul ignore next */
cov_24bcs5uwnw().s[159]++;
exports.default = DriftQualityIntegration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,