6d8de579642933df83f1b2542cc0216e
"use strict";

/**
 * MCP Fallback Reliability System
 *
 * Ensures >99% success rate when direct Bedrock is unavailable by implementing
 * advanced retry mechanisms, circuit breaker patterns, and health monitoring.
 *
 * Key Features:
 * - Advanced retry logic with exponential backoff
 * - Circuit breaker protection
 * - Real-time performance monitoring
 * - Health-based recovery mechanisms
 * - Comprehensive metrics and reporting
 */
/* istanbul ignore next */
function cov_17vxw73q1() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-fallback-reliability-system.ts";
  var hash = "1ac2dc7b3970a10d7944deae2dfc913fff9c614b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-fallback-reliability-system.ts",
    statementMap: {
      "0": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "1": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "2": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "3": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 60
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 35
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 84
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 25
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 37
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "13": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "14": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 110
        }
      },
      "15": {
        start: {
          line: 61,
          column: 50
        },
        end: {
          line: 61,
          column: 75
        }
      },
      "16": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "17": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 40
        }
      },
      "18": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 30
        }
      },
      "19": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "20": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "21": {
        start: {
          line: 83,
          column: 30
        },
        end: {
          line: 83,
          column: 79
        }
      },
      "22": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 74
        }
      },
      "23": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "24": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "25": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 95,
          column: 32
        }
      },
      "26": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "27": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 102,
          column: 21
        }
      },
      "28": {
        start: {
          line: 99,
          column: 38
        },
        end: {
          line: 99,
          column: 71
        }
      },
      "29": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 48
        }
      },
      "30": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 37
        }
      },
      "31": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 106,
          column: 21
        }
      },
      "32": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 56
        }
      },
      "33": {
        start: {
          line: 108,
          column: 37
        },
        end: {
          line: 112,
          column: 22
        }
      },
      "34": {
        start: {
          line: 114,
          column: 36
        },
        end: {
          line: 114,
          column: 71
        }
      },
      "35": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 69
        }
      },
      "36": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 123,
          column: 22
        }
      },
      "37": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "38": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 131,
          column: 21
        }
      },
      "39": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 130,
          column: 33
        }
      },
      "40": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 26
        }
      },
      "41": {
        start: {
          line: 137,
          column: 28
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "42": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 72
        }
      },
      "43": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 146,
          column: 14
        }
      },
      "44": {
        start: {
          line: 150,
          column: 26
        },
        end: {
          line: 151,
          column: 75
        }
      },
      "45": {
        start: {
          line: 153,
          column: 23
        },
        end: {
          line: 153,
          column: 63
        }
      },
      "46": {
        start: {
          line: 154,
          column: 22
        },
        end: {
          line: 154,
          column: 77
        }
      },
      "47": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 34
        }
      },
      "48": {
        start: {
          line: 159,
          column: 35
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "49": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 167,
          column: 54
        }
      },
      "50": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "51": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 25
        }
      },
      "52": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "53": {
        start: {
          line: 175,
          column: 29
        },
        end: {
          line: 175,
          column: 79
        }
      },
      "54": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "55": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 48
        }
      },
      "56": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 56
        }
      },
      "57": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 29
        }
      },
      "58": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 20
        }
      },
      "59": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "60": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 49
        }
      },
      "61": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "62": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 46
        }
      },
      "63": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "64": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 48
        }
      },
      "65": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 56
        }
      },
      "66": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 54
        }
      },
      "67": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "68": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "69": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 75
        }
      },
      "70": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "71": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "72": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 49
        }
      },
      "73": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 43
        }
      },
      "74": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 47
        }
      },
      "75": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 52
        }
      },
      "76": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "77": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 47
        }
      },
      "78": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 57
        }
      },
      "79": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 51
        }
      },
      "80": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 238,
          column: 15
        }
      },
      "81": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 242,
          column: 13
        }
      },
      "82": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 241,
          column: 75
        }
      },
      "83": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "84": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "85": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 265,
          column: 19
        }
      },
      "86": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 274,
          column: 22
        }
      },
      "87": {
        start: {
          line: 276,
          column: 29
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "88": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 279,
          column: 62
        }
      },
      "89": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 73
        }
      },
      "90": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 70
        }
      },
      "91": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 286,
          column: 52
        }
      },
      "92": {
        start: {
          line: 287,
          column: 27
        },
        end: {
          line: 287,
          column: 54
        }
      },
      "93": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 289,
          column: 23
        }
      },
      "94": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 23
        }
      },
      "95": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 291,
          column: 23
        }
      },
      "96": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 23
        }
      },
      "97": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 293,
          column: 23
        }
      },
      "98": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 23
        }
      },
      "99": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 295,
          column: 23
        }
      },
      "100": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 23
        }
      },
      "101": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 19
        }
      },
      "102": {
        start: {
          line: 299,
          column: 32
        },
        end: {
          line: 299,
          column: 34
        }
      },
      "103": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "104": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 120
        }
      },
      "105": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "106": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 118
        }
      },
      "107": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "108": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 102
        }
      },
      "109": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 311,
          column: 9
        }
      },
      "110": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 111
        }
      },
      "111": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "112": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 83
        }
      },
      "113": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 31
        }
      },
      "114": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "115": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 342,
          column: 13
        }
      },
      "116": {
        start: {
          line: 321,
          column: 34
        },
        end: {
          line: 321,
          column: 72
        }
      },
      "117": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 331,
          column: 18
        }
      },
      "118": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 58
        }
      },
      "119": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "120": {
        start: {
          line: 336,
          column: 20
        },
        end: {
          line: 336,
          column: 49
        }
      },
      "121": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 52
        }
      },
      "122": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 57
        }
      },
      "123": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 374,
          column: 11
        }
      },
      "124": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 373,
          column: 13
        }
      },
      "125": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 112
        }
      },
      "126": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 111
        }
      },
      "127": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 361,
          column: 19
        }
      },
      "128": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 372,
          column: 19
        }
      },
      "129": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 47
        }
      },
      "130": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 52
        }
      },
      "131": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 402,
          column: 11
        }
      },
      "132": {
        start: {
          line: 393,
          column: 32
        },
        end: {
          line: 393,
          column: 89
        }
      },
      "133": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 401,
          column: 14
        }
      },
      "134": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "135": {
        start: {
          line: 409,
          column: 35
        },
        end: {
          line: 409,
          column: 71
        }
      },
      "136": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 44
        }
      },
      "137": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 414,
          column: 13
        }
      },
      "138": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 412,
          column: 45
        }
      },
      "139": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 48
        }
      },
      "140": {
        start: {
          line: 415,
          column: 28
        },
        end: {
          line: 415,
          column: 30
        }
      },
      "141": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "142": {
        start: {
          line: 417,
          column: 16
        },
        end: {
          line: 417,
          column: 62
        }
      },
      "143": {
        start: {
          line: 419,
          column: 17
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "144": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 420,
          column: 77
        }
      },
      "145": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 59
        }
      },
      "146": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 431,
          column: 14
        }
      },
      "147": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 476,
          column: 11
        }
      },
      "148": {
        start: {
          line: 439,
          column: 34
        },
        end: {
          line: 439,
          column: 36
        }
      },
      "149": {
        start: {
          line: 440,
          column: 30
        },
        end: {
          line: 440,
          column: 32
        }
      },
      "150": {
        start: {
          line: 441,
          column: 38
        },
        end: {
          line: 441,
          column: 39
        }
      },
      "151": {
        start: {
          line: 442,
          column: 28
        },
        end: {
          line: 442,
          column: 33
        }
      },
      "152": {
        start: {
          line: 444,
          column: 30
        },
        end: {
          line: 444,
          column: 63
        }
      },
      "153": {
        start: {
          line: 445,
          column: 38
        },
        end: {
          line: 445,
          column: 100
        }
      },
      "154": {
        start: {
          line: 445,
          column: 63
        },
        end: {
          line: 445,
          column: 73
        }
      },
      "155": {
        start: {
          line: 446,
          column: 37
        },
        end: {
          line: 446,
          column: 106
        }
      },
      "156": {
        start: {
          line: 446,
          column: 67
        },
        end: {
          line: 446,
          column: 83
        }
      },
      "157": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 453,
          column: 13
        }
      },
      "158": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 83
        }
      },
      "159": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 79
        }
      },
      "160": {
        start: {
          line: 451,
          column: 16
        },
        end: {
          line: 451,
          column: 41
        }
      },
      "161": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 452,
          column: 37
        }
      },
      "162": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 459,
          column: 13
        }
      },
      "163": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 92
        }
      },
      "164": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 203
        }
      },
      "165": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 41
        }
      },
      "166": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 466,
          column: 13
        }
      },
      "167": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 97
        }
      },
      "168": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 106
        }
      },
      "169": {
        start: {
          line: 464,
          column: 16
        },
        end: {
          line: 464,
          column: 41
        }
      },
      "170": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 465,
          column: 37
        }
      },
      "171": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 469,
          column: 13
        }
      },
      "172": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 96
        }
      },
      "173": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 475,
          column: 14
        }
      },
      "174": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 51
        }
      },
      "175": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 485,
          column: 65
        }
      },
      "176": {
        start: {
          line: 485,
          column: 40
        },
        end: {
          line: 485,
          column: 63
        }
      },
      "177": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 499,
          column: 11
        }
      },
      "178": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 498,
          column: 13
        }
      },
      "179": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 493,
          column: 54
        }
      },
      "180": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 61
        }
      },
      "181": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "182": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 49
        }
      },
      "183": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 46
        }
      },
      "184": {
        start: {
          line: 511,
          column: 0
        },
        end: {
          line: 511,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 29
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 49
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 44
          },
          end: {
            line: 61,
            column: 45
          }
        },
        loc: {
          start: {
            line: 61,
            column: 50
          },
          end: {
            line: 61,
            column: 75
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 57
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 58
          },
          end: {
            line: 67,
            column: 59
          }
        },
        loc: {
          start: {
            line: 67,
            column: 132
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 23
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 157
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 27
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 169
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        loc: {
          start: {
            line: 184,
            column: 42
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 184
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 185,
            column: 55
          },
          end: {
            line: 185,
            column: 56
          }
        },
        loc: {
          start: {
            line: 185,
            column: 68
          },
          end: {
            line: 216,
            column: 9
          }
        },
        line: 185
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 49
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 218
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 219,
            column: 55
          },
          end: {
            line: 219,
            column: 56
          }
        },
        loc: {
          start: {
            line: 219,
            column: 68
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 219
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 36
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 269
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 32
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 285
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        loc: {
          start: {
            line: 298,
            column: 30
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 298
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 5
          }
        },
        loc: {
          start: {
            line: 317,
            column: 25
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 317
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 318,
            column: 55
          },
          end: {
            line: 318,
            column: 56
          }
        },
        loc: {
          start: {
            line: 318,
            column: 68
          },
          end: {
            line: 343,
            column: 9
          }
        },
        line: 318
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 345,
            column: 22
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 345
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 346,
            column: 55
          },
          end: {
            line: 346,
            column: 56
          }
        },
        loc: {
          start: {
            line: 346,
            column: 68
          },
          end: {
            line: 374,
            column: 9
          }
        },
        line: 346
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 25
          },
          end: {
            line: 381,
            column: 5
          }
        },
        line: 379
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 22
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 385
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 391,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        loc: {
          start: {
            line: 391,
            column: 33
          },
          end: {
            line: 403,
            column: 5
          }
        },
        line: 391
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 392,
            column: 55
          },
          end: {
            line: 392,
            column: 56
          }
        },
        loc: {
          start: {
            line: 392,
            column: 68
          },
          end: {
            line: 402,
            column: 9
          }
        },
        line: 392
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 407,
            column: 5
          }
        },
        loc: {
          start: {
            line: 407,
            column: 34
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 407
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 408,
            column: 55
          },
          end: {
            line: 408,
            column: 56
          }
        },
        loc: {
          start: {
            line: 408,
            column: 68
          },
          end: {
            line: 432,
            column: 9
          }
        },
        line: 408
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        loc: {
          start: {
            line: 437,
            column: 36
          },
          end: {
            line: 477,
            column: 5
          }
        },
        line: 437
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 438,
            column: 55
          },
          end: {
            line: 438,
            column: 56
          }
        },
        loc: {
          start: {
            line: 438,
            column: 68
          },
          end: {
            line: 476,
            column: 9
          }
        },
        line: 438
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 445,
            column: 55
          },
          end: {
            line: 445,
            column: 56
          }
        },
        loc: {
          start: {
            line: 445,
            column: 63
          },
          end: {
            line: 445,
            column: 73
          }
        },
        line: 445
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 446,
            column: 54
          },
          end: {
            line: 446,
            column: 55
          }
        },
        loc: {
          start: {
            line: 446,
            column: 67
          },
          end: {
            line: 446,
            column: 83
          }
        },
        line: 446
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 481,
            column: 4
          },
          end: {
            line: 481,
            column: 5
          }
        },
        loc: {
          start: {
            line: 481,
            column: 37
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 481
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 484,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        },
        loc: {
          start: {
            line: 484,
            column: 14
          },
          end: {
            line: 486,
            column: 5
          }
        },
        line: 484
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 485,
            column: 27
          },
          end: {
            line: 485,
            column: 28
          }
        },
        loc: {
          start: {
            line: 485,
            column: 40
          },
          end: {
            line: 485,
            column: 63
          }
        },
        line: 485
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 24
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 490
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 491,
            column: 55
          },
          end: {
            line: 491,
            column: 56
          }
        },
        loc: {
          start: {
            line: 491,
            column: 68
          },
          end: {
            line: 499,
            column: 9
          }
        },
        line: 491
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 14
          },
          end: {
            line: 509,
            column: 5
          }
        },
        line: 504
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 36
          }
        }, {
          start: {
            line: 24,
            column: 40
          },
          end: {
            line: 24,
            column: 83
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 93
          },
          end: {
            line: 67,
            column: 130
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 102
          },
          end: {
            line: 67,
            column: 130
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "3": {
        loc: {
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 20
          },
          end: {
            line: 102,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 106,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 106,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 104,
            column: 24
          },
          end: {
            line: 104,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 24
          },
          end: {
            line: 104,
            column: 35
          }
        }, {
          start: {
            line: 104,
            column: 39
          },
          end: {
            line: 104,
            column: 67
          }
        }],
        line: 104
      },
      "6": {
        loc: {
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 131,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "7": {
        loc: {
          start: {
            line: 128,
            column: 24
          },
          end: {
            line: 129,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 24
          },
          end: {
            line: 128,
            column: 56
          }
        }, {
          start: {
            line: 129,
            column: 24
          },
          end: {
            line: 129,
            column: 47
          }
        }],
        line: 128
      },
      "8": {
        loc: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 167,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 68
          }
        }, {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 52
          }
        }],
        line: 166
      },
      "9": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "10": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "11": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "12": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "13": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "14": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "15": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 242,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "16": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "17": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 274,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 18
          },
          end: {
            line: 273,
            column: 87
          }
        }, {
          start: {
            line: 274,
            column: 18
          },
          end: {
            line: 274,
            column: 21
          }
        }],
        line: 272
      },
      "18": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "19": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 31
          }
        }, {
          start: {
            line: 288,
            column: 35
          },
          end: {
            line: 288,
            column: 53
          }
        }],
        line: 288
      },
      "20": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 291,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 291,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "21": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 31
          }
        }, {
          start: {
            line: 290,
            column: 35
          },
          end: {
            line: 290,
            column: 54
          }
        }],
        line: 290
      },
      "22": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 293,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 293,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "23": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 31
          }
        }, {
          start: {
            line: 292,
            column: 35
          },
          end: {
            line: 292,
            column: 54
          }
        }],
        line: 292
      },
      "24": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 295,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 295,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "25": {
        loc: {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 294,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 294,
            column: 30
          }
        }, {
          start: {
            line: 294,
            column: 34
          },
          end: {
            line: 294,
            column: 53
          }
        }],
        line: 294
      },
      "26": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "27": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "28": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "29": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 311,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "30": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 314,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 314,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "31": {
        loc: {
          start: {
            line: 329,
            column: 31
          },
          end: {
            line: 329,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 31
          },
          end: {
            line: 329,
            column: 50
          }
        }, {
          start: {
            line: 329,
            column: 54
          },
          end: {
            line: 329,
            column: 55
          }
        }],
        line: 329
      },
      "32": {
        loc: {
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 330,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 330,
            column: 66
          }
        }, {
          start: {
            line: 330,
            column: 70
          },
          end: {
            line: 330,
            column: 71
          }
        }],
        line: 330
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 16
          },
          end: {
            line: 337,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 334,
            column: 20
          },
          end: {
            line: 335,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 20
          },
          end: {
            line: 334,
            column: 48
          }
        }, {
          start: {
            line: 335,
            column: 20
          },
          end: {
            line: 335,
            column: 61
          }
        }],
        line: 334
      },
      "35": {
        loc: {
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 350,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 90
          },
          end: {
            line: 350,
            column: 96
          }
        }, {
          start: {
            line: 350,
            column: 99
          },
          end: {
            line: 350,
            column: 110
          }
        }],
        line: 350
      },
      "36": {
        loc: {
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 350,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 350,
            column: 70
          }
        }, {
          start: {
            line: 350,
            column: 74
          },
          end: {
            line: 350,
            column: 87
          }
        }],
        line: 350
      },
      "37": {
        loc: {
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 414,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 414,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "38": {
        loc: {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }],
        line: 416
      },
      "39": {
        loc: {
          start: {
            line: 416,
            column: 16
          },
          end: {
            line: 416,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 16
          },
          end: {
            line: 416,
            column: 41
          }
        }, {
          start: {
            line: 416,
            column: 45
          },
          end: {
            line: 416,
            column: 72
          }
        }],
        line: 416
      },
      "40": {
        loc: {
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: 422,
            column: 17
          },
          end: {
            line: 424,
            column: 13
          }
        }],
        line: 419
      },
      "41": {
        loc: {
          start: {
            line: 426,
            column: 32
          },
          end: {
            line: 426,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 32
          },
          end: {
            line: 426,
            column: 57
          }
        }, {
          start: {
            line: 426,
            column: 61
          },
          end: {
            line: 426,
            column: 88
          }
        }],
        line: 426
      },
      "42": {
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "43": {
        loc: {
          start: {
            line: 448,
            column: 16
          },
          end: {
            line: 448,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 16
          },
          end: {
            line: 448,
            column: 40
          }
        }, {
          start: {
            line: 448,
            column: 44
          },
          end: {
            line: 448,
            column: 70
          }
        }],
        line: 448
      },
      "44": {
        loc: {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 459,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 459,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "45": {
        loc: {
          start: {
            line: 461,
            column: 12
          },
          end: {
            line: 466,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 12
          },
          end: {
            line: 466,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "46": {
        loc: {
          start: {
            line: 467,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "47": {
        loc: {
          start: {
            line: 481,
            column: 24
          },
          end: {
            line: 481,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 481,
            column: 32
          },
          end: {
            line: 481,
            column: 35
          }
        }],
        line: 481
      },
      "48": {
        loc: {
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 505
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-fallback-reliability-system.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/mcp-fallback-reliability-system.ts"],
      sourcesContent: ["/**\n * MCP Fallback Reliability System\n *\n * Ensures >99% success rate when direct Bedrock is unavailable by implementing\n * advanced retry mechanisms, circuit breaker patterns, and health monitoring.\n *\n * Key Features:\n * - Advanced retry logic with exponential backoff\n * - Circuit breaker protection\n * - Real-time performance monitoring\n * - Health-based recovery mechanisms\n * - Comprehensive metrics and reporting\n */\n\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { MCPRouter } from \"./mcp-router\";\n\nexport interface MCPFallbackConfig {\n  maxRetries: number;\n  baseRetryDelay: number;\n  maxRetryDelay: number;\n  exponentialBackoffMultiplier: number;\n  circuitBreakerThreshold: number;\n  circuitBreakerTimeout: number;\n  healthCheckInterval: number;\n  successRateTarget: number;\n  performanceThresholds: {\n    maxLatency: number;\n    maxErrorRate: number;\n    minSuccessRate: number;\n  };\n}\n\nexport interface MCPFallbackMetrics {\n  totalFallbackAttempts: number;\n  successfulFallbacks: number;\n  failedFallbacks: number;\n  successRate: number;\n  averageLatency: number;\n  retryCount: number;\n  circuitBreakerTrips: number;\n  lastHealthCheck: Date;\n  performanceGrade: \"A\" | \"B\" | \"C\" | \"D\" | \"F\";\n  recommendations: string[];\n}\n\nexport interface MCPFallbackResult {\n  success: boolean;\n  response?: any;\n  error?: Error;\n  latency: number;\n  retryCount: number;\n  routeUsed: \"mcp\" | \"fallback\";\n  correlationId: string;\n}\n\nexport interface MCPHealthStatus {\n  isHealthy: boolean;\n  lastCheck: Date;\n  consecutiveFailures: number;\n  averageLatency: number;\n  successRate: number;\n  queueSize: number;\n  pendingOperations: number;\n}\n\nexport interface ReliabilityValidation {\n  meetsTarget: boolean;\n  currentSuccessRate: number;\n  targetSuccessRate: number;\n  totalOperations: number;\n  recommendations: string[];\n  lastValidation: Date;\n}\n\nexport interface HealthCheckResult {\n  healthImproved: boolean;\n  previousHealth: MCPHealthStatus;\n  currentHealth: MCPHealthStatus;\n  actions: string[];\n  timestamp: Date;\n}\n\nexport interface ConfigOptimization {\n  optimizations: string[];\n  newConfig: Partial<MCPFallbackConfig>;\n  expectedImprovement: number;\n  riskLevel: \"low\" | \"medium\" | \"high\";\n}\n\nexport class MCPFallbackReliabilitySystem {\n  private mcpRouter: MCPRouter;\n  private auditTrail: AuditTrailSystem;\n  private config: MCPFallbackConfig;\n  private metrics: MCPFallbackMetrics;\n  private healthStatus: MCPHealthStatus;\n  private circuitBreakerOpen: boolean = false;\n  private circuitBreakerOpenTime?: Date;\n  private healthCheckTimer?: NodeJS.Timeout;\n  private operationHistory: Array<{\n    timestamp: Date;\n    success: boolean;\n    latency: number;\n    error?: string;\n  }> = [];\n\n  constructor(\n    mcpRouter: MCPRouter,\n    auditTrail?: AuditTrailSystem,\n    config?: Partial<MCPFallbackConfig>\n  ) {\n    this.mcpRouter = mcpRouter;\n    this.auditTrail = auditTrail || new AuditTrailSystem();\n\n    // Default production configuration optimized for >99% success rate\n    this.config = {\n      maxRetries: 5,\n      baseRetryDelay: 1000, // 1 second\n      maxRetryDelay: 30000, // 30 seconds\n      exponentialBackoffMultiplier: 2,\n      circuitBreakerThreshold: 5,\n      circuitBreakerTimeout: 60000, // 1 minute\n      healthCheckInterval: 30000, // 30 seconds\n      successRateTarget: 0.99, // 99%\n      performanceThresholds: {\n        maxLatency: 15000, // 15 seconds\n        maxErrorRate: 0.01, // 1%\n        minSuccessRate: 0.99, // 99%\n      },\n      ...config,\n    };\n\n    this.initializeMetrics();\n    this.initializeHealthStatus();\n    this.startHealthMonitoring();\n  }\n\n  private initializeMetrics(): void {\n    this.metrics = {\n      totalFallbackAttempts: 0,\n      successfulFallbacks: 0,\n      failedFallbacks: 0,\n      successRate: 1.0,\n      averageLatency: 0,\n      retryCount: 0,\n      circuitBreakerTrips: 0,\n      lastHealthCheck: new Date(),\n      performanceGrade: \"A\",\n      recommendations: [],\n    };\n  }\n\n  private initializeHealthStatus(): void {\n    this.healthStatus = {\n      isHealthy: true,\n      lastCheck: new Date(),\n      consecutiveFailures: 0,\n      averageLatency: 0,\n      successRate: 1.0,\n      queueSize: 0,\n      pendingOperations: 0,\n    };\n  }\n\n  private startHealthMonitoring(): void {\n    this.healthCheckTimer = setInterval(\n      () => this.performHealthCheck(),\n      this.config.healthCheckInterval\n    );\n  }\n\n  /**\n   * Execute MCP fallback operation with reliability guarantees\n   */\n  async executeFallbackOperation(\n    request: any,\n    correlationId: string,\n    reason: string = \"Direct Bedrock unavailable\"\n  ): Promise<MCPFallbackResult> {\n    const startTime = Date.now();\n    let retryCount = 0;\n    let lastError: Error | undefined;\n\n    // Log fallback initiation\n    await this.auditTrail.logEvent({\n      eventType: \"mcp_fallback_initiation\",\n      correlationId,\n      metadata: {\n        reason,\n        config: this.config,\n        healthStatus: this.healthStatus,\n      },\n    });\n\n    // Check circuit breaker\n    if (this.isCircuitBreakerOpen()) {\n      const error = new Error(\"MCP fallback circuit breaker is open\");\n      await this.recordFailure(startTime, error, correlationId);\n      return {\n        success: false,\n        error,\n        latency: Math.max(Date.now() - startTime, 1), // Ensure minimum 1ms latency\n        retryCount: 0,\n        routeUsed: \"fallback\",\n        correlationId,\n      };\n    }\n\n    // Execute with retry logic\n    for (let attempt = 0; attempt <= this.config.maxRetries; attempt++) {\n      try {\n        // Add jitter to prevent thundering herd\n        if (attempt > 0) {\n          const delay = this.calculateRetryDelay(attempt);\n          await this.sleep(delay);\n          retryCount++;\n        }\n\n        // Check health before retry\n        if (attempt > 0 && !this.healthStatus.isHealthy) {\n          await this.performHealthCheck();\n        }\n\n        // Execute MCP operation\n        const response = await this.mcpRouter.routeRequest(request, {\n          timeout: this.config.performanceThresholds.maxLatency,\n          priority: \"high\",\n          correlationId,\n        });\n\n        // Success - record and return\n        const latency = Math.max(Date.now() - startTime, 1); // Ensure minimum 1ms latency\n        await this.recordSuccess(latency, correlationId);\n\n        return {\n          success: true,\n          response,\n          latency,\n          retryCount,\n          routeUsed: \"mcp\",\n          correlationId,\n        };\n      } catch (error) {\n        lastError = error as Error;\n\n        // Check if we should retry\n        if (\n          attempt < this.config.maxRetries &&\n          this.shouldRetry(error as Error)\n        ) {\n          continue;\n        }\n\n        // Final failure\n        break;\n      }\n    }\n\n    // All retries exhausted - record failure\n    const latency = Math.max(Date.now() - startTime, 1); // Ensure minimum 1ms latency\n    await this.recordFailure(latency, lastError!, correlationId);\n\n    return {\n      success: false,\n      error: lastError,\n      latency,\n      retryCount,\n      routeUsed: \"fallback\",\n      correlationId,\n    };\n  }\n\n  private calculateRetryDelay(attempt: number): number {\n    const baseDelay =\n      this.config.baseRetryDelay *\n      Math.pow(this.config.exponentialBackoffMultiplier, attempt - 1);\n\n    // Add jitter (\xB125%)\n    const jitter = baseDelay * 0.25 * (Math.random() - 0.5);\n    const delay = Math.min(baseDelay + jitter, this.config.maxRetryDelay);\n\n    return Math.max(delay, 0);\n  }\n\n  private shouldRetry(error: Error): boolean {\n    // Don't retry on certain error types\n    const nonRetryableErrors = [\n      \"ValidationError\",\n      \"AuthenticationError\",\n      \"AuthorizationError\",\n      \"InvalidInputError\",\n    ];\n\n    // Check both constructor name and error name property\n    return (\n      !nonRetryableErrors.includes(error.constructor.name) &&\n      !nonRetryableErrors.includes(error.name)\n    );\n  }\n\n  private isCircuitBreakerOpen(): boolean {\n    if (!this.circuitBreakerOpen) {\n      return false;\n    }\n\n    // Check if timeout has passed\n    if (this.circuitBreakerOpenTime) {\n      const timeOpen = Date.now() - this.circuitBreakerOpenTime.getTime();\n      if (timeOpen >= this.config.circuitBreakerTimeout) {\n        this.circuitBreakerOpen = false;\n        this.circuitBreakerOpenTime = undefined;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private async recordSuccess(\n    latency: number,\n    correlationId: string\n  ): Promise<void> {\n    this.metrics.totalFallbackAttempts++;\n    this.metrics.successfulFallbacks++;\n    this.updateMetrics(latency, true);\n\n    // Reset circuit breaker on success\n    if (this.circuitBreakerOpen) {\n      this.circuitBreakerOpen = false;\n      this.circuitBreakerOpenTime = undefined;\n    }\n\n    // Reset consecutive failures\n    this.healthStatus.consecutiveFailures = 0;\n\n    // Record in operation history\n    this.operationHistory.push({\n      timestamp: new Date(),\n      success: true,\n      latency,\n    });\n\n    // Trim history to last 1000 operations\n    if (this.operationHistory.length > 1000) {\n      this.operationHistory = this.operationHistory.slice(-1000);\n    }\n\n    // Log success\n    await this.auditTrail.logEvent({\n      eventType: \"mcp_fallback_completion\",\n      correlationId,\n      metadata: {\n        success: true,\n        latency,\n        metrics: this.metrics,\n      },\n    });\n  }\n\n  private async recordFailure(\n    latency: number,\n    error: Error,\n    correlationId: string\n  ): Promise<void> {\n    this.metrics.totalFallbackAttempts++;\n    this.metrics.failedFallbacks++;\n    this.updateMetrics(latency, false);\n\n    // Update health status\n    this.healthStatus.consecutiveFailures++;\n\n    // Check circuit breaker threshold\n    if (\n      this.healthStatus.consecutiveFailures >=\n      this.config.circuitBreakerThreshold\n    ) {\n      this.circuitBreakerOpen = true;\n      this.circuitBreakerOpenTime = new Date();\n      this.metrics.circuitBreakerTrips++;\n    }\n\n    // Record in operation history\n    this.operationHistory.push({\n      timestamp: new Date(),\n      success: false,\n      latency,\n      error: error.message,\n    });\n\n    // Trim history\n    if (this.operationHistory.length > 1000) {\n      this.operationHistory = this.operationHistory.slice(-1000);\n    }\n\n    // Log failure\n    await this.auditTrail.logEvent({\n      eventType: \"mcp_fallback_completion\",\n      correlationId,\n      metadata: {\n        success: false,\n        error: error.message,\n        latency,\n        metrics: this.metrics,\n      },\n    });\n\n    // Log reliability issue if success rate drops below target\n    if (this.metrics.successRate < this.config.successRateTarget) {\n      await this.auditTrail.logEvent({\n        eventType: \"mcp_fallback_reliability_issue\",\n        correlationId,\n        metadata: {\n          currentSuccessRate: this.metrics.successRate,\n          targetSuccessRate: this.config.successRateTarget,\n          consecutiveFailures: this.healthStatus.consecutiveFailures,\n          recommendations: this.generateRecommendations(),\n        },\n      });\n    }\n  }\n\n  private updateMetrics(latency: number, success: boolean): void {\n    // Update success rate\n    this.metrics.successRate =\n      this.metrics.totalFallbackAttempts > 0\n        ? this.metrics.successfulFallbacks / this.metrics.totalFallbackAttempts\n        : 1.0;\n\n    // Update average latency\n    const totalLatency =\n      this.metrics.averageLatency * (this.metrics.totalFallbackAttempts - 1) +\n      latency;\n    this.metrics.averageLatency =\n      totalLatency / this.metrics.totalFallbackAttempts;\n\n    // Update performance grade\n    this.metrics.performanceGrade = this.calculatePerformanceGrade();\n\n    // Update recommendations\n    this.metrics.recommendations = this.generateRecommendations();\n  }\n\n  private calculatePerformanceGrade(): \"A\" | \"B\" | \"C\" | \"D\" | \"F\" {\n    const successRate = this.metrics.successRate;\n    const avgLatency = this.metrics.averageLatency;\n\n    if (successRate >= 0.99 && avgLatency <= 5000) return \"A\";\n    if (successRate >= 0.98 && avgLatency <= 10000) return \"B\";\n    if (successRate >= 0.95 && avgLatency <= 15000) return \"C\";\n    if (successRate >= 0.9 && avgLatency <= 30000) return \"D\";\n    return \"F\";\n  }\n\n  private generateRecommendations(): string[] {\n    const recommendations: string[] = [];\n\n    if (this.metrics.successRate < this.config.successRateTarget) {\n      recommendations.push(\n        \"Success rate below target - consider increasing retry count or improving MCP health\"\n      );\n    }\n\n    if (\n      this.metrics.averageLatency > this.config.performanceThresholds.maxLatency\n    ) {\n      recommendations.push(\n        \"Average latency too high - consider optimizing MCP operations or reducing timeout\"\n      );\n    }\n\n    if (this.metrics.circuitBreakerTrips > 0) {\n      recommendations.push(\n        \"Circuit breaker has tripped - investigate MCP connectivity issues\"\n      );\n    }\n\n    if (this.healthStatus.consecutiveFailures > 2) {\n      recommendations.push(\n        \"Multiple consecutive failures detected - perform health check and recovery\"\n      );\n    }\n\n    if (recommendations.length === 0) {\n      recommendations.push(\"System performing within acceptable parameters\");\n    }\n\n    return recommendations;\n  }\n\n  private async performHealthCheck(): Promise<void> {\n    try {\n      // Check MCP router health\n      const mcpHealth = await this.mcpRouter.getHealthStatus();\n\n      // Update health status\n      this.healthStatus = {\n        isHealthy: mcpHealth.isHealthy,\n        lastCheck: new Date(),\n        consecutiveFailures: this.healthStatus.consecutiveFailures,\n        averageLatency: this.metrics.averageLatency,\n        successRate: this.metrics.successRate,\n        queueSize: mcpHealth.queueSize || 0,\n        pendingOperations: mcpHealth.pendingOperations || 0,\n      };\n\n      this.metrics.lastHealthCheck = new Date();\n\n      // Trigger recovery if needed\n      if (\n        !this.healthStatus.isHealthy &&\n        this.healthStatus.consecutiveFailures > 3\n      ) {\n        await this.triggerRecovery();\n      }\n    } catch (error) {\n      this.healthStatus.isHealthy = false;\n      this.healthStatus.lastCheck = new Date();\n    }\n  }\n\n  private async triggerRecovery(): Promise<void> {\n    try {\n      // Attempt to recover MCP connection\n      await this.mcpRouter.reconnect?.();\n\n      // Reset some metrics to give system a fresh start\n      this.healthStatus.consecutiveFailures = Math.max(\n        0,\n        this.healthStatus.consecutiveFailures - 2\n      );\n\n      // Log recovery attempt\n      await this.auditTrail.logEvent({\n        eventType: \"mcp_fallback_recovery_attempt\",\n        correlationId: `recovery-${Date.now()}`,\n        metadata: {\n          healthStatus: this.healthStatus,\n          metrics: this.metrics,\n        },\n      });\n    } catch (error) {\n      // Recovery failed - log it\n      await this.auditTrail.logEvent({\n        eventType: \"mcp_fallback_recovery_failed\",\n        correlationId: `recovery-failed-${Date.now()}`,\n        metadata: {\n          error: (error as Error).message,\n          healthStatus: this.healthStatus,\n        },\n      });\n    }\n  }\n\n  /**\n   * Get current fallback metrics\n   */\n  getFallbackMetrics(): MCPFallbackMetrics {\n    return { ...this.metrics };\n  }\n\n  /**\n   * Get current health status\n   */\n  getHealthStatus(): MCPHealthStatus {\n    return { ...this.healthStatus };\n  }\n\n  /**\n   * Validate if system meets reliability targets\n   */\n  async validateReliabilityTargets(): Promise<ReliabilityValidation> {\n    const meetsTarget =\n      this.metrics.successRate >= this.config.successRateTarget;\n\n    return {\n      meetsTarget,\n      currentSuccessRate: this.metrics.successRate,\n      targetSuccessRate: this.config.successRateTarget,\n      totalOperations: this.metrics.totalFallbackAttempts,\n      recommendations: this.generateRecommendations(),\n      lastValidation: new Date(),\n    };\n  }\n\n  /**\n   * Force health check and recovery\n   */\n  async forceHealthCheckAndRecovery(): Promise<HealthCheckResult> {\n    const previousHealth = { ...this.healthStatus };\n\n    await this.performHealthCheck();\n\n    if (!this.healthStatus.isHealthy) {\n      await this.triggerRecovery();\n      await this.performHealthCheck(); // Check again after recovery\n    }\n\n    const actions: string[] = [];\n    if (!previousHealth.isHealthy && this.healthStatus.isHealthy) {\n      actions.push(\"Health recovered successfully\");\n    } else if (!this.healthStatus.isHealthy) {\n      actions.push(\"Recovery attempted but health still degraded\");\n    } else {\n      actions.push(\"System was already healthy\");\n    }\n\n    return {\n      healthImproved: !previousHealth.isHealthy && this.healthStatus.isHealthy,\n      previousHealth,\n      currentHealth: { ...this.healthStatus },\n      actions,\n      timestamp: new Date(),\n    };\n  }\n\n  /**\n   * Optimize fallback configuration based on performance data\n   */\n  async optimizeFallbackConfiguration(): Promise<ConfigOptimization> {\n    const optimizations: string[] = [];\n    const newConfig: Partial<MCPFallbackConfig> = {};\n    let expectedImprovement = 0;\n    let riskLevel: \"low\" | \"medium\" | \"high\" = \"low\";\n\n    // Analyze recent performance\n    const recentOps = this.operationHistory.slice(-100);\n    const recentSuccessRate =\n      recentOps.filter((op) => op.success).length / recentOps.length;\n    const recentAvgLatency =\n      recentOps.reduce((sum, op) => sum + op.latency, 0) / recentOps.length;\n\n    // Optimize retry configuration\n    if (recentSuccessRate < 0.95 && this.config.maxRetries < 8) {\n      optimizations.push(\"Increase max retries to improve success rate\");\n      newConfig.maxRetries = Math.min(this.config.maxRetries + 2, 8);\n      expectedImprovement += 5;\n      riskLevel = \"medium\";\n    }\n\n    // Optimize timeout configuration\n    if (recentAvgLatency > this.config.performanceThresholds.maxLatency * 0.8) {\n      optimizations.push(\n        \"Increase timeout threshold to reduce timeout failures\"\n      );\n      newConfig.performanceThresholds = {\n        ...this.config.performanceThresholds,\n        maxLatency: Math.min(\n          this.config.performanceThresholds.maxLatency * 1.2,\n          30000\n        ),\n      };\n      expectedImprovement += 3;\n    }\n\n    // Optimize circuit breaker\n    if (this.metrics.circuitBreakerTrips > 2) {\n      optimizations.push(\n        \"Adjust circuit breaker threshold to reduce false positives\"\n      );\n      newConfig.circuitBreakerThreshold = Math.min(\n        this.config.circuitBreakerThreshold + 1,\n        10\n      );\n      expectedImprovement += 2;\n      riskLevel = \"medium\";\n    }\n\n    if (optimizations.length === 0) {\n      optimizations.push(\n        \"Configuration is already optimized for current conditions\"\n      );\n    }\n\n    return {\n      optimizations,\n      newConfig,\n      expectedImprovement,\n      riskLevel,\n    };\n  }\n\n  /**\n   * Get operation history for analysis\n   */\n  getOperationHistory(limit: number = 100): Array<{\n    timestamp: Date;\n    success: boolean;\n    latency: number;\n    error?: string;\n  }> {\n    return this.operationHistory.slice(-limit);\n  }\n\n  private sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Safe audit logging that doesn't throw errors\n   */\n  private async safeAuditLog(event: any): Promise<void> {\n    try {\n      await this.auditTrail.logEvent(event);\n    } catch (error) {\n      // Audit failures should not affect main operation\n      console.warn(\"Audit logging failed:\", error);\n    }\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    if (this.healthCheckTimer) {\n      clearInterval(this.healthCheckTimer);\n      this.healthCheckTimer = undefined;\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ac2dc7b3970a10d7944deae2dfc913fff9c614b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17vxw73q1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17vxw73q1();
cov_17vxw73q1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17vxw73q1().s[1]++;
exports.MCPFallbackReliabilitySystem = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_17vxw73q1().s[2]++, require("tslib"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_17vxw73q1().s[3]++, require("./audit-trail-system"));
class MCPFallbackReliabilitySystem {
  constructor(mcpRouter, auditTrail, config) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[0]++;
    cov_17vxw73q1().s[4]++;
    this.circuitBreakerOpen = false;
    /* istanbul ignore next */
    cov_17vxw73q1().s[5]++;
    this.operationHistory = [];
    /* istanbul ignore next */
    cov_17vxw73q1().s[6]++;
    this.mcpRouter = mcpRouter;
    /* istanbul ignore next */
    cov_17vxw73q1().s[7]++;
    this.auditTrail =
    /* istanbul ignore next */
    (cov_17vxw73q1().b[0][0]++, auditTrail) ||
    /* istanbul ignore next */
    (cov_17vxw73q1().b[0][1]++, new audit_trail_system_1.AuditTrailSystem());
    // Default production configuration optimized for >99% success rate
    /* istanbul ignore next */
    cov_17vxw73q1().s[8]++;
    this.config = Object.assign({
      maxRetries: 5,
      baseRetryDelay: 1000,
      maxRetryDelay: 30000,
      exponentialBackoffMultiplier: 2,
      circuitBreakerThreshold: 5,
      circuitBreakerTimeout: 60000,
      healthCheckInterval: 30000,
      successRateTarget: 0.99,
      performanceThresholds: {
        maxLatency: 15000,
        // 15 seconds
        maxErrorRate: 0.01,
        // 1%
        minSuccessRate: 0.99 // 99%
      }
    }, config);
    /* istanbul ignore next */
    cov_17vxw73q1().s[9]++;
    this.initializeMetrics();
    /* istanbul ignore next */
    cov_17vxw73q1().s[10]++;
    this.initializeHealthStatus();
    /* istanbul ignore next */
    cov_17vxw73q1().s[11]++;
    this.startHealthMonitoring();
  }
  initializeMetrics() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[1]++;
    cov_17vxw73q1().s[12]++;
    this.metrics = {
      totalFallbackAttempts: 0,
      successfulFallbacks: 0,
      failedFallbacks: 0,
      successRate: 1.0,
      averageLatency: 0,
      retryCount: 0,
      circuitBreakerTrips: 0,
      lastHealthCheck: new Date(),
      performanceGrade: "A",
      recommendations: []
    };
  }
  initializeHealthStatus() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[2]++;
    cov_17vxw73q1().s[13]++;
    this.healthStatus = {
      isHealthy: true,
      lastCheck: new Date(),
      consecutiveFailures: 0,
      averageLatency: 0,
      successRate: 1.0,
      queueSize: 0,
      pendingOperations: 0
    };
  }
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[3]++;
    cov_17vxw73q1().s[14]++;
    this.healthCheckTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_17vxw73q1().f[4]++;
      cov_17vxw73q1().s[15]++;
      return this.performHealthCheck();
    }, this.config.healthCheckInterval);
  }
  /**
   * Execute MCP fallback operation with reliability guarantees
   */
  executeFallbackOperation(request_1, correlationId_1) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[5]++;
    cov_17vxw73q1().s[16]++;
    return tslib_1.__awaiter(this, arguments, void 0, function* (request, correlationId, reason =
    /* istanbul ignore next */
    (cov_17vxw73q1().b[1][0]++, "Direct Bedrock unavailable")) {
      /* istanbul ignore next */
      cov_17vxw73q1().f[6]++;
      const startTime =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[17]++, Date.now());
      let retryCount =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[18]++, 0);
      let lastError;
      // Log fallback initiation
      /* istanbul ignore next */
      cov_17vxw73q1().s[19]++;
      yield this.auditTrail.logEvent({
        eventType: "mcp_fallback_initiation",
        correlationId,
        metadata: {
          reason,
          config: this.config,
          healthStatus: this.healthStatus
        }
      });
      // Check circuit breaker
      /* istanbul ignore next */
      cov_17vxw73q1().s[20]++;
      if (this.isCircuitBreakerOpen()) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[2][0]++;
        const error =
        /* istanbul ignore next */
        (cov_17vxw73q1().s[21]++, new Error("MCP fallback circuit breaker is open"));
        /* istanbul ignore next */
        cov_17vxw73q1().s[22]++;
        yield this.recordFailure(startTime, error, correlationId);
        /* istanbul ignore next */
        cov_17vxw73q1().s[23]++;
        return {
          success: false,
          error,
          latency: Math.max(Date.now() - startTime, 1),
          // Ensure minimum 1ms latency
          retryCount: 0,
          routeUsed: "fallback",
          correlationId
        };
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[2][1]++;
      }
      // Execute with retry logic
      cov_17vxw73q1().s[24]++;
      for (let attempt =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[25]++, 0); attempt <= this.config.maxRetries; attempt++) {
        /* istanbul ignore next */
        cov_17vxw73q1().s[26]++;
        try {
          /* istanbul ignore next */
          cov_17vxw73q1().s[27]++;
          // Add jitter to prevent thundering herd
          if (attempt > 0) {
            /* istanbul ignore next */
            cov_17vxw73q1().b[3][0]++;
            const delay =
            /* istanbul ignore next */
            (cov_17vxw73q1().s[28]++, this.calculateRetryDelay(attempt));
            /* istanbul ignore next */
            cov_17vxw73q1().s[29]++;
            yield this.sleep(delay);
            /* istanbul ignore next */
            cov_17vxw73q1().s[30]++;
            retryCount++;
          } else
          /* istanbul ignore next */
          {
            cov_17vxw73q1().b[3][1]++;
          }
          // Check health before retry
          cov_17vxw73q1().s[31]++;
          if (
          /* istanbul ignore next */
          (cov_17vxw73q1().b[5][0]++, attempt > 0) &&
          /* istanbul ignore next */
          (cov_17vxw73q1().b[5][1]++, !this.healthStatus.isHealthy)) {
            /* istanbul ignore next */
            cov_17vxw73q1().b[4][0]++;
            cov_17vxw73q1().s[32]++;
            yield this.performHealthCheck();
          } else
          /* istanbul ignore next */
          {
            cov_17vxw73q1().b[4][1]++;
          }
          // Execute MCP operation
          const response =
          /* istanbul ignore next */
          (cov_17vxw73q1().s[33]++, yield this.mcpRouter.routeRequest(request, {
            timeout: this.config.performanceThresholds.maxLatency,
            priority: "high",
            correlationId
          }));
          // Success - record and return
          const latency =
          /* istanbul ignore next */
          (cov_17vxw73q1().s[34]++, Math.max(Date.now() - startTime, 1)); // Ensure minimum 1ms latency
          /* istanbul ignore next */
          cov_17vxw73q1().s[35]++;
          yield this.recordSuccess(latency, correlationId);
          /* istanbul ignore next */
          cov_17vxw73q1().s[36]++;
          return {
            success: true,
            response,
            latency,
            retryCount,
            routeUsed: "mcp",
            correlationId
          };
        } catch (error) {
          /* istanbul ignore next */
          cov_17vxw73q1().s[37]++;
          lastError = error;
          // Check if we should retry
          /* istanbul ignore next */
          cov_17vxw73q1().s[38]++;
          if (
          /* istanbul ignore next */
          (cov_17vxw73q1().b[7][0]++, attempt < this.config.maxRetries) &&
          /* istanbul ignore next */
          (cov_17vxw73q1().b[7][1]++, this.shouldRetry(error))) {
            /* istanbul ignore next */
            cov_17vxw73q1().b[6][0]++;
            cov_17vxw73q1().s[39]++;
            continue;
          } else
          /* istanbul ignore next */
          {
            cov_17vxw73q1().b[6][1]++;
          }
          // Final failure
          cov_17vxw73q1().s[40]++;
          break;
        }
      }
      // All retries exhausted - record failure
      const latency =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[41]++, Math.max(Date.now() - startTime, 1)); // Ensure minimum 1ms latency
      /* istanbul ignore next */
      cov_17vxw73q1().s[42]++;
      yield this.recordFailure(latency, lastError, correlationId);
      /* istanbul ignore next */
      cov_17vxw73q1().s[43]++;
      return {
        success: false,
        error: lastError,
        latency,
        retryCount,
        routeUsed: "fallback",
        correlationId
      };
    });
  }
  calculateRetryDelay(attempt) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[7]++;
    const baseDelay =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[44]++, this.config.baseRetryDelay * Math.pow(this.config.exponentialBackoffMultiplier, attempt - 1));
    // Add jitter (±25%)
    const jitter =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[45]++, baseDelay * 0.25 * (Math.random() - 0.5));
    const delay =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[46]++, Math.min(baseDelay + jitter, this.config.maxRetryDelay));
    /* istanbul ignore next */
    cov_17vxw73q1().s[47]++;
    return Math.max(delay, 0);
  }
  shouldRetry(error) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[8]++;
    // Don't retry on certain error types
    const nonRetryableErrors =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[48]++, ["ValidationError", "AuthenticationError", "AuthorizationError", "InvalidInputError"]);
    // Check both constructor name and error name property
    /* istanbul ignore next */
    cov_17vxw73q1().s[49]++;
    return /* istanbul ignore next */(cov_17vxw73q1().b[8][0]++, !nonRetryableErrors.includes(error.constructor.name)) &&
    /* istanbul ignore next */
    (cov_17vxw73q1().b[8][1]++, !nonRetryableErrors.includes(error.name));
  }
  isCircuitBreakerOpen() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[9]++;
    cov_17vxw73q1().s[50]++;
    if (!this.circuitBreakerOpen) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[9][0]++;
      cov_17vxw73q1().s[51]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[9][1]++;
    }
    // Check if timeout has passed
    cov_17vxw73q1().s[52]++;
    if (this.circuitBreakerOpenTime) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[10][0]++;
      const timeOpen =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[53]++, Date.now() - this.circuitBreakerOpenTime.getTime());
      /* istanbul ignore next */
      cov_17vxw73q1().s[54]++;
      if (timeOpen >= this.config.circuitBreakerTimeout) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[11][0]++;
        cov_17vxw73q1().s[55]++;
        this.circuitBreakerOpen = false;
        /* istanbul ignore next */
        cov_17vxw73q1().s[56]++;
        this.circuitBreakerOpenTime = undefined;
        /* istanbul ignore next */
        cov_17vxw73q1().s[57]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[10][1]++;
    }
    cov_17vxw73q1().s[58]++;
    return true;
  }
  recordSuccess(latency, correlationId) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[10]++;
    cov_17vxw73q1().s[59]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[11]++;
      cov_17vxw73q1().s[60]++;
      this.metrics.totalFallbackAttempts++;
      /* istanbul ignore next */
      cov_17vxw73q1().s[61]++;
      this.metrics.successfulFallbacks++;
      /* istanbul ignore next */
      cov_17vxw73q1().s[62]++;
      this.updateMetrics(latency, true);
      // Reset circuit breaker on success
      /* istanbul ignore next */
      cov_17vxw73q1().s[63]++;
      if (this.circuitBreakerOpen) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[12][0]++;
        cov_17vxw73q1().s[64]++;
        this.circuitBreakerOpen = false;
        /* istanbul ignore next */
        cov_17vxw73q1().s[65]++;
        this.circuitBreakerOpenTime = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[12][1]++;
      }
      // Reset consecutive failures
      cov_17vxw73q1().s[66]++;
      this.healthStatus.consecutiveFailures = 0;
      // Record in operation history
      /* istanbul ignore next */
      cov_17vxw73q1().s[67]++;
      this.operationHistory.push({
        timestamp: new Date(),
        success: true,
        latency
      });
      // Trim history to last 1000 operations
      /* istanbul ignore next */
      cov_17vxw73q1().s[68]++;
      if (this.operationHistory.length > 1000) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[13][0]++;
        cov_17vxw73q1().s[69]++;
        this.operationHistory = this.operationHistory.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[13][1]++;
      }
      // Log success
      cov_17vxw73q1().s[70]++;
      yield this.auditTrail.logEvent({
        eventType: "mcp_fallback_completion",
        correlationId,
        metadata: {
          success: true,
          latency,
          metrics: this.metrics
        }
      });
    });
  }
  recordFailure(latency, error, correlationId) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[12]++;
    cov_17vxw73q1().s[71]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[13]++;
      cov_17vxw73q1().s[72]++;
      this.metrics.totalFallbackAttempts++;
      /* istanbul ignore next */
      cov_17vxw73q1().s[73]++;
      this.metrics.failedFallbacks++;
      /* istanbul ignore next */
      cov_17vxw73q1().s[74]++;
      this.updateMetrics(latency, false);
      // Update health status
      /* istanbul ignore next */
      cov_17vxw73q1().s[75]++;
      this.healthStatus.consecutiveFailures++;
      // Check circuit breaker threshold
      /* istanbul ignore next */
      cov_17vxw73q1().s[76]++;
      if (this.healthStatus.consecutiveFailures >= this.config.circuitBreakerThreshold) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[14][0]++;
        cov_17vxw73q1().s[77]++;
        this.circuitBreakerOpen = true;
        /* istanbul ignore next */
        cov_17vxw73q1().s[78]++;
        this.circuitBreakerOpenTime = new Date();
        /* istanbul ignore next */
        cov_17vxw73q1().s[79]++;
        this.metrics.circuitBreakerTrips++;
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[14][1]++;
      }
      // Record in operation history
      cov_17vxw73q1().s[80]++;
      this.operationHistory.push({
        timestamp: new Date(),
        success: false,
        latency,
        error: error.message
      });
      // Trim history
      /* istanbul ignore next */
      cov_17vxw73q1().s[81]++;
      if (this.operationHistory.length > 1000) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[15][0]++;
        cov_17vxw73q1().s[82]++;
        this.operationHistory = this.operationHistory.slice(-1000);
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[15][1]++;
      }
      // Log failure
      cov_17vxw73q1().s[83]++;
      yield this.auditTrail.logEvent({
        eventType: "mcp_fallback_completion",
        correlationId,
        metadata: {
          success: false,
          error: error.message,
          latency,
          metrics: this.metrics
        }
      });
      // Log reliability issue if success rate drops below target
      /* istanbul ignore next */
      cov_17vxw73q1().s[84]++;
      if (this.metrics.successRate < this.config.successRateTarget) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[16][0]++;
        cov_17vxw73q1().s[85]++;
        yield this.auditTrail.logEvent({
          eventType: "mcp_fallback_reliability_issue",
          correlationId,
          metadata: {
            currentSuccessRate: this.metrics.successRate,
            targetSuccessRate: this.config.successRateTarget,
            consecutiveFailures: this.healthStatus.consecutiveFailures,
            recommendations: this.generateRecommendations()
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[16][1]++;
      }
    });
  }
  updateMetrics(latency, success) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[14]++;
    cov_17vxw73q1().s[86]++;
    // Update success rate
    this.metrics.successRate = this.metrics.totalFallbackAttempts > 0 ?
    /* istanbul ignore next */
    (cov_17vxw73q1().b[17][0]++, this.metrics.successfulFallbacks / this.metrics.totalFallbackAttempts) :
    /* istanbul ignore next */
    (cov_17vxw73q1().b[17][1]++, 1.0);
    // Update average latency
    const totalLatency =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[87]++, this.metrics.averageLatency * (this.metrics.totalFallbackAttempts - 1) + latency);
    /* istanbul ignore next */
    cov_17vxw73q1().s[88]++;
    this.metrics.averageLatency = totalLatency / this.metrics.totalFallbackAttempts;
    // Update performance grade
    /* istanbul ignore next */
    cov_17vxw73q1().s[89]++;
    this.metrics.performanceGrade = this.calculatePerformanceGrade();
    // Update recommendations
    /* istanbul ignore next */
    cov_17vxw73q1().s[90]++;
    this.metrics.recommendations = this.generateRecommendations();
  }
  calculatePerformanceGrade() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[15]++;
    const successRate =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[91]++, this.metrics.successRate);
    const avgLatency =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[92]++, this.metrics.averageLatency);
    /* istanbul ignore next */
    cov_17vxw73q1().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_17vxw73q1().b[19][0]++, successRate >= 0.99) &&
    /* istanbul ignore next */
    (cov_17vxw73q1().b[19][1]++, avgLatency <= 5000)) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[18][0]++;
      cov_17vxw73q1().s[94]++;
      return "A";
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[18][1]++;
    }
    cov_17vxw73q1().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_17vxw73q1().b[21][0]++, successRate >= 0.98) &&
    /* istanbul ignore next */
    (cov_17vxw73q1().b[21][1]++, avgLatency <= 10000)) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[20][0]++;
      cov_17vxw73q1().s[96]++;
      return "B";
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[20][1]++;
    }
    cov_17vxw73q1().s[97]++;
    if (
    /* istanbul ignore next */
    (cov_17vxw73q1().b[23][0]++, successRate >= 0.95) &&
    /* istanbul ignore next */
    (cov_17vxw73q1().b[23][1]++, avgLatency <= 15000)) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[22][0]++;
      cov_17vxw73q1().s[98]++;
      return "C";
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[22][1]++;
    }
    cov_17vxw73q1().s[99]++;
    if (
    /* istanbul ignore next */
    (cov_17vxw73q1().b[25][0]++, successRate >= 0.9) &&
    /* istanbul ignore next */
    (cov_17vxw73q1().b[25][1]++, avgLatency <= 30000)) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[24][0]++;
      cov_17vxw73q1().s[100]++;
      return "D";
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[24][1]++;
    }
    cov_17vxw73q1().s[101]++;
    return "F";
  }
  generateRecommendations() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[16]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_17vxw73q1().s[102]++, []);
    /* istanbul ignore next */
    cov_17vxw73q1().s[103]++;
    if (this.metrics.successRate < this.config.successRateTarget) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[26][0]++;
      cov_17vxw73q1().s[104]++;
      recommendations.push("Success rate below target - consider increasing retry count or improving MCP health");
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[26][1]++;
    }
    cov_17vxw73q1().s[105]++;
    if (this.metrics.averageLatency > this.config.performanceThresholds.maxLatency) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[27][0]++;
      cov_17vxw73q1().s[106]++;
      recommendations.push("Average latency too high - consider optimizing MCP operations or reducing timeout");
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[27][1]++;
    }
    cov_17vxw73q1().s[107]++;
    if (this.metrics.circuitBreakerTrips > 0) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[28][0]++;
      cov_17vxw73q1().s[108]++;
      recommendations.push("Circuit breaker has tripped - investigate MCP connectivity issues");
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[28][1]++;
    }
    cov_17vxw73q1().s[109]++;
    if (this.healthStatus.consecutiveFailures > 2) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[29][0]++;
      cov_17vxw73q1().s[110]++;
      recommendations.push("Multiple consecutive failures detected - perform health check and recovery");
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[29][1]++;
    }
    cov_17vxw73q1().s[111]++;
    if (recommendations.length === 0) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[30][0]++;
      cov_17vxw73q1().s[112]++;
      recommendations.push("System performing within acceptable parameters");
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[30][1]++;
    }
    cov_17vxw73q1().s[113]++;
    return recommendations;
  }
  performHealthCheck() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[17]++;
    cov_17vxw73q1().s[114]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[18]++;
      cov_17vxw73q1().s[115]++;
      try {
        // Check MCP router health
        const mcpHealth =
        /* istanbul ignore next */
        (cov_17vxw73q1().s[116]++, yield this.mcpRouter.getHealthStatus());
        // Update health status
        /* istanbul ignore next */
        cov_17vxw73q1().s[117]++;
        this.healthStatus = {
          isHealthy: mcpHealth.isHealthy,
          lastCheck: new Date(),
          consecutiveFailures: this.healthStatus.consecutiveFailures,
          averageLatency: this.metrics.averageLatency,
          successRate: this.metrics.successRate,
          queueSize:
          /* istanbul ignore next */
          (cov_17vxw73q1().b[31][0]++, mcpHealth.queueSize) ||
          /* istanbul ignore next */
          (cov_17vxw73q1().b[31][1]++, 0),
          pendingOperations:
          /* istanbul ignore next */
          (cov_17vxw73q1().b[32][0]++, mcpHealth.pendingOperations) ||
          /* istanbul ignore next */
          (cov_17vxw73q1().b[32][1]++, 0)
        };
        /* istanbul ignore next */
        cov_17vxw73q1().s[118]++;
        this.metrics.lastHealthCheck = new Date();
        // Trigger recovery if needed
        /* istanbul ignore next */
        cov_17vxw73q1().s[119]++;
        if (
        /* istanbul ignore next */
        (cov_17vxw73q1().b[34][0]++, !this.healthStatus.isHealthy) &&
        /* istanbul ignore next */
        (cov_17vxw73q1().b[34][1]++, this.healthStatus.consecutiveFailures > 3)) {
          /* istanbul ignore next */
          cov_17vxw73q1().b[33][0]++;
          cov_17vxw73q1().s[120]++;
          yield this.triggerRecovery();
        } else
        /* istanbul ignore next */
        {
          cov_17vxw73q1().b[33][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_17vxw73q1().s[121]++;
        this.healthStatus.isHealthy = false;
        /* istanbul ignore next */
        cov_17vxw73q1().s[122]++;
        this.healthStatus.lastCheck = new Date();
      }
    });
  }
  triggerRecovery() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[19]++;
    cov_17vxw73q1().s[123]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[20]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_17vxw73q1().s[124]++;
      try {
        /* istanbul ignore next */
        cov_17vxw73q1().s[125]++;
        // Attempt to recover MCP connection
        yield /* istanbul ignore next */(cov_17vxw73q1().b[36][0]++, (_b = (_a = this.mcpRouter).reconnect) === null) ||
        /* istanbul ignore next */
        (cov_17vxw73q1().b[36][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_17vxw73q1().b[35][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17vxw73q1().b[35][1]++, _b.call(_a));
        // Reset some metrics to give system a fresh start
        /* istanbul ignore next */
        cov_17vxw73q1().s[126]++;
        this.healthStatus.consecutiveFailures = Math.max(0, this.healthStatus.consecutiveFailures - 2);
        // Log recovery attempt
        /* istanbul ignore next */
        cov_17vxw73q1().s[127]++;
        yield this.auditTrail.logEvent({
          eventType: "mcp_fallback_recovery_attempt",
          correlationId: `recovery-${Date.now()}`,
          metadata: {
            healthStatus: this.healthStatus,
            metrics: this.metrics
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_17vxw73q1().s[128]++;
        // Recovery failed - log it
        yield this.auditTrail.logEvent({
          eventType: "mcp_fallback_recovery_failed",
          correlationId: `recovery-failed-${Date.now()}`,
          metadata: {
            error: error.message,
            healthStatus: this.healthStatus
          }
        });
      }
    });
  }
  /**
   * Get current fallback metrics
   */
  getFallbackMetrics() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[21]++;
    cov_17vxw73q1().s[129]++;
    return Object.assign({}, this.metrics);
  }
  /**
   * Get current health status
   */
  getHealthStatus() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[22]++;
    cov_17vxw73q1().s[130]++;
    return Object.assign({}, this.healthStatus);
  }
  /**
   * Validate if system meets reliability targets
   */
  validateReliabilityTargets() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[23]++;
    cov_17vxw73q1().s[131]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[24]++;
      const meetsTarget =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[132]++, this.metrics.successRate >= this.config.successRateTarget);
      /* istanbul ignore next */
      cov_17vxw73q1().s[133]++;
      return {
        meetsTarget,
        currentSuccessRate: this.metrics.successRate,
        targetSuccessRate: this.config.successRateTarget,
        totalOperations: this.metrics.totalFallbackAttempts,
        recommendations: this.generateRecommendations(),
        lastValidation: new Date()
      };
    });
  }
  /**
   * Force health check and recovery
   */
  forceHealthCheckAndRecovery() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[25]++;
    cov_17vxw73q1().s[134]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[26]++;
      const previousHealth =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[135]++, Object.assign({}, this.healthStatus));
      /* istanbul ignore next */
      cov_17vxw73q1().s[136]++;
      yield this.performHealthCheck();
      /* istanbul ignore next */
      cov_17vxw73q1().s[137]++;
      if (!this.healthStatus.isHealthy) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[37][0]++;
        cov_17vxw73q1().s[138]++;
        yield this.triggerRecovery();
        /* istanbul ignore next */
        cov_17vxw73q1().s[139]++;
        yield this.performHealthCheck(); // Check again after recovery
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[37][1]++;
      }
      const actions =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[140]++, []);
      /* istanbul ignore next */
      cov_17vxw73q1().s[141]++;
      if (
      /* istanbul ignore next */
      (cov_17vxw73q1().b[39][0]++, !previousHealth.isHealthy) &&
      /* istanbul ignore next */
      (cov_17vxw73q1().b[39][1]++, this.healthStatus.isHealthy)) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[38][0]++;
        cov_17vxw73q1().s[142]++;
        actions.push("Health recovered successfully");
      } else {
        /* istanbul ignore next */
        cov_17vxw73q1().b[38][1]++;
        cov_17vxw73q1().s[143]++;
        if (!this.healthStatus.isHealthy) {
          /* istanbul ignore next */
          cov_17vxw73q1().b[40][0]++;
          cov_17vxw73q1().s[144]++;
          actions.push("Recovery attempted but health still degraded");
        } else {
          /* istanbul ignore next */
          cov_17vxw73q1().b[40][1]++;
          cov_17vxw73q1().s[145]++;
          actions.push("System was already healthy");
        }
      }
      /* istanbul ignore next */
      cov_17vxw73q1().s[146]++;
      return {
        healthImproved:
        /* istanbul ignore next */
        (cov_17vxw73q1().b[41][0]++, !previousHealth.isHealthy) &&
        /* istanbul ignore next */
        (cov_17vxw73q1().b[41][1]++, this.healthStatus.isHealthy),
        previousHealth,
        currentHealth: Object.assign({}, this.healthStatus),
        actions,
        timestamp: new Date()
      };
    });
  }
  /**
   * Optimize fallback configuration based on performance data
   */
  optimizeFallbackConfiguration() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[27]++;
    cov_17vxw73q1().s[147]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[28]++;
      const optimizations =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[148]++, []);
      const newConfig =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[149]++, {});
      let expectedImprovement =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[150]++, 0);
      let riskLevel =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[151]++, "low");
      // Analyze recent performance
      const recentOps =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[152]++, this.operationHistory.slice(-100));
      const recentSuccessRate =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[153]++, recentOps.filter(op => {
        /* istanbul ignore next */
        cov_17vxw73q1().f[29]++;
        cov_17vxw73q1().s[154]++;
        return op.success;
      }).length / recentOps.length);
      const recentAvgLatency =
      /* istanbul ignore next */
      (cov_17vxw73q1().s[155]++, recentOps.reduce((sum, op) => {
        /* istanbul ignore next */
        cov_17vxw73q1().f[30]++;
        cov_17vxw73q1().s[156]++;
        return sum + op.latency;
      }, 0) / recentOps.length);
      // Optimize retry configuration
      /* istanbul ignore next */
      cov_17vxw73q1().s[157]++;
      if (
      /* istanbul ignore next */
      (cov_17vxw73q1().b[43][0]++, recentSuccessRate < 0.95) &&
      /* istanbul ignore next */
      (cov_17vxw73q1().b[43][1]++, this.config.maxRetries < 8)) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[42][0]++;
        cov_17vxw73q1().s[158]++;
        optimizations.push("Increase max retries to improve success rate");
        /* istanbul ignore next */
        cov_17vxw73q1().s[159]++;
        newConfig.maxRetries = Math.min(this.config.maxRetries + 2, 8);
        /* istanbul ignore next */
        cov_17vxw73q1().s[160]++;
        expectedImprovement += 5;
        /* istanbul ignore next */
        cov_17vxw73q1().s[161]++;
        riskLevel = "medium";
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[42][1]++;
      }
      // Optimize timeout configuration
      cov_17vxw73q1().s[162]++;
      if (recentAvgLatency > this.config.performanceThresholds.maxLatency * 0.8) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[44][0]++;
        cov_17vxw73q1().s[163]++;
        optimizations.push("Increase timeout threshold to reduce timeout failures");
        /* istanbul ignore next */
        cov_17vxw73q1().s[164]++;
        newConfig.performanceThresholds = Object.assign(Object.assign({}, this.config.performanceThresholds), {
          maxLatency: Math.min(this.config.performanceThresholds.maxLatency * 1.2, 30000)
        });
        /* istanbul ignore next */
        cov_17vxw73q1().s[165]++;
        expectedImprovement += 3;
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[44][1]++;
      }
      // Optimize circuit breaker
      cov_17vxw73q1().s[166]++;
      if (this.metrics.circuitBreakerTrips > 2) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[45][0]++;
        cov_17vxw73q1().s[167]++;
        optimizations.push("Adjust circuit breaker threshold to reduce false positives");
        /* istanbul ignore next */
        cov_17vxw73q1().s[168]++;
        newConfig.circuitBreakerThreshold = Math.min(this.config.circuitBreakerThreshold + 1, 10);
        /* istanbul ignore next */
        cov_17vxw73q1().s[169]++;
        expectedImprovement += 2;
        /* istanbul ignore next */
        cov_17vxw73q1().s[170]++;
        riskLevel = "medium";
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[45][1]++;
      }
      cov_17vxw73q1().s[171]++;
      if (optimizations.length === 0) {
        /* istanbul ignore next */
        cov_17vxw73q1().b[46][0]++;
        cov_17vxw73q1().s[172]++;
        optimizations.push("Configuration is already optimized for current conditions");
      } else
      /* istanbul ignore next */
      {
        cov_17vxw73q1().b[46][1]++;
      }
      cov_17vxw73q1().s[173]++;
      return {
        optimizations,
        newConfig,
        expectedImprovement,
        riskLevel
      };
    });
  }
  /**
   * Get operation history for analysis
   */
  getOperationHistory(limit =
  /* istanbul ignore next */
  (cov_17vxw73q1().b[47][0]++, 100)) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[31]++;
    cov_17vxw73q1().s[174]++;
    return this.operationHistory.slice(-limit);
  }
  sleep(ms) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[32]++;
    cov_17vxw73q1().s[175]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_17vxw73q1().f[33]++;
      cov_17vxw73q1().s[176]++;
      return setTimeout(resolve, ms);
    });
  }
  /**
   * Safe audit logging that doesn't throw errors
   */
  safeAuditLog(event) {
    /* istanbul ignore next */
    cov_17vxw73q1().f[34]++;
    cov_17vxw73q1().s[177]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_17vxw73q1().f[35]++;
      cov_17vxw73q1().s[178]++;
      try {
        /* istanbul ignore next */
        cov_17vxw73q1().s[179]++;
        yield this.auditTrail.logEvent(event);
      } catch (error) {
        /* istanbul ignore next */
        cov_17vxw73q1().s[180]++;
        // Audit failures should not affect main operation
        console.warn("Audit logging failed:", error);
      }
    });
  }
  /**
   * Cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_17vxw73q1().f[36]++;
    cov_17vxw73q1().s[181]++;
    if (this.healthCheckTimer) {
      /* istanbul ignore next */
      cov_17vxw73q1().b[48][0]++;
      cov_17vxw73q1().s[182]++;
      clearInterval(this.healthCheckTimer);
      /* istanbul ignore next */
      cov_17vxw73q1().s[183]++;
      this.healthCheckTimer = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_17vxw73q1().b[48][1]++;
    }
  }
}
/* istanbul ignore next */
cov_17vxw73q1().s[184]++;
exports.MCPFallbackReliabilitySystem = MCPFallbackReliabilitySystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,