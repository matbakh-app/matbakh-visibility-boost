c79c69becac7be05faab6c102b5f92cd
"use strict";

/**
 * Hybrid Health Monitor - Health Monitoring for Both MCP and Direct Bedrock Paths
 *
 * This module implements comprehensive health monitoring for the hybrid routing
 * architecture, tracking both MCP and direct Bedrock paths, analyzing routing
 * efficiency, and providing optimization recommendations.
 */
/* istanbul ignore next */
function cov_1bfwzd7d16() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/hybrid-health-monitor.ts";
  var hash = "edf189603b29263205b8590a39732b20485c8402";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/hybrid-health-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 55
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 68
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "13": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 58
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 70
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 35
        }
      },
      "17": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "18": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "19": {
        start: {
          line: 50,
          column: 34
        },
        end: {
          line: 50,
          column: 72
        }
      },
      "20": {
        start: {
          line: 51,
          column: 44
        },
        end: {
          line: 51,
          column: 92
        }
      },
      "21": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "22": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 77
        }
      },
      "23": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 46
        }
      },
      "24": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "25": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 48
        }
      },
      "26": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "27": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 65
        }
      },
      "28": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 50
        }
      },
      "29": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 60
        }
      },
      "30": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "31": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 210
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "33": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 56
        }
      },
      "34": {
        start: {
          line: 81,
          column: 30
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "35": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 82,
          column: 60
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "37": {
        start: {
          line: 85,
          column: 40
        },
        end: {
          line: 85,
          column: 82
        }
      },
      "38": {
        start: {
          line: 86,
          column: 39
        },
        end: {
          line: 86,
          column: 73
        }
      },
      "39": {
        start: {
          line: 88,
          column: 40
        },
        end: {
          line: 88,
          column: 102
        }
      },
      "40": {
        start: {
          line: 90,
          column: 46
        },
        end: {
          line: 90,
          column: 92
        }
      },
      "41": {
        start: {
          line: 92,
          column: 35
        },
        end: {
          line: 92,
          column: 106
        }
      },
      "42": {
        start: {
          line: 94,
          column: 40
        },
        end: {
          line: 94,
          column: 133
        }
      },
      "43": {
        start: {
          line: 95,
          column: 33
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "44": {
        start: {
          line: 100,
          column: 68
        },
        end: {
          line: 100,
          column: 102
        }
      },
      "45": {
        start: {
          line: 101,
          column: 71
        },
        end: {
          line: 101,
          column: 105
        }
      },
      "46": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 73
        }
      },
      "47": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 42
        }
      },
      "48": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 32
        }
      },
      "49": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 76
        }
      },
      "50": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 142,
          column: 18
        }
      },
      "51": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "52": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 69
        }
      },
      "53": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 160,
          column: 117
        }
      },
      "54": {
        start: {
          line: 160,
          column: 74
        },
        end: {
          line: 160,
          column: 115
        }
      },
      "55": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 172,
          column: 11
        }
      },
      "56": {
        start: {
          line: 174,
          column: 27
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "57": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 138
        }
      },
      "58": {
        start: {
          line: 175,
          column: 96
        },
        end: {
          line: 175,
          column: 136
        }
      },
      "59": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "60": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "61": {
        start: {
          line: 183,
          column: 33
        },
        end: {
          line: 183,
          column: 70
        }
      },
      "62": {
        start: {
          line: 184,
          column: 43
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "63": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 42
        }
      },
      "64": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 84
        }
      },
      "65": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 197,
          column: 18
        }
      },
      "66": {
        start: {
          line: 205,
          column: 23
        },
        end: {
          line: 205,
          column: 66
        }
      },
      "67": {
        start: {
          line: 206,
          column: 31
        },
        end: {
          line: 206,
          column: 84
        }
      },
      "68": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "69": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "70": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 52
        }
      },
      "71": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 49
        }
      },
      "72": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "73": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 49
        }
      },
      "74": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 46
        }
      },
      "75": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "76": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 34
        }
      },
      "77": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 36
        }
      },
      "78": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 47
        }
      },
      "79": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 46
        }
      },
      "80": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 54
        }
      },
      "81": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 291,
          column: 10
        }
      },
      "82": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 297,
          column: 10
        }
      },
      "83": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "84": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 309,
          column: 43
        }
      },
      "85": {
        start: {
          line: 302,
          column: 57
        },
        end: {
          line: 309,
          column: 14
        }
      },
      "86": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 308,
          column: 17
        }
      },
      "87": {
        start: {
          line: 304,
          column: 20
        },
        end: {
          line: 304,
          column: 49
        }
      },
      "88": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 74
        }
      },
      "89": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 321,
          column: 9
        }
      },
      "90": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 320,
          column: 46
        }
      },
      "91": {
        start: {
          line: 313,
          column: 54
        },
        end: {
          line: 320,
          column: 14
        }
      },
      "92": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "93": {
        start: {
          line: 315,
          column: 20
        },
        end: {
          line: 315,
          column: 58
        }
      },
      "94": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 318,
          column: 81
        }
      },
      "95": {
        start: {
          line: 324,
          column: 26
        },
        end: {
          line: 324,
          column: 54
        }
      },
      "96": {
        start: {
          line: 325,
          column: 36
        },
        end: {
          line: 325,
          column: 74
        }
      },
      "97": {
        start: {
          line: 327,
          column: 26
        },
        end: {
          line: 327,
          column: 27
        }
      },
      "98": {
        start: {
          line: 328,
          column: 26
        },
        end: {
          line: 328,
          column: 27
        }
      },
      "99": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "100": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 58
        }
      },
      "101": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 26
        }
      },
      "102": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 340,
          column: 9
        }
      },
      "103": {
        start: {
          line: 336,
          column: 33
        },
        end: {
          line: 338,
          column: 60
        }
      },
      "104": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 45
        }
      },
      "105": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 26
        }
      },
      "106": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 65
        }
      },
      "107": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 344,
          column: 26
        }
      },
      "108": {
        start: {
          line: 346,
          column: 27
        },
        end: {
          line: 346,
          column: 82
        }
      },
      "109": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 71
        }
      },
      "110": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 350,
          column: 70
        }
      },
      "111": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 352,
          column: 56
        }
      },
      "112": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "113": {
        start: {
          line: 356,
          column: 36
        },
        end: {
          line: 356,
          column: 97
        }
      },
      "114": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 363,
          column: 13
        }
      },
      "115": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 59
        }
      },
      "116": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 66
        }
      },
      "117": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 59
        }
      },
      "118": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 66
        }
      },
      "119": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 23
        }
      },
      "120": {
        start: {
          line: 365,
          column: 37
        },
        end: {
          line: 365,
          column: 109
        }
      },
      "121": {
        start: {
          line: 365,
          column: 67
        },
        end: {
          line: 365,
          column: 101
        }
      },
      "122": {
        start: {
          line: 366,
          column: 38
        },
        end: {
          line: 366,
          column: 110
        }
      },
      "123": {
        start: {
          line: 366,
          column: 68
        },
        end: {
          line: 366,
          column: 102
        }
      },
      "124": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 368,
          column: 58
        }
      },
      "125": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 370,
          column: 58
        }
      },
      "126": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 372,
          column: 59
        }
      },
      "127": {
        start: {
          line: 373,
          column: 38
        },
        end: {
          line: 373,
          column: 97
        }
      },
      "128": {
        start: {
          line: 373,
          column: 73
        },
        end: {
          line: 373,
          column: 93
        }
      },
      "129": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 375,
          column: 59
        }
      },
      "130": {
        start: {
          line: 379,
          column: 31
        },
        end: {
          line: 379,
          column: 84
        }
      },
      "131": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "132": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 388,
          column: 14
        }
      },
      "133": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 19
        }
      },
      "134": {
        start: {
          line: 391,
          column: 35
        },
        end: {
          line: 391,
          column: 74
        }
      },
      "135": {
        start: {
          line: 391,
          column: 64
        },
        end: {
          line: 391,
          column: 73
        }
      },
      "136": {
        start: {
          line: 392,
          column: 31
        },
        end: {
          line: 392,
          column: 71
        }
      },
      "137": {
        start: {
          line: 392,
          column: 60
        },
        end: {
          line: 392,
          column: 70
        }
      },
      "138": {
        start: {
          line: 394,
          column: 26
        },
        end: {
          line: 396,
          column: 34
        }
      },
      "139": {
        start: {
          line: 395,
          column: 24
        },
        end: {
          line: 395,
          column: 33
        }
      },
      "140": {
        start: {
          line: 396,
          column: 28
        },
        end: {
          line: 396,
          column: 33
        }
      },
      "141": {
        start: {
          line: 397,
          column: 25
        },
        end: {
          line: 397,
          column: 60
        }
      },
      "142": {
        start: {
          line: 398,
          column: 25
        },
        end: {
          line: 398,
          column: 60
        }
      },
      "143": {
        start: {
          line: 399,
          column: 29
        },
        end: {
          line: 399,
          column: 81
        }
      },
      "144": {
        start: {
          line: 399,
          column: 64
        },
        end: {
          line: 399,
          column: 77
        }
      },
      "145": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "146": {
        start: {
          line: 410,
          column: 26
        },
        end: {
          line: 410,
          column: 28
        }
      },
      "147": {
        start: {
          line: 411,
          column: 29
        },
        end: {
          line: 411,
          column: 31
        }
      },
      "148": {
        start: {
          line: 412,
          column: 28
        },
        end: {
          line: 412,
          column: 30
        }
      },
      "149": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "150": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 89
        }
      },
      "151": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "152": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 83
        }
      },
      "153": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "154": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 90
        }
      },
      "155": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "156": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 98
        }
      },
      "157": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "158": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 89
        }
      },
      "159": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "160": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 97
        }
      },
      "161": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "162": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 91
        }
      },
      "163": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "164": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 96
        }
      },
      "165": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "166": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 94
        }
      },
      "167": {
        start: {
          line: 449,
          column: 28
        },
        end: {
          line: 452,
          column: 17
        }
      },
      "168": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "169": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 91
        }
      },
      "170": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 77
        }
      },
      "171": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 82
        }
      },
      "172": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 79
        }
      },
      "173": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 464,
          column: 10
        }
      },
      "174": {
        start: {
          line: 467,
          column: 27
        },
        end: {
          line: 467,
          column: 50
        }
      },
      "175": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 120
        }
      },
      "176": {
        start: {
          line: 468,
          column: 77
        },
        end: {
          line: 468,
          column: 118
        }
      },
      "177": {
        start: {
          line: 471,
          column: 27
        },
        end: {
          line: 471,
          column: 50
        }
      },
      "178": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 110
        }
      },
      "179": {
        start: {
          line: 472,
          column: 68
        },
        end: {
          line: 472,
          column: 108
        }
      },
      "180": {
        start: {
          line: 475,
          column: 28
        },
        end: {
          line: 475,
          column: 76
        }
      },
      "181": {
        start: {
          line: 475,
          column: 51
        },
        end: {
          line: 475,
          column: 68
        }
      },
      "182": {
        start: {
          line: 476,
          column: 38
        },
        end: {
          line: 476,
          column: 89
        }
      },
      "183": {
        start: {
          line: 476,
          column: 61
        },
        end: {
          line: 476,
          column: 81
        }
      },
      "184": {
        start: {
          line: 477,
          column: 30
        },
        end: {
          line: 477,
          column: 45
        }
      },
      "185": {
        start: {
          line: 478,
          column: 36
        },
        end: {
          line: 478,
          column: 102
        }
      },
      "186": {
        start: {
          line: 478,
          column: 60
        },
        end: {
          line: 478,
          column: 94
        }
      },
      "187": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 483,
          column: 10
        }
      },
      "188": {
        start: {
          line: 486,
          column: 28
        },
        end: {
          line: 486,
          column: 69
        }
      },
      "189": {
        start: {
          line: 486,
          column: 51
        },
        end: {
          line: 486,
          column: 68
        }
      },
      "190": {
        start: {
          line: 487,
          column: 38
        },
        end: {
          line: 487,
          column: 82
        }
      },
      "191": {
        start: {
          line: 487,
          column: 61
        },
        end: {
          line: 487,
          column: 81
        }
      },
      "192": {
        start: {
          line: 488,
          column: 37
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "193": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 491,
          column: 13
        }
      },
      "194": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 490,
          column: 76
        }
      },
      "195": {
        start: {
          line: 492,
          column: 33
        },
        end: {
          line: 492,
          column: 85
        }
      },
      "196": {
        start: {
          line: 492,
          column: 66
        },
        end: {
          line: 492,
          column: 81
        }
      },
      "197": {
        start: {
          line: 493,
          column: 39
        },
        end: {
          line: 493,
          column: 84
        }
      },
      "198": {
        start: {
          line: 493,
          column: 67
        },
        end: {
          line: 493,
          column: 76
        }
      },
      "199": {
        start: {
          line: 494,
          column: 29
        },
        end: {
          line: 494,
          column: 65
        }
      },
      "200": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 499,
          column: 14
        }
      },
      "201": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 504,
          column: 10
        }
      },
      "202": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 508,
          column: 23
        }
      },
      "203": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 23
        }
      },
      "204": {
        start: {
          line: 510,
          column: 33
        },
        end: {
          line: 510,
          column: 99
        }
      },
      "205": {
        start: {
          line: 510,
          column: 57
        },
        end: {
          line: 510,
          column: 91
        }
      },
      "206": {
        start: {
          line: 511,
          column: 35
        },
        end: {
          line: 511,
          column: 70
        }
      },
      "207": {
        start: {
          line: 513,
          column: 24
        },
        end: {
          line: 513,
          column: 50
        }
      },
      "208": {
        start: {
          line: 514,
          column: 27
        },
        end: {
          line: 514,
          column: 63
        }
      },
      "209": {
        start: {
          line: 515,
          column: 36
        },
        end: {
          line: 515,
          column: 39
        }
      },
      "210": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "211": {
        start: {
          line: 518,
          column: 34
        },
        end: {
          line: 518,
          column: 115
        }
      },
      "212": {
        start: {
          line: 519,
          column: 37
        },
        end: {
          line: 519,
          column: 121
        }
      },
      "213": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 75
        }
      },
      "214": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 70
        }
      },
      "215": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 571,
          column: 11
        }
      },
      "216": {
        start: {
          line: 527,
          column: 41
        },
        end: {
          line: 527,
          column: 43
        }
      },
      "217": {
        start: {
          line: 528,
          column: 44
        },
        end: {
          line: 528,
          column: 46
        }
      },
      "218": {
        start: {
          line: 529,
          column: 41
        },
        end: {
          line: 529,
          column: 43
        }
      },
      "219": {
        start: {
          line: 531,
          column: 12
        },
        end: {
          line: 533,
          column: 13
        }
      },
      "220": {
        start: {
          line: 532,
          column: 16
        },
        end: {
          line: 532,
          column: 101
        }
      },
      "221": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 536,
          column: 13
        }
      },
      "222": {
        start: {
          line: 535,
          column: 16
        },
        end: {
          line: 535,
          column: 109
        }
      },
      "223": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 540,
          column: 13
        }
      },
      "224": {
        start: {
          line: 539,
          column: 16
        },
        end: {
          line: 539,
          column: 123
        }
      },
      "225": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 545,
          column: 13
        }
      },
      "226": {
        start: {
          line: 544,
          column: 16
        },
        end: {
          line: 544,
          column: 121
        }
      },
      "227": {
        start: {
          line: 546,
          column: 12
        },
        end: {
          line: 549,
          column: 13
        }
      },
      "228": {
        start: {
          line: 548,
          column: 16
        },
        end: {
          line: 548,
          column: 123
        }
      },
      "229": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 552,
          column: 13
        }
      },
      "230": {
        start: {
          line: 551,
          column: 16
        },
        end: {
          line: 551,
          column: 107
        }
      },
      "231": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 555,
          column: 13
        }
      },
      "232": {
        start: {
          line: 554,
          column: 16
        },
        end: {
          line: 554,
          column: 121
        }
      },
      "233": {
        start: {
          line: 557,
          column: 12
        },
        end: {
          line: 559,
          column: 13
        }
      },
      "234": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 106
        }
      },
      "235": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 563,
          column: 13
        }
      },
      "236": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 562,
          column: 110
        }
      },
      "237": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 103
        }
      },
      "238": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 107
        }
      },
      "239": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 570,
          column: 14
        }
      },
      "240": {
        start: {
          line: 574,
          column: 27
        },
        end: {
          line: 574,
          column: 59
        }
      },
      "241": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "242": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 578,
          column: 13
        }
      },
      "243": {
        start: {
          line: 577,
          column: 16
        },
        end: {
          line: 577,
          column: 58
        }
      },
      "244": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 584,
          column: 32
        }
      },
      "245": {
        start: {
          line: 587,
          column: 0
        },
        end: {
          line: 587,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 75
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 22
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 55
          },
          end: {
            line: 47,
            column: 56
          }
        },
        loc: {
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 31
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 78
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 79,
            column: 55
          },
          end: {
            line: 79,
            column: 56
          }
        },
        loc: {
          start: {
            line: 79,
            column: 68
          },
          end: {
            line: 144,
            column: 9
          }
        },
        line: 79
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 61
          },
          end: {
            line: 100,
            column: 62
          }
        },
        loc: {
          start: {
            line: 100,
            column: 68
          },
          end: {
            line: 100,
            column: 102
          }
        },
        line: 100
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 64
          },
          end: {
            line: 101,
            column: 65
          }
        },
        loc: {
          start: {
            line: 101,
            column: 71
          },
          end: {
            line: 101,
            column: 105
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 77
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 160,
            column: 60
          },
          end: {
            line: 160,
            column: 61
          }
        },
        loc: {
          start: {
            line: 160,
            column: 74
          },
          end: {
            line: 160,
            column: 115
          }
        },
        line: 160
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 69
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 165
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 175,
            column: 83
          },
          end: {
            line: 175,
            column: 84
          }
        },
        loc: {
          start: {
            line: 175,
            column: 96
          },
          end: {
            line: 175,
            column: 136
          }
        },
        line: 175
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 37
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 180
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 181,
            column: 55
          },
          end: {
            line: 181,
            column: 56
          }
        },
        loc: {
          start: {
            line: 181,
            column: 68
          },
          end: {
            line: 199,
            column: 9
          }
        },
        line: 181
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 204,
            column: 5
          }
        },
        loc: {
          start: {
            line: 204,
            column: 17
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 204
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 14
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 221
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 232,
            column: 36
          },
          end: {
            line: 232,
            column: 37
          }
        },
        loc: {
          start: {
            line: 232,
            column: 49
          },
          end: {
            line: 234,
            column: 9
          }
        },
        line: 232
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 29
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 242
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 35
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 293
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 22
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 299
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 302,
            column: 51
          },
          end: {
            line: 302,
            column: 52
          }
        },
        loc: {
          start: {
            line: 302,
            column: 57
          },
          end: {
            line: 309,
            column: 14
          }
        },
        line: 302
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 302,
            column: 97
          },
          end: {
            line: 302,
            column: 98
          }
        },
        loc: {
          start: {
            line: 302,
            column: 110
          },
          end: {
            line: 309,
            column: 13
          }
        },
        line: 302
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 313,
            column: 48
          },
          end: {
            line: 313,
            column: 49
          }
        },
        loc: {
          start: {
            line: 313,
            column: 54
          },
          end: {
            line: 320,
            column: 14
          }
        },
        line: 313
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 313,
            column: 94
          },
          end: {
            line: 313,
            column: 95
          }
        },
        loc: {
          start: {
            line: 313,
            column: 107
          },
          end: {
            line: 320,
            column: 13
          }
        },
        line: 313
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 29
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 323
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 30
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 354
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 355,
            column: 55
          },
          end: {
            line: 355,
            column: 56
          }
        },
        loc: {
          start: {
            line: 355,
            column: 68
          },
          end: {
            line: 376,
            column: 9
          }
        },
        line: 355
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 365,
            column: 60
          },
          end: {
            line: 365,
            column: 61
          }
        },
        loc: {
          start: {
            line: 365,
            column: 67
          },
          end: {
            line: 365,
            column: 101
          }
        },
        line: 365
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 366,
            column: 61
          },
          end: {
            line: 366,
            column: 62
          }
        },
        loc: {
          start: {
            line: 366,
            column: 68
          },
          end: {
            line: 366,
            column: 102
          }
        },
        line: 366
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 373,
            column: 61
          },
          end: {
            line: 373,
            column: 62
          }
        },
        loc: {
          start: {
            line: 373,
            column: 73
          },
          end: {
            line: 373,
            column: 93
          }
        },
        line: 373
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 378,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        loc: {
          start: {
            line: 378,
            column: 31
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 378
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 391,
            column: 57
          },
          end: {
            line: 391,
            column: 58
          }
        },
        loc: {
          start: {
            line: 391,
            column: 64
          },
          end: {
            line: 391,
            column: 73
          }
        },
        line: 391
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 392,
            column: 53
          },
          end: {
            line: 392,
            column: 54
          }
        },
        loc: {
          start: {
            line: 392,
            column: 60
          },
          end: {
            line: 392,
            column: 70
          }
        },
        line: 392
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 395,
            column: 17
          },
          end: {
            line: 395,
            column: 18
          }
        },
        loc: {
          start: {
            line: 395,
            column: 24
          },
          end: {
            line: 395,
            column: 33
          }
        },
        line: 395
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 396,
            column: 18
          },
          end: {
            line: 396,
            column: 19
          }
        },
        loc: {
          start: {
            line: 396,
            column: 28
          },
          end: {
            line: 396,
            column: 33
          }
        },
        line: 396
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 399,
            column: 46
          },
          end: {
            line: 399,
            column: 47
          }
        },
        loc: {
          start: {
            line: 399,
            column: 64
          },
          end: {
            line: 399,
            column: 77
          }
        },
        line: 399
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 36
          },
          end: {
            line: 465,
            column: 5
          }
        },
        line: 409
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 466,
            column: 5
          }
        },
        loc: {
          start: {
            line: 466,
            column: 42
          },
          end: {
            line: 469,
            column: 5
          }
        },
        line: 466
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 468,
            column: 63
          },
          end: {
            line: 468,
            column: 64
          }
        },
        loc: {
          start: {
            line: 468,
            column: 77
          },
          end: {
            line: 468,
            column: 118
          }
        },
        line: 468
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 470,
            column: 5
          }
        },
        loc: {
          start: {
            line: 470,
            column: 34
          },
          end: {
            line: 473,
            column: 5
          }
        },
        line: 470
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 472,
            column: 55
          },
          end: {
            line: 472,
            column: 56
          }
        },
        loc: {
          start: {
            line: 472,
            column: 68
          },
          end: {
            line: 472,
            column: 108
          }
        },
        line: 472
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        loc: {
          start: {
            line: 474,
            column: 50
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 474
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 475,
            column: 44
          },
          end: {
            line: 475,
            column: 45
          }
        },
        loc: {
          start: {
            line: 475,
            column: 51
          },
          end: {
            line: 475,
            column: 68
          }
        },
        line: 475
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 476,
            column: 54
          },
          end: {
            line: 476,
            column: 55
          }
        },
        loc: {
          start: {
            line: 476,
            column: 61
          },
          end: {
            line: 476,
            column: 81
          }
        },
        line: 476
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 478,
            column: 53
          },
          end: {
            line: 478,
            column: 54
          }
        },
        loc: {
          start: {
            line: 478,
            column: 60
          },
          end: {
            line: 478,
            column: 94
          }
        },
        line: 478
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 40
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 485
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 486,
            column: 44
          },
          end: {
            line: 486,
            column: 45
          }
        },
        loc: {
          start: {
            line: 486,
            column: 51
          },
          end: {
            line: 486,
            column: 68
          }
        },
        line: 486
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 487,
            column: 54
          },
          end: {
            line: 487,
            column: 55
          }
        },
        loc: {
          start: {
            line: 487,
            column: 61
          },
          end: {
            line: 487,
            column: 81
          }
        },
        line: 487
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 488,
            column: 37
          },
          end: {
            line: 488,
            column: 38
          }
        },
        loc: {
          start: {
            line: 488,
            column: 56
          },
          end: {
            line: 500,
            column: 9
          }
        },
        line: 488
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 492,
            column: 54
          },
          end: {
            line: 492,
            column: 55
          }
        },
        loc: {
          start: {
            line: 492,
            column: 66
          },
          end: {
            line: 492,
            column: 81
          }
        },
        line: 492
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 493,
            column: 60
          },
          end: {
            line: 493,
            column: 61
          }
        },
        loc: {
          start: {
            line: 493,
            column: 67
          },
          end: {
            line: 493,
            column: 76
          }
        },
        line: 493
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 506,
            column: 5
          }
        },
        loc: {
          start: {
            line: 506,
            column: 55
          },
          end: {
            line: 524,
            column: 5
          }
        },
        line: 506
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 510,
            column: 50
          },
          end: {
            line: 510,
            column: 51
          }
        },
        loc: {
          start: {
            line: 510,
            column: 57
          },
          end: {
            line: 510,
            column: 91
          }
        },
        line: 510
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        loc: {
          start: {
            line: 525,
            column: 70
          },
          end: {
            line: 572,
            column: 5
          }
        },
        line: 525
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 526,
            column: 55
          },
          end: {
            line: 526,
            column: 56
          }
        },
        loc: {
          start: {
            line: 526,
            column: 68
          },
          end: {
            line: 571,
            column: 9
          }
        },
        line: 526
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 573,
            column: 4
          },
          end: {
            line: 573,
            column: 5
          }
        },
        loc: {
          start: {
            line: 573,
            column: 25
          },
          end: {
            line: 580,
            column: 5
          }
        },
        line: 573
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 581,
            column: 4
          },
          end: {
            line: 581,
            column: 5
          }
        },
        loc: {
          start: {
            line: 581,
            column: 25
          },
          end: {
            line: 585,
            column: 5
          }
        },
        line: 581
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 105,
            column: 32
          },
          end: {
            line: 105,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 63
          },
          end: {
            line: 105,
            column: 64
          }
        }, {
          start: {
            line: 105,
            column: 67
          },
          end: {
            line: 105,
            column: 77
          }
        }],
        line: 105
      },
      "2": {
        loc: {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 49
          },
          end: {
            line: 213,
            column: 50
          }
        }, {
          start: {
            line: 213,
            column: 53
          },
          end: {
            line: 213,
            column: 54
          }
        }],
        line: 213
      },
      "3": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "4": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "5": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "6": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 321,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "7": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "8": {
        loc: {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 340,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "9": {
        loc: {
          start: {
            line: 346,
            column: 27
          },
          end: {
            line: 346,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 45
          },
          end: {
            line: 346,
            column: 78
          }
        }, {
          start: {
            line: 346,
            column: 81
          },
          end: {
            line: 346,
            column: 82
          }
        }],
        line: 346
      },
      "10": {
        loc: {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 363,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 363,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "11": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "12": {
        loc: {
          start: {
            line: 405,
            column: 24
          },
          end: {
            line: 405,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 24
          },
          end: {
            line: 405,
            column: 43
          }
        }, {
          start: {
            line: 405,
            column: 47
          },
          end: {
            line: 405,
            column: 48
          }
        }],
        line: 405
      },
      "13": {
        loc: {
          start: {
            line: 406,
            column: 24
          },
          end: {
            line: 406,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 24
          },
          end: {
            line: 406,
            column: 43
          }
        }, {
          start: {
            line: 406,
            column: 47
          },
          end: {
            line: 406,
            column: 48
          }
        }],
        line: 406
      },
      "14": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "15": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "16": {
        loc: {
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 425,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "17": {
        loc: {
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "18": {
        loc: {
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 432,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "19": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "20": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "21": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "22": {
        loc: {
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "23": {
        loc: {
          start: {
            line: 449,
            column: 28
          },
          end: {
            line: 452,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 450,
            column: 14
          },
          end: {
            line: 451,
            column: 59
          }
        }, {
          start: {
            line: 452,
            column: 14
          },
          end: {
            line: 452,
            column: 17
          }
        }],
        line: 449
      },
      "24": {
        loc: {
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "25": {
        loc: {
          start: {
            line: 480,
            column: 22
          },
          end: {
            line: 480,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 480,
            column: 42
          },
          end: {
            line: 480,
            column: 69
          }
        }, {
          start: {
            line: 480,
            column: 72
          },
          end: {
            line: 480,
            column: 73
          }
        }],
        line: 480
      },
      "26": {
        loc: {
          start: {
            line: 481,
            column: 32
          },
          end: {
            line: 481,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 481,
            column: 52
          },
          end: {
            line: 481,
            column: 89
          }
        }, {
          start: {
            line: 481,
            column: 92
          },
          end: {
            line: 481,
            column: 93
          }
        }],
        line: 481
      },
      "27": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 491,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "28": {
        loc: {
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 508,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 8
          },
          end: {
            line: 508,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "29": {
        loc: {
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 521,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "30": {
        loc: {
          start: {
            line: 516,
            column: 12
          },
          end: {
            line: 516,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 12
          },
          end: {
            line: 516,
            column: 38
          }
        }, {
          start: {
            line: 516,
            column: 42
          },
          end: {
            line: 516,
            column: 71
          }
        }],
        line: 516
      },
      "31": {
        loc: {
          start: {
            line: 531,
            column: 12
          },
          end: {
            line: 533,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 531,
            column: 12
          },
          end: {
            line: 533,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 531
      },
      "32": {
        loc: {
          start: {
            line: 534,
            column: 12
          },
          end: {
            line: 536,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 12
          },
          end: {
            line: 536,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "33": {
        loc: {
          start: {
            line: 537,
            column: 12
          },
          end: {
            line: 540,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 12
          },
          end: {
            line: 540,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "34": {
        loc: {
          start: {
            line: 537,
            column: 16
          },
          end: {
            line: 538,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 16
          },
          end: {
            line: 537,
            column: 39
          }
        }, {
          start: {
            line: 538,
            column: 16
          },
          end: {
            line: 538,
            column: 60
          }
        }],
        line: 537
      },
      "35": {
        loc: {
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 12
          },
          end: {
            line: 545,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "36": {
        loc: {
          start: {
            line: 546,
            column: 12
          },
          end: {
            line: 549,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 12
          },
          end: {
            line: 549,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 546
      },
      "37": {
        loc: {
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 552,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 552,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "38": {
        loc: {
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 553,
            column: 12
          },
          end: {
            line: 555,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 553
      },
      "39": {
        loc: {
          start: {
            line: 557,
            column: 12
          },
          end: {
            line: 559,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 557,
            column: 12
          },
          end: {
            line: 559,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 557
      },
      "40": {
        loc: {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "41": {
        loc: {
          start: {
            line: 576,
            column: 12
          },
          end: {
            line: 578,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 576,
            column: 12
          },
          end: {
            line: 578,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 576
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/hybrid-health-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/hybrid-health-monitor.ts"],
      sourcesContent: ["/**\n * Hybrid Health Monitor - Health Monitoring for Both MCP and Direct Bedrock Paths\n *\n * This module implements comprehensive health monitoring for the hybrid routing\n * architecture, tracking both MCP and direct Bedrock paths, analyzing routing\n * efficiency, and providing optimization recommendations.\n */\n\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport {\n  DirectBedrockClient,\n  DirectBedrockHealthCheck,\n} from \"./direct-bedrock-client\";\nimport { IntelligentRouter } from \"./intelligent-router\";\nimport { MCPHealthStatus, MCPRouter } from \"./mcp-router\";\n\n// Hybrid Health Status\nexport interface HybridHealthStatus {\n  overall: {\n    isHealthy: boolean;\n    healthScore: number; // 0-100\n    lastCheck: Date;\n    uptime: number; // milliseconds\n  };\n  routes: {\n    mcp: MCPHealthStatus;\n    directBedrock: DirectBedrockHealthCheck;\n  };\n  routing: {\n    efficiency: number; // 0-1\n    optimalRouteUsage: number; // 0-1\n    fallbackRate: number; // 0-1\n    averageDecisionTime: number; // milliseconds\n  };\n  performance: {\n    totalRequests: number;\n    successfulRequests: number;\n    failedRequests: number;\n    averageLatency: number;\n    p95Latency: number;\n    p99Latency: number;\n  };\n  recommendations: {\n    immediate: string[];\n    optimization: string[];\n    maintenance: string[];\n  };\n}\n\n// Routing Efficiency Analysis\nexport interface RoutingEfficiencyAnalysis {\n  analysisId: string;\n  timestamp: Date;\n  timeWindow: number; // milliseconds\n  totalDecisions: number;\n  optimalDecisions: number;\n  suboptimalDecisions: number;\n  routingPatterns: {\n    mcpUsage: number;\n    directBedrockUsage: number;\n    fallbackOccurrences: number;\n  };\n  performanceComparison: {\n    mcpPerformance: {\n      averageLatency: number;\n      successRate: number;\n      throughput: number;\n    };\n    directBedrockPerformance: {\n      averageLatency: number;\n      successRate: number;\n      throughput: number;\n    };\n  };\n  recommendations: {\n    routingOptimizations: string[];\n    performanceImprovements: string[];\n    configurationChanges: string[];\n  };\n  efficiency: number; // 0-1 overall efficiency score\n}\n\n// Health Check Configuration\nexport interface HybridHealthConfig {\n  checkInterval: number; // How often to perform health checks\n  analysisInterval: number; // How often to analyze routing efficiency\n  performanceWindow: number; // Time window for performance analysis\n  healthThresholds: {\n    minHealthScore: number;\n    maxLatency: number;\n    minSuccessRate: number;\n    maxFallbackRate: number;\n  };\n  enableContinuousMonitoring: boolean;\n  enablePerformanceOptimization: boolean;\n  alertThresholds: {\n    criticalHealthScore: number;\n    warningLatency: number;\n    criticalLatency: number;\n  };\n}\n\n// Performance Metrics\ninterface PerformanceMetrics {\n  requests: Array<{\n    timestamp: Date;\n    route: \"mcp\" | \"direct\";\n    latency: number;\n    success: boolean;\n    operationType: string;\n  }>;\n  routingDecisions: Array<{\n    timestamp: Date;\n    requestedRoute: \"mcp\" | \"direct\";\n    actualRoute: \"mcp\" | \"direct\";\n    decisionTime: number;\n    reason: string;\n  }>;\n}\n\n/**\n * Hybrid Health Monitor for MCP and Direct Bedrock Routing\n */\nexport class HybridHealthMonitor {\n  private config: HybridHealthConfig;\n  private featureFlags: AiFeatureFlags;\n  private directBedrockClient: DirectBedrockClient;\n  private mcpRouter: MCPRouter;\n  private intelligentRouter: IntelligentRouter;\n\n  // Health monitoring state\n  private healthStatus: HybridHealthStatus;\n  private performanceMetrics: PerformanceMetrics;\n  private efficiencyAnalysisHistory: Map<string, RoutingEfficiencyAnalysis> =\n    new Map();\n\n  // Monitoring intervals\n  private healthCheckInterval?: NodeJS.Timeout;\n  private analysisInterval?: NodeJS.Timeout;\n  private activeTimeouts: Set<NodeJS.Timeout> = new Set();\n\n  // System state tracking\n  private systemStartTime: Date;\n  private lastHealthCheck: Date;\n\n  constructor(\n    directBedrockClient: DirectBedrockClient,\n    mcpRouter: MCPRouter,\n    intelligentRouter: IntelligentRouter,\n    config?: Partial<HybridHealthConfig>\n  ) {\n    this.directBedrockClient = directBedrockClient;\n    this.mcpRouter = mcpRouter;\n    this.intelligentRouter = intelligentRouter;\n    this.featureFlags = new AiFeatureFlags();\n\n    this.config = {\n      checkInterval: 30000, // 30 seconds\n      analysisInterval: 300000, // 5 minutes\n      performanceWindow: 3600000, // 1 hour\n      healthThresholds: {\n        minHealthScore: 70,\n        maxLatency: 5000, // 5 seconds\n        minSuccessRate: 0.95,\n        maxFallbackRate: 0.1, // 10%\n      },\n      enableContinuousMonitoring: true,\n      enablePerformanceOptimization: true,\n      alertThresholds: {\n        criticalHealthScore: 50,\n        warningLatency: 3000, // 3 seconds\n        criticalLatency: 10000, // 10 seconds\n      },\n      ...config,\n    };\n\n    this.systemStartTime = new Date();\n    this.lastHealthCheck = new Date();\n    this.healthStatus = this.initializeHealthStatus();\n    this.performanceMetrics = this.initializePerformanceMetrics();\n\n    // Start monitoring if enabled\n    if (this.featureFlags.isEnabled(\"ENABLE_HYBRID_HEALTH_MONITORING\")) {\n      this.startMonitoring();\n    }\n  }\n\n  /**\n   * Get comprehensive hybrid health status\n   */\n  async getHealthStatus(): Promise<HybridHealthStatus> {\n    try {\n      // Get health status from both routes\n      const mcpHealth = await this.mcpRouter.getHealthStatus();\n      const directBedrockHealth =\n        await this.directBedrockClient.getHealthStatus();\n\n      // Update route health\n      this.healthStatus.routes.mcp = mcpHealth;\n      this.healthStatus.routes.directBedrock = directBedrockHealth;\n\n      // Calculate overall health\n      this.calculateOverallHealth();\n\n      // Update routing efficiency\n      await this.updateRoutingEfficiency();\n\n      // Update performance metrics\n      this.updatePerformanceMetrics();\n\n      // Generate recommendations\n      this.generateHealthRecommendations();\n\n      // Update last check time\n      this.healthStatus.overall.lastCheck = new Date();\n      this.lastHealthCheck = new Date();\n\n      return { ...this.healthStatus };\n    } catch (error) {\n      console.error(\"Failed to get hybrid health status:\", error);\n\n      // Return degraded health status\n      return {\n        ...this.healthStatus,\n        overall: {\n          ...this.healthStatus.overall,\n          isHealthy: false,\n          healthScore: 0,\n          lastCheck: new Date(),\n        },\n      };\n    }\n  }\n\n  /**\n   * Perform routing efficiency analysis\n   */\n  async analyzeRoutingEfficiency(): Promise<RoutingEfficiencyAnalysis> {\n    const analysisId = this.generateAnalysisId();\n    const timestamp = new Date();\n    const timeWindow = this.config.performanceWindow;\n\n    try {\n      // Get recent routing decisions and performance data\n      const recentDecisions = this.getRecentRoutingDecisions(timeWindow);\n      const recentRequests = this.getRecentRequests(timeWindow);\n\n      // Calculate routing patterns\n      const routingPatterns = this.calculateRoutingPatterns(\n        recentDecisions,\n        recentRequests\n      );\n\n      // Analyze performance by route\n      const performanceComparison =\n        this.analyzePerformanceByRoute(recentRequests);\n\n      // Calculate efficiency score\n      const efficiency = this.calculateRoutingEfficiency(\n        recentDecisions,\n        performanceComparison\n      );\n\n      // Generate recommendations\n      const recommendations = await this.generateRoutingRecommendations(\n        routingPatterns,\n        performanceComparison,\n        efficiency\n      );\n\n      const analysis: RoutingEfficiencyAnalysis = {\n        analysisId,\n        timestamp,\n        timeWindow,\n        totalDecisions: recentDecisions.length,\n        optimalDecisions: recentDecisions.filter(\n          (d) => d.requestedRoute === d.actualRoute\n        ).length,\n        suboptimalDecisions: recentDecisions.filter(\n          (d) => d.requestedRoute !== d.actualRoute\n        ).length,\n        routingPatterns,\n        performanceComparison,\n        recommendations,\n        efficiency: recentDecisions.length === 0 ? 0 : efficiency, // Return 0 for empty data\n      };\n\n      // Store analysis\n      this.efficiencyAnalysisHistory.set(analysisId, analysis);\n\n      // Clean up old analyses (keep last 24 hours)\n      this.cleanupOldAnalyses();\n\n      return analysis;\n    } catch (error) {\n      console.error(\"Routing efficiency analysis failed:\", error);\n\n      // Return minimal analysis on error\n      return {\n        analysisId,\n        timestamp,\n        timeWindow,\n        totalDecisions: 0,\n        optimalDecisions: 0,\n        suboptimalDecisions: 0,\n        routingPatterns: {\n          mcpUsage: 0,\n          directBedrockUsage: 0,\n          fallbackOccurrences: 0,\n        },\n        performanceComparison: {\n          mcpPerformance: { averageLatency: 0, successRate: 0, throughput: 0 },\n          directBedrockPerformance: {\n            averageLatency: 0,\n            successRate: 0,\n            throughput: 0,\n          },\n        },\n        recommendations: {\n          routingOptimizations: [],\n          performanceImprovements: [],\n          configurationChanges: [],\n        },\n        efficiency: 0,\n      };\n    }\n  }\n\n  /**\n   * Record a routing decision for analysis\n   */\n  recordRoutingDecision(\n    requestedRoute: \"mcp\" | \"direct\",\n    actualRoute: \"mcp\" | \"direct\",\n    decisionTime: number,\n    reason: string\n  ): void {\n    this.performanceMetrics.routingDecisions.push({\n      timestamp: new Date(),\n      requestedRoute,\n      actualRoute,\n      decisionTime,\n      reason,\n    });\n\n    // Keep only recent decisions (last hour)\n    const cutoffTime = Date.now() - this.config.performanceWindow;\n    this.performanceMetrics.routingDecisions =\n      this.performanceMetrics.routingDecisions.filter(\n        (decision) => decision.timestamp.getTime() > cutoffTime\n      );\n  }\n\n  /**\n   * Record a request performance for analysis\n   */\n  recordRequestPerformance(\n    route: \"mcp\" | \"direct\",\n    latency: number,\n    success: boolean,\n    operationType: string\n  ): void {\n    this.performanceMetrics.requests.push({\n      timestamp: new Date(),\n      route,\n      latency,\n      success,\n      operationType,\n    });\n\n    // Keep only recent requests (last hour)\n    const cutoffTime = Date.now() - this.config.performanceWindow;\n    this.performanceMetrics.requests = this.performanceMetrics.requests.filter(\n      (request) => request.timestamp.getTime() > cutoffTime\n    );\n  }\n\n  /**\n   * Get routing optimization recommendations\n   */\n  async getOptimizationRecommendations(): Promise<string[]> {\n    try {\n      const analysis = await this.analyzeRoutingEfficiency();\n\n      const allRecommendations = [\n        ...analysis.recommendations.routingOptimizations,\n        ...analysis.recommendations.performanceImprovements,\n        ...analysis.recommendations.configurationChanges,\n      ];\n\n      return allRecommendations;\n    } catch (error) {\n      console.error(\"Failed to get optimization recommendations:\", error);\n      return [\n        \"Monitor system health regularly\",\n        \"Check routing efficiency metrics\",\n        \"Review performance thresholds\",\n      ];\n    }\n  }\n\n  /**\n   * Get hybrid health metrics\n   */\n  getMetrics() {\n    const uptime = Date.now() - this.systemStartTime.getTime();\n    const recentRequests = this.getRecentRequests(\n      this.config.performanceWindow\n    );\n\n    return {\n      uptime,\n      totalRequests: this.performanceMetrics.requests.length,\n      recentRequests: recentRequests.length,\n      routingDecisions: this.performanceMetrics.routingDecisions.length,\n      efficiencyAnalyses: this.efficiencyAnalysisHistory.size,\n      healthChecks: this.lastHealthCheck ? 1 : 0,\n      systemStartTime: this.systemStartTime,\n      lastHealthCheck: this.lastHealthCheck,\n    };\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    // Clear intervals\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.healthCheckInterval = undefined;\n    }\n    if (this.analysisInterval) {\n      clearInterval(this.analysisInterval);\n      this.analysisInterval = undefined;\n    }\n\n    // Clear timeouts\n    this.activeTimeouts.forEach((timeout) => {\n      clearTimeout(timeout);\n    });\n    this.activeTimeouts.clear();\n\n    // Clear data\n    this.efficiencyAnalysisHistory.clear();\n    this.performanceMetrics.requests = [];\n    this.performanceMetrics.routingDecisions = [];\n  }\n\n  // Private implementation methods\n\n  private initializeHealthStatus(): HybridHealthStatus {\n    return {\n      overall: {\n        isHealthy: false,\n        healthScore: 0,\n        lastCheck: new Date(),\n        uptime: 0,\n      },\n      routes: {\n        mcp: {\n          route: \"mcp\",\n          isHealthy: false,\n          latencyMs: 0,\n          successRate: 0,\n          lastCheck: new Date(),\n          consecutiveFailures: 0,\n          connectionStatus: \"disconnected\",\n          queueSize: 0,\n          pendingOperations: 0,\n          lastSuccessfulOperation: null,\n          errorRate: 0,\n        },\n        directBedrock: {\n          isHealthy: false,\n          latencyMs: 0,\n          lastCheck: new Date(),\n          consecutiveFailures: 0,\n          circuitBreakerState: \"closed\",\n        },\n      },\n      routing: {\n        efficiency: 0,\n        optimalRouteUsage: 0,\n        fallbackRate: 0,\n        averageDecisionTime: 0,\n      },\n      performance: {\n        totalRequests: 0,\n        successfulRequests: 0,\n        failedRequests: 0,\n        averageLatency: 0,\n        p95Latency: 0,\n        p99Latency: 0,\n      },\n      recommendations: {\n        immediate: [],\n        optimization: [],\n        maintenance: [],\n      },\n    };\n  }\n\n  private initializePerformanceMetrics(): PerformanceMetrics {\n    return {\n      requests: [],\n      routingDecisions: [],\n    };\n  }\n\n  private startMonitoring(): void {\n    // Start health check monitoring\n    if (this.config.enableContinuousMonitoring) {\n      this.healthCheckInterval = setInterval(async () => {\n        try {\n          await this.getHealthStatus();\n        } catch (error) {\n          console.error(\"Periodic health check failed:\", error);\n        }\n      }, this.config.checkInterval);\n    }\n\n    // Start efficiency analysis\n    if (this.config.enablePerformanceOptimization) {\n      this.analysisInterval = setInterval(async () => {\n        try {\n          await this.analyzeRoutingEfficiency();\n        } catch (error) {\n          console.error(\"Periodic efficiency analysis failed:\", error);\n        }\n      }, this.config.analysisInterval);\n    }\n  }\n\n  private calculateOverallHealth(): void {\n    const mcpHealth = this.healthStatus.routes.mcp;\n    const directBedrockHealth = this.healthStatus.routes.directBedrock;\n\n    // Calculate weighted health score\n    let healthScore = 0;\n    let totalWeight = 0;\n\n    // MCP health (weight: 0.4)\n    if (mcpHealth.isHealthy) {\n      healthScore += 40 * (1 - mcpHealth.errorRate);\n    }\n    totalWeight += 40;\n\n    // Direct Bedrock health (weight: 0.4)\n    if (directBedrockHealth.isHealthy) {\n      const latencyScore = Math.max(\n        0,\n        1 -\n          directBedrockHealth.latencyMs /\n            this.config.healthThresholds.maxLatency\n      );\n      healthScore += 40 * latencyScore;\n    }\n    totalWeight += 40;\n\n    // Routing efficiency (weight: 0.2)\n    healthScore += 20 * this.healthStatus.routing.efficiency;\n    totalWeight += 20;\n\n    // Normalize score\n    const finalScore = totalWeight > 0 ? (healthScore / totalWeight) * 100 : 0;\n\n    // Update overall health\n    this.healthStatus.overall.healthScore = Math.round(finalScore);\n    this.healthStatus.overall.isHealthy =\n      finalScore >= this.config.healthThresholds.minHealthScore;\n    this.healthStatus.overall.uptime =\n      Date.now() - this.systemStartTime.getTime();\n  }\n\n  private async updateRoutingEfficiency(): Promise<void> {\n    const recentDecisions = this.getRecentRoutingDecisions(\n      this.config.performanceWindow\n    );\n\n    if (recentDecisions.length === 0) {\n      this.healthStatus.routing.efficiency = 1.0; // Perfect efficiency with no decisions\n      this.healthStatus.routing.optimalRouteUsage = 1.0;\n      this.healthStatus.routing.fallbackRate = 0;\n      this.healthStatus.routing.averageDecisionTime = 0;\n      return;\n    }\n\n    // Calculate efficiency metrics\n    const optimalDecisions = recentDecisions.filter(\n      (d) => d.requestedRoute === d.actualRoute\n    ).length;\n    const fallbackDecisions = recentDecisions.filter(\n      (d) => d.requestedRoute !== d.actualRoute\n    ).length;\n\n    this.healthStatus.routing.efficiency =\n      optimalDecisions / recentDecisions.length;\n    this.healthStatus.routing.optimalRouteUsage =\n      optimalDecisions / recentDecisions.length;\n    this.healthStatus.routing.fallbackRate =\n      fallbackDecisions / recentDecisions.length;\n\n    const totalDecisionTime = recentDecisions.reduce(\n      (sum, d) => sum + d.decisionTime,\n      0\n    );\n    this.healthStatus.routing.averageDecisionTime =\n      totalDecisionTime / recentDecisions.length;\n  }\n\n  private updatePerformanceMetrics(): void {\n    const recentRequests = this.getRecentRequests(\n      this.config.performanceWindow\n    );\n\n    if (recentRequests.length === 0) {\n      this.healthStatus.performance = {\n        totalRequests: 0,\n        successfulRequests: 0,\n        failedRequests: 0,\n        averageLatency: 0,\n        p95Latency: 0,\n        p99Latency: 0,\n      };\n      return;\n    }\n\n    const successfulRequests = recentRequests.filter((r) => r.success);\n    const failedRequests = recentRequests.filter((r) => !r.success);\n\n    // Calculate latency percentiles\n    const latencies = recentRequests\n      .map((r) => r.latency)\n      .sort((a, b) => a - b);\n    const p95Index = Math.floor(latencies.length * 0.95);\n    const p99Index = Math.floor(latencies.length * 0.99);\n\n    const totalLatency = latencies.reduce((sum, latency) => sum + latency, 0);\n\n    this.healthStatus.performance = {\n      totalRequests: recentRequests.length,\n      successfulRequests: successfulRequests.length,\n      failedRequests: failedRequests.length,\n      averageLatency: totalLatency / recentRequests.length,\n      p95Latency: latencies[p95Index] || 0,\n      p99Latency: latencies[p99Index] || 0,\n    };\n  }\n\n  private generateHealthRecommendations(): void {\n    const immediate: string[] = [];\n    const optimization: string[] = [];\n    const maintenance: string[] = [];\n\n    // Check critical health issues\n    if (\n      this.healthStatus.overall.healthScore <\n      this.config.alertThresholds.criticalHealthScore\n    ) {\n      immediate.push(\n        \"Critical health issue detected - investigate system status\"\n      );\n    }\n\n    if (\n      this.healthStatus.performance.p95Latency >\n      this.config.alertThresholds.criticalLatency\n    ) {\n      immediate.push(\"Critical latency detected - check system performance\");\n    }\n\n    // Check MCP health\n    if (!this.healthStatus.routes.mcp.isHealthy) {\n      immediate.push(\n        \"MCP route is unhealthy - check connection and configuration\"\n      );\n    }\n\n    if (this.healthStatus.routes.mcp.queueSize > 100) {\n      optimization.push(\n        \"MCP queue size is high - consider increasing processing capacity\"\n      );\n    }\n\n    // Check Direct Bedrock health\n    if (!this.healthStatus.routes.directBedrock.isHealthy) {\n      immediate.push(\n        \"Direct Bedrock route is unhealthy - check AWS connectivity\"\n      );\n    }\n\n    if (this.healthStatus.routes.directBedrock.consecutiveFailures > 5) {\n      optimization.push(\n        \"Direct Bedrock has consecutive failures - review error patterns\"\n      );\n    }\n\n    // Check routing efficiency\n    if (this.healthStatus.routing.efficiency < 0.8) {\n      optimization.push(\n        \"Routing efficiency is low - review routing decision logic\"\n      );\n    }\n\n    if (\n      this.healthStatus.routing.fallbackRate >\n      this.config.healthThresholds.maxFallbackRate\n    ) {\n      optimization.push(\n        \"High fallback rate detected - optimize primary route selection\"\n      );\n    }\n\n    // Performance recommendations\n    if (\n      this.healthStatus.performance.p95Latency >\n      this.config.alertThresholds.warningLatency\n    ) {\n      optimization.push(\n        \"P95 latency is elevated - consider performance optimizations\"\n      );\n    }\n\n    const successRate =\n      this.healthStatus.performance.totalRequests > 0\n        ? this.healthStatus.performance.successfulRequests /\n          this.healthStatus.performance.totalRequests\n        : 1.0;\n\n    if (successRate < this.config.healthThresholds.minSuccessRate) {\n      immediate.push(\n        \"Success rate is below threshold - investigate error patterns\"\n      );\n    }\n\n    // Maintenance recommendations\n    maintenance.push(\"Review health monitoring configuration regularly\");\n    maintenance.push(\"Update routing thresholds based on performance trends\");\n    maintenance.push(\"Clean up old performance data and analysis history\");\n\n    this.healthStatus.recommendations = {\n      immediate,\n      optimization,\n      maintenance,\n    };\n  }\n\n  private getRecentRoutingDecisions(timeWindow: number) {\n    const cutoffTime = Date.now() - timeWindow;\n    return this.performanceMetrics.routingDecisions.filter(\n      (decision) => decision.timestamp.getTime() > cutoffTime\n    );\n  }\n\n  private getRecentRequests(timeWindow: number) {\n    const cutoffTime = Date.now() - timeWindow;\n    return this.performanceMetrics.requests.filter(\n      (request) => request.timestamp.getTime() > cutoffTime\n    );\n  }\n\n  private calculateRoutingPatterns(\n    decisions: PerformanceMetrics[\"routingDecisions\"],\n    requests: PerformanceMetrics[\"requests\"]\n  ) {\n    const mcpRequests = requests.filter((r) => r.route === \"mcp\").length;\n    const directBedrockRequests = requests.filter(\n      (r) => r.route === \"direct\"\n    ).length;\n    const totalRequests = requests.length;\n\n    const fallbackOccurrences = decisions.filter(\n      (d) => d.requestedRoute !== d.actualRoute\n    ).length;\n\n    return {\n      mcpUsage: totalRequests > 0 ? mcpRequests / totalRequests : 0,\n      directBedrockUsage:\n        totalRequests > 0 ? directBedrockRequests / totalRequests : 0,\n      fallbackOccurrences,\n    };\n  }\n\n  private analyzePerformanceByRoute(requests: PerformanceMetrics[\"requests\"]) {\n    const mcpRequests = requests.filter((r) => r.route === \"mcp\");\n    const directBedrockRequests = requests.filter((r) => r.route === \"direct\");\n\n    const calculatePerformance = (routeRequests: typeof requests) => {\n      if (routeRequests.length === 0) {\n        return { averageLatency: 0, successRate: 0, throughput: 0 };\n      }\n\n      const totalLatency = routeRequests.reduce((sum, r) => sum + r.latency, 0);\n      const successfulRequests = routeRequests.filter((r) => r.success).length;\n      const timeSpan = this.config.performanceWindow / 1000; // Convert to seconds\n\n      return {\n        averageLatency: totalLatency / routeRequests.length,\n        successRate: successfulRequests / routeRequests.length,\n        throughput: routeRequests.length / timeSpan, // requests per second\n      };\n    };\n\n    return {\n      mcpPerformance: calculatePerformance(mcpRequests),\n      directBedrockPerformance: calculatePerformance(directBedrockRequests),\n    };\n  }\n\n  private calculateRoutingEfficiency(\n    decisions: PerformanceMetrics[\"routingDecisions\"],\n    performance: ReturnType<typeof this.analyzePerformanceByRoute>\n  ): number {\n    if (decisions.length === 0) return 1.0;\n\n    // Calculate decision efficiency (optimal route selection)\n    const optimalDecisions = decisions.filter(\n      (d) => d.requestedRoute === d.actualRoute\n    ).length;\n    const decisionEfficiency = optimalDecisions / decisions.length;\n\n    // Calculate performance efficiency (actual performance vs expected)\n    const mcpPerf = performance.mcpPerformance;\n    const directPerf = performance.directBedrockPerformance;\n\n    let performanceEfficiency = 1.0;\n    if (mcpPerf.averageLatency > 0 && directPerf.averageLatency > 0) {\n      // Compare actual performance to expected thresholds\n      const mcpEfficiency = Math.max(\n        0,\n        1 - mcpPerf.averageLatency / this.config.healthThresholds.maxLatency\n      );\n      const directEfficiency = Math.max(\n        0,\n        1 - directPerf.averageLatency / this.config.healthThresholds.maxLatency\n      );\n      performanceEfficiency = (mcpEfficiency + directEfficiency) / 2;\n    }\n\n    // Combine decision and performance efficiency\n    return decisionEfficiency * 0.6 + performanceEfficiency * 0.4;\n  }\n\n  private async generateRoutingRecommendations(\n    patterns: ReturnType<typeof this.calculateRoutingPatterns>,\n    performance: ReturnType<typeof this.analyzePerformanceByRoute>,\n    efficiency: number\n  ): Promise<RoutingEfficiencyAnalysis[\"recommendations\"]> {\n    const routingOptimizations: string[] = [];\n    const performanceImprovements: string[] = [];\n    const configurationChanges: string[] = [];\n\n    // Routing optimization recommendations\n    if (efficiency < 0.8) {\n      routingOptimizations.push(\n        \"Review routing decision algorithm for better efficiency\"\n      );\n    }\n\n    if (patterns.fallbackOccurrences > patterns.mcpUsage * 0.1) {\n      routingOptimizations.push(\n        \"High fallback rate - consider adjusting route health thresholds\"\n      );\n    }\n\n    if (\n      patterns.mcpUsage < 0.3 &&\n      performance.mcpPerformance.successRate > 0.9\n    ) {\n      routingOptimizations.push(\n        \"MCP route underutilized despite good performance - review routing preferences\"\n      );\n    }\n\n    // Performance improvement recommendations\n    if (\n      performance.mcpPerformance.averageLatency >\n      this.config.alertThresholds.warningLatency\n    ) {\n      performanceImprovements.push(\n        \"MCP route latency is high - investigate connection and processing delays\"\n      );\n    }\n\n    if (\n      performance.directBedrockPerformance.averageLatency >\n      this.config.alertThresholds.warningLatency\n    ) {\n      performanceImprovements.push(\n        \"Direct Bedrock latency is high - check AWS region and network connectivity\"\n      );\n    }\n\n    if (performance.mcpPerformance.successRate < 0.95) {\n      performanceImprovements.push(\n        \"MCP route success rate is low - investigate error patterns\"\n      );\n    }\n\n    if (performance.directBedrockPerformance.successRate < 0.95) {\n      performanceImprovements.push(\n        \"Direct Bedrock success rate is low - check AWS service limits and errors\"\n      );\n    }\n\n    // Configuration change recommendations\n    if (patterns.directBedrockUsage > 0.7) {\n      configurationChanges.push(\n        \"High Direct Bedrock usage - consider increasing MCP capacity\"\n      );\n    }\n\n    if (\n      performance.mcpPerformance.throughput <\n      performance.directBedrockPerformance.throughput * 0.5\n    ) {\n      configurationChanges.push(\n        \"MCP throughput is significantly lower - review MCP configuration\"\n      );\n    }\n\n    configurationChanges.push(\n      \"Review health check intervals based on current usage patterns\"\n    );\n    configurationChanges.push(\n      \"Consider adjusting routing thresholds based on performance trends\"\n    );\n\n    return {\n      routingOptimizations,\n      performanceImprovements,\n      configurationChanges,\n    };\n  }\n\n  private cleanupOldAnalyses(): void {\n    const cutoffTime = Date.now() - 24 * 60 * 60 * 1000; // 24 hours\n\n    for (const [id, analysis] of this.efficiencyAnalysisHistory.entries()) {\n      if (analysis.timestamp.getTime() < cutoffTime) {\n        this.efficiencyAnalysisHistory.delete(id);\n      }\n    }\n  }\n\n  private generateAnalysisId(): string {\n    return `hybrid-analysis-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n}\n\n// Export types for external use\nexport {\n  type HybridHealthConfig,\n  type HybridHealthStatus,\n  type RoutingEfficiencyAnalysis,\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edf189603b29263205b8590a39732b20485c8402"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bfwzd7d16 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bfwzd7d16();
cov_1bfwzd7d16().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1bfwzd7d16().s[1]++;
exports.HybridHealthMonitor = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_1bfwzd7d16().s[2]++, require("tslib"));
const ai_feature_flags_1 =
/* istanbul ignore next */
(cov_1bfwzd7d16().s[3]++, require("./ai-feature-flags"));
/**
 * Hybrid Health Monitor for MCP and Direct Bedrock Routing
 */
class HybridHealthMonitor {
  constructor(directBedrockClient, mcpRouter, intelligentRouter, config) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[0]++;
    cov_1bfwzd7d16().s[4]++;
    this.efficiencyAnalysisHistory = new Map();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[5]++;
    this.activeTimeouts = new Set();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[6]++;
    this.directBedrockClient = directBedrockClient;
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[7]++;
    this.mcpRouter = mcpRouter;
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[8]++;
    this.intelligentRouter = intelligentRouter;
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[9]++;
    this.featureFlags = new ai_feature_flags_1.AiFeatureFlags();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[10]++;
    this.config = Object.assign({
      checkInterval: 30000,
      analysisInterval: 300000,
      performanceWindow: 3600000,
      healthThresholds: {
        minHealthScore: 70,
        maxLatency: 5000,
        // 5 seconds
        minSuccessRate: 0.95,
        maxFallbackRate: 0.1 // 10%
      },
      enableContinuousMonitoring: true,
      enablePerformanceOptimization: true,
      alertThresholds: {
        criticalHealthScore: 50,
        warningLatency: 3000,
        // 3 seconds
        criticalLatency: 10000 // 10 seconds
      }
    }, config);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[11]++;
    this.systemStartTime = new Date();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[12]++;
    this.lastHealthCheck = new Date();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[13]++;
    this.healthStatus = this.initializeHealthStatus();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[14]++;
    this.performanceMetrics = this.initializePerformanceMetrics();
    // Start monitoring if enabled
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[15]++;
    if (this.featureFlags.isEnabled("ENABLE_HYBRID_HEALTH_MONITORING")) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[0][0]++;
      cov_1bfwzd7d16().s[16]++;
      this.startMonitoring();
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[0][1]++;
    }
  }
  /**
   * Get comprehensive hybrid health status
   */
  getHealthStatus() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[1]++;
    cov_1bfwzd7d16().s[17]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[2]++;
      cov_1bfwzd7d16().s[18]++;
      try {
        // Get health status from both routes
        const mcpHealth =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[19]++, yield this.mcpRouter.getHealthStatus());
        const directBedrockHealth =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[20]++, yield this.directBedrockClient.getHealthStatus());
        // Update route health
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[21]++;
        this.healthStatus.routes.mcp = mcpHealth;
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[22]++;
        this.healthStatus.routes.directBedrock = directBedrockHealth;
        // Calculate overall health
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[23]++;
        this.calculateOverallHealth();
        // Update routing efficiency
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[24]++;
        yield this.updateRoutingEfficiency();
        // Update performance metrics
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[25]++;
        this.updatePerformanceMetrics();
        // Generate recommendations
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[26]++;
        this.generateHealthRecommendations();
        // Update last check time
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[27]++;
        this.healthStatus.overall.lastCheck = new Date();
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[28]++;
        this.lastHealthCheck = new Date();
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[29]++;
        return Object.assign({}, this.healthStatus);
      } catch (error) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[30]++;
        console.error("Failed to get hybrid health status:", error);
        // Return degraded health status
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[31]++;
        return Object.assign(Object.assign({}, this.healthStatus), {
          overall: Object.assign(Object.assign({}, this.healthStatus.overall), {
            isHealthy: false,
            healthScore: 0,
            lastCheck: new Date()
          })
        });
      }
    });
  }
  /**
   * Perform routing efficiency analysis
   */
  analyzeRoutingEfficiency() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[3]++;
    cov_1bfwzd7d16().s[32]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[4]++;
      const analysisId =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[33]++, this.generateAnalysisId());
      const timestamp =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[34]++, new Date());
      const timeWindow =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[35]++, this.config.performanceWindow);
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[36]++;
      try {
        // Get recent routing decisions and performance data
        const recentDecisions =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[37]++, this.getRecentRoutingDecisions(timeWindow));
        const recentRequests =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[38]++, this.getRecentRequests(timeWindow));
        // Calculate routing patterns
        const routingPatterns =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[39]++, this.calculateRoutingPatterns(recentDecisions, recentRequests));
        // Analyze performance by route
        const performanceComparison =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[40]++, this.analyzePerformanceByRoute(recentRequests));
        // Calculate efficiency score
        const efficiency =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[41]++, this.calculateRoutingEfficiency(recentDecisions, performanceComparison));
        // Generate recommendations
        const recommendations =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[42]++, yield this.generateRoutingRecommendations(routingPatterns, performanceComparison, efficiency));
        const analysis =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[43]++, {
          analysisId,
          timestamp,
          timeWindow,
          totalDecisions: recentDecisions.length,
          optimalDecisions: recentDecisions.filter(d => {
            /* istanbul ignore next */
            cov_1bfwzd7d16().f[5]++;
            cov_1bfwzd7d16().s[44]++;
            return d.requestedRoute === d.actualRoute;
          }).length,
          suboptimalDecisions: recentDecisions.filter(d => {
            /* istanbul ignore next */
            cov_1bfwzd7d16().f[6]++;
            cov_1bfwzd7d16().s[45]++;
            return d.requestedRoute !== d.actualRoute;
          }).length,
          routingPatterns,
          performanceComparison,
          recommendations,
          efficiency: recentDecisions.length === 0 ?
          /* istanbul ignore next */
          (cov_1bfwzd7d16().b[1][0]++, 0) :
          /* istanbul ignore next */
          (cov_1bfwzd7d16().b[1][1]++, efficiency) // Return 0 for empty data
        });
        // Store analysis
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[46]++;
        this.efficiencyAnalysisHistory.set(analysisId, analysis);
        // Clean up old analyses (keep last 24 hours)
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[47]++;
        this.cleanupOldAnalyses();
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[48]++;
        return analysis;
      } catch (error) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[49]++;
        console.error("Routing efficiency analysis failed:", error);
        // Return minimal analysis on error
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[50]++;
        return {
          analysisId,
          timestamp,
          timeWindow,
          totalDecisions: 0,
          optimalDecisions: 0,
          suboptimalDecisions: 0,
          routingPatterns: {
            mcpUsage: 0,
            directBedrockUsage: 0,
            fallbackOccurrences: 0
          },
          performanceComparison: {
            mcpPerformance: {
              averageLatency: 0,
              successRate: 0,
              throughput: 0
            },
            directBedrockPerformance: {
              averageLatency: 0,
              successRate: 0,
              throughput: 0
            }
          },
          recommendations: {
            routingOptimizations: [],
            performanceImprovements: [],
            configurationChanges: []
          },
          efficiency: 0
        };
      }
    });
  }
  /**
   * Record a routing decision for analysis
   */
  recordRoutingDecision(requestedRoute, actualRoute, decisionTime, reason) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[7]++;
    cov_1bfwzd7d16().s[51]++;
    this.performanceMetrics.routingDecisions.push({
      timestamp: new Date(),
      requestedRoute,
      actualRoute,
      decisionTime,
      reason
    });
    // Keep only recent decisions (last hour)
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[52]++, Date.now() - this.config.performanceWindow);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[53]++;
    this.performanceMetrics.routingDecisions = this.performanceMetrics.routingDecisions.filter(decision => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[8]++;
      cov_1bfwzd7d16().s[54]++;
      return decision.timestamp.getTime() > cutoffTime;
    });
  }
  /**
   * Record a request performance for analysis
   */
  recordRequestPerformance(route, latency, success, operationType) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[9]++;
    cov_1bfwzd7d16().s[55]++;
    this.performanceMetrics.requests.push({
      timestamp: new Date(),
      route,
      latency,
      success,
      operationType
    });
    // Keep only recent requests (last hour)
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[56]++, Date.now() - this.config.performanceWindow);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[57]++;
    this.performanceMetrics.requests = this.performanceMetrics.requests.filter(request => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[10]++;
      cov_1bfwzd7d16().s[58]++;
      return request.timestamp.getTime() > cutoffTime;
    });
  }
  /**
   * Get routing optimization recommendations
   */
  getOptimizationRecommendations() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[11]++;
    cov_1bfwzd7d16().s[59]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[12]++;
      cov_1bfwzd7d16().s[60]++;
      try {
        const analysis =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[61]++, yield this.analyzeRoutingEfficiency());
        const allRecommendations =
        /* istanbul ignore next */
        (cov_1bfwzd7d16().s[62]++, [...analysis.recommendations.routingOptimizations, ...analysis.recommendations.performanceImprovements, ...analysis.recommendations.configurationChanges]);
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[63]++;
        return allRecommendations;
      } catch (error) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[64]++;
        console.error("Failed to get optimization recommendations:", error);
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[65]++;
        return ["Monitor system health regularly", "Check routing efficiency metrics", "Review performance thresholds"];
      }
    });
  }
  /**
   * Get hybrid health metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[13]++;
    const uptime =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[66]++, Date.now() - this.systemStartTime.getTime());
    const recentRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[67]++, this.getRecentRequests(this.config.performanceWindow));
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[68]++;
    return {
      uptime,
      totalRequests: this.performanceMetrics.requests.length,
      recentRequests: recentRequests.length,
      routingDecisions: this.performanceMetrics.routingDecisions.length,
      efficiencyAnalyses: this.efficiencyAnalysisHistory.size,
      healthChecks: this.lastHealthCheck ?
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[2][0]++, 1) :
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[2][1]++, 0),
      systemStartTime: this.systemStartTime,
      lastHealthCheck: this.lastHealthCheck
    };
  }
  /**
   * Cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[14]++;
    cov_1bfwzd7d16().s[69]++;
    // Clear intervals
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[3][0]++;
      cov_1bfwzd7d16().s[70]++;
      clearInterval(this.healthCheckInterval);
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[71]++;
      this.healthCheckInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[3][1]++;
    }
    cov_1bfwzd7d16().s[72]++;
    if (this.analysisInterval) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[4][0]++;
      cov_1bfwzd7d16().s[73]++;
      clearInterval(this.analysisInterval);
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[74]++;
      this.analysisInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[4][1]++;
    }
    // Clear timeouts
    cov_1bfwzd7d16().s[75]++;
    this.activeTimeouts.forEach(timeout => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[15]++;
      cov_1bfwzd7d16().s[76]++;
      clearTimeout(timeout);
    });
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[77]++;
    this.activeTimeouts.clear();
    // Clear data
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[78]++;
    this.efficiencyAnalysisHistory.clear();
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[79]++;
    this.performanceMetrics.requests = [];
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[80]++;
    this.performanceMetrics.routingDecisions = [];
  }
  // Private implementation methods
  initializeHealthStatus() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[16]++;
    cov_1bfwzd7d16().s[81]++;
    return {
      overall: {
        isHealthy: false,
        healthScore: 0,
        lastCheck: new Date(),
        uptime: 0
      },
      routes: {
        mcp: {
          route: "mcp",
          isHealthy: false,
          latencyMs: 0,
          successRate: 0,
          lastCheck: new Date(),
          consecutiveFailures: 0,
          connectionStatus: "disconnected",
          queueSize: 0,
          pendingOperations: 0,
          lastSuccessfulOperation: null,
          errorRate: 0
        },
        directBedrock: {
          isHealthy: false,
          latencyMs: 0,
          lastCheck: new Date(),
          consecutiveFailures: 0,
          circuitBreakerState: "closed"
        }
      },
      routing: {
        efficiency: 0,
        optimalRouteUsage: 0,
        fallbackRate: 0,
        averageDecisionTime: 0
      },
      performance: {
        totalRequests: 0,
        successfulRequests: 0,
        failedRequests: 0,
        averageLatency: 0,
        p95Latency: 0,
        p99Latency: 0
      },
      recommendations: {
        immediate: [],
        optimization: [],
        maintenance: []
      }
    };
  }
  initializePerformanceMetrics() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[17]++;
    cov_1bfwzd7d16().s[82]++;
    return {
      requests: [],
      routingDecisions: []
    };
  }
  startMonitoring() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[18]++;
    cov_1bfwzd7d16().s[83]++;
    // Start health check monitoring
    if (this.config.enableContinuousMonitoring) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[5][0]++;
      cov_1bfwzd7d16().s[84]++;
      this.healthCheckInterval = setInterval(() => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[19]++;
        cov_1bfwzd7d16().s[85]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_1bfwzd7d16().f[20]++;
          cov_1bfwzd7d16().s[86]++;
          try {
            /* istanbul ignore next */
            cov_1bfwzd7d16().s[87]++;
            yield this.getHealthStatus();
          } catch (error) {
            /* istanbul ignore next */
            cov_1bfwzd7d16().s[88]++;
            console.error("Periodic health check failed:", error);
          }
        });
      }, this.config.checkInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[5][1]++;
    }
    // Start efficiency analysis
    cov_1bfwzd7d16().s[89]++;
    if (this.config.enablePerformanceOptimization) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[6][0]++;
      cov_1bfwzd7d16().s[90]++;
      this.analysisInterval = setInterval(() => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[21]++;
        cov_1bfwzd7d16().s[91]++;
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          /* istanbul ignore next */
          cov_1bfwzd7d16().f[22]++;
          cov_1bfwzd7d16().s[92]++;
          try {
            /* istanbul ignore next */
            cov_1bfwzd7d16().s[93]++;
            yield this.analyzeRoutingEfficiency();
          } catch (error) {
            /* istanbul ignore next */
            cov_1bfwzd7d16().s[94]++;
            console.error("Periodic efficiency analysis failed:", error);
          }
        });
      }, this.config.analysisInterval);
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[6][1]++;
    }
  }
  calculateOverallHealth() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[23]++;
    const mcpHealth =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[95]++, this.healthStatus.routes.mcp);
    const directBedrockHealth =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[96]++, this.healthStatus.routes.directBedrock);
    // Calculate weighted health score
    let healthScore =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[97]++, 0);
    let totalWeight =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[98]++, 0);
    // MCP health (weight: 0.4)
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[99]++;
    if (mcpHealth.isHealthy) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[7][0]++;
      cov_1bfwzd7d16().s[100]++;
      healthScore += 40 * (1 - mcpHealth.errorRate);
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[7][1]++;
    }
    cov_1bfwzd7d16().s[101]++;
    totalWeight += 40;
    // Direct Bedrock health (weight: 0.4)
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[102]++;
    if (directBedrockHealth.isHealthy) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[8][0]++;
      const latencyScore =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[103]++, Math.max(0, 1 - directBedrockHealth.latencyMs / this.config.healthThresholds.maxLatency));
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[104]++;
      healthScore += 40 * latencyScore;
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[8][1]++;
    }
    cov_1bfwzd7d16().s[105]++;
    totalWeight += 40;
    // Routing efficiency (weight: 0.2)
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[106]++;
    healthScore += 20 * this.healthStatus.routing.efficiency;
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[107]++;
    totalWeight += 20;
    // Normalize score
    const finalScore =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[108]++, totalWeight > 0 ?
    /* istanbul ignore next */
    (cov_1bfwzd7d16().b[9][0]++, healthScore / totalWeight * 100) :
    /* istanbul ignore next */
    (cov_1bfwzd7d16().b[9][1]++, 0));
    // Update overall health
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[109]++;
    this.healthStatus.overall.healthScore = Math.round(finalScore);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[110]++;
    this.healthStatus.overall.isHealthy = finalScore >= this.config.healthThresholds.minHealthScore;
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[111]++;
    this.healthStatus.overall.uptime = Date.now() - this.systemStartTime.getTime();
  }
  updateRoutingEfficiency() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[24]++;
    cov_1bfwzd7d16().s[112]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[25]++;
      const recentDecisions =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[113]++, this.getRecentRoutingDecisions(this.config.performanceWindow));
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[114]++;
      if (recentDecisions.length === 0) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[10][0]++;
        cov_1bfwzd7d16().s[115]++;
        this.healthStatus.routing.efficiency = 1.0; // Perfect efficiency with no decisions
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[116]++;
        this.healthStatus.routing.optimalRouteUsage = 1.0;
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[117]++;
        this.healthStatus.routing.fallbackRate = 0;
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[118]++;
        this.healthStatus.routing.averageDecisionTime = 0;
        /* istanbul ignore next */
        cov_1bfwzd7d16().s[119]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[10][1]++;
      }
      // Calculate efficiency metrics
      const optimalDecisions =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[120]++, recentDecisions.filter(d => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[26]++;
        cov_1bfwzd7d16().s[121]++;
        return d.requestedRoute === d.actualRoute;
      }).length);
      const fallbackDecisions =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[122]++, recentDecisions.filter(d => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[27]++;
        cov_1bfwzd7d16().s[123]++;
        return d.requestedRoute !== d.actualRoute;
      }).length);
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[124]++;
      this.healthStatus.routing.efficiency = optimalDecisions / recentDecisions.length;
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[125]++;
      this.healthStatus.routing.optimalRouteUsage = optimalDecisions / recentDecisions.length;
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[126]++;
      this.healthStatus.routing.fallbackRate = fallbackDecisions / recentDecisions.length;
      const totalDecisionTime =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[127]++, recentDecisions.reduce((sum, d) => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[28]++;
        cov_1bfwzd7d16().s[128]++;
        return sum + d.decisionTime;
      }, 0));
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[129]++;
      this.healthStatus.routing.averageDecisionTime = totalDecisionTime / recentDecisions.length;
    });
  }
  updatePerformanceMetrics() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[29]++;
    const recentRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[130]++, this.getRecentRequests(this.config.performanceWindow));
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[131]++;
    if (recentRequests.length === 0) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[11][0]++;
      cov_1bfwzd7d16().s[132]++;
      this.healthStatus.performance = {
        totalRequests: 0,
        successfulRequests: 0,
        failedRequests: 0,
        averageLatency: 0,
        p95Latency: 0,
        p99Latency: 0
      };
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[133]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[11][1]++;
    }
    const successfulRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[134]++, recentRequests.filter(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[30]++;
      cov_1bfwzd7d16().s[135]++;
      return r.success;
    }));
    const failedRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[136]++, recentRequests.filter(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[31]++;
      cov_1bfwzd7d16().s[137]++;
      return !r.success;
    }));
    // Calculate latency percentiles
    const latencies =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[138]++, recentRequests.map(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[32]++;
      cov_1bfwzd7d16().s[139]++;
      return r.latency;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[33]++;
      cov_1bfwzd7d16().s[140]++;
      return a - b;
    }));
    const p95Index =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[141]++, Math.floor(latencies.length * 0.95));
    const p99Index =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[142]++, Math.floor(latencies.length * 0.99));
    const totalLatency =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[143]++, latencies.reduce((sum, latency) => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[34]++;
      cov_1bfwzd7d16().s[144]++;
      return sum + latency;
    }, 0));
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[145]++;
    this.healthStatus.performance = {
      totalRequests: recentRequests.length,
      successfulRequests: successfulRequests.length,
      failedRequests: failedRequests.length,
      averageLatency: totalLatency / recentRequests.length,
      p95Latency:
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[12][0]++, latencies[p95Index]) ||
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[12][1]++, 0),
      p99Latency:
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[13][0]++, latencies[p99Index]) ||
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[13][1]++, 0)
    };
  }
  generateHealthRecommendations() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[35]++;
    const immediate =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[146]++, []);
    const optimization =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[147]++, []);
    const maintenance =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[148]++, []);
    // Check critical health issues
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[149]++;
    if (this.healthStatus.overall.healthScore < this.config.alertThresholds.criticalHealthScore) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[14][0]++;
      cov_1bfwzd7d16().s[150]++;
      immediate.push("Critical health issue detected - investigate system status");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[14][1]++;
    }
    cov_1bfwzd7d16().s[151]++;
    if (this.healthStatus.performance.p95Latency > this.config.alertThresholds.criticalLatency) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[15][0]++;
      cov_1bfwzd7d16().s[152]++;
      immediate.push("Critical latency detected - check system performance");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[15][1]++;
    }
    // Check MCP health
    cov_1bfwzd7d16().s[153]++;
    if (!this.healthStatus.routes.mcp.isHealthy) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[16][0]++;
      cov_1bfwzd7d16().s[154]++;
      immediate.push("MCP route is unhealthy - check connection and configuration");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[16][1]++;
    }
    cov_1bfwzd7d16().s[155]++;
    if (this.healthStatus.routes.mcp.queueSize > 100) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[17][0]++;
      cov_1bfwzd7d16().s[156]++;
      optimization.push("MCP queue size is high - consider increasing processing capacity");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[17][1]++;
    }
    // Check Direct Bedrock health
    cov_1bfwzd7d16().s[157]++;
    if (!this.healthStatus.routes.directBedrock.isHealthy) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[18][0]++;
      cov_1bfwzd7d16().s[158]++;
      immediate.push("Direct Bedrock route is unhealthy - check AWS connectivity");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[18][1]++;
    }
    cov_1bfwzd7d16().s[159]++;
    if (this.healthStatus.routes.directBedrock.consecutiveFailures > 5) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[19][0]++;
      cov_1bfwzd7d16().s[160]++;
      optimization.push("Direct Bedrock has consecutive failures - review error patterns");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[19][1]++;
    }
    // Check routing efficiency
    cov_1bfwzd7d16().s[161]++;
    if (this.healthStatus.routing.efficiency < 0.8) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[20][0]++;
      cov_1bfwzd7d16().s[162]++;
      optimization.push("Routing efficiency is low - review routing decision logic");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[20][1]++;
    }
    cov_1bfwzd7d16().s[163]++;
    if (this.healthStatus.routing.fallbackRate > this.config.healthThresholds.maxFallbackRate) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[21][0]++;
      cov_1bfwzd7d16().s[164]++;
      optimization.push("High fallback rate detected - optimize primary route selection");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[21][1]++;
    }
    // Performance recommendations
    cov_1bfwzd7d16().s[165]++;
    if (this.healthStatus.performance.p95Latency > this.config.alertThresholds.warningLatency) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[22][0]++;
      cov_1bfwzd7d16().s[166]++;
      optimization.push("P95 latency is elevated - consider performance optimizations");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[22][1]++;
    }
    const successRate =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[167]++, this.healthStatus.performance.totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_1bfwzd7d16().b[23][0]++, this.healthStatus.performance.successfulRequests / this.healthStatus.performance.totalRequests) :
    /* istanbul ignore next */
    (cov_1bfwzd7d16().b[23][1]++, 1.0));
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[168]++;
    if (successRate < this.config.healthThresholds.minSuccessRate) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[24][0]++;
      cov_1bfwzd7d16().s[169]++;
      immediate.push("Success rate is below threshold - investigate error patterns");
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[24][1]++;
    }
    // Maintenance recommendations
    cov_1bfwzd7d16().s[170]++;
    maintenance.push("Review health monitoring configuration regularly");
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[171]++;
    maintenance.push("Update routing thresholds based on performance trends");
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[172]++;
    maintenance.push("Clean up old performance data and analysis history");
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[173]++;
    this.healthStatus.recommendations = {
      immediate,
      optimization,
      maintenance
    };
  }
  getRecentRoutingDecisions(timeWindow) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[36]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[174]++, Date.now() - timeWindow);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[175]++;
    return this.performanceMetrics.routingDecisions.filter(decision => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[37]++;
      cov_1bfwzd7d16().s[176]++;
      return decision.timestamp.getTime() > cutoffTime;
    });
  }
  getRecentRequests(timeWindow) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[38]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[177]++, Date.now() - timeWindow);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[178]++;
    return this.performanceMetrics.requests.filter(request => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[39]++;
      cov_1bfwzd7d16().s[179]++;
      return request.timestamp.getTime() > cutoffTime;
    });
  }
  calculateRoutingPatterns(decisions, requests) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[40]++;
    const mcpRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[180]++, requests.filter(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[41]++;
      cov_1bfwzd7d16().s[181]++;
      return r.route === "mcp";
    }).length);
    const directBedrockRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[182]++, requests.filter(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[42]++;
      cov_1bfwzd7d16().s[183]++;
      return r.route === "direct";
    }).length);
    const totalRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[184]++, requests.length);
    const fallbackOccurrences =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[185]++, decisions.filter(d => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[43]++;
      cov_1bfwzd7d16().s[186]++;
      return d.requestedRoute !== d.actualRoute;
    }).length);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[187]++;
    return {
      mcpUsage: totalRequests > 0 ?
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[25][0]++, mcpRequests / totalRequests) :
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[25][1]++, 0),
      directBedrockUsage: totalRequests > 0 ?
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[26][0]++, directBedrockRequests / totalRequests) :
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[26][1]++, 0),
      fallbackOccurrences
    };
  }
  analyzePerformanceByRoute(requests) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[44]++;
    const mcpRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[188]++, requests.filter(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[45]++;
      cov_1bfwzd7d16().s[189]++;
      return r.route === "mcp";
    }));
    const directBedrockRequests =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[190]++, requests.filter(r => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[46]++;
      cov_1bfwzd7d16().s[191]++;
      return r.route === "direct";
    }));
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[192]++;
    const calculatePerformance = routeRequests => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[47]++;
      cov_1bfwzd7d16().s[193]++;
      if (routeRequests.length === 0) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[27][0]++;
        cov_1bfwzd7d16().s[194]++;
        return {
          averageLatency: 0,
          successRate: 0,
          throughput: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[27][1]++;
      }
      const totalLatency =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[195]++, routeRequests.reduce((sum, r) => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[48]++;
        cov_1bfwzd7d16().s[196]++;
        return sum + r.latency;
      }, 0));
      const successfulRequests =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[197]++, routeRequests.filter(r => {
        /* istanbul ignore next */
        cov_1bfwzd7d16().f[49]++;
        cov_1bfwzd7d16().s[198]++;
        return r.success;
      }).length);
      const timeSpan =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[199]++, this.config.performanceWindow / 1000); // Convert to seconds
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[200]++;
      return {
        averageLatency: totalLatency / routeRequests.length,
        successRate: successfulRequests / routeRequests.length,
        throughput: routeRequests.length / timeSpan // requests per second
      };
    };
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[201]++;
    return {
      mcpPerformance: calculatePerformance(mcpRequests),
      directBedrockPerformance: calculatePerformance(directBedrockRequests)
    };
  }
  calculateRoutingEfficiency(decisions, performance) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[50]++;
    cov_1bfwzd7d16().s[202]++;
    if (decisions.length === 0) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[28][0]++;
      cov_1bfwzd7d16().s[203]++;
      return 1.0;
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[28][1]++;
    }
    // Calculate decision efficiency (optimal route selection)
    const optimalDecisions =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[204]++, decisions.filter(d => {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[51]++;
      cov_1bfwzd7d16().s[205]++;
      return d.requestedRoute === d.actualRoute;
    }).length);
    const decisionEfficiency =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[206]++, optimalDecisions / decisions.length);
    // Calculate performance efficiency (actual performance vs expected)
    const mcpPerf =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[207]++, performance.mcpPerformance);
    const directPerf =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[208]++, performance.directBedrockPerformance);
    let performanceEfficiency =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[209]++, 1.0);
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_1bfwzd7d16().b[30][0]++, mcpPerf.averageLatency > 0) &&
    /* istanbul ignore next */
    (cov_1bfwzd7d16().b[30][1]++, directPerf.averageLatency > 0)) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().b[29][0]++;
      // Compare actual performance to expected thresholds
      const mcpEfficiency =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[211]++, Math.max(0, 1 - mcpPerf.averageLatency / this.config.healthThresholds.maxLatency));
      const directEfficiency =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[212]++, Math.max(0, 1 - directPerf.averageLatency / this.config.healthThresholds.maxLatency));
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[213]++;
      performanceEfficiency = (mcpEfficiency + directEfficiency) / 2;
    } else
    /* istanbul ignore next */
    {
      cov_1bfwzd7d16().b[29][1]++;
    }
    // Combine decision and performance efficiency
    cov_1bfwzd7d16().s[214]++;
    return decisionEfficiency * 0.6 + performanceEfficiency * 0.4;
  }
  generateRoutingRecommendations(patterns, performance, efficiency) {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[52]++;
    cov_1bfwzd7d16().s[215]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1bfwzd7d16().f[53]++;
      const routingOptimizations =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[216]++, []);
      const performanceImprovements =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[217]++, []);
      const configurationChanges =
      /* istanbul ignore next */
      (cov_1bfwzd7d16().s[218]++, []);
      // Routing optimization recommendations
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[219]++;
      if (efficiency < 0.8) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[31][0]++;
        cov_1bfwzd7d16().s[220]++;
        routingOptimizations.push("Review routing decision algorithm for better efficiency");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[31][1]++;
      }
      cov_1bfwzd7d16().s[221]++;
      if (patterns.fallbackOccurrences > patterns.mcpUsage * 0.1) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[32][0]++;
        cov_1bfwzd7d16().s[222]++;
        routingOptimizations.push("High fallback rate - consider adjusting route health thresholds");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[32][1]++;
      }
      cov_1bfwzd7d16().s[223]++;
      if (
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[34][0]++, patterns.mcpUsage < 0.3) &&
      /* istanbul ignore next */
      (cov_1bfwzd7d16().b[34][1]++, performance.mcpPerformance.successRate > 0.9)) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[33][0]++;
        cov_1bfwzd7d16().s[224]++;
        routingOptimizations.push("MCP route underutilized despite good performance - review routing preferences");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[33][1]++;
      }
      // Performance improvement recommendations
      cov_1bfwzd7d16().s[225]++;
      if (performance.mcpPerformance.averageLatency > this.config.alertThresholds.warningLatency) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[35][0]++;
        cov_1bfwzd7d16().s[226]++;
        performanceImprovements.push("MCP route latency is high - investigate connection and processing delays");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[35][1]++;
      }
      cov_1bfwzd7d16().s[227]++;
      if (performance.directBedrockPerformance.averageLatency > this.config.alertThresholds.warningLatency) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[36][0]++;
        cov_1bfwzd7d16().s[228]++;
        performanceImprovements.push("Direct Bedrock latency is high - check AWS region and network connectivity");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[36][1]++;
      }
      cov_1bfwzd7d16().s[229]++;
      if (performance.mcpPerformance.successRate < 0.95) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[37][0]++;
        cov_1bfwzd7d16().s[230]++;
        performanceImprovements.push("MCP route success rate is low - investigate error patterns");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[37][1]++;
      }
      cov_1bfwzd7d16().s[231]++;
      if (performance.directBedrockPerformance.successRate < 0.95) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[38][0]++;
        cov_1bfwzd7d16().s[232]++;
        performanceImprovements.push("Direct Bedrock success rate is low - check AWS service limits and errors");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[38][1]++;
      }
      // Configuration change recommendations
      cov_1bfwzd7d16().s[233]++;
      if (patterns.directBedrockUsage > 0.7) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[39][0]++;
        cov_1bfwzd7d16().s[234]++;
        configurationChanges.push("High Direct Bedrock usage - consider increasing MCP capacity");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[39][1]++;
      }
      cov_1bfwzd7d16().s[235]++;
      if (performance.mcpPerformance.throughput < performance.directBedrockPerformance.throughput * 0.5) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[40][0]++;
        cov_1bfwzd7d16().s[236]++;
        configurationChanges.push("MCP throughput is significantly lower - review MCP configuration");
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[40][1]++;
      }
      cov_1bfwzd7d16().s[237]++;
      configurationChanges.push("Review health check intervals based on current usage patterns");
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[238]++;
      configurationChanges.push("Consider adjusting routing thresholds based on performance trends");
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[239]++;
      return {
        routingOptimizations,
        performanceImprovements,
        configurationChanges
      };
    });
  }
  cleanupOldAnalyses() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[54]++;
    const cutoffTime =
    /* istanbul ignore next */
    (cov_1bfwzd7d16().s[240]++, Date.now() - 24 * 60 * 60 * 1000); // 24 hours
    /* istanbul ignore next */
    cov_1bfwzd7d16().s[241]++;
    for (const [id, analysis] of this.efficiencyAnalysisHistory.entries()) {
      /* istanbul ignore next */
      cov_1bfwzd7d16().s[242]++;
      if (analysis.timestamp.getTime() < cutoffTime) {
        /* istanbul ignore next */
        cov_1bfwzd7d16().b[41][0]++;
        cov_1bfwzd7d16().s[243]++;
        this.efficiencyAnalysisHistory.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_1bfwzd7d16().b[41][1]++;
      }
    }
  }
  generateAnalysisId() {
    /* istanbul ignore next */
    cov_1bfwzd7d16().f[55]++;
    cov_1bfwzd7d16().s[244]++;
    return `hybrid-analysis-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
}
/* istanbul ignore next */
cov_1bfwzd7d16().s[245]++;
exports.HybridHealthMonitor = HybridHealthMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,