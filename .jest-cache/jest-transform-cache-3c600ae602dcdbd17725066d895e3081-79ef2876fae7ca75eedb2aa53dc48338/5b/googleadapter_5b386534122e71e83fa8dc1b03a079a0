914d1476830488b01d463abf2ada4918
"use strict";

/* istanbul ignore next */
function cov_17ll1hr18a() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/adapters/google-adapter.ts";
  var hash = "21c1a9793084a6dcc8acdaa02fd295e8dc6fd181";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/adapters/google-adapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 28
        },
        end: {
          line: 4,
          column: 58
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "4": {
        start: {
          line: 8,
          column: 12
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 23,
          column: 10
        }
      },
      "6": {
        start: {
          line: 12,
          column: 60
        },
        end: {
          line: 20,
          column: 21
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "8": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "10": {
        start: {
          line: 32,
          column: 63
        },
        end: {
          line: 40,
          column: 21
        }
      },
      "11": {
        start: {
          line: 46,
          column: 66
        },
        end: {
          line: 46,
          column: 71
        }
      },
      "12": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "13": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 50
        }
      },
      "14": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "15": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "16": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 75
        }
      },
      "17": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "18": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 64
        }
      },
      "19": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "20": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "21": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 50
        }
      },
      "22": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 52
        }
      },
      "23": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "24": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 87,
          column: 18
        }
      },
      "25": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 89,
          column: 43
        }
      },
      "26": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "27": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 170
        }
      },
      "28": {
        start: {
          line: 92,
          column: 156
        },
        end: {
          line: 92,
          column: 162
        }
      },
      "29": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "30": {
        start: {
          line: 93,
          column: 46
        },
        end: {
          line: 93,
          column: 52
        }
      },
      "31": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 95,
          column: 182
        }
      },
      "32": {
        start: {
          line: 95,
          column: 160
        },
        end: {
          line: 95,
          column: 174
        }
      },
      "33": {
        start: {
          line: 96,
          column: 30
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "34": {
        start: {
          line: 96,
          column: 57
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "35": {
        start: {
          line: 101,
          column: 31
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "36": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "37": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 46
        }
      },
      "38": {
        start: {
          line: 118,
          column: 31
        },
        end: {
          line: 120,
          column: 55
        }
      },
      "39": {
        start: {
          line: 121,
          column: 33
        },
        end: {
          line: 123,
          column: 54
        }
      },
      "40": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "41": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 134,
          column: 14
        }
      },
      "42": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 141,
          column: 10
        }
      },
      "43": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "44": {
        start: {
          line: 157,
          column: 23
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "45": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 44
        }
      },
      "46": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 163,
          column: 48
        }
      },
      "47": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 165,
          column: 22
        }
      },
      "48": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 22
        }
      },
      "49": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 39
        }
      },
      "50": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 167,
          column: 41
        }
      },
      "51": {
        start: {
          line: 169,
          column: 30
        },
        end: {
          line: 169,
          column: 178
        }
      },
      "52": {
        start: {
          line: 169,
          column: 156
        },
        end: {
          line: 169,
          column: 170
        }
      },
      "53": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 175,
          column: 12
        }
      },
      "54": {
        start: {
          line: 170,
          column: 49
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "55": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 24
        }
      },
      "56": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "57": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 28
        }
      },
      "58": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 29
        }
      },
      "59": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 28
        }
      },
      "60": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 28
        }
      },
      "61": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 58
        }
      },
      "62": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 70
        }
      },
      "63": {
        start: {
          line: 200,
          column: 0
        },
        end: {
          line: 200,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 52
          },
          end: {
            line: 12,
            column: 53
          }
        },
        loc: {
          start: {
            line: 12,
            column: 60
          },
          end: {
            line: 20,
            column: 21
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 52
          },
          end: {
            line: 32,
            column: 53
          }
        },
        loc: {
          start: {
            line: 32,
            column: 63
          },
          end: {
            line: 40,
            column: 21
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 45
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 75
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 92,
            column: 149
          },
          end: {
            line: 92,
            column: 150
          }
        },
        loc: {
          start: {
            line: 92,
            column: 156
          },
          end: {
            line: 92,
            column: 162
          }
        },
        line: 92
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 40
          }
        },
        loc: {
          start: {
            line: 93,
            column: 46
          },
          end: {
            line: 93,
            column: 52
          }
        },
        line: 93
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 95,
            column: 153
          },
          end: {
            line: 95,
            column: 154
          }
        },
        loc: {
          start: {
            line: 95,
            column: 160
          },
          end: {
            line: 95,
            column: 174
          }
        },
        line: 95
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 96,
            column: 48
          },
          end: {
            line: 96,
            column: 49
          }
        },
        loc: {
          start: {
            line: 96,
            column: 57
          },
          end: {
            line: 99,
            column: 13
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 25
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 155
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 39
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 161
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 169,
            column: 149
          },
          end: {
            line: 169,
            column: 150
          }
        },
        loc: {
          start: {
            line: 169,
            column: 156
          },
          end: {
            line: 169,
            column: 170
          }
        },
        line: 169
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 170,
            column: 34
          }
        },
        loc: {
          start: {
            line: 170,
            column: 49
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 170
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 22
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 177
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 33
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 181
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 28
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 196
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 8,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 8,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 51
          },
          end: {
            line: 7,
            column: 57
          }
        }, {
          start: {
            line: 7,
            column: 60
          },
          end: {
            line: 7,
            column: 72
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 28
          }
        }, {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 48
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 50
          }
        }, {
          start: {
            line: 14,
            column: 54
          },
          end: {
            line: 14,
            column: 56
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 40
          },
          end: {
            line: 17,
            column: 52
          }
        }, {
          start: {
            line: 17,
            column: 56
          },
          end: {
            line: 17,
            column: 58
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 62
          }
        }, {
          start: {
            line: 18,
            column: 66
          },
          end: {
            line: 18,
            column: 68
          }
        }],
        line: 18
      },
      "6": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 28,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 28,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "7": {
        loc: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 57
          }
        }, {
          start: {
            line: 27,
            column: 60
          },
          end: {
            line: 27,
            column: 72
          }
        }],
        line: 27
      },
      "8": {
        loc: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 27,
            column: 28
          }
        }, {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 48
          }
        }],
        line: 27
      },
      "9": {
        loc: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 62
          }
        }, {
          start: {
            line: 34,
            column: 66
          },
          end: {
            line: 34,
            column: 68
          }
        }],
        line: 34
      },
      "10": {
        loc: {
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 38,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 38,
            column: 71
          }
        }, {
          start: {
            line: 38,
            column: 75
          },
          end: {
            line: 38,
            column: 77
          }
        }],
        line: 38
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 42
          }
        }, {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 50
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 32
          }
        }, {
          start: {
            line: 62,
            column: 36
          },
          end: {
            line: 62,
            column: 50
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 59
          },
          end: {
            line: 63,
            column: 65
          }
        }, {
          start: {
            line: 63,
            column: 68
          },
          end: {
            line: 63,
            column: 85
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 31
          }
        }, {
          start: {
            line: 63,
            column: 35
          },
          end: {
            line: 63,
            column: 56
          }
        }],
        line: 63
      },
      "16": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 64
      },
      "17": {
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 46
          }
        }, {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 52
          }
        }],
        line: 80
      },
      "18": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "19": {
        loc: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 92,
            column: 170
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 163
          }
        }, {
          start: {
            line: 92,
            column: 168
          },
          end: {
            line: 92,
            column: 170
          }
        }],
        line: 92
      },
      "20": {
        loc: {
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 130
          },
          end: {
            line: 92,
            column: 136
          }
        }, {
          start: {
            line: 92,
            column: 139
          },
          end: {
            line: 92,
            column: 163
          }
        }],
        line: 92
      },
      "21": {
        loc: {
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 110
          }
        }, {
          start: {
            line: 92,
            column: 114
          },
          end: {
            line: 92,
            column: 127
          }
        }],
        line: 92
      },
      "22": {
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 78
          },
          end: {
            line: 92,
            column: 84
          }
        }, {
          start: {
            line: 92,
            column: 87
          },
          end: {
            line: 92,
            column: 100
          }
        }],
        line: 92
      },
      "23": {
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 53
          }
        }, {
          start: {
            line: 92,
            column: 57
          },
          end: {
            line: 92,
            column: 75
          }
        }],
        line: 92
      },
      "24": {
        loc: {
          start: {
            line: 95,
            column: 34
          },
          end: {
            line: 95,
            column: 182
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 95,
            column: 175
          }
        }, {
          start: {
            line: 95,
            column: 180
          },
          end: {
            line: 95,
            column: 182
          }
        }],
        line: 95
      },
      "25": {
        loc: {
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 95,
            column: 175
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 134
          },
          end: {
            line: 95,
            column: 140
          }
        }, {
          start: {
            line: 95,
            column: 143
          },
          end: {
            line: 95,
            column: 175
          }
        }],
        line: 95
      },
      "26": {
        loc: {
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 95,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 35
          },
          end: {
            line: 95,
            column: 114
          }
        }, {
          start: {
            line: 95,
            column: 118
          },
          end: {
            line: 95,
            column: 131
          }
        }],
        line: 95
      },
      "27": {
        loc: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 82
          },
          end: {
            line: 95,
            column: 88
          }
        }, {
          start: {
            line: 95,
            column: 91
          },
          end: {
            line: 95,
            column: 104
          }
        }],
        line: 95
      },
      "28": {
        loc: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 57
          }
        }, {
          start: {
            line: 95,
            column: 61
          },
          end: {
            line: 95,
            column: 79
          }
        }],
        line: 95
      },
      "29": {
        loc: {
          start: {
            line: 98,
            column: 27
          },
          end: {
            line: 98,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 27
          },
          end: {
            line: 98,
            column: 47
          }
        }, {
          start: {
            line: 98,
            column: 51
          },
          end: {
            line: 98,
            column: 53
          }
        }],
        line: 98
      },
      "30": {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 106
          }
        }, {
          start: {
            line: 102,
            column: 111
          },
          end: {
            line: 102,
            column: 112
          }
        }],
        line: 102
      },
      "31": {
        loc: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 78
          },
          end: {
            line: 102,
            column: 84
          }
        }, {
          start: {
            line: 102,
            column: 87
          },
          end: {
            line: 102,
            column: 106
          }
        }],
        line: 102
      },
      "32": {
        loc: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 58
          }
        }, {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 102,
            column: 75
          }
        }],
        line: 102
      },
      "33": {
        loc: {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 111
          }
        }, {
          start: {
            line: 103,
            column: 116
          },
          end: {
            line: 103,
            column: 117
          }
        }],
        line: 103
      },
      "34": {
        loc: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 79
          },
          end: {
            line: 103,
            column: 85
          }
        }, {
          start: {
            line: 103,
            column: 88
          },
          end: {
            line: 103,
            column: 111
          }
        }],
        line: 103
      },
      "35": {
        loc: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 59
          }
        }, {
          start: {
            line: 103,
            column: 63
          },
          end: {
            line: 103,
            column: 76
          }
        }],
        line: 103
      },
      "36": {
        loc: {
          start: {
            line: 118,
            column: 31
          },
          end: {
            line: 120,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 31
          },
          end: {
            line: 118,
            column: 69
          }
        }, {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 48
          }
        }, {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 55
          }
        }],
        line: 118
      },
      "37": {
        loc: {
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 123,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 121,
            column: 73
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 122,
            column: 51
          }
        }, {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 54
          }
        }],
        line: 121
      },
      "38": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "39": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 26
          }
        }, {
          start: {
            line: 124,
            column: 30
          },
          end: {
            line: 124,
            column: 46
          }
        }],
        line: 124
      },
      "40": {
        loc: {
          start: {
            line: 163,
            column: 27
          },
          end: {
            line: 163,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 27
          },
          end: {
            line: 163,
            column: 42
          }
        }, {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 163,
            column: 48
          }
        }],
        line: 163
      },
      "41": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 165,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 165,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "42": {
        loc: {
          start: {
            line: 169,
            column: 30
          },
          end: {
            line: 169,
            column: 178
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 171
          }
        }, {
          start: {
            line: 169,
            column: 176
          },
          end: {
            line: 169,
            column: 178
          }
        }],
        line: 169
      },
      "43": {
        loc: {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 171
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 130
          },
          end: {
            line: 169,
            column: 136
          }
        }, {
          start: {
            line: 169,
            column: 139
          },
          end: {
            line: 169,
            column: 171
          }
        }],
        line: 169
      },
      "44": {
        loc: {
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 31
          },
          end: {
            line: 169,
            column: 110
          }
        }, {
          start: {
            line: 169,
            column: 114
          },
          end: {
            line: 169,
            column: 127
          }
        }],
        line: 169
      },
      "45": {
        loc: {
          start: {
            line: 169,
            column: 37
          },
          end: {
            line: 169,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 78
          },
          end: {
            line: 169,
            column: 84
          }
        }, {
          start: {
            line: 169,
            column: 87
          },
          end: {
            line: 169,
            column: 100
          }
        }],
        line: 169
      },
      "46": {
        loc: {
          start: {
            line: 169,
            column: 37
          },
          end: {
            line: 169,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 37
          },
          end: {
            line: 169,
            column: 53
          }
        }, {
          start: {
            line: 169,
            column: 57
          },
          end: {
            line: 169,
            column: 75
          }
        }],
        line: 169
      },
      "47": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 34
          }
        }, {
          start: {
            line: 171,
            column: 38
          },
          end: {
            line: 171,
            column: 60
          }
        }],
        line: 171
      },
      "48": {
        loc: {
          start: {
            line: 173,
            column: 23
          },
          end: {
            line: 173,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 23
          },
          end: {
            line: 173,
            column: 43
          }
        }, {
          start: {
            line: 173,
            column: 47
          },
          end: {
            line: 173,
            column: 49
          }
        }],
        line: 173
      },
      "49": {
        loc: {
          start: {
            line: 174,
            column: 24
          },
          end: {
            line: 174,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 60
          },
          end: {
            line: 174,
            column: 63
          }
        }, {
          start: {
            line: 174,
            column: 66
          },
          end: {
            line: 174,
            column: 69
          }
        }],
        line: 174
      },
      "50": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 184,
            column: 28
          }
        }, {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 186,
            column: 29
          }
        }, {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 188,
            column: 28
          }
        }, {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 190,
            column: 28
          }
        }, {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 192,
            column: 58
          }
        }],
        line: 182
      },
      "51": {
        loc: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 19
          }
        }, {
          start: {
            line: 197,
            column: 23
          },
          end: {
            line: 197,
            column: 47
          }
        }, {
          start: {
            line: 197,
            column: 51
          },
          end: {
            line: 197,
            column: 69
          }
        }],
        line: 197
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0, 0, 0, 0],
      "51": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/adapters/google-adapter.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/adapters/google-adapter.ts"],
      sourcesContent: ["import { ProviderResponse, RouteDecision, ToolSpec } from \"../types\";\nimport { BaseAdapter } from \"./tool-call-adapter\";\n\nexport class GoogleAdapter extends BaseAdapter {\n  mapTools(tools?: ToolSpec[]) {\n    if (!tools?.length) return undefined;\n\n    return {\n      tools: [\n        {\n          functionDeclarations: tools.map((t) => ({\n            name: t.name,\n            description: t.description || \"\",\n            parameters: {\n              type: \"object\",\n              properties: t.parameters || {},\n              required: Object.keys(t.parameters || {}),\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  // Enhanced mapping from unified schema to Google format\n  override fromUnifiedSchema(tools?: UnifiedToolSpec[]): any | undefined {\n    if (!tools?.length) return undefined;\n\n    return {\n      tools: [\n        {\n          functionDeclarations: tools.map((tool) => ({\n            name: tool.function.name,\n            description: tool.function.description || \"\",\n            parameters: {\n              type: \"object\",\n              properties: tool.function.parameters.properties,\n              required: tool.function.parameters.required || [],\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  buildRequest(input: {\n    prompt: string;\n    decision: RouteDecision;\n    streaming?: boolean;\n    maxTokens?: number;\n    tools?: ToolSpec[] | UnifiedToolSpec[];\n  }) {\n    const { prompt, decision, streaming, maxTokens, tools } = input;\n\n    const request: any = {\n      contents: [\n        {\n          role: \"user\",\n          parts: [{ text: prompt }],\n        },\n      ],\n      generationConfig: {\n        temperature: decision.temperature,\n        maxOutputTokens: maxTokens || 1024,\n        topP: 0.8,\n        topK: 40,\n      },\n    };\n\n    // Handle tools from decision or input parameter\n    const toolsToUse = tools || decision.tools;\n    if (toolsToUse?.length) {\n      if (this.isUnifiedToolSpec(toolsToUse[0])) {\n        Object.assign(\n          request,\n          this.fromUnifiedSchema(toolsToUse as UnifiedToolSpec[])\n        );\n      } else {\n        Object.assign(request, this.mapTools(toolsToUse as ToolSpec[]));\n      }\n    }\n\n    // Add safety settings for different domains\n    request.safetySettings = this.getSafetySettings(prompt);\n\n    return request;\n  }\n\n  parseResponse(resp: any): ProviderResponse {\n    try {\n      this.validateResponse(resp, \"Google\");\n\n      // Handle different response formats\n      const candidates = resp.candidates || [];\n      if (candidates.length === 0) {\n        return {\n          text: \"\",\n          toolCalls: [],\n          raw: resp,\n          tokensUsed: { input: 0, output: 0 },\n        };\n      }\n\n      const candidate = candidates[0];\n      const content = candidate.content;\n\n      // Extract text content\n      const textParts = content?.parts?.filter((p: any) => p.text) || [];\n      const text = textParts.map((p: any) => p.text).join(\"\\n\");\n\n      // Extract function calls\n      const functionCalls =\n        content?.parts?.filter((p: any) => p.functionCall) || [];\n      const toolCalls = functionCalls.map((fc: any) => ({\n        name: fc.functionCall.name,\n        arguments: fc.functionCall.args || {},\n      }));\n\n      // Extract usage metadata\n      const tokensUsed = {\n        input: resp.usageMetadata?.promptTokenCount || 0,\n        output: resp.usageMetadata?.candidatesTokenCount || 0,\n      };\n\n      return {\n        text,\n        toolCalls,\n        raw: resp,\n        tokensUsed,\n      };\n    } catch (error) {\n      this.handleError(error, \"Google\");\n    }\n  }\n\n  private getSafetySettings(prompt: string) {\n    // Adjust safety settings based on content\n    const isLegalContent =\n      prompt.toLowerCase().includes(\"legal\") ||\n      prompt.toLowerCase().includes(\"law\") ||\n      prompt.toLowerCase().includes(\"compliance\");\n\n    const isMedicalContent =\n      prompt.toLowerCase().includes(\"medical\") ||\n      prompt.toLowerCase().includes(\"health\") ||\n      prompt.toLowerCase().includes(\"diagnosis\");\n\n    if (isLegalContent || isMedicalContent) {\n      return [\n        {\n          category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n          threshold: \"BLOCK_LOW_AND_ABOVE\",\n        },\n        {\n          category: \"HARM_CATEGORY_HARASSMENT\",\n          threshold: \"BLOCK_LOW_AND_ABOVE\",\n        },\n      ];\n    }\n\n    return [\n      {\n        category: \"HARM_CATEGORY_DANGEROUS_CONTENT\",\n        threshold: \"BLOCK_MEDIUM_AND_ABOVE\",\n      },\n    ];\n  }\n\n  getProviderConfig() {\n    return {\n      maxContextTokens: 1000000, // Gemini 1.5 Pro context window\n      supportsStreaming: true,\n      supportsTools: true,\n      supportsJsonMode: true, // Gemini supports JSON mode\n      supportsVision: true, // Gemini supports vision\n      rateLimitRpm: 300, // Requests per minute (varies by tier)\n      fallbackProvider: \"bedrock\", // Fallback to Bedrock if Google fails\n    };\n  }\n\n  // Google-specific token estimation\n  override estimateTokens(text: string): { input: number; output: number } {\n    // Gemini typically uses ~4 characters per token\n    const tokens = Math.ceil(text.length / 4);\n    return { input: tokens, output: 0 };\n  }\n\n  // Implementation of abstract methods\n  protected extractToolCallsFromResponse(resp: any): Array<{\n    id?: string;\n    name: string;\n    arguments: any;\n    confidence?: number;\n  }> {\n    const candidates = resp.candidates || [];\n    if (candidates.length === 0) return [];\n\n    const candidate = candidates[0];\n    const content = candidate.content;\n\n    // Extract function calls from Google response format\n    const functionCalls =\n      content?.parts?.filter((p: any) => p.functionCall) || [];\n\n    return functionCalls.map((fc: any, index: number) => ({\n      id: fc.functionCall.id || `google_call_${index}`,\n      name: fc.functionCall.name,\n      arguments: fc.functionCall.args || {},\n      confidence: candidate.finishReason === \"STOP\" ? 1.0 : 0.8, // Lower confidence for incomplete responses\n    }));\n  }\n\n  protected getProviderName(): string {\n    return \"google\";\n  }\n\n  // Enhanced tool feature support for Google\n  override supportsToolFeature(\n    feature: \"parallel_calls\" | \"streaming\" | \"json_schema\" | \"complex_types\"\n  ): boolean {\n    switch (feature) {\n      case \"parallel_calls\":\n        return true; // Gemini supports parallel function calls\n      case \"streaming\":\n        return false; // Google doesn't support streaming with function calls yet\n      case \"json_schema\":\n        return true; // Gemini supports structured output\n      case \"complex_types\":\n        return true; // Gemini handles complex nested types\n      default:\n        return super.supportsToolFeature(feature);\n    }\n  }\n\n  // Helper method to check if tools are in unified format\n  private isUnifiedToolSpec(tool: any): tool is UnifiedToolSpec {\n    return tool && typeof tool === \"object\" && \"function\" in tool;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "21c1a9793084a6dcc8acdaa02fd295e8dc6fd181"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17ll1hr18a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17ll1hr18a();
cov_17ll1hr18a().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17ll1hr18a().s[1]++;
exports.GoogleAdapter = void 0;
const tool_call_adapter_1 =
/* istanbul ignore next */
(cov_17ll1hr18a().s[2]++, require("./tool-call-adapter"));
class GoogleAdapter extends
/* istanbul ignore next */
(tool_call_adapter_1.BaseAdapter) {
  mapTools(tools) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[0]++;
    cov_17ll1hr18a().s[3]++;
    if (!(
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[2][0]++, tools === null) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[2][1]++, tools === void 0) ?
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[1][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[1][1]++, tools.length))) {
      /* istanbul ignore next */
      cov_17ll1hr18a().b[0][0]++;
      cov_17ll1hr18a().s[4]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_17ll1hr18a().b[0][1]++;
    }
    cov_17ll1hr18a().s[5]++;
    return {
      tools: [{
        functionDeclarations: tools.map(t => {
          /* istanbul ignore next */
          cov_17ll1hr18a().f[1]++;
          cov_17ll1hr18a().s[6]++;
          return {
            name: t.name,
            description:
            /* istanbul ignore next */
            (cov_17ll1hr18a().b[3][0]++, t.description) ||
            /* istanbul ignore next */
            (cov_17ll1hr18a().b[3][1]++, ""),
            parameters: {
              type: "object",
              properties:
              /* istanbul ignore next */
              (cov_17ll1hr18a().b[4][0]++, t.parameters) ||
              /* istanbul ignore next */
              (cov_17ll1hr18a().b[4][1]++, {}),
              required: Object.keys(
              /* istanbul ignore next */
              (cov_17ll1hr18a().b[5][0]++, t.parameters) ||
              /* istanbul ignore next */
              (cov_17ll1hr18a().b[5][1]++, {}))
            }
          };
        })
      }]
    };
  }
  // Enhanced mapping from unified schema to Google format
  fromUnifiedSchema(tools) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[2]++;
    cov_17ll1hr18a().s[7]++;
    if (!(
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[8][0]++, tools === null) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[8][1]++, tools === void 0) ?
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[7][1]++, tools.length))) {
      /* istanbul ignore next */
      cov_17ll1hr18a().b[6][0]++;
      cov_17ll1hr18a().s[8]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_17ll1hr18a().b[6][1]++;
    }
    cov_17ll1hr18a().s[9]++;
    return {
      tools: [{
        functionDeclarations: tools.map(tool => {
          /* istanbul ignore next */
          cov_17ll1hr18a().f[3]++;
          cov_17ll1hr18a().s[10]++;
          return {
            name: tool.function.name,
            description:
            /* istanbul ignore next */
            (cov_17ll1hr18a().b[9][0]++, tool.function.description) ||
            /* istanbul ignore next */
            (cov_17ll1hr18a().b[9][1]++, ""),
            parameters: {
              type: "object",
              properties: tool.function.parameters.properties,
              required:
              /* istanbul ignore next */
              (cov_17ll1hr18a().b[10][0]++, tool.function.parameters.required) ||
              /* istanbul ignore next */
              (cov_17ll1hr18a().b[10][1]++, [])
            }
          };
        })
      }]
    };
  }
  buildRequest(input) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[4]++;
    const {
      prompt,
      decision,
      streaming,
      maxTokens,
      tools
    } =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[11]++, input);
    const request =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[12]++, {
      contents: [{
        role: "user",
        parts: [{
          text: prompt
        }]
      }],
      generationConfig: {
        temperature: decision.temperature,
        maxOutputTokens:
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[11][0]++, maxTokens) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[11][1]++, 1024),
        topP: 0.8,
        topK: 40
      }
    });
    // Handle tools from decision or input parameter
    const toolsToUse =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[13]++,
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[12][0]++, tools) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[12][1]++, decision.tools));
    /* istanbul ignore next */
    cov_17ll1hr18a().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[15][0]++, toolsToUse === null) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[15][1]++, toolsToUse === void 0) ?
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[14][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[14][1]++, toolsToUse.length)) {
      /* istanbul ignore next */
      cov_17ll1hr18a().b[13][0]++;
      cov_17ll1hr18a().s[15]++;
      if (this.isUnifiedToolSpec(toolsToUse[0])) {
        /* istanbul ignore next */
        cov_17ll1hr18a().b[16][0]++;
        cov_17ll1hr18a().s[16]++;
        Object.assign(request, this.fromUnifiedSchema(toolsToUse));
      } else {
        /* istanbul ignore next */
        cov_17ll1hr18a().b[16][1]++;
        cov_17ll1hr18a().s[17]++;
        Object.assign(request, this.mapTools(toolsToUse));
      }
    } else
    /* istanbul ignore next */
    {
      cov_17ll1hr18a().b[13][1]++;
    }
    // Add safety settings for different domains
    cov_17ll1hr18a().s[18]++;
    request.safetySettings = this.getSafetySettings(prompt);
    /* istanbul ignore next */
    cov_17ll1hr18a().s[19]++;
    return request;
  }
  parseResponse(resp) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[5]++;
    var _a, _b, _c, _d;
    /* istanbul ignore next */
    cov_17ll1hr18a().s[20]++;
    try {
      /* istanbul ignore next */
      cov_17ll1hr18a().s[21]++;
      this.validateResponse(resp, "Google");
      // Handle different response formats
      const candidates =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[22]++,
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[17][0]++, resp.candidates) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[17][1]++, []));
      /* istanbul ignore next */
      cov_17ll1hr18a().s[23]++;
      if (candidates.length === 0) {
        /* istanbul ignore next */
        cov_17ll1hr18a().b[18][0]++;
        cov_17ll1hr18a().s[24]++;
        return {
          text: "",
          toolCalls: [],
          raw: resp,
          tokensUsed: {
            input: 0,
            output: 0
          }
        };
      } else
      /* istanbul ignore next */
      {
        cov_17ll1hr18a().b[18][1]++;
      }
      const candidate =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[25]++, candidates[0]);
      const content =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[26]++, candidate.content);
      // Extract text content
      const textParts =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[27]++,
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[19][0]++,
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[21][0]++, (_a =
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[23][0]++, content === null) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[23][1]++, content === void 0) ?
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[22][0]++, void 0) :
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[22][1]++, content.parts)) === null) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[21][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[20][0]++, void 0) :
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[20][1]++, _a.filter(p => {
        /* istanbul ignore next */
        cov_17ll1hr18a().f[6]++;
        cov_17ll1hr18a().s[28]++;
        return p.text;
      }))) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[19][1]++, []));
      const text =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[29]++, textParts.map(p => {
        /* istanbul ignore next */
        cov_17ll1hr18a().f[7]++;
        cov_17ll1hr18a().s[30]++;
        return p.text;
      }).join("\n"));
      // Extract function calls
      const functionCalls =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[31]++,
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[24][0]++,
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[26][0]++, (_b =
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[28][0]++, content === null) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[28][1]++, content === void 0) ?
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[27][0]++, void 0) :
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[27][1]++, content.parts)) === null) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[26][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[25][0]++, void 0) :
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[25][1]++, _b.filter(p => {
        /* istanbul ignore next */
        cov_17ll1hr18a().f[8]++;
        cov_17ll1hr18a().s[32]++;
        return p.functionCall;
      }))) ||
      /* istanbul ignore next */
      (cov_17ll1hr18a().b[24][1]++, []));
      const toolCalls =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[33]++, functionCalls.map(fc => {
        /* istanbul ignore next */
        cov_17ll1hr18a().f[9]++;
        cov_17ll1hr18a().s[34]++;
        return {
          name: fc.functionCall.name,
          arguments:
          /* istanbul ignore next */
          (cov_17ll1hr18a().b[29][0]++, fc.functionCall.args) ||
          /* istanbul ignore next */
          (cov_17ll1hr18a().b[29][1]++, {})
        };
      }));
      // Extract usage metadata
      const tokensUsed =
      /* istanbul ignore next */
      (cov_17ll1hr18a().s[35]++, {
        input:
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[30][0]++,
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[32][0]++, (_c = resp.usageMetadata) === null) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[32][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[31][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[31][1]++, _c.promptTokenCount)) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[30][1]++, 0),
        output:
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[33][0]++,
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[35][0]++, (_d = resp.usageMetadata) === null) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[35][1]++, _d === void 0) ?
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[34][1]++, _d.candidatesTokenCount)) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[33][1]++, 0)
      });
      /* istanbul ignore next */
      cov_17ll1hr18a().s[36]++;
      return {
        text,
        toolCalls,
        raw: resp,
        tokensUsed
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_17ll1hr18a().s[37]++;
      this.handleError(error, "Google");
    }
  }
  getSafetySettings(prompt) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[10]++;
    // Adjust safety settings based on content
    const isLegalContent =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[38]++,
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[36][0]++, prompt.toLowerCase().includes("legal")) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[36][1]++, prompt.toLowerCase().includes("law")) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[36][2]++, prompt.toLowerCase().includes("compliance")));
    const isMedicalContent =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[39]++,
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[37][0]++, prompt.toLowerCase().includes("medical")) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[37][1]++, prompt.toLowerCase().includes("health")) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[37][2]++, prompt.toLowerCase().includes("diagnosis")));
    /* istanbul ignore next */
    cov_17ll1hr18a().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[39][0]++, isLegalContent) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[39][1]++, isMedicalContent)) {
      /* istanbul ignore next */
      cov_17ll1hr18a().b[38][0]++;
      cov_17ll1hr18a().s[41]++;
      return [{
        category: "HARM_CATEGORY_DANGEROUS_CONTENT",
        threshold: "BLOCK_LOW_AND_ABOVE"
      }, {
        category: "HARM_CATEGORY_HARASSMENT",
        threshold: "BLOCK_LOW_AND_ABOVE"
      }];
    } else
    /* istanbul ignore next */
    {
      cov_17ll1hr18a().b[38][1]++;
    }
    cov_17ll1hr18a().s[42]++;
    return [{
      category: "HARM_CATEGORY_DANGEROUS_CONTENT",
      threshold: "BLOCK_MEDIUM_AND_ABOVE"
    }];
  }
  getProviderConfig() {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[11]++;
    cov_17ll1hr18a().s[43]++;
    return {
      maxContextTokens: 1000000,
      // Gemini 1.5 Pro context window
      supportsStreaming: true,
      supportsTools: true,
      supportsJsonMode: true,
      // Gemini supports JSON mode
      supportsVision: true,
      // Gemini supports vision
      rateLimitRpm: 300,
      // Requests per minute (varies by tier)
      fallbackProvider: "bedrock" // Fallback to Bedrock if Google fails
    };
  }
  // Google-specific token estimation
  estimateTokens(text) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[12]++;
    // Gemini typically uses ~4 characters per token
    const tokens =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[44]++, Math.ceil(text.length / 4));
    /* istanbul ignore next */
    cov_17ll1hr18a().s[45]++;
    return {
      input: tokens,
      output: 0
    };
  }
  // Implementation of abstract methods
  extractToolCallsFromResponse(resp) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[13]++;
    var _a;
    const candidates =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[46]++,
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[40][0]++, resp.candidates) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[40][1]++, []));
    /* istanbul ignore next */
    cov_17ll1hr18a().s[47]++;
    if (candidates.length === 0) {
      /* istanbul ignore next */
      cov_17ll1hr18a().b[41][0]++;
      cov_17ll1hr18a().s[48]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_17ll1hr18a().b[41][1]++;
    }
    const candidate =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[49]++, candidates[0]);
    const content =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[50]++, candidate.content);
    // Extract function calls from Google response format
    const functionCalls =
    /* istanbul ignore next */
    (cov_17ll1hr18a().s[51]++,
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[42][0]++,
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[44][0]++, (_a =
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[46][0]++, content === null) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[46][1]++, content === void 0) ?
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[45][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[45][1]++, content.parts)) === null) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[44][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[43][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[43][1]++, _a.filter(p => {
      /* istanbul ignore next */
      cov_17ll1hr18a().f[14]++;
      cov_17ll1hr18a().s[52]++;
      return p.functionCall;
    }))) ||
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[42][1]++, []));
    /* istanbul ignore next */
    cov_17ll1hr18a().s[53]++;
    return functionCalls.map((fc, index) => {
      /* istanbul ignore next */
      cov_17ll1hr18a().f[15]++;
      cov_17ll1hr18a().s[54]++;
      return {
        id:
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[47][0]++, fc.functionCall.id) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[47][1]++, `google_call_${index}`),
        name: fc.functionCall.name,
        arguments:
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[48][0]++, fc.functionCall.args) ||
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[48][1]++, {}),
        confidence: candidate.finishReason === "STOP" ?
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[49][0]++, 1.0) :
        /* istanbul ignore next */
        (cov_17ll1hr18a().b[49][1]++, 0.8) // Lower confidence for incomplete responses
      };
    });
  }
  getProviderName() {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[16]++;
    cov_17ll1hr18a().s[55]++;
    return "google";
  }
  // Enhanced tool feature support for Google
  supportsToolFeature(feature) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[17]++;
    cov_17ll1hr18a().s[56]++;
    switch (feature) {
      case "parallel_calls":
        /* istanbul ignore next */
        cov_17ll1hr18a().b[50][0]++;
        cov_17ll1hr18a().s[57]++;
        return true;
      // Gemini supports parallel function calls
      case "streaming":
        /* istanbul ignore next */
        cov_17ll1hr18a().b[50][1]++;
        cov_17ll1hr18a().s[58]++;
        return false;
      // Google doesn't support streaming with function calls yet
      case "json_schema":
        /* istanbul ignore next */
        cov_17ll1hr18a().b[50][2]++;
        cov_17ll1hr18a().s[59]++;
        return true;
      // Gemini supports structured output
      case "complex_types":
        /* istanbul ignore next */
        cov_17ll1hr18a().b[50][3]++;
        cov_17ll1hr18a().s[60]++;
        return true;
      // Gemini handles complex nested types
      default:
        /* istanbul ignore next */
        cov_17ll1hr18a().b[50][4]++;
        cov_17ll1hr18a().s[61]++;
        return super.supportsToolFeature(feature);
    }
  }
  // Helper method to check if tools are in unified format
  isUnifiedToolSpec(tool) {
    /* istanbul ignore next */
    cov_17ll1hr18a().f[18]++;
    cov_17ll1hr18a().s[62]++;
    return /* istanbul ignore next */(cov_17ll1hr18a().b[51][0]++, tool) &&
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[51][1]++, typeof tool === "object") &&
    /* istanbul ignore next */
    (cov_17ll1hr18a().b[51][2]++, "function" in tool);
  }
}
/* istanbul ignore next */
cov_17ll1hr18a().s[63]++;
exports.GoogleAdapter = GoogleAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,