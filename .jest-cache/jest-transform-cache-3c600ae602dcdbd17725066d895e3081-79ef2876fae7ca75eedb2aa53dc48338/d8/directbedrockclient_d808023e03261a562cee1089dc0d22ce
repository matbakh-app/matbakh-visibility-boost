bccb47f308f7dd17c5906f6de422c7b6
"use strict";

/**
 * Direct Bedrock Client - Bypasses MCP for Critical Support Operations
 *
 * This module provides direct AWS Bedrock SDK integration for time-critical
 * support operations that require < 5s (emergency) or < 10s (critical) latency.
 * It integrates with existing security, compliance, and circuit breaker systems.
 */
/* istanbul ignore next */
function cov_2ng8e89pfv() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/direct-bedrock-client.ts";
  var hash = "c60844a46722120284c9b772b0f635297689b3d4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/direct-bedrock-client.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 12,
          column: 75
        }
      },
      "4": {
        start: {
          line: 13,
          column: 27
        },
        end: {
          line: 13,
          column: 56
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 60
        }
      },
      "6": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 54
        }
      },
      "7": {
        start: {
          line: 16,
          column: 51
        },
        end: {
          line: 16,
          column: 104
        }
      },
      "8": {
        start: {
          line: 17,
          column: 43
        },
        end: {
          line: 17,
          column: 88
        }
      },
      "9": {
        start: {
          line: 18,
          column: 33
        },
        end: {
          line: 18,
          column: 68
        }
      },
      "10": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 19,
          column: 73
        }
      },
      "11": {
        start: {
          line: 20,
          column: 36
        },
        end: {
          line: 20,
          column: 74
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "13": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 265
        }
      },
      "14": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "15": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "16": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 68
        }
      },
      "17": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "18": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 100
        }
      },
      "19": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "20": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 28
        }
      },
      "21": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "22": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "23": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 10
        }
      },
      "24": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "25": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 41
        }
      },
      "26": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "27": {
        start: {
          line: 126,
          column: 30
        },
        end: {
          line: 126,
          column: 40
        }
      },
      "28": {
        start: {
          line: 127,
          column: 32
        },
        end: {
          line: 127,
          column: 58
        }
      },
      "29": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 241,
          column: 13
        }
      },
      "30": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "31": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 73
        }
      },
      "32": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "33": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 75
        }
      },
      "34": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 65
        }
      },
      "35": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 102
        }
      },
      "36": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "37": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 108
        }
      },
      "38": {
        start: {
          line: 149,
          column: 33
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "39": {
        start: {
          line: 149,
          column: 84
        },
        end: {
          line: 151,
          column: 18
        }
      },
      "40": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 82
        }
      },
      "41": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 56
        }
      },
      "42": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 165,
          column: 17
        }
      },
      "43": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "44": {
        start: {
          line: 160,
          column: 21
        },
        end: {
          line: 165,
          column: 17
        }
      },
      "45": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 164,
          column: 22
        }
      },
      "46": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 57
        }
      },
      "47": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 183,
          column: 19
        }
      },
      "48": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 198,
          column: 18
        }
      },
      "49": {
        start: {
          line: 201,
          column: 34
        },
        end: {
          line: 201,
          column: 56
        }
      },
      "50": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 212,
          column: 17
        }
      },
      "51": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 206,
          column: 22
        }
      },
      "52": {
        start: {
          line: 208,
          column: 21
        },
        end: {
          line: 212,
          column: 17
        }
      },
      "53": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 211,
          column: 22
        }
      },
      "54": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 65
        }
      },
      "55": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 231,
          column: 19
        }
      },
      "56": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 240,
          column: 18
        }
      },
      "57": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "58": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 256,
          column: 15
        }
      },
      "59": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "60": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 272,
          column: 15
        }
      },
      "61": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 52
        }
      },
      "62": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 68
        }
      },
      "63": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 64
        }
      },
      "64": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 62
        }
      },
      "65": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 67
        }
      },
      "66": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 82
        }
      },
      "67": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 83
        }
      },
      "68": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 350,
          column: 11
        }
      },
      "69": {
        start: {
          line: 322,
          column: 30
        },
        end: {
          line: 322,
          column: 40
        }
      },
      "70": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "71": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 330,
          column: 17
        }
      },
      "72": {
        start: {
          line: 327,
          column: 38
        },
        end: {
          line: 327,
          column: 60
        }
      },
      "73": {
        start: {
          line: 328,
          column: 20
        },
        end: {
          line: 328,
          column: 61
        }
      },
      "74": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 329,
          column: 162
        }
      },
      "75": {
        start: {
          line: 332,
          column: 33
        },
        end: {
          line: 338,
          column: 34
        }
      },
      "76": {
        start: {
          line: 339,
          column: 34
        },
        end: {
          line: 339,
          column: 56
        }
      },
      "77": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 57
        }
      },
      "78": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 41
        }
      },
      "79": {
        start: {
          line: 344,
          column: 34
        },
        end: {
          line: 344,
          column: 56
        }
      },
      "80": {
        start: {
          line: 346,
          column: 30
        },
        end: {
          line: 346,
          column: 68
        }
      },
      "81": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 66
        }
      },
      "82": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 41
        }
      },
      "83": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 54
        }
      },
      "84": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 372,
          column: 11
        }
      },
      "85": {
        start: {
          line: 363,
          column: 30
        },
        end: {
          line: 363,
          column: 77
        }
      },
      "86": {
        start: {
          line: 364,
          column: 39
        },
        end: {
          line: 364,
          column: 91
        }
      },
      "87": {
        start: {
          line: 365,
          column: 46
        },
        end: {
          line: 365,
          column: 105
        }
      },
      "88": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 371,
          column: 14
        }
      },
      "89": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 480,
          column: 11
        }
      },
      "90": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 388,
          column: 13
        }
      },
      "91": {
        start: {
          line: 381,
          column: 16
        },
        end: {
          line: 387,
          column: 18
        }
      },
      "92": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 398,
          column: 13
        }
      },
      "93": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 397,
          column: 18
        }
      },
      "94": {
        start: {
          line: 400,
          column: 31
        },
        end: {
          line: 400,
          column: 67
        }
      },
      "95": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "96": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 101
        }
      },
      "97": {
        start: {
          line: 405,
          column: 32
        },
        end: {
          line: 405,
          column: 34
        }
      },
      "98": {
        start: {
          line: 407,
          column: 32
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "99": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 457,
          column: 13
        }
      },
      "100": {
        start: {
          line: 447,
          column: 30
        },
        end: {
          line: 447,
          column: 71
        }
      },
      "101": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 456,
          column: 17
        }
      },
      "102": {
        start: {
          line: 449,
          column: 20
        },
        end: {
          line: 455,
          column: 23
        }
      },
      "103": {
        start: {
          line: 459,
          column: 29
        },
        end: {
          line: 459,
          column: 77
        }
      },
      "104": {
        start: {
          line: 459,
          column: 66
        },
        end: {
          line: 459,
          column: 74
        }
      },
      "105": {
        start: {
          line: 461,
          column: 27
        },
        end: {
          line: 467,
          column: 13
        }
      },
      "106": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 478,
          column: 13
        }
      },
      "107": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 477,
          column: 18
        }
      },
      "108": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 479,
          column: 26
        }
      },
      "109": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 518,
          column: 11
        }
      },
      "110": {
        start: {
          line: 488,
          column: 30
        },
        end: {
          line: 488,
          column: 56
        }
      },
      "111": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 494,
          column: 13
        }
      },
      "112": {
        start: {
          line: 490,
          column: 16
        },
        end: {
          line: 493,
          column: 18
        }
      },
      "113": {
        start: {
          line: 495,
          column: 31
        },
        end: {
          line: 495,
          column: 35
        }
      },
      "114": {
        start: {
          line: 496,
          column: 33
        },
        end: {
          line: 496,
          column: 35
        }
      },
      "115": {
        start: {
          line: 498,
          column: 30
        },
        end: {
          line: 498,
          column: 95
        }
      },
      "116": {
        start: {
          line: 498,
          column: 67
        },
        end: {
          line: 498,
          column: 94
        }
      },
      "117": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 513,
          column: 13
        }
      },
      "118": {
        start: {
          line: 501,
          column: 38
        },
        end: {
          line: 501,
          column: 76
        }
      },
      "119": {
        start: {
          line: 502,
          column: 16
        },
        end: {
          line: 505,
          column: 61
        }
      },
      "120": {
        start: {
          line: 506,
          column: 16
        },
        end: {
          line: 512,
          column: 19
        }
      },
      "121": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 517,
          column: 14
        }
      },
      "122": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 531,
          column: 11
        }
      },
      "123": {
        start: {
          line: 525,
          column: 31
        },
        end: {
          line: 525,
          column: 43
        }
      },
      "124": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 529,
          column: 13
        }
      },
      "125": {
        start: {
          line: 528,
          column: 16
        },
        end: {
          line: 528,
          column: 92
        }
      },
      "126": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 32
        }
      },
      "127": {
        start: {
          line: 537,
          column: 29
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "128": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 549,
          column: 57
        }
      },
      "129": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 564,
          column: 11
        }
      },
      "130": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 563,
          column: 14
        }
      },
      "131": {
        start: {
          line: 570,
          column: 8
        },
        end: {
          line: 581,
          column: 11
        }
      },
      "132": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 580,
          column: 13
        }
      },
      "133": {
        start: {
          line: 572,
          column: 34
        },
        end: {
          line: 575,
          column: 36
        }
      },
      "134": {
        start: {
          line: 576,
          column: 16
        },
        end: {
          line: 576,
          column: 44
        }
      },
      "135": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 579,
          column: 127
        }
      },
      "136": {
        start: {
          line: 587,
          column: 8
        },
        end: {
          line: 598,
          column: 11
        }
      },
      "137": {
        start: {
          line: 588,
          column: 12
        },
        end: {
          line: 597,
          column: 13
        }
      },
      "138": {
        start: {
          line: 589,
          column: 34
        },
        end: {
          line: 592,
          column: 36
        }
      },
      "139": {
        start: {
          line: 593,
          column: 16
        },
        end: {
          line: 593,
          column: 43
        }
      },
      "140": {
        start: {
          line: 596,
          column: 16
        },
        end: {
          line: 596,
          column: 127
        }
      },
      "141": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 615,
          column: 11
        }
      },
      "142": {
        start: {
          line: 605,
          column: 12
        },
        end: {
          line: 614,
          column: 13
        }
      },
      "143": {
        start: {
          line: 606,
          column: 34
        },
        end: {
          line: 609,
          column: 18
        }
      },
      "144": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 610,
          column: 44
        }
      },
      "145": {
        start: {
          line: 613,
          column: 16
        },
        end: {
          line: 613,
          column: 128
        }
      },
      "146": {
        start: {
          line: 621,
          column: 8
        },
        end: {
          line: 632,
          column: 11
        }
      },
      "147": {
        start: {
          line: 622,
          column: 12
        },
        end: {
          line: 631,
          column: 13
        }
      },
      "148": {
        start: {
          line: 623,
          column: 34
        },
        end: {
          line: 626,
          column: 18
        }
      },
      "149": {
        start: {
          line: 627,
          column: 16
        },
        end: {
          line: 627,
          column: 43
        }
      },
      "150": {
        start: {
          line: 630,
          column: 16
        },
        end: {
          line: 630,
          column: 129
        }
      },
      "151": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 646,
          column: 11
        }
      },
      "152": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 645,
          column: 13
        }
      },
      "153": {
        start: {
          line: 640,
          column: 34
        },
        end: {
          line: 640,
          column: 104
        }
      },
      "154": {
        start: {
          line: 641,
          column: 16
        },
        end: {
          line: 641,
          column: 44
        }
      },
      "155": {
        start: {
          line: 644,
          column: 16
        },
        end: {
          line: 644,
          column: 130
        }
      },
      "156": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 659,
          column: 11
        }
      },
      "157": {
        start: {
          line: 653,
          column: 12
        },
        end: {
          line: 658,
          column: 13
        }
      },
      "158": {
        start: {
          line: 654,
          column: 16
        },
        end: {
          line: 654,
          column: 103
        }
      },
      "159": {
        start: {
          line: 657,
          column: 16
        },
        end: {
          line: 657,
          column: 130
        }
      },
      "160": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 34
        }
      },
      "161": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 673,
          column: 11
        }
      },
      "162": {
        start: {
          line: 672,
          column: 12
        },
        end: {
          line: 672,
          column: 74
        }
      },
      "163": {
        start: {
          line: 679,
          column: 8
        },
        end: {
          line: 679,
          column: 34
        }
      },
      "164": {
        start: {
          line: 685,
          column: 8
        },
        end: {
          line: 685,
          column: 48
        }
      },
      "165": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 691,
          column: 52
        }
      },
      "166": {
        start: {
          line: 697,
          column: 8
        },
        end: {
          line: 697,
          column: 55
        }
      },
      "167": {
        start: {
          line: 703,
          column: 8
        },
        end: {
          line: 703,
          column: 54
        }
      },
      "168": {
        start: {
          line: 709,
          column: 8
        },
        end: {
          line: 711,
          column: 9
        }
      },
      "169": {
        start: {
          line: 710,
          column: 12
        },
        end: {
          line: 710,
          column: 52
        }
      },
      "170": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 37
        }
      },
      "171": {
        start: {
          line: 719,
          column: 8
        },
        end: {
          line: 759,
          column: 11
        }
      },
      "172": {
        start: {
          line: 721,
          column: 32
        },
        end: {
          line: 721,
          column: 68
        }
      },
      "173": {
        start: {
          line: 722,
          column: 28
        },
        end: {
          line: 722,
          column: 74
        }
      },
      "174": {
        start: {
          line: 724,
          column: 28
        },
        end: {
          line: 731,
          column: 15
        }
      },
      "175": {
        start: {
          line: 733,
          column: 12
        },
        end: {
          line: 735,
          column: 13
        }
      },
      "176": {
        start: {
          line: 734,
          column: 16
        },
        end: {
          line: 734,
          column: 86
        }
      },
      "177": {
        start: {
          line: 736,
          column: 28
        },
        end: {
          line: 748,
          column: 18
        }
      },
      "178": {
        start: {
          line: 750,
          column: 35
        },
        end: {
          line: 752,
          column: 14
        }
      },
      "179": {
        start: {
          line: 751,
          column: 16
        },
        end: {
          line: 751,
          column: 101
        }
      },
      "180": {
        start: {
          line: 751,
          column: 33
        },
        end: {
          line: 751,
          column: 90
        }
      },
      "181": {
        start: {
          line: 753,
          column: 29
        },
        end: {
          line: 756,
          column: 14
        }
      },
      "182": {
        start: {
          line: 758,
          column: 12
        },
        end: {
          line: 758,
          column: 74
        }
      },
      "183": {
        start: {
          line: 765,
          column: 8
        },
        end: {
          line: 773,
          column: 12
        }
      },
      "184": {
        start: {
          line: 765,
          column: 36
        },
        end: {
          line: 773,
          column: 9
        }
      },
      "185": {
        start: {
          line: 779,
          column: 31
        },
        end: {
          line: 785,
          column: 9
        }
      },
      "186": {
        start: {
          line: 786,
          column: 8
        },
        end: {
          line: 786,
          column: 41
        }
      },
      "187": {
        start: {
          line: 793,
          column: 8
        },
        end: {
          line: 799,
          column: 9
        }
      },
      "188": {
        start: {
          line: 795,
          column: 12
        },
        end: {
          line: 798,
          column: 14
        }
      },
      "189": {
        start: {
          line: 800,
          column: 21
        },
        end: {
          line: 800,
          column: 72
        }
      },
      "190": {
        start: {
          line: 801,
          column: 21
        },
        end: {
          line: 801,
          column: 118
        }
      },
      "191": {
        start: {
          line: 801,
          column: 93
        },
        end: {
          line: 801,
          column: 99
        }
      },
      "192": {
        start: {
          line: 802,
          column: 26
        },
        end: {
          line: 805,
          column: 18
        }
      },
      "193": {
        start: {
          line: 802,
          column: 107
        },
        end: {
          line: 802,
          column: 128
        }
      },
      "194": {
        start: {
          line: 802,
          column: 184
        },
        end: {
          line: 805,
          column: 9
        }
      },
      "195": {
        start: {
          line: 806,
          column: 27
        },
        end: {
          line: 809,
          column: 9
        }
      },
      "196": {
        start: {
          line: 810,
          column: 8
        },
        end: {
          line: 810,
          column: 47
        }
      },
      "197": {
        start: {
          line: 816,
          column: 24
        },
        end: {
          line: 816,
          column: 62
        }
      },
      "198": {
        start: {
          line: 817,
          column: 27
        },
        end: {
          line: 821,
          column: 23
        }
      },
      "199": {
        start: {
          line: 822,
          column: 8
        },
        end: {
          line: 824,
          column: 9
        }
      },
      "200": {
        start: {
          line: 823,
          column: 12
        },
        end: {
          line: 823,
          column: 107
        }
      },
      "201": {
        start: {
          line: 830,
          column: 8
        },
        end: {
          line: 839,
          column: 9
        }
      },
      "202": {
        start: {
          line: 832,
          column: 16
        },
        end: {
          line: 832,
          column: 52
        }
      },
      "203": {
        start: {
          line: 836,
          column: 16
        },
        end: {
          line: 836,
          column: 51
        }
      },
      "204": {
        start: {
          line: 838,
          column: 16
        },
        end: {
          line: 838,
          column: 43
        }
      },
      "205": {
        start: {
          line: 845,
          column: 8
        },
        end: {
          line: 952,
          column: 11
        }
      },
      "206": {
        start: {
          line: 846,
          column: 30
        },
        end: {
          line: 846,
          column: 40
        }
      },
      "207": {
        start: {
          line: 847,
          column: 12
        },
        end: {
          line: 951,
          column: 13
        }
      },
      "208": {
        start: {
          line: 849,
          column: 37
        },
        end: {
          line: 849,
          column: 115
        }
      },
      "209": {
        start: {
          line: 851,
          column: 16
        },
        end: {
          line: 867,
          column: 19
        }
      },
      "210": {
        start: {
          line: 859,
          column: 77
        },
        end: {
          line: 859,
          column: 93
        }
      },
      "211": {
        start: {
          line: 861,
          column: 82
        },
        end: {
          line: 861,
          column: 103
        }
      },
      "212": {
        start: {
          line: 862,
          column: 89
        },
        end: {
          line: 862,
          column: 108
        }
      },
      "213": {
        start: {
          line: 869,
          column: 16
        },
        end: {
          line: 885,
          column: 17
        }
      },
      "214": {
        start: {
          line: 870,
          column: 20
        },
        end: {
          line: 870,
          column: 66
        }
      },
      "215": {
        start: {
          line: 872,
          column: 20
        },
        end: {
          line: 884,
          column: 23
        }
      },
      "216": {
        start: {
          line: 887,
          column: 16
        },
        end: {
          line: 909,
          column: 17
        }
      },
      "217": {
        start: {
          line: 889,
          column: 20
        },
        end: {
          line: 908,
          column: 21
        }
      },
      "218": {
        start: {
          line: 889,
          column: 60
        },
        end: {
          line: 889,
          column: 76
        }
      },
      "219": {
        start: {
          line: 890,
          column: 51
        },
        end: {
          line: 890,
          column: 108
        }
      },
      "220": {
        start: {
          line: 891,
          column: 24
        },
        end: {
          line: 907,
          column: 25
        }
      },
      "221": {
        start: {
          line: 893,
          column: 28
        },
        end: {
          line: 893,
          column: 88
        }
      },
      "222": {
        start: {
          line: 894,
          column: 28
        },
        end: {
          line: 904,
          column: 31
        }
      },
      "223": {
        start: {
          line: 906,
          column: 28
        },
        end: {
          line: 906,
          column: 134
        }
      },
      "224": {
        start: {
          line: 911,
          column: 16
        },
        end: {
          line: 917,
          column: 17
        }
      },
      "225": {
        start: {
          line: 912,
          column: 56
        },
        end: {
          line: 912,
          column: 81
        }
      },
      "226": {
        start: {
          line: 913,
          column: 20
        },
        end: {
          line: 916,
          column: 39
        }
      },
      "227": {
        start: {
          line: 914,
          column: 39
        },
        end: {
          line: 914,
          column: 64
        }
      },
      "228": {
        start: {
          line: 915,
          column: 36
        },
        end: {
          line: 915,
          column: 45
        }
      },
      "229": {
        start: {
          line: 918,
          column: 16
        },
        end: {
          line: 918,
          column: 36
        }
      },
      "230": {
        start: {
          line: 921,
          column: 37
        },
        end: {
          line: 921,
          column: 91
        }
      },
      "231": {
        start: {
          line: 923,
          column: 16
        },
        end: {
          line: 936,
          column: 19
        }
      },
      "232": {
        start: {
          line: 938,
          column: 16
        },
        end: {
          line: 950,
          column: 18
        }
      },
      "233": {
        start: {
          line: 958,
          column: 8
        },
        end: {
          line: 1014,
          column: 11
        }
      },
      "234": {
        start: {
          line: 959,
          column: 30
        },
        end: {
          line: 959,
          column: 40
        }
      },
      "235": {
        start: {
          line: 960,
          column: 12
        },
        end: {
          line: 1013,
          column: 13
        }
      },
      "236": {
        start: {
          line: 962,
          column: 36
        },
        end: {
          line: 967,
          column: 17
        }
      },
      "237": {
        start: {
          line: 969,
          column: 39
        },
        end: {
          line: 969,
          column: 111
        }
      },
      "238": {
        start: {
          line: 970,
          column: 16
        },
        end: {
          line: 972,
          column: 17
        }
      },
      "239": {
        start: {
          line: 971,
          column: 20
        },
        end: {
          line: 971,
          column: 91
        }
      },
      "240": {
        start: {
          line: 974,
          column: 16
        },
        end: {
          line: 974,
          column: 66
        }
      },
      "241": {
        start: {
          line: 976,
          column: 16
        },
        end: {
          line: 987,
          column: 19
        }
      },
      "242": {
        start: {
          line: 988,
          column: 16
        },
        end: {
          line: 992,
          column: 18
        }
      },
      "243": {
        start: {
          line: 995,
          column: 37
        },
        end: {
          line: 995,
          column: 91
        }
      },
      "244": {
        start: {
          line: 997,
          column: 16
        },
        end: {
          line: 1011,
          column: 19
        }
      },
      "245": {
        start: {
          line: 1012,
          column: 16
        },
        end: {
          line: 1012,
          column: 28
        }
      },
      "246": {
        start: {
          line: 1021,
          column: 27
        },
        end: {
          line: 1021,
          column: 31
        }
      },
      "247": {
        start: {
          line: 1022,
          column: 43
        },
        end: {
          line: 1062,
          column: 9
        }
      },
      "248": {
        start: {
          line: 1064,
          column: 8
        },
        end: {
          line: 1066,
          column: 11
        }
      },
      "249": {
        start: {
          line: 1065,
          column: 12
        },
        end: {
          line: 1065,
          column: 70
        }
      },
      "250": {
        start: {
          line: 1067,
          column: 8
        },
        end: {
          line: 1067,
          column: 28
        }
      },
      "251": {
        start: {
          line: 1073,
          column: 8
        },
        end: {
          line: 1097,
          column: 11
        }
      },
      "252": {
        start: {
          line: 1078,
          column: 12
        },
        end: {
          line: 1083,
          column: 13
        }
      },
      "253": {
        start: {
          line: 1079,
          column: 37
        },
        end: {
          line: 1079,
          column: 91
        }
      },
      "254": {
        start: {
          line: 1080,
          column: 16
        },
        end: {
          line: 1082,
          column: 17
        }
      },
      "255": {
        start: {
          line: 1081,
          column: 20
        },
        end: {
          line: 1081,
          column: 96
        }
      },
      "256": {
        start: {
          line: 1085,
          column: 12
        },
        end: {
          line: 1092,
          column: 13
        }
      },
      "257": {
        start: {
          line: 1086,
          column: 35
        },
        end: {
          line: 1086,
          column: 80
        }
      },
      "258": {
        start: {
          line: 1087,
          column: 16
        },
        end: {
          line: 1091,
          column: 17
        }
      },
      "259": {
        start: {
          line: 1090,
          column: 20
        },
        end: {
          line: 1090,
          column: 129
        }
      },
      "260": {
        start: {
          line: 1094,
          column: 12
        },
        end: {
          line: 1094,
          column: 67
        }
      },
      "261": {
        start: {
          line: 1096,
          column: 12
        },
        end: {
          line: 1096,
          column: 51
        }
      },
      "262": {
        start: {
          line: 1103,
          column: 8
        },
        end: {
          line: 1125,
          column: 11
        }
      },
      "263": {
        start: {
          line: 1104,
          column: 12
        },
        end: {
          line: 1124,
          column: 13
        }
      },
      "264": {
        start: {
          line: 1108,
          column: 38
        },
        end: {
          line: 1108,
          column: 73
        }
      },
      "265": {
        start: {
          line: 1109,
          column: 16
        },
        end: {
          line: 1111,
          column: 17
        }
      },
      "266": {
        start: {
          line: 1110,
          column: 20
        },
        end: {
          line: 1110,
          column: 33
        }
      },
      "267": {
        start: {
          line: 1113,
          column: 35
        },
        end: {
          line: 1113,
          column: 81
        }
      },
      "268": {
        start: {
          line: 1114,
          column: 38
        },
        end: {
          line: 1114,
          column: 63
        }
      },
      "269": {
        start: {
          line: 1115,
          column: 16
        },
        end: {
          line: 1117,
          column: 17
        }
      },
      "270": {
        start: {
          line: 1116,
          column: 20
        },
        end: {
          line: 1116,
          column: 33
        }
      },
      "271": {
        start: {
          line: 1119,
          column: 16
        },
        end: {
          line: 1119,
          column: 66
        }
      },
      "272": {
        start: {
          line: 1122,
          column: 16
        },
        end: {
          line: 1122,
          column: 72
        }
      },
      "273": {
        start: {
          line: 1123,
          column: 16
        },
        end: {
          line: 1123,
          column: 29
        }
      },
      "274": {
        start: {
          line: 1131,
          column: 8
        },
        end: {
          line: 1140,
          column: 11
        }
      },
      "275": {
        start: {
          line: 1134,
          column: 12
        },
        end: {
          line: 1139,
          column: 14
        }
      },
      "276": {
        start: {
          line: 1146,
          column: 8
        },
        end: {
          line: 1161,
          column: 11
        }
      },
      "277": {
        start: {
          line: 1149,
          column: 37
        },
        end: {
          line: 1159,
          column: 13
        }
      },
      "278": {
        start: {
          line: 1160,
          column: 12
        },
        end: {
          line: 1160,
          column: 78
        }
      },
      "279": {
        start: {
          line: 1160,
          column: 54
        },
        end: {
          line: 1160,
          column: 76
        }
      },
      "280": {
        start: {
          line: 1167,
          column: 8
        },
        end: {
          line: 1196,
          column: 11
        }
      },
      "281": {
        start: {
          line: 1168,
          column: 12
        },
        end: {
          line: 1195,
          column: 13
        }
      },
      "282": {
        start: {
          line: 1172,
          column: 20
        },
        end: {
          line: 1172,
          column: 26
        }
      },
      "283": {
        start: {
          line: 1176,
          column: 20
        },
        end: {
          line: 1178,
          column: 21
        }
      },
      "284": {
        start: {
          line: 1177,
          column: 24
        },
        end: {
          line: 1177,
          column: 94
        }
      },
      "285": {
        start: {
          line: 1179,
          column: 20
        },
        end: {
          line: 1179,
          column: 26
        }
      },
      "286": {
        start: {
          line: 1182,
          column: 20
        },
        end: {
          line: 1184,
          column: 21
        }
      },
      "287": {
        start: {
          line: 1183,
          column: 24
        },
        end: {
          line: 1183,
          column: 95
        }
      },
      "288": {
        start: {
          line: 1185,
          column: 20
        },
        end: {
          line: 1185,
          column: 26
        }
      },
      "289": {
        start: {
          line: 1188,
          column: 20
        },
        end: {
          line: 1190,
          column: 21
        }
      },
      "290": {
        start: {
          line: 1189,
          column: 24
        },
        end: {
          line: 1189,
          column: 96
        }
      },
      "291": {
        start: {
          line: 1191,
          column: 20
        },
        end: {
          line: 1191,
          column: 26
        }
      },
      "292": {
        start: {
          line: 1194,
          column: 20
        },
        end: {
          line: 1194,
          column: 26
        }
      },
      "293": {
        start: {
          line: 1202,
          column: 37
        },
        end: {
          line: 1208,
          column: 9
        }
      },
      "294": {
        start: {
          line: 1209,
          column: 8
        },
        end: {
          line: 1209,
          column: 74
        }
      },
      "295": {
        start: {
          line: 1209,
          column: 54
        },
        end: {
          line: 1209,
          column: 72
        }
      },
      "296": {
        start: {
          line: 1215,
          column: 37
        },
        end: {
          line: 1221,
          column: 9
        }
      },
      "297": {
        start: {
          line: 1222,
          column: 8
        },
        end: {
          line: 1222,
          column: 74
        }
      },
      "298": {
        start: {
          line: 1222,
          column: 54
        },
        end: {
          line: 1222,
          column: 72
        }
      },
      "299": {
        start: {
          line: 1228,
          column: 39
        },
        end: {
          line: 1234,
          column: 9
        }
      },
      "300": {
        start: {
          line: 1235,
          column: 8
        },
        end: {
          line: 1235,
          column: 76
        }
      },
      "301": {
        start: {
          line: 1235,
          column: 56
        },
        end: {
          line: 1235,
          column: 74
        }
      },
      "302": {
        start: {
          line: 1241,
          column: 8
        },
        end: {
          line: 1264,
          column: 11
        }
      },
      "303": {
        start: {
          line: 1243,
          column: 31
        },
        end: {
          line: 1261,
          column: 13
        }
      },
      "304": {
        start: {
          line: 1263,
          column: 12
        },
        end: {
          line: 1263,
          column: 82
        }
      },
      "305": {
        start: {
          line: 1270,
          column: 8
        },
        end: {
          line: 1279,
          column: 11
        }
      },
      "306": {
        start: {
          line: 1271,
          column: 12
        },
        end: {
          line: 1278,
          column: 13
        }
      },
      "307": {
        start: {
          line: 1272,
          column: 34
        },
        end: {
          line: 1272,
          column: 81
        }
      },
      "308": {
        start: {
          line: 1273,
          column: 16
        },
        end: {
          line: 1273,
          column: 57
        }
      },
      "309": {
        start: {
          line: 1276,
          column: 16
        },
        end: {
          line: 1276,
          column: 68
        }
      },
      "310": {
        start: {
          line: 1277,
          column: 16
        },
        end: {
          line: 1277,
          column: 29
        }
      },
      "311": {
        start: {
          line: 1285,
          column: 8
        },
        end: {
          line: 1319,
          column: 11
        }
      },
      "312": {
        start: {
          line: 1286,
          column: 12
        },
        end: {
          line: 1318,
          column: 13
        }
      },
      "313": {
        start: {
          line: 1287,
          column: 37
        },
        end: {
          line: 1287,
          column: 75
        }
      },
      "314": {
        start: {
          line: 1289,
          column: 16
        },
        end: {
          line: 1299,
          column: 19
        }
      },
      "315": {
        start: {
          line: 1300,
          column: 16
        },
        end: {
          line: 1300,
          column: 36
        }
      },
      "316": {
        start: {
          line: 1304,
          column: 16
        },
        end: {
          line: 1316,
          column: 19
        }
      },
      "317": {
        start: {
          line: 1317,
          column: 16
        },
        end: {
          line: 1317,
          column: 29
        }
      },
      "318": {
        start: {
          line: 1325,
          column: 8
        },
        end: {
          line: 1326,
          column: 21
        }
      },
      "319": {
        start: {
          line: 1326,
          column: 12
        },
        end: {
          line: 1326,
          column: 21
        }
      },
      "320": {
        start: {
          line: 1328,
          column: 31
        },
        end: {
          line: 1328,
          column: 36
        }
      },
      "321": {
        start: {
          line: 1329,
          column: 32
        },
        end: {
          line: 1329,
          column: 37
        }
      },
      "322": {
        start: {
          line: 1330,
          column: 26
        },
        end: {
          line: 1330,
          column: 68
        }
      },
      "323": {
        start: {
          line: 1331,
          column: 27
        },
        end: {
          line: 1331,
          column: 71
        }
      },
      "324": {
        start: {
          line: 1332,
          column: 8
        },
        end: {
          line: 1332,
          column: 38
        }
      },
      "325": {
        start: {
          line: 1338,
          column: 8
        },
        end: {
          line: 1338,
          column: 49
        }
      },
      "326": {
        start: {
          line: 1339,
          column: 8
        },
        end: {
          line: 1339,
          column: 48
        }
      },
      "327": {
        start: {
          line: 1340,
          column: 8
        },
        end: {
          line: 1342,
          column: 23
        }
      },
      "328": {
        start: {
          line: 1343,
          column: 8
        },
        end: {
          line: 1365,
          column: 9
        }
      },
      "329": {
        start: {
          line: 1344,
          column: 12
        },
        end: {
          line: 1344,
          column: 47
        }
      },
      "330": {
        start: {
          line: 1345,
          column: 12
        },
        end: {
          line: 1345,
          column: 54
        }
      },
      "331": {
        start: {
          line: 1346,
          column: 12
        },
        end: {
          line: 1346,
          column: 43
        }
      },
      "332": {
        start: {
          line: 1348,
          column: 12
        },
        end: {
          line: 1352,
          column: 13
        }
      },
      "333": {
        start: {
          line: 1350,
          column: 16
        },
        end: {
          line: 1351,
          column: 66
        }
      },
      "334": {
        start: {
          line: 1355,
          column: 12
        },
        end: {
          line: 1355,
          column: 48
        }
      },
      "335": {
        start: {
          line: 1356,
          column: 12
        },
        end: {
          line: 1356,
          column: 52
        }
      },
      "336": {
        start: {
          line: 1358,
          column: 26
        },
        end: {
          line: 1358,
          column: 64
        }
      },
      "337": {
        start: {
          line: 1359,
          column: 12
        },
        end: {
          line: 1364,
          column: 13
        }
      },
      "338": {
        start: {
          line: 1360,
          column: 16
        },
        end: {
          line: 1360,
          column: 175
        }
      },
      "339": {
        start: {
          line: 1363,
          column: 16
        },
        end: {
          line: 1363,
          column: 102
        }
      },
      "340": {
        start: {
          line: 1371,
          column: 8
        },
        end: {
          line: 1378,
          column: 19
        }
      },
      "341": {
        start: {
          line: 1371,
          column: 53
        },
        end: {
          line: 1378,
          column: 10
        }
      },
      "342": {
        start: {
          line: 1372,
          column: 12
        },
        end: {
          line: 1377,
          column: 13
        }
      },
      "343": {
        start: {
          line: 1373,
          column: 16
        },
        end: {
          line: 1373,
          column: 48
        }
      },
      "344": {
        start: {
          line: 1376,
          column: 16
        },
        end: {
          line: 1376,
          column: 61
        }
      },
      "345": {
        start: {
          line: 1384,
          column: 8
        },
        end: {
          line: 1386,
          column: 32
        }
      },
      "346": {
        start: {
          line: 1392,
          column: 8
        },
        end: {
          line: 1402,
          column: 11
        }
      },
      "347": {
        start: {
          line: 1395,
          column: 12
        },
        end: {
          line: 1401,
          column: 14
        }
      },
      "348": {
        start: {
          line: 1408,
          column: 29
        },
        end: {
          line: 1414,
          column: 9
        }
      },
      "349": {
        start: {
          line: 1415,
          column: 8
        },
        end: {
          line: 1415,
          column: 57
        }
      },
      "350": {
        start: {
          line: 1421,
          column: 8
        },
        end: {
          line: 1424,
          column: 9
        }
      },
      "351": {
        start: {
          line: 1422,
          column: 12
        },
        end: {
          line: 1422,
          column: 52
        }
      },
      "352": {
        start: {
          line: 1423,
          column: 12
        },
        end: {
          line: 1423,
          column: 49
        }
      },
      "353": {
        start: {
          line: 1427,
          column: 0
        },
        end: {
          line: 1427,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 37
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 123
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 124,
            column: 55
          },
          end: {
            line: 124,
            column: 56
          }
        },
        loc: {
          start: {
            line: 124,
            column: 68
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 124
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 149,
            column: 78
          },
          end: {
            line: 149,
            column: 79
          }
        },
        loc: {
          start: {
            line: 149,
            column: 84
          },
          end: {
            line: 151,
            column: 18
          }
        },
        line: 149
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 149,
            column: 124
          },
          end: {
            line: 149,
            column: 125
          }
        },
        loc: {
          start: {
            line: 149,
            column: 137
          },
          end: {
            line: 151,
            column: 17
          }
        },
        line: 149
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 47
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 247
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 248,
            column: 55
          },
          end: {
            line: 248,
            column: 56
          }
        },
        loc: {
          start: {
            line: 248,
            column: 68
          },
          end: {
            line: 257,
            column: 9
          }
        },
        line: 248
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 53
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 262
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 263,
            column: 55
          },
          end: {
            line: 263,
            column: 56
          }
        },
        loc: {
          start: {
            line: 263,
            column: 68
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 263
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 278
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 35
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 284
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 38
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 290
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 36
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 296
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 51
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 302
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        loc: {
          start: {
            line: 308,
            column: 47
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 308
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 48
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 314
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 25
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 320
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 321,
            column: 55
          },
          end: {
            line: 321,
            column: 56
          }
        },
        loc: {
          start: {
            line: 321,
            column: 68
          },
          end: {
            line: 350,
            column: 9
          }
        },
        line: 321
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 37
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 355
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 27
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 361
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 362,
            column: 55
          },
          end: {
            line: 362,
            column: 56
          }
        },
        loc: {
          start: {
            line: 362,
            column: 68
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 362
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        loc: {
          start: {
            line: 377,
            column: 29
          },
          end: {
            line: 481,
            column: 5
          }
        },
        line: 377
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 378,
            column: 55
          },
          end: {
            line: 378,
            column: 56
          }
        },
        loc: {
          start: {
            line: 378,
            column: 68
          },
          end: {
            line: 480,
            column: 9
          }
        },
        line: 378
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 459,
            column: 57
          },
          end: {
            line: 459,
            column: 58
          }
        },
        loc: {
          start: {
            line: 459,
            column: 66
          },
          end: {
            line: 459,
            column: 74
          }
        },
        line: 459
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 485,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        loc: {
          start: {
            line: 485,
            column: 20
          },
          end: {
            line: 519,
            column: 5
          }
        },
        line: 485
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 486,
            column: 55
          },
          end: {
            line: 486,
            column: 56
          }
        },
        loc: {
          start: {
            line: 486,
            column: 68
          },
          end: {
            line: 518,
            column: 9
          }
        },
        line: 486
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 498,
            column: 57
          },
          end: {
            line: 498,
            column: 58
          }
        },
        loc: {
          start: {
            line: 498,
            column: 67
          },
          end: {
            line: 498,
            column: 94
          }
        },
        line: 498
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        loc: {
          start: {
            line: 523,
            column: 43
          },
          end: {
            line: 532,
            column: 5
          }
        },
        line: 523
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 524,
            column: 55
          },
          end: {
            line: 524,
            column: 56
          }
        },
        loc: {
          start: {
            line: 524,
            column: 68
          },
          end: {
            line: 531,
            column: 9
          }
        },
        line: 524
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 5
          }
        },
        loc: {
          start: {
            line: 536,
            column: 37
          },
          end: {
            line: 550,
            column: 5
          }
        },
        line: 536
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 554,
            column: 4
          },
          end: {
            line: 554,
            column: 5
          }
        },
        loc: {
          start: {
            line: 554,
            column: 27
          },
          end: {
            line: 565,
            column: 5
          }
        },
        line: 554
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 555,
            column: 55
          },
          end: {
            line: 555,
            column: 56
          }
        },
        loc: {
          start: {
            line: 555,
            column: 68
          },
          end: {
            line: 564,
            column: 9
          }
        },
        line: 555
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 569,
            column: 4
          },
          end: {
            line: 569,
            column: 5
          }
        },
        loc: {
          start: {
            line: 569,
            column: 40
          },
          end: {
            line: 582,
            column: 5
          }
        },
        line: 569
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 570,
            column: 55
          },
          end: {
            line: 570,
            column: 56
          }
        },
        loc: {
          start: {
            line: 570,
            column: 68
          },
          end: {
            line: 581,
            column: 9
          }
        },
        line: 570
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 586,
            column: 4
          },
          end: {
            line: 586,
            column: 5
          }
        },
        loc: {
          start: {
            line: 586,
            column: 49
          },
          end: {
            line: 599,
            column: 5
          }
        },
        line: 586
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 587,
            column: 55
          },
          end: {
            line: 587,
            column: 56
          }
        },
        loc: {
          start: {
            line: 587,
            column: 68
          },
          end: {
            line: 598,
            column: 9
          }
        },
        line: 587
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 603,
            column: 4
          },
          end: {
            line: 603,
            column: 5
          }
        },
        loc: {
          start: {
            line: 603,
            column: 56
          },
          end: {
            line: 616,
            column: 5
          }
        },
        line: 603
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 604,
            column: 55
          },
          end: {
            line: 604,
            column: 56
          }
        },
        loc: {
          start: {
            line: 604,
            column: 68
          },
          end: {
            line: 615,
            column: 9
          }
        },
        line: 604
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 620,
            column: 4
          },
          end: {
            line: 620,
            column: 5
          }
        },
        loc: {
          start: {
            line: 620,
            column: 62
          },
          end: {
            line: 633,
            column: 5
          }
        },
        line: 620
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 621,
            column: 55
          },
          end: {
            line: 621,
            column: 56
          }
        },
        loc: {
          start: {
            line: 621,
            column: 68
          },
          end: {
            line: 632,
            column: 9
          }
        },
        line: 621
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 637,
            column: 4
          },
          end: {
            line: 637,
            column: 5
          }
        },
        loc: {
          start: {
            line: 637,
            column: 58
          },
          end: {
            line: 647,
            column: 5
          }
        },
        line: 637
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 638,
            column: 55
          },
          end: {
            line: 638,
            column: 56
          }
        },
        loc: {
          start: {
            line: 638,
            column: 68
          },
          end: {
            line: 646,
            column: 9
          }
        },
        line: 638
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 651,
            column: 4
          },
          end: {
            line: 651,
            column: 5
          }
        },
        loc: {
          start: {
            line: 651,
            column: 68
          },
          end: {
            line: 660,
            column: 5
          }
        },
        line: 651
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 652,
            column: 55
          },
          end: {
            line: 652,
            column: 56
          }
        },
        loc: {
          start: {
            line: 652,
            column: 68
          },
          end: {
            line: 659,
            column: 9
          }
        },
        line: 652
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 664,
            column: 4
          },
          end: {
            line: 664,
            column: 5
          }
        },
        loc: {
          start: {
            line: 664,
            column: 30
          },
          end: {
            line: 666,
            column: 5
          }
        },
        line: 664
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 670,
            column: 4
          },
          end: {
            line: 670,
            column: 5
          }
        },
        loc: {
          start: {
            line: 670,
            column: 41
          },
          end: {
            line: 674,
            column: 5
          }
        },
        line: 670
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 671,
            column: 55
          },
          end: {
            line: 671,
            column: 56
          }
        },
        loc: {
          start: {
            line: 671,
            column: 68
          },
          end: {
            line: 673,
            column: 9
          }
        },
        line: 671
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 678,
            column: 4
          },
          end: {
            line: 678,
            column: 5
          }
        },
        loc: {
          start: {
            line: 678,
            column: 33
          },
          end: {
            line: 680,
            column: 5
          }
        },
        line: 678
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 684,
            column: 4
          },
          end: {
            line: 684,
            column: 5
          }
        },
        loc: {
          start: {
            line: 684,
            column: 39
          },
          end: {
            line: 686,
            column: 5
          }
        },
        line: 684
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 690,
            column: 4
          },
          end: {
            line: 690,
            column: 5
          }
        },
        loc: {
          start: {
            line: 690,
            column: 29
          },
          end: {
            line: 692,
            column: 5
          }
        },
        line: 690
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 696,
            column: 4
          },
          end: {
            line: 696,
            column: 5
          }
        },
        loc: {
          start: {
            line: 696,
            column: 32
          },
          end: {
            line: 698,
            column: 5
          }
        },
        line: 696
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 702,
            column: 4
          },
          end: {
            line: 702,
            column: 5
          }
        },
        loc: {
          start: {
            line: 702,
            column: 24
          },
          end: {
            line: 704,
            column: 5
          }
        },
        line: 702
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 708,
            column: 4
          },
          end: {
            line: 708,
            column: 5
          }
        },
        loc: {
          start: {
            line: 708,
            column: 14
          },
          end: {
            line: 713,
            column: 5
          }
        },
        line: 708
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 718,
            column: 4
          },
          end: {
            line: 718,
            column: 5
          }
        },
        loc: {
          start: {
            line: 718,
            column: 48
          },
          end: {
            line: 760,
            column: 5
          }
        },
        line: 718
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 719,
            column: 55
          },
          end: {
            line: 719,
            column: 56
          }
        },
        loc: {
          start: {
            line: 719,
            column: 68
          },
          end: {
            line: 759,
            column: 9
          }
        },
        line: 719
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 750,
            column: 47
          },
          end: {
            line: 750,
            column: 48
          }
        },
        loc: {
          start: {
            line: 750,
            column: 62
          },
          end: {
            line: 752,
            column: 13
          }
        },
        line: 750
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 751,
            column: 27
          },
          end: {
            line: 751,
            column: 28
          }
        },
        loc: {
          start: {
            line: 751,
            column: 33
          },
          end: {
            line: 751,
            column: 90
          }
        },
        line: 751
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 764,
            column: 4
          },
          end: {
            line: 764,
            column: 5
          }
        },
        loc: {
          start: {
            line: 764,
            column: 35
          },
          end: {
            line: 774,
            column: 5
          }
        },
        line: 764
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 765,
            column: 25
          },
          end: {
            line: 765,
            column: 26
          }
        },
        loc: {
          start: {
            line: 765,
            column: 36
          },
          end: {
            line: 773,
            column: 9
          }
        },
        line: 765
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 778,
            column: 4
          },
          end: {
            line: 778,
            column: 5
          }
        },
        loc: {
          start: {
            line: 778,
            column: 44
          },
          end: {
            line: 787,
            column: 5
          }
        },
        line: 778
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 791,
            column: 4
          },
          end: {
            line: 791,
            column: 5
          }
        },
        loc: {
          start: {
            line: 791,
            column: 46
          },
          end: {
            line: 811,
            column: 5
          }
        },
        line: 791
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 801,
            column: 86
          },
          end: {
            line: 801,
            column: 87
          }
        },
        loc: {
          start: {
            line: 801,
            column: 93
          },
          end: {
            line: 801,
            column: 99
          }
        },
        line: 801
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 802,
            column: 100
          },
          end: {
            line: 802,
            column: 101
          }
        },
        loc: {
          start: {
            line: 802,
            column: 107
          },
          end: {
            line: 802,
            column: 128
          }
        },
        line: 802
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 802,
            column: 175
          },
          end: {
            line: 802,
            column: 176
          }
        },
        loc: {
          start: {
            line: 802,
            column: 184
          },
          end: {
            line: 805,
            column: 9
          }
        },
        line: 802
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 815,
            column: 4
          },
          end: {
            line: 815,
            column: 5
          }
        },
        loc: {
          start: {
            line: 815,
            column: 40
          },
          end: {
            line: 825,
            column: 5
          }
        },
        line: 815
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 829,
            column: 4
          },
          end: {
            line: 829,
            column: 5
          }
        },
        loc: {
          start: {
            line: 829,
            column: 38
          },
          end: {
            line: 840,
            column: 5
          }
        },
        line: 829
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 844,
            column: 4
          },
          end: {
            line: 844,
            column: 5
          }
        },
        loc: {
          start: {
            line: 844,
            column: 58
          },
          end: {
            line: 953,
            column: 5
          }
        },
        line: 844
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 845,
            column: 55
          },
          end: {
            line: 845,
            column: 56
          }
        },
        loc: {
          start: {
            line: 845,
            column: 68
          },
          end: {
            line: 952,
            column: 9
          }
        },
        line: 845
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 859,
            column: 70
          },
          end: {
            line: 859,
            column: 71
          }
        },
        loc: {
          start: {
            line: 859,
            column: 77
          },
          end: {
            line: 859,
            column: 93
          }
        },
        line: 859
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 861,
            column: 75
          },
          end: {
            line: 861,
            column: 76
          }
        },
        loc: {
          start: {
            line: 861,
            column: 82
          },
          end: {
            line: 861,
            column: 103
          }
        },
        line: 861
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 862,
            column: 82
          },
          end: {
            line: 862,
            column: 83
          }
        },
        loc: {
          start: {
            line: 862,
            column: 89
          },
          end: {
            line: 862,
            column: 108
          }
        },
        line: 862
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 889,
            column: 53
          },
          end: {
            line: 889,
            column: 54
          }
        },
        loc: {
          start: {
            line: 889,
            column: 60
          },
          end: {
            line: 889,
            column: 76
          }
        },
        line: 889
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 912,
            column: 49
          },
          end: {
            line: 912,
            column: 50
          }
        },
        loc: {
          start: {
            line: 912,
            column: 56
          },
          end: {
            line: 912,
            column: 81
          }
        },
        line: 912
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 914,
            column: 32
          },
          end: {
            line: 914,
            column: 33
          }
        },
        loc: {
          start: {
            line: 914,
            column: 39
          },
          end: {
            line: 914,
            column: 64
          }
        },
        line: 914
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 915,
            column: 29
          },
          end: {
            line: 915,
            column: 30
          }
        },
        loc: {
          start: {
            line: 915,
            column: 36
          },
          end: {
            line: 915,
            column: 45
          }
        },
        line: 915
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 957,
            column: 4
          },
          end: {
            line: 957,
            column: 5
          }
        },
        loc: {
          start: {
            line: 957,
            column: 58
          },
          end: {
            line: 1015,
            column: 5
          }
        },
        line: 957
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 958,
            column: 55
          },
          end: {
            line: 958,
            column: 56
          }
        },
        loc: {
          start: {
            line: 958,
            column: 68
          },
          end: {
            line: 1014,
            column: 9
          }
        },
        line: 958
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 1019,
            column: 4
          },
          end: {
            line: 1019,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1019,
            column: 32
          },
          end: {
            line: 1068,
            column: 5
          }
        },
        line: 1019
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 1064,
            column: 43
          },
          end: {
            line: 1064,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1064,
            column: 73
          },
          end: {
            line: 1066,
            column: 9
          }
        },
        line: 1064
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 1072,
            column: 4
          },
          end: {
            line: 1072,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1072,
            column: 43
          },
          end: {
            line: 1098,
            column: 5
          }
        },
        line: 1072
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 1073,
            column: 55
          },
          end: {
            line: 1073,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1073,
            column: 68
          },
          end: {
            line: 1097,
            column: 9
          }
        },
        line: 1073
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 1102,
            column: 4
          },
          end: {
            line: 1102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1102,
            column: 32
          },
          end: {
            line: 1126,
            column: 5
          }
        },
        line: 1102
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 1103,
            column: 55
          },
          end: {
            line: 1103,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1103,
            column: 68
          },
          end: {
            line: 1125,
            column: 9
          }
        },
        line: 1103
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 1130,
            column: 4
          },
          end: {
            line: 1130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1130,
            column: 29
          },
          end: {
            line: 1141,
            column: 5
          }
        },
        line: 1130
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 1131,
            column: 55
          },
          end: {
            line: 1131,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1131,
            column: 68
          },
          end: {
            line: 1140,
            column: 9
          }
        },
        line: 1131
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 1145,
            column: 4
          },
          end: {
            line: 1145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1145,
            column: 25
          },
          end: {
            line: 1162,
            column: 5
          }
        },
        line: 1145
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 1146,
            column: 55
          },
          end: {
            line: 1146,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1146,
            column: 68
          },
          end: {
            line: 1161,
            column: 9
          }
        },
        line: 1146
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 1160,
            column: 41
          },
          end: {
            line: 1160,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1160,
            column: 54
          },
          end: {
            line: 1160,
            column: 76
          }
        },
        line: 1160
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 1166,
            column: 4
          },
          end: {
            line: 1166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1166,
            column: 48
          },
          end: {
            line: 1197,
            column: 5
          }
        },
        line: 1166
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 1167,
            column: 55
          },
          end: {
            line: 1167,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1167,
            column: 68
          },
          end: {
            line: 1196,
            column: 9
          }
        },
        line: 1167
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 1201,
            column: 4
          },
          end: {
            line: 1201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1201,
            column: 31
          },
          end: {
            line: 1210,
            column: 5
          }
        },
        line: 1201
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 1209,
            column: 41
          },
          end: {
            line: 1209,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1209,
            column: 54
          },
          end: {
            line: 1209,
            column: 72
          }
        },
        line: 1209
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 1214,
            column: 4
          },
          end: {
            line: 1214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1214,
            column: 31
          },
          end: {
            line: 1223,
            column: 5
          }
        },
        line: 1214
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 1222,
            column: 41
          },
          end: {
            line: 1222,
            column: 42
          }
        },
        loc: {
          start: {
            line: 1222,
            column: 54
          },
          end: {
            line: 1222,
            column: 72
          }
        },
        line: 1222
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 1227,
            column: 4
          },
          end: {
            line: 1227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1227,
            column: 33
          },
          end: {
            line: 1236,
            column: 5
          }
        },
        line: 1227
      },
      "95": {
        name: "(anonymous_95)",
        decl: {
          start: {
            line: 1235,
            column: 43
          },
          end: {
            line: 1235,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1235,
            column: 56
          },
          end: {
            line: 1235,
            column: 74
          }
        },
        line: 1235
      },
      "96": {
        name: "(anonymous_96)",
        decl: {
          start: {
            line: 1240,
            column: 4
          },
          end: {
            line: 1240,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1240,
            column: 32
          },
          end: {
            line: 1265,
            column: 5
          }
        },
        line: 1240
      },
      "97": {
        name: "(anonymous_97)",
        decl: {
          start: {
            line: 1241,
            column: 55
          },
          end: {
            line: 1241,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1241,
            column: 68
          },
          end: {
            line: 1264,
            column: 9
          }
        },
        line: 1241
      },
      "98": {
        name: "(anonymous_98)",
        decl: {
          start: {
            line: 1269,
            column: 4
          },
          end: {
            line: 1269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1269,
            column: 22
          },
          end: {
            line: 1280,
            column: 5
          }
        },
        line: 1269
      },
      "99": {
        name: "(anonymous_99)",
        decl: {
          start: {
            line: 1270,
            column: 55
          },
          end: {
            line: 1270,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1270,
            column: 68
          },
          end: {
            line: 1279,
            column: 9
          }
        },
        line: 1270
      },
      "100": {
        name: "(anonymous_100)",
        decl: {
          start: {
            line: 1284,
            column: 4
          },
          end: {
            line: 1284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1284,
            column: 53
          },
          end: {
            line: 1320,
            column: 5
          }
        },
        line: 1284
      },
      "101": {
        name: "(anonymous_101)",
        decl: {
          start: {
            line: 1285,
            column: 55
          },
          end: {
            line: 1285,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1285,
            column: 68
          },
          end: {
            line: 1319,
            column: 9
          }
        },
        line: 1285
      },
      "102": {
        name: "(anonymous_102)",
        decl: {
          start: {
            line: 1324,
            column: 4
          },
          end: {
            line: 1324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1324,
            column: 30
          },
          end: {
            line: 1333,
            column: 5
          }
        },
        line: 1324
      },
      "103": {
        name: "(anonymous_103)",
        decl: {
          start: {
            line: 1337,
            column: 4
          },
          end: {
            line: 1337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1337,
            column: 50
          },
          end: {
            line: 1366,
            column: 5
          }
        },
        line: 1337
      },
      "104": {
        name: "(anonymous_104)",
        decl: {
          start: {
            line: 1370,
            column: 4
          },
          end: {
            line: 1370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1370,
            column: 28
          },
          end: {
            line: 1379,
            column: 5
          }
        },
        line: 1370
      },
      "105": {
        name: "(anonymous_105)",
        decl: {
          start: {
            line: 1371,
            column: 47
          },
          end: {
            line: 1371,
            column: 48
          }
        },
        loc: {
          start: {
            line: 1371,
            column: 53
          },
          end: {
            line: 1378,
            column: 10
          }
        },
        line: 1371
      },
      "106": {
        name: "(anonymous_106)",
        decl: {
          start: {
            line: 1371,
            column: 93
          },
          end: {
            line: 1371,
            column: 94
          }
        },
        loc: {
          start: {
            line: 1371,
            column: 106
          },
          end: {
            line: 1378,
            column: 9
          }
        },
        line: 1371
      },
      "107": {
        name: "(anonymous_107)",
        decl: {
          start: {
            line: 1383,
            column: 4
          },
          end: {
            line: 1383,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1383,
            column: 26
          },
          end: {
            line: 1387,
            column: 5
          }
        },
        line: 1383
      },
      "108": {
        name: "(anonymous_108)",
        decl: {
          start: {
            line: 1391,
            column: 4
          },
          end: {
            line: 1391,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1391,
            column: 27
          },
          end: {
            line: 1403,
            column: 5
          }
        },
        line: 1391
      },
      "109": {
        name: "(anonymous_109)",
        decl: {
          start: {
            line: 1392,
            column: 55
          },
          end: {
            line: 1392,
            column: 56
          }
        },
        loc: {
          start: {
            line: 1392,
            column: 68
          },
          end: {
            line: 1402,
            column: 9
          }
        },
        line: 1392
      },
      "110": {
        name: "(anonymous_110)",
        decl: {
          start: {
            line: 1407,
            column: 4
          },
          end: {
            line: 1407,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1407,
            column: 37
          },
          end: {
            line: 1416,
            column: 5
          }
        },
        line: 1407
      },
      "111": {
        name: "(anonymous_111)",
        decl: {
          start: {
            line: 1420,
            column: 4
          },
          end: {
            line: 1420,
            column: 5
          }
        },
        loc: {
          start: {
            line: 1420,
            column: 14
          },
          end: {
            line: 1425,
            column: 5
          }
        },
        line: 1420
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 25,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 27
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 54,
            column: 68
          }
        }, {
          start: {
            line: 54,
            column: 72
          },
          end: {
            line: 54,
            column: 86
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 91,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 91,
            column: 47
          }
        }, {
          start: {
            line: 91,
            column: 51
          },
          end: {
            line: 91,
            column: 69
          }
        }],
        line: 91
      },
      "3": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "4": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 139,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 136,
            column: 20
          },
          end: {
            line: 137,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 20
          },
          end: {
            line: 136,
            column: 52
          }
        }, {
          start: {
            line: 137,
            column: 20
          },
          end: {
            line: 137,
            column: 57
          }
        }],
        line: 136
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 165,
            column: 17
          }
        }, {
          start: {
            line: 160,
            column: 21
          },
          end: {
            line: 165,
            column: 17
          }
        }],
        line: 154
      },
      "9": {
        loc: {
          start: {
            line: 156,
            column: 39
          },
          end: {
            line: 156,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 90
          },
          end: {
            line: 156,
            column: 96
          }
        }, {
          start: {
            line: 156,
            column: 99
          },
          end: {
            line: 156,
            column: 115
          }
        }],
        line: 156
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 39
          },
          end: {
            line: 156,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 39
          },
          end: {
            line: 156,
            column: 70
          }
        }, {
          start: {
            line: 156,
            column: 74
          },
          end: {
            line: 156,
            column: 87
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 160,
            column: 21
          },
          end: {
            line: 165,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 21
          },
          end: {
            line: 165,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "12": {
        loc: {
          start: {
            line: 162,
            column: 39
          },
          end: {
            line: 162,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 90
          },
          end: {
            line: 162,
            column: 96
          }
        }, {
          start: {
            line: 162,
            column: 99
          },
          end: {
            line: 162,
            column: 115
          }
        }],
        line: 162
      },
      "13": {
        loc: {
          start: {
            line: 162,
            column: 39
          },
          end: {
            line: 162,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 39
          },
          end: {
            line: 162,
            column: 70
          }
        }, {
          start: {
            line: 162,
            column: 74
          },
          end: {
            line: 162,
            column: 87
          }
        }],
        line: 162
      },
      "14": {
        loc: {
          start: {
            line: 179,
            column: 37
          },
          end: {
            line: 179,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 146
          }
        }, {
          start: {
            line: 179,
            column: 151
          },
          end: {
            line: 179,
            column: 152
          }
        }],
        line: 179
      },
      "15": {
        loc: {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 101
          },
          end: {
            line: 179,
            column: 107
          }
        }, {
          start: {
            line: 179,
            column: 110
          },
          end: {
            line: 179,
            column: 146
          }
        }],
        line: 179
      },
      "16": {
        loc: {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 65
          }
        }, {
          start: {
            line: 179,
            column: 69
          },
          end: {
            line: 179,
            column: 98
          }
        }],
        line: 179
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 103
          },
          end: {
            line: 180,
            column: 109
          }
        }, {
          start: {
            line: 180,
            column: 112
          },
          end: {
            line: 180,
            column: 146
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 67
          }
        }, {
          start: {
            line: 180,
            column: 71
          },
          end: {
            line: 180,
            column: 100
          }
        }],
        line: 180
      },
      "19": {
        loc: {
          start: {
            line: 181,
            column: 39
          },
          end: {
            line: 181,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 40
          },
          end: {
            line: 181,
            column: 150
          }
        }, {
          start: {
            line: 181,
            column: 155
          },
          end: {
            line: 181,
            column: 160
          }
        }],
        line: 181
      },
      "20": {
        loc: {
          start: {
            line: 181,
            column: 40
          },
          end: {
            line: 181,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 107
          },
          end: {
            line: 181,
            column: 113
          }
        }, {
          start: {
            line: 181,
            column: 116
          },
          end: {
            line: 181,
            column: 150
          }
        }],
        line: 181
      },
      "21": {
        loc: {
          start: {
            line: 181,
            column: 40
          },
          end: {
            line: 181,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 40
          },
          end: {
            line: 181,
            column: 69
          }
        }, {
          start: {
            line: 181,
            column: 73
          },
          end: {
            line: 181,
            column: 104
          }
        }],
        line: 181
      },
      "22": {
        loc: {
          start: {
            line: 194,
            column: 34
          },
          end: {
            line: 194,
            column: 149
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 143
          }
        }, {
          start: {
            line: 194,
            column: 148
          },
          end: {
            line: 194,
            column: 149
          }
        }],
        line: 194
      },
      "23": {
        loc: {
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 98
          },
          end: {
            line: 194,
            column: 104
          }
        }, {
          start: {
            line: 194,
            column: 107
          },
          end: {
            line: 194,
            column: 143
          }
        }],
        line: 194
      },
      "24": {
        loc: {
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 35
          },
          end: {
            line: 194,
            column: 62
          }
        }, {
          start: {
            line: 194,
            column: 66
          },
          end: {
            line: 194,
            column: 95
          }
        }],
        line: 194
      },
      "25": {
        loc: {
          start: {
            line: 195,
            column: 41
          },
          end: {
            line: 195,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 195,
            column: 104
          },
          end: {
            line: 195,
            column: 110
          }
        }, {
          start: {
            line: 195,
            column: 113
          },
          end: {
            line: 195,
            column: 147
          }
        }],
        line: 195
      },
      "26": {
        loc: {
          start: {
            line: 195,
            column: 41
          },
          end: {
            line: 195,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 41
          },
          end: {
            line: 195,
            column: 68
          }
        }, {
          start: {
            line: 195,
            column: 72
          },
          end: {
            line: 195,
            column: 101
          }
        }],
        line: 195
      },
      "27": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 212,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 212,
            column: 17
          }
        }, {
          start: {
            line: 208,
            column: 21
          },
          end: {
            line: 212,
            column: 17
          }
        }],
        line: 203
      },
      "28": {
        loc: {
          start: {
            line: 205,
            column: 39
          },
          end: {
            line: 205,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 90
          },
          end: {
            line: 205,
            column: 96
          }
        }, {
          start: {
            line: 205,
            column: 99
          },
          end: {
            line: 205,
            column: 115
          }
        }],
        line: 205
      },
      "29": {
        loc: {
          start: {
            line: 205,
            column: 39
          },
          end: {
            line: 205,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 39
          },
          end: {
            line: 205,
            column: 70
          }
        }, {
          start: {
            line: 205,
            column: 74
          },
          end: {
            line: 205,
            column: 87
          }
        }],
        line: 205
      },
      "30": {
        loc: {
          start: {
            line: 205,
            column: 117
          },
          end: {
            line: 205,
            column: 173
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 142
          },
          end: {
            line: 205,
            column: 155
          }
        }, {
          start: {
            line: 205,
            column: 158
          },
          end: {
            line: 205,
            column: 173
          }
        }],
        line: 205
      },
      "31": {
        loc: {
          start: {
            line: 208,
            column: 21
          },
          end: {
            line: 212,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 21
          },
          end: {
            line: 212,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "32": {
        loc: {
          start: {
            line: 210,
            column: 39
          },
          end: {
            line: 210,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 90
          },
          end: {
            line: 210,
            column: 96
          }
        }, {
          start: {
            line: 210,
            column: 99
          },
          end: {
            line: 210,
            column: 115
          }
        }],
        line: 210
      },
      "33": {
        loc: {
          start: {
            line: 210,
            column: 39
          },
          end: {
            line: 210,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 39
          },
          end: {
            line: 210,
            column: 70
          }
        }, {
          start: {
            line: 210,
            column: 74
          },
          end: {
            line: 210,
            column: 87
          }
        }],
        line: 210
      },
      "34": {
        loc: {
          start: {
            line: 210,
            column: 117
          },
          end: {
            line: 210,
            column: 173
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 142
          },
          end: {
            line: 210,
            column: 155
          }
        }, {
          start: {
            line: 210,
            column: 158
          },
          end: {
            line: 210,
            column: 173
          }
        }],
        line: 210
      },
      "35": {
        loc: {
          start: {
            line: 223,
            column: 33
          },
          end: {
            line: 223,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 58
          },
          end: {
            line: 223,
            column: 71
          }
        }, {
          start: {
            line: 223,
            column: 74
          },
          end: {
            line: 223,
            column: 89
          }
        }],
        line: 223
      },
      "36": {
        loc: {
          start: {
            line: 229,
            column: 37
          },
          end: {
            line: 229,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 146
          }
        }, {
          start: {
            line: 229,
            column: 151
          },
          end: {
            line: 229,
            column: 152
          }
        }],
        line: 229
      },
      "37": {
        loc: {
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 101
          },
          end: {
            line: 229,
            column: 107
          }
        }, {
          start: {
            line: 229,
            column: 110
          },
          end: {
            line: 229,
            column: 146
          }
        }],
        line: 229
      },
      "38": {
        loc: {
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 38
          },
          end: {
            line: 229,
            column: 65
          }
        }, {
          start: {
            line: 229,
            column: 69
          },
          end: {
            line: 229,
            column: 98
          }
        }],
        line: 229
      },
      "39": {
        loc: {
          start: {
            line: 235,
            column: 27
          },
          end: {
            line: 235,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 52
          },
          end: {
            line: 235,
            column: 65
          }
        }, {
          start: {
            line: 235,
            column: 68
          },
          end: {
            line: 235,
            column: 83
          }
        }],
        line: 235
      },
      "40": {
        loc: {
          start: {
            line: 302,
            column: 34
          },
          end: {
            line: 302,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 302,
            column: 49
          }
        }],
        line: 302
      },
      "41": {
        loc: {
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 330,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 330,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "42": {
        loc: {
          start: {
            line: 325,
            column: 20
          },
          end: {
            line: 326,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 20
          },
          end: {
            line: 325,
            column: 49
          }
        }, {
          start: {
            line: 326,
            column: 20
          },
          end: {
            line: 326,
            column: 58
          }
        }],
        line: 325
      },
      "43": {
        loc: {
          start: {
            line: 369,
            column: 31
          },
          end: {
            line: 369,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 369,
            column: 63
          },
          end: {
            line: 369,
            column: 66
          }
        }, {
          start: {
            line: 369,
            column: 69
          },
          end: {
            line: 369,
            column: 72
          }
        }],
        line: 369
      },
      "44": {
        loc: {
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 12
          },
          end: {
            line: 388,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "45": {
        loc: {
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 398,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 398,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "46": {
        loc: {
          start: {
            line: 390,
            column: 16
          },
          end: {
            line: 390,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 16
          },
          end: {
            line: 390,
            column: 21
          }
        }, {
          start: {
            line: 390,
            column: 25
          },
          end: {
            line: 390,
            column: 49
          }
        }, {
          start: {
            line: 390,
            column: 53
          },
          end: {
            line: 390,
            column: 77
          }
        }],
        line: 390
      },
      "47": {
        loc: {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "48": {
        loc: {
          start: {
            line: 401,
            column: 16
          },
          end: {
            line: 402,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 16
          },
          end: {
            line: 401,
            column: 76
          }
        }, {
          start: {
            line: 402,
            column: 16
          },
          end: {
            line: 402,
            column: 27
          }
        }],
        line: 401
      },
      "49": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "50": {
        loc: {
          start: {
            line: 469,
            column: 16
          },
          end: {
            line: 471,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 17
          },
          end: {
            line: 469,
            column: 84
          }
        }, {
          start: {
            line: 470,
            column: 17
          },
          end: {
            line: 470,
            column: 86
          }
        }, {
          start: {
            line: 471,
            column: 17
          },
          end: {
            line: 471,
            column: 92
          }
        }],
        line: 469
      },
      "51": {
        loc: {
          start: {
            line: 469,
            column: 17
          },
          end: {
            line: 469,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 469,
            column: 58
          },
          end: {
            line: 469,
            column: 64
          }
        }, {
          start: {
            line: 469,
            column: 67
          },
          end: {
            line: 469,
            column: 84
          }
        }],
        line: 469
      },
      "52": {
        loc: {
          start: {
            line: 469,
            column: 17
          },
          end: {
            line: 469,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 17
          },
          end: {
            line: 469,
            column: 33
          }
        }, {
          start: {
            line: 469,
            column: 37
          },
          end: {
            line: 469,
            column: 55
          }
        }],
        line: 469
      },
      "53": {
        loc: {
          start: {
            line: 470,
            column: 17
          },
          end: {
            line: 470,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 470,
            column: 58
          },
          end: {
            line: 470,
            column: 64
          }
        }, {
          start: {
            line: 470,
            column: 67
          },
          end: {
            line: 470,
            column: 86
          }
        }],
        line: 470
      },
      "54": {
        loc: {
          start: {
            line: 470,
            column: 17
          },
          end: {
            line: 470,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 470,
            column: 17
          },
          end: {
            line: 470,
            column: 33
          }
        }, {
          start: {
            line: 470,
            column: 37
          },
          end: {
            line: 470,
            column: 55
          }
        }],
        line: 470
      },
      "55": {
        loc: {
          start: {
            line: 471,
            column: 17
          },
          end: {
            line: 471,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 471,
            column: 58
          },
          end: {
            line: 471,
            column: 64
          }
        }, {
          start: {
            line: 471,
            column: 67
          },
          end: {
            line: 471,
            column: 92
          }
        }],
        line: 471
      },
      "56": {
        loc: {
          start: {
            line: 471,
            column: 17
          },
          end: {
            line: 471,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 17
          },
          end: {
            line: 471,
            column: 33
          }
        }, {
          start: {
            line: 471,
            column: 37
          },
          end: {
            line: 471,
            column: 55
          }
        }],
        line: 471
      },
      "57": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "58": {
        loc: {
          start: {
            line: 549,
            column: 15
          },
          end: {
            line: 549,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 15
          },
          end: {
            line: 549,
            column: 36
          }
        }, {
          start: {
            line: 549,
            column: 40
          },
          end: {
            line: 549,
            column: 56
          }
        }],
        line: 549
      },
      "59": {
        loc: {
          start: {
            line: 574,
            column: 120
          },
          end: {
            line: 574,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 574,
            column: 120
          },
          end: {
            line: 574,
            column: 134
          }
        }, {
          start: {
            line: 574,
            column: 138
          },
          end: {
            line: 574,
            column: 164
          }
        }],
        line: 574
      },
      "60": {
        loc: {
          start: {
            line: 579,
            column: 69
          },
          end: {
            line: 579,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 579,
            column: 94
          },
          end: {
            line: 579,
            column: 107
          }
        }, {
          start: {
            line: 579,
            column: 110
          },
          end: {
            line: 579,
            column: 123
          }
        }],
        line: 579
      },
      "61": {
        loc: {
          start: {
            line: 591,
            column: 120
          },
          end: {
            line: 591,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 591,
            column: 120
          },
          end: {
            line: 591,
            column: 134
          }
        }, {
          start: {
            line: 591,
            column: 138
          },
          end: {
            line: 591,
            column: 164
          }
        }],
        line: 591
      },
      "62": {
        loc: {
          start: {
            line: 596,
            column: 69
          },
          end: {
            line: 596,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 596,
            column: 94
          },
          end: {
            line: 596,
            column: 107
          }
        }, {
          start: {
            line: 596,
            column: 110
          },
          end: {
            line: 596,
            column: 123
          }
        }],
        line: 596
      },
      "63": {
        loc: {
          start: {
            line: 613,
            column: 70
          },
          end: {
            line: 613,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 613,
            column: 95
          },
          end: {
            line: 613,
            column: 108
          }
        }, {
          start: {
            line: 613,
            column: 111
          },
          end: {
            line: 613,
            column: 124
          }
        }],
        line: 613
      },
      "64": {
        loc: {
          start: {
            line: 630,
            column: 71
          },
          end: {
            line: 630,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 630,
            column: 96
          },
          end: {
            line: 630,
            column: 109
          }
        }, {
          start: {
            line: 630,
            column: 112
          },
          end: {
            line: 630,
            column: 125
          }
        }],
        line: 630
      },
      "65": {
        loc: {
          start: {
            line: 644,
            column: 72
          },
          end: {
            line: 644,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 644,
            column: 97
          },
          end: {
            line: 644,
            column: 110
          }
        }, {
          start: {
            line: 644,
            column: 113
          },
          end: {
            line: 644,
            column: 126
          }
        }],
        line: 644
      },
      "66": {
        loc: {
          start: {
            line: 657,
            column: 72
          },
          end: {
            line: 657,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 657,
            column: 97
          },
          end: {
            line: 657,
            column: 110
          }
        }, {
          start: {
            line: 657,
            column: 113
          },
          end: {
            line: 657,
            column: 126
          }
        }],
        line: 657
      },
      "67": {
        loc: {
          start: {
            line: 709,
            column: 8
          },
          end: {
            line: 711,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 709,
            column: 8
          },
          end: {
            line: 711,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 709
      },
      "68": {
        loc: {
          start: {
            line: 724,
            column: 97
          },
          end: {
            line: 724,
            column: 139
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 724,
            column: 97
          },
          end: {
            line: 724,
            column: 114
          }
        }, {
          start: {
            line: 724,
            column: 118
          },
          end: {
            line: 724,
            column: 139
          }
        }],
        line: 724
      },
      "69": {
        loc: {
          start: {
            line: 724,
            column: 154
          },
          end: {
            line: 724,
            column: 237
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 724,
            column: 209
          },
          end: {
            line: 724,
            column: 211
          }
        }, {
          start: {
            line: 724,
            column: 214
          },
          end: {
            line: 724,
            column: 237
          }
        }],
        line: 724
      },
      "70": {
        loc: {
          start: {
            line: 724,
            column: 154
          },
          end: {
            line: 724,
            column: 206
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 724,
            column: 154
          },
          end: {
            line: 724,
            column: 189
          }
        }, {
          start: {
            line: 724,
            column: 193
          },
          end: {
            line: 724,
            column: 206
          }
        }],
        line: 724
      },
      "71": {
        loc: {
          start: {
            line: 729,
            column: 22
          },
          end: {
            line: 731,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 729,
            column: 22
          },
          end: {
            line: 729,
            column: 35
          }
        }, {
          start: {
            line: 729,
            column: 39
          },
          end: {
            line: 731,
            column: 13
          }
        }],
        line: 729
      },
      "72": {
        loc: {
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 735,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 735,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 733
      },
      "73": {
        loc: {
          start: {
            line: 736,
            column: 28
          },
          end: {
            line: 748,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 737,
            column: 18
          },
          end: {
            line: 742,
            column: 18
          }
        }, {
          start: {
            line: 743,
            column: 18
          },
          end: {
            line: 748,
            column: 18
          }
        }],
        line: 736
      },
      "74": {
        loc: {
          start: {
            line: 767,
            column: 25
          },
          end: {
            line: 767,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 767,
            column: 25
          },
          end: {
            line: 767,
            column: 41
          }
        }, {
          start: {
            line: 767,
            column: 45
          },
          end: {
            line: 767,
            column: 47
          }
        }],
        line: 767
      },
      "75": {
        loc: {
          start: {
            line: 770,
            column: 28
          },
          end: {
            line: 770,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 770,
            column: 28
          },
          end: {
            line: 770,
            column: 43
          }
        }, {
          start: {
            line: 770,
            column: 47
          },
          end: {
            line: 770,
            column: 49
          }
        }],
        line: 770
      },
      "76": {
        loc: {
          start: {
            line: 771,
            column: 38
          },
          end: {
            line: 771,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 771,
            column: 38
          },
          end: {
            line: 771,
            column: 53
          }
        }, {
          start: {
            line: 771,
            column: 57
          },
          end: {
            line: 771,
            column: 59
          }
        }],
        line: 771
      },
      "77": {
        loc: {
          start: {
            line: 793,
            column: 8
          },
          end: {
            line: 799,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 793,
            column: 8
          },
          end: {
            line: 799,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 793
      },
      "78": {
        loc: {
          start: {
            line: 801,
            column: 21
          },
          end: {
            line: 801,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 801,
            column: 22
          },
          end: {
            line: 801,
            column: 111
          }
        }, {
          start: {
            line: 801,
            column: 116
          },
          end: {
            line: 801,
            column: 118
          }
        }],
        line: 801
      },
      "79": {
        loc: {
          start: {
            line: 801,
            column: 22
          },
          end: {
            line: 801,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 801,
            column: 70
          },
          end: {
            line: 801,
            column: 76
          }
        }, {
          start: {
            line: 801,
            column: 79
          },
          end: {
            line: 801,
            column: 111
          }
        }],
        line: 801
      },
      "80": {
        loc: {
          start: {
            line: 801,
            column: 22
          },
          end: {
            line: 801,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 801,
            column: 22
          },
          end: {
            line: 801,
            column: 50
          }
        }, {
          start: {
            line: 801,
            column: 54
          },
          end: {
            line: 801,
            column: 67
          }
        }],
        line: 801
      },
      "81": {
        loc: {
          start: {
            line: 802,
            column: 26
          },
          end: {
            line: 805,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 802,
            column: 27
          },
          end: {
            line: 805,
            column: 11
          }
        }, {
          start: {
            line: 805,
            column: 16
          },
          end: {
            line: 805,
            column: 18
          }
        }],
        line: 802
      },
      "82": {
        loc: {
          start: {
            line: 802,
            column: 27
          },
          end: {
            line: 805,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 802,
            column: 159
          },
          end: {
            line: 802,
            column: 165
          }
        }, {
          start: {
            line: 802,
            column: 168
          },
          end: {
            line: 805,
            column: 11
          }
        }],
        line: 802
      },
      "83": {
        loc: {
          start: {
            line: 802,
            column: 27
          },
          end: {
            line: 802,
            column: 156
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 802,
            column: 27
          },
          end: {
            line: 802,
            column: 139
          }
        }, {
          start: {
            line: 802,
            column: 143
          },
          end: {
            line: 802,
            column: 156
          }
        }],
        line: 802
      },
      "84": {
        loc: {
          start: {
            line: 802,
            column: 33
          },
          end: {
            line: 802,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 802,
            column: 81
          },
          end: {
            line: 802,
            column: 87
          }
        }, {
          start: {
            line: 802,
            column: 90
          },
          end: {
            line: 802,
            column: 129
          }
        }],
        line: 802
      },
      "85": {
        loc: {
          start: {
            line: 802,
            column: 33
          },
          end: {
            line: 802,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 802,
            column: 33
          },
          end: {
            line: 802,
            column: 61
          }
        }, {
          start: {
            line: 802,
            column: 65
          },
          end: {
            line: 802,
            column: 78
          }
        }],
        line: 802
      },
      "86": {
        loc: {
          start: {
            line: 807,
            column: 19
          },
          end: {
            line: 807,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 807,
            column: 20
          },
          end: {
            line: 807,
            column: 90
          }
        }, {
          start: {
            line: 807,
            column: 95
          },
          end: {
            line: 807,
            column: 96
          }
        }],
        line: 807
      },
      "87": {
        loc: {
          start: {
            line: 807,
            column: 20
          },
          end: {
            line: 807,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 807,
            column: 66
          },
          end: {
            line: 807,
            column: 72
          }
        }, {
          start: {
            line: 807,
            column: 75
          },
          end: {
            line: 807,
            column: 90
          }
        }],
        line: 807
      },
      "88": {
        loc: {
          start: {
            line: 807,
            column: 20
          },
          end: {
            line: 807,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 807,
            column: 20
          },
          end: {
            line: 807,
            column: 46
          }
        }, {
          start: {
            line: 807,
            column: 50
          },
          end: {
            line: 807,
            column: 63
          }
        }],
        line: 807
      },
      "89": {
        loc: {
          start: {
            line: 808,
            column: 20
          },
          end: {
            line: 808,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 808,
            column: 21
          },
          end: {
            line: 808,
            column: 92
          }
        }, {
          start: {
            line: 808,
            column: 97
          },
          end: {
            line: 808,
            column: 98
          }
        }],
        line: 808
      },
      "90": {
        loc: {
          start: {
            line: 808,
            column: 21
          },
          end: {
            line: 808,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 808,
            column: 67
          },
          end: {
            line: 808,
            column: 73
          }
        }, {
          start: {
            line: 808,
            column: 76
          },
          end: {
            line: 808,
            column: 92
          }
        }],
        line: 808
      },
      "91": {
        loc: {
          start: {
            line: 808,
            column: 21
          },
          end: {
            line: 808,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 808,
            column: 21
          },
          end: {
            line: 808,
            column: 47
          }
        }, {
          start: {
            line: 808,
            column: 51
          },
          end: {
            line: 808,
            column: 64
          }
        }],
        line: 808
      },
      "92": {
        loc: {
          start: {
            line: 817,
            column: 27
          },
          end: {
            line: 821,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 818,
            column: 14
          },
          end: {
            line: 818,
            column: 18
          }
        }, {
          start: {
            line: 819,
            column: 14
          },
          end: {
            line: 821,
            column: 23
          }
        }],
        line: 817
      },
      "93": {
        loc: {
          start: {
            line: 819,
            column: 14
          },
          end: {
            line: 821,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 820,
            column: 18
          },
          end: {
            line: 820,
            column: 23
          }
        }, {
          start: {
            line: 821,
            column: 18
          },
          end: {
            line: 821,
            column: 23
          }
        }],
        line: 819
      },
      "94": {
        loc: {
          start: {
            line: 822,
            column: 8
          },
          end: {
            line: 824,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 822,
            column: 8
          },
          end: {
            line: 824,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 822
      },
      "95": {
        loc: {
          start: {
            line: 830,
            column: 8
          },
          end: {
            line: 839,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 831,
            column: 12
          },
          end: {
            line: 832,
            column: 52
          }
        }, {
          start: {
            line: 833,
            column: 12
          },
          end: {
            line: 833,
            column: 34
          }
        }, {
          start: {
            line: 834,
            column: 12
          },
          end: {
            line: 834,
            column: 32
          }
        }, {
          start: {
            line: 835,
            column: 12
          },
          end: {
            line: 836,
            column: 51
          }
        }, {
          start: {
            line: 837,
            column: 12
          },
          end: {
            line: 838,
            column: 43
          }
        }],
        line: 830
      },
      "96": {
        loc: {
          start: {
            line: 855,
            column: 38
          },
          end: {
            line: 855,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 855,
            column: 61
          },
          end: {
            line: 855,
            column: 72
          }
        }, {
          start: {
            line: 855,
            column: 75
          },
          end: {
            line: 855,
            column: 86
          }
        }],
        line: 855
      },
      "97": {
        loc: {
          start: {
            line: 869,
            column: 16
          },
          end: {
            line: 885,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 869,
            column: 16
          },
          end: {
            line: 885,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 869
      },
      "98": {
        loc: {
          start: {
            line: 887,
            column: 16
          },
          end: {
            line: 909,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 887,
            column: 16
          },
          end: {
            line: 909,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 887
      },
      "99": {
        loc: {
          start: {
            line: 887,
            column: 20
          },
          end: {
            line: 887,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 887,
            column: 20
          },
          end: {
            line: 887,
            column: 53
          }
        }, {
          start: {
            line: 887,
            column: 57
          },
          end: {
            line: 887,
            column: 78
          }
        }],
        line: 887
      },
      "100": {
        loc: {
          start: {
            line: 889,
            column: 20
          },
          end: {
            line: 908,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 889,
            column: 20
          },
          end: {
            line: 908,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 889
      },
      "101": {
        loc: {
          start: {
            line: 891,
            column: 24
          },
          end: {
            line: 907,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 891,
            column: 24
          },
          end: {
            line: 907,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 891
      },
      "102": {
        loc: {
          start: {
            line: 911,
            column: 16
          },
          end: {
            line: 917,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 911,
            column: 16
          },
          end: {
            line: 917,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 911
      },
      "103": {
        loc: {
          start: {
            line: 911,
            column: 20
          },
          end: {
            line: 912,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 911,
            column: 20
          },
          end: {
            line: 911,
            column: 41
          }
        }, {
          start: {
            line: 912,
            column: 20
          },
          end: {
            line: 912,
            column: 82
          }
        }],
        line: 911
      },
      "104": {
        loc: {
          start: {
            line: 921,
            column: 37
          },
          end: {
            line: 921,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 921,
            column: 62
          },
          end: {
            line: 921,
            column: 75
          }
        }, {
          start: {
            line: 921,
            column: 78
          },
          end: {
            line: 921,
            column: 91
          }
        }],
        line: 921
      },
      "105": {
        loc: {
          start: {
            line: 970,
            column: 16
          },
          end: {
            line: 972,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 970,
            column: 16
          },
          end: {
            line: 972,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 970
      },
      "106": {
        loc: {
          start: {
            line: 995,
            column: 37
          },
          end: {
            line: 995,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 995,
            column: 62
          },
          end: {
            line: 995,
            column: 75
          }
        }, {
          start: {
            line: 995,
            column: 78
          },
          end: {
            line: 995,
            column: 91
          }
        }],
        line: 995
      },
      "107": {
        loc: {
          start: {
            line: 1078,
            column: 12
          },
          end: {
            line: 1083,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1078,
            column: 12
          },
          end: {
            line: 1083,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1078
      },
      "108": {
        loc: {
          start: {
            line: 1078,
            column: 16
          },
          end: {
            line: 1078,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1078,
            column: 67
          },
          end: {
            line: 1078,
            column: 73
          }
        }, {
          start: {
            line: 1078,
            column: 76
          },
          end: {
            line: 1078,
            column: 85
          }
        }],
        line: 1078
      },
      "109": {
        loc: {
          start: {
            line: 1078,
            column: 16
          },
          end: {
            line: 1078,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1078,
            column: 16
          },
          end: {
            line: 1078,
            column: 47
          }
        }, {
          start: {
            line: 1078,
            column: 51
          },
          end: {
            line: 1078,
            column: 64
          }
        }],
        line: 1078
      },
      "110": {
        loc: {
          start: {
            line: 1080,
            column: 16
          },
          end: {
            line: 1082,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1080,
            column: 16
          },
          end: {
            line: 1082,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1080
      },
      "111": {
        loc: {
          start: {
            line: 1085,
            column: 12
          },
          end: {
            line: 1092,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1085,
            column: 12
          },
          end: {
            line: 1092,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1085
      },
      "112": {
        loc: {
          start: {
            line: 1085,
            column: 16
          },
          end: {
            line: 1085,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1085,
            column: 67
          },
          end: {
            line: 1085,
            column: 73
          }
        }, {
          start: {
            line: 1085,
            column: 76
          },
          end: {
            line: 1085,
            column: 85
          }
        }],
        line: 1085
      },
      "113": {
        loc: {
          start: {
            line: 1085,
            column: 16
          },
          end: {
            line: 1085,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1085,
            column: 16
          },
          end: {
            line: 1085,
            column: 47
          }
        }, {
          start: {
            line: 1085,
            column: 51
          },
          end: {
            line: 1085,
            column: 64
          }
        }],
        line: 1085
      },
      "114": {
        loc: {
          start: {
            line: 1087,
            column: 16
          },
          end: {
            line: 1091,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1087,
            column: 16
          },
          end: {
            line: 1091,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1087
      },
      "115": {
        loc: {
          start: {
            line: 1087,
            column: 20
          },
          end: {
            line: 1089,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1087,
            column: 20
          },
          end: {
            line: 1087,
            column: 30
          }
        }, {
          start: {
            line: 1088,
            column: 20
          },
          end: {
            line: 1088,
            column: 57
          }
        }, {
          start: {
            line: 1089,
            column: 20
          },
          end: {
            line: 1089,
            column: 54
          }
        }],
        line: 1087
      },
      "116": {
        loc: {
          start: {
            line: 1109,
            column: 16
          },
          end: {
            line: 1111,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1109,
            column: 16
          },
          end: {
            line: 1111,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1109
      },
      "117": {
        loc: {
          start: {
            line: 1115,
            column: 16
          },
          end: {
            line: 1117,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1115,
            column: 16
          },
          end: {
            line: 1117,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1115
      },
      "118": {
        loc: {
          start: {
            line: 1168,
            column: 12
          },
          end: {
            line: 1195,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 1169,
            column: 16
          },
          end: {
            line: 1172,
            column: 26
          }
        }, {
          start: {
            line: 1173,
            column: 16
          },
          end: {
            line: 1179,
            column: 26
          }
        }, {
          start: {
            line: 1180,
            column: 16
          },
          end: {
            line: 1185,
            column: 26
          }
        }, {
          start: {
            line: 1186,
            column: 16
          },
          end: {
            line: 1191,
            column: 26
          }
        }, {
          start: {
            line: 1192,
            column: 16
          },
          end: {
            line: 1194,
            column: 26
          }
        }],
        line: 1168
      },
      "119": {
        loc: {
          start: {
            line: 1176,
            column: 20
          },
          end: {
            line: 1178,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1176,
            column: 20
          },
          end: {
            line: 1178,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1176
      },
      "120": {
        loc: {
          start: {
            line: 1182,
            column: 20
          },
          end: {
            line: 1184,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1182,
            column: 20
          },
          end: {
            line: 1184,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1182
      },
      "121": {
        loc: {
          start: {
            line: 1188,
            column: 20
          },
          end: {
            line: 1190,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1188,
            column: 20
          },
          end: {
            line: 1190,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1188
      },
      "122": {
        loc: {
          start: {
            line: 1247,
            column: 24
          },
          end: {
            line: 1247,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1247,
            column: 75
          },
          end: {
            line: 1247,
            column: 81
          }
        }, {
          start: {
            line: 1247,
            column: 84
          },
          end: {
            line: 1247,
            column: 93
          }
        }],
        line: 1247
      },
      "123": {
        loc: {
          start: {
            line: 1247,
            column: 24
          },
          end: {
            line: 1247,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1247,
            column: 24
          },
          end: {
            line: 1247,
            column: 55
          }
        }, {
          start: {
            line: 1247,
            column: 59
          },
          end: {
            line: 1247,
            column: 72
          }
        }],
        line: 1247
      },
      "124": {
        loc: {
          start: {
            line: 1248,
            column: 26
          },
          end: {
            line: 1248,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1248,
            column: 77
          },
          end: {
            line: 1248,
            column: 83
          }
        }, {
          start: {
            line: 1248,
            column: 86
          },
          end: {
            line: 1248,
            column: 95
          }
        }],
        line: 1248
      },
      "125": {
        loc: {
          start: {
            line: 1248,
            column: 26
          },
          end: {
            line: 1248,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1248,
            column: 26
          },
          end: {
            line: 1248,
            column: 57
          }
        }, {
          start: {
            line: 1248,
            column: 61
          },
          end: {
            line: 1248,
            column: 74
          }
        }],
        line: 1248
      },
      "126": {
        loc: {
          start: {
            line: 1249,
            column: 31
          },
          end: {
            line: 1249,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1249,
            column: 82
          },
          end: {
            line: 1249,
            column: 88
          }
        }, {
          start: {
            line: 1249,
            column: 91
          },
          end: {
            line: 1249,
            column: 107
          }
        }],
        line: 1249
      },
      "127": {
        loc: {
          start: {
            line: 1249,
            column: 31
          },
          end: {
            line: 1249,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1249,
            column: 31
          },
          end: {
            line: 1249,
            column: 62
          }
        }, {
          start: {
            line: 1249,
            column: 66
          },
          end: {
            line: 1249,
            column: 79
          }
        }],
        line: 1249
      },
      "128": {
        loc: {
          start: {
            line: 1252,
            column: 33
          },
          end: {
            line: 1254,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1253,
            column: 26
          },
          end: {
            line: 1253,
            column: 80
          }
        }, {
          start: {
            line: 1254,
            column: 26
          },
          end: {
            line: 1254,
            column: 30
          }
        }],
        line: 1252
      },
      "129": {
        loc: {
          start: {
            line: 1252,
            column: 34
          },
          end: {
            line: 1252,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1252,
            column: 85
          },
          end: {
            line: 1252,
            column: 91
          }
        }, {
          start: {
            line: 1252,
            column: 94
          },
          end: {
            line: 1252,
            column: 103
          }
        }],
        line: 1252
      },
      "130": {
        loc: {
          start: {
            line: 1252,
            column: 34
          },
          end: {
            line: 1252,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1252,
            column: 34
          },
          end: {
            line: 1252,
            column: 65
          }
        }, {
          start: {
            line: 1252,
            column: 69
          },
          end: {
            line: 1252,
            column: 82
          }
        }],
        line: 1252
      },
      "131": {
        loc: {
          start: {
            line: 1255,
            column: 35
          },
          end: {
            line: 1257,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1256,
            column: 26
          },
          end: {
            line: 1256,
            column: 71
          }
        }, {
          start: {
            line: 1257,
            column: 26
          },
          end: {
            line: 1257,
            column: 30
          }
        }],
        line: 1255
      },
      "132": {
        loc: {
          start: {
            line: 1255,
            column: 36
          },
          end: {
            line: 1255,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1255,
            column: 87
          },
          end: {
            line: 1255,
            column: 93
          }
        }, {
          start: {
            line: 1255,
            column: 96
          },
          end: {
            line: 1255,
            column: 105
          }
        }],
        line: 1255
      },
      "133": {
        loc: {
          start: {
            line: 1255,
            column: 36
          },
          end: {
            line: 1255,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1255,
            column: 36
          },
          end: {
            line: 1255,
            column: 67
          }
        }, {
          start: {
            line: 1255,
            column: 71
          },
          end: {
            line: 1255,
            column: 84
          }
        }],
        line: 1255
      },
      "134": {
        loc: {
          start: {
            line: 1273,
            column: 23
          },
          end: {
            line: 1273,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1273,
            column: 23
          },
          end: {
            line: 1273,
            column: 32
          }
        }, {
          start: {
            line: 1273,
            column: 36
          },
          end: {
            line: 1273,
            column: 56
          }
        }],
        line: 1273
      },
      "135": {
        loc: {
          start: {
            line: 1293,
            column: 38
          },
          end: {
            line: 1293,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1293,
            column: 53
          },
          end: {
            line: 1293,
            column: 64
          }
        }, {
          start: {
            line: 1293,
            column: 67
          },
          end: {
            line: 1293,
            column: 78
          }
        }],
        line: 1293
      },
      "136": {
        loc: {
          start: {
            line: 1311,
            column: 33
          },
          end: {
            line: 1311,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1311,
            column: 58
          },
          end: {
            line: 1311,
            column: 71
          }
        }, {
          start: {
            line: 1311,
            column: 74
          },
          end: {
            line: 1311,
            column: 87
          }
        }],
        line: 1311
      },
      "137": {
        loc: {
          start: {
            line: 1325,
            column: 8
          },
          end: {
            line: 1326,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1325,
            column: 8
          },
          end: {
            line: 1326,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1325
      },
      "138": {
        loc: {
          start: {
            line: 1340,
            column: 48
          },
          end: {
            line: 1342,
            column: 22
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1341,
            column: 14
          },
          end: {
            line: 1341,
            column: 20
          }
        }, {
          start: {
            line: 1342,
            column: 14
          },
          end: {
            line: 1342,
            column: 22
          }
        }],
        line: 1340
      },
      "139": {
        loc: {
          start: {
            line: 1343,
            column: 8
          },
          end: {
            line: 1365,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1343,
            column: 8
          },
          end: {
            line: 1365,
            column: 9
          }
        }, {
          start: {
            line: 1354,
            column: 13
          },
          end: {
            line: 1365,
            column: 9
          }
        }],
        line: 1343
      },
      "140": {
        loc: {
          start: {
            line: 1348,
            column: 12
          },
          end: {
            line: 1352,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1348,
            column: 12
          },
          end: {
            line: 1352,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1348
      },
      "141": {
        loc: {
          start: {
            line: 1348,
            column: 16
          },
          end: {
            line: 1349,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1348,
            column: 16
          },
          end: {
            line: 1348,
            column: 54
          }
        }, {
          start: {
            line: 1349,
            column: 16
          },
          end: {
            line: 1349,
            column: 45
          }
        }],
        line: 1348
      },
      "142": {
        loc: {
          start: {
            line: 1359,
            column: 12
          },
          end: {
            line: 1364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1359,
            column: 12
          },
          end: {
            line: 1364,
            column: 13
          }
        }, {
          start: {
            line: 1362,
            column: 17
          },
          end: {
            line: 1364,
            column: 13
          }
        }],
        line: 1359
      },
      "143": {
        loc: {
          start: {
            line: 1360,
            column: 92
          },
          end: {
            line: 1360,
            column: 172
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1360,
            column: 93
          },
          end: {
            line: 1360,
            column: 152
          }
        }, {
          start: {
            line: 1360,
            column: 157
          },
          end: {
            line: 1360,
            column: 172
          }
        }],
        line: 1360
      },
      "144": {
        loc: {
          start: {
            line: 1360,
            column: 93
          },
          end: {
            line: 1360,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1360,
            column: 130
          },
          end: {
            line: 1360,
            column: 136
          }
        }, {
          start: {
            line: 1360,
            column: 139
          },
          end: {
            line: 1360,
            column: 152
          }
        }],
        line: 1360
      },
      "145": {
        loc: {
          start: {
            line: 1360,
            column: 93
          },
          end: {
            line: 1360,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1360,
            column: 93
          },
          end: {
            line: 1360,
            column: 107
          }
        }, {
          start: {
            line: 1360,
            column: 111
          },
          end: {
            line: 1360,
            column: 127
          }
        }],
        line: 1360
      },
      "146": {
        loc: {
          start: {
            line: 1363,
            column: 42
          },
          end: {
            line: 1363,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1363,
            column: 79
          },
          end: {
            line: 1363,
            column: 85
          }
        }, {
          start: {
            line: 1363,
            column: 88
          },
          end: {
            line: 1363,
            column: 101
          }
        }],
        line: 1363
      },
      "147": {
        loc: {
          start: {
            line: 1363,
            column: 42
          },
          end: {
            line: 1363,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1363,
            column: 42
          },
          end: {
            line: 1363,
            column: 56
          }
        }, {
          start: {
            line: 1363,
            column: 60
          },
          end: {
            line: 1363,
            column: 76
          }
        }],
        line: 1363
      },
      "148": {
        loc: {
          start: {
            line: 1415,
            column: 15
          },
          end: {
            line: 1415,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1415,
            column: 15
          },
          end: {
            line: 1415,
            column: 36
          }
        }, {
          start: {
            line: 1415,
            column: 40
          },
          end: {
            line: 1415,
            column: 56
          }
        }],
        line: 1415
      },
      "149": {
        loc: {
          start: {
            line: 1421,
            column: 8
          },
          end: {
            line: 1424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1421,
            column: 8
          },
          end: {
            line: 1424,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1421
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0, 0, 0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0, 0, 0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0],
      "137": [0, 0],
      "138": [0, 0],
      "139": [0, 0],
      "140": [0, 0],
      "141": [0, 0],
      "142": [0, 0],
      "143": [0, 0],
      "144": [0, 0],
      "145": [0, 0],
      "146": [0, 0],
      "147": [0, 0],
      "148": [0, 0],
      "149": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/direct-bedrock-client.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/direct-bedrock-client.ts"],
      sourcesContent: ["/**\n * Direct Bedrock Client - Bypasses MCP for Critical Support Operations\n *\n * This module provides direct AWS Bedrock SDK integration for time-critical\n * support operations that require < 5s (emergency) or < 10s (critical) latency.\n * It integrates with existing security, compliance, and circuit breaker systems.\n */\n\nimport {\n  BedrockRuntimeClient,\n  InvokeModelCommand,\n  InvokeModelWithResponseStreamCommand,\n} from \"@aws-sdk/client-bedrock-runtime\";\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport { CircuitBreaker } from \"./circuit-breaker\";\nimport { EmergencyOperationsPerformanceMonitor } from \"./emergency-operations-performance-monitor\";\nimport {\n  GDPRHybridComplianceValidator,\n  HybridRoutingPath,\n} from \"./gdpr-hybrid-compliance-validator\";\nimport { KMSEncryptionService } from \"./kms-encryption-service\";\nimport {\n  PIIToxicityDetectionService,\n  SafetyCheckResult,\n} from \"./safety/pii-toxicity-detector\";\nimport { SSRFProtectionValidator } from \"./ssrf-protection-validator\";\nimport { ToolSpec } from \"./types\";\n\n// Direct Bedrock Client Configuration\nexport interface DirectBedrockConfig {\n  region: string;\n  maxRetries: number;\n  timeout: number;\n  emergencyTimeout: number; // < 5s for emergency operations\n  criticalTimeout: number; // < 10s for critical operations\n  enableCircuitBreaker: boolean;\n  enableHealthMonitoring: boolean;\n  enableComplianceChecks: boolean;\n}\n\n// Operation Types for Routing Decisions\nexport type OperationType =\n  | \"emergency\"\n  | \"infrastructure\"\n  | \"meta_monitor\"\n  | \"implementation\"\n  | \"standard\";\n\nexport type OperationPriority = \"critical\" | \"high\" | \"medium\" | \"low\";\n\n// Support Operation Request\nexport interface SupportOperationRequest {\n  operation: OperationType;\n  priority: OperationPriority;\n  prompt: string;\n  context?: {\n    userId?: string;\n    tenant?: string;\n    correlationId?: string;\n    metadata?: Record<string, any>;\n  };\n  tools?: ToolSpec[];\n  streaming?: boolean;\n  maxTokens?: number;\n  temperature?: number;\n}\n\n// Support Operation Response\nexport interface SupportOperationResponse {\n  success: boolean;\n  text?: string;\n  toolCalls?: Array<{ name: string; arguments: any }>;\n  latencyMs: number;\n  tokensUsed?: { input: number; output: number };\n  costEuro?: number;\n  error?: string;\n  operationId: string;\n  timestamp: Date;\n  piiDetectionResult?: SafetyCheckResult;\n  piiDetected?: boolean;\n  redactionApplied?: boolean;\n  response?: string;\n  complianceValidation?: {\n    gdprCompliant: boolean;\n    piiRedacted: boolean;\n    auditLogged: boolean;\n  };\n}\n\n// Health Check Result\nexport interface DirectBedrockHealthCheck {\n  isHealthy: boolean;\n  latencyMs: number;\n  lastCheck: Date;\n  consecutiveFailures: number;\n  circuitBreakerState: \"closed\" | \"open\" | \"half-open\";\n  error?: string;\n}\n\n/**\n * Direct Bedrock Client for Critical Support Operations\n */\nexport class DirectBedrockClient {\n  private client: BedrockRuntimeClient;\n  private config: DirectBedrockConfig;\n  private circuitBreaker: CircuitBreaker;\n  private featureFlags: AiFeatureFlags;\n  private healthStatus: DirectBedrockHealthCheck;\n  private healthCheckInterval?: NodeJS.Timeout;\n  private piiDetectionService: PIIToxicityDetectionService;\n  private gdprValidator: GDPRHybridComplianceValidator;\n  private auditTrail: AuditTrailSystem;\n  private kmsEncryption: KMSEncryptionService;\n  private ssrfValidator: SSRFProtectionValidator;\n  private performanceMonitor: EmergencyOperationsPerformanceMonitor;\n\n  // Default model configurations for different operation types\n  private readonly modelConfigs = {\n    emergency: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.1, // Low temperature for consistent emergency responses\n      maxTokens: 1024, // Smaller token limit for speed\n    },\n    infrastructure: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.2,\n      maxTokens: 2048,\n    },\n    meta_monitor: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.3,\n      maxTokens: 2048,\n    },\n    implementation: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.4,\n      maxTokens: 4096,\n    },\n    standard: {\n      modelId: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      temperature: 0.7,\n      maxTokens: 4096,\n    },\n  };\n\n  constructor(config: Partial<DirectBedrockConfig> = {}) {\n    this.config = {\n      region: process.env.AWS_REGION || \"eu-central-1\",\n      maxRetries: 3,\n      timeout: 30000, // 30s default timeout\n      emergencyTimeout: 5000, // 5s for emergency operations\n      criticalTimeout: 10000, // 10s for critical operations\n      enableCircuitBreaker: true,\n      enableHealthMonitoring: true,\n      enableComplianceChecks: true,\n      ...config,\n    };\n\n    // Initialize AWS Bedrock Runtime Client\n    this.client = new BedrockRuntimeClient({\n      region: this.config.region,\n      maxAttempts: this.config.maxRetries,\n      requestHandler: {\n        requestTimeout: this.config.timeout,\n      },\n    });\n\n    // Initialize circuit breaker\n    this.circuitBreaker = new CircuitBreaker({\n      failureThreshold: 3, // Open after 3 failures\n      recoveryTimeout: 30000, // 30s recovery timeout\n      halfOpenMaxCalls: 2, // Max 2 calls in half-open state\n    });\n\n    // Initialize feature flags\n    this.featureFlags = new AiFeatureFlags();\n\n    // Initialize PII detection service with strict configuration for direct Bedrock\n    this.piiDetectionService = new PIIToxicityDetectionService({\n      enablePII: true,\n      enableToxicity: true,\n      enablePromptInjection: true,\n      strictMode: true, // Strict mode for direct Bedrock operations\n      redactionMode: \"MASK\", // Mask PII by default\n      confidenceThreshold: 0.7, // Lower threshold for better detection\n    });\n\n    // Initialize GDPR compliance validator\n    this.gdprValidator = new GDPRHybridComplianceValidator();\n\n    // Initialize audit trail system\n    this.auditTrail = new AuditTrailSystem({\n      complianceMode: \"strict\",\n      enableIntegrityChecking: true,\n      retentionDays: 2555, // 7 years for GDPR compliance\n    });\n\n    // Initialize KMS encryption service\n    this.kmsEncryption = new KMSEncryptionService(\n      {\n        region: this.config.region,\n        keyAlias: process.env.KMS_KEY_ALIAS || \"alias/matbakh-ai\",\n        enableKeyRotation: true,\n      },\n      this.auditTrail\n    );\n\n    // Initialize SSRF protection validator\n    this.ssrfValidator = new SSRFProtectionValidator({\n      auditTrail: this.auditTrail,\n    });\n\n    // Initialize emergency operations performance monitor\n    this.performanceMonitor = new EmergencyOperationsPerformanceMonitor(\n      {\n        emergencySlaThresholdMs: this.config.emergencyTimeout, // 5 seconds for emergency\n        criticalSlaThresholdMs: this.config.criticalTimeout, // 10 seconds for critical\n        successRateThreshold: 95, // 95% success rate requirement\n        rollingWindowMinutes: 60, // 1 hour rolling window\n        alertingEnabled: true,\n        circuitBreakerEnabled: this.config.enableCircuitBreaker,\n      },\n      this.auditTrail,\n      this.circuitBreaker\n    );\n\n    // Initialize health status\n    this.healthStatus = {\n      isHealthy: true,\n      latencyMs: 0,\n      lastCheck: new Date(),\n      consecutiveFailures: 0,\n      circuitBreakerState: \"closed\",\n    };\n\n    // Start health monitoring if enabled\n    if (this.config.enableHealthMonitoring) {\n      this.startHealthMonitoring();\n    }\n  }\n\n  /**\n   * Execute support operation with direct Bedrock access\n   */\n  async executeSupportOperation(\n    request: SupportOperationRequest\n  ): Promise<SupportOperationResponse> {\n    const startTime = Date.now();\n    const operationId = this.generateOperationId();\n    let piiDetectionResult: SafetyCheckResult | undefined;\n    let complianceValidation: SupportOperationResponse[\"complianceValidation\"];\n\n    try {\n      // Check if direct Bedrock is enabled\n      if (!this.featureFlags.isEnabled(\"ENABLE_DIRECT_BEDROCK_FALLBACK\")) {\n        throw new Error(\"Direct Bedrock access is disabled\");\n      }\n\n      // Check circuit breaker\n      if (\n        this.config.enableCircuitBreaker &&\n        this.circuitBreaker.isOpen(\"bedrock\")\n      ) {\n        throw new Error(\"Circuit breaker is open for Bedrock\");\n      }\n\n      // Validate operation timeout requirements\n      this.validateOperationTimeout(request.operation);\n\n      // Perform enhanced PII detection and redaction\n      piiDetectionResult = await this.performPIIDetectionAndRedaction(\n        request,\n        operationId\n      );\n\n      // Perform comprehensive compliance checks if enabled\n      if (this.config.enableComplianceChecks) {\n        complianceValidation = await this.performEnhancedComplianceChecks(\n          request,\n          operationId\n        );\n      }\n\n      // Execute the operation with circuit breaker protection\n      const response = await this.circuitBreaker.execute(\n        \"bedrock\",\n        async () => {\n          return await this.executeBedrockRequest(request, operationId);\n        }\n      );\n\n      const latencyMs = Date.now() - startTime;\n\n      // Track operation performance based on priority\n      if (request.operation === \"emergency\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          true, // success\n          request.operation,\n          request.context?.correlationId,\n          undefined, // no error\n          \"emergency\" // priority\n        );\n      } else if (request.priority === \"critical\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          true, // success\n          request.operation,\n          request.context?.correlationId,\n          undefined, // no error\n          \"critical\" // priority\n        );\n      }\n\n      // Update health status on success\n      this.updateHealthStatus(true, latencyMs);\n\n      // Log successful operation to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"direct_bedrock_operation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"compliant\",\n        metadata: {\n          operation: request.operation,\n          priority: request.priority,\n          latencyMs,\n          tokensUsed: response.tokensUsed,\n          piiDetected: piiDetectionResult?.violations.length || 0,\n          piiRedacted: !!piiDetectionResult?.modifiedContent,\n          gdprCompliant: complianceValidation?.gdprCompliant || false,\n        },\n      });\n\n      return {\n        success: true,\n        text: response.text,\n        toolCalls: response.toolCalls,\n        latencyMs,\n        tokensUsed: response.tokensUsed,\n        costEuro: this.calculateCost(response.tokensUsed),\n        operationId,\n        timestamp: new Date(),\n        piiDetectionResult,\n        piiDetected: (piiDetectionResult?.violations.length || 0) > 0,\n        redactionApplied: !!piiDetectionResult?.modifiedContent,\n        response: response.text,\n        complianceValidation,\n      };\n    } catch (error) {\n      const latencyMs = Date.now() - startTime;\n\n      // Track operation performance based on priority\n      if (request.operation === \"emergency\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          false, // failure\n          request.operation,\n          request.context?.correlationId,\n          error instanceof Error ? error.message : \"Unknown error\",\n          \"emergency\" // priority\n        );\n      } else if (request.priority === \"critical\") {\n        await this.performanceMonitor.recordEmergencyOperation(\n          operationId,\n          latencyMs,\n          false, // failure\n          request.operation,\n          request.context?.correlationId,\n          error instanceof Error ? error.message : \"Unknown error\",\n          \"critical\" // priority\n        );\n      }\n\n      // Update health status on failure\n      this.updateHealthStatus(false, latencyMs, error as Error);\n\n      // Log failed operation to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"direct_bedrock_operation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"operation_error\",\n          message: error instanceof Error ? error.message : \"Unknown error\",\n        },\n        metadata: {\n          operation: request.operation,\n          priority: request.priority,\n          latencyMs,\n          piiDetected: piiDetectionResult?.violations.length || 0,\n        },\n      });\n\n      return {\n        success: false,\n        latencyMs,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n        operationId,\n        timestamp: new Date(),\n        piiDetectionResult,\n        complianceValidation,\n      };\n    }\n  }\n\n  /**\n   * Execute emergency operation (< 5s latency requirement)\n   */\n  async executeEmergencyOperation(\n    prompt: string,\n    context?: SupportOperationRequest[\"context\"]\n  ): Promise<SupportOperationResponse> {\n    return this.executeSupportOperation({\n      operation: \"emergency\",\n      priority: \"critical\",\n      prompt,\n      context,\n      maxTokens: 1024, // Limit tokens for speed\n      temperature: 0.1, // Low temperature for consistency\n    });\n  }\n\n  /**\n   * Execute critical support operation (< 10s latency requirement)\n   */\n  async executeCriticalOperation(\n    prompt: string,\n    context?: SupportOperationRequest[\"context\"],\n    tools?: ToolSpec[]\n  ): Promise<SupportOperationResponse> {\n    return this.executeSupportOperation({\n      operation: \"infrastructure\",\n      priority: \"critical\",\n      prompt,\n      context,\n      tools,\n      maxTokens: 2048,\n      temperature: 0.2,\n    });\n  }\n\n  /**\n   * Get current health status\n   */\n  getHealthStatus(): DirectBedrockHealthCheck {\n    return { ...this.healthStatus };\n  }\n\n  /**\n   * Get emergency operations performance statistics\n   */\n  getEmergencyPerformanceStats() {\n    return this.performanceMonitor.getCurrentPerformanceStats();\n  }\n\n  /**\n   * Check if emergency operations are meeting SLA requirements (>95% within 5s)\n   */\n  isEmergencyPerformanceWithinSLA(): boolean {\n    return this.performanceMonitor.isPerformanceWithinSLA();\n  }\n\n  /**\n   * Get detailed emergency operations performance report\n   */\n  getEmergencyPerformanceReport() {\n    return this.performanceMonitor.getPerformanceReport();\n  }\n\n  /**\n   * Get recent emergency operations performance alerts\n   */\n  getEmergencyPerformanceAlerts(limitHours: number = 24) {\n    return this.performanceMonitor.getRecentAlerts(limitHours);\n  }\n\n  /**\n   * Check if critical operations are meeting SLA requirements (>95% within 10s)\n   */\n  isCriticalOperationsPerformanceWithinSLA(): boolean {\n    return this.performanceMonitor.isCriticalOperationsPerformanceWithinSLA();\n  }\n\n  /**\n   * Check if emergency operations specifically are meeting SLA requirements (>95% within 5s)\n   */\n  isEmergencyOperationsPerformanceWithinSLA(): boolean {\n    return this.performanceMonitor.isEmergencyOperationsPerformanceWithinSLA();\n  }\n\n  /**\n   * Perform health check\n   */\n  async performHealthCheck(): Promise<DirectBedrockHealthCheck> {\n    const startTime = Date.now();\n\n    try {\n      // Development environment safety check\n      if (\n        !process.env.BEDROCK_ENDPOINT &&\n        process.env.NODE_ENV === \"development\"\n      ) {\n        const latencyMs = Date.now() - startTime;\n        this.updateHealthStatus(true, latencyMs);\n\n        return {\n          ...this.healthStatus,\n          lastCheck: new Date(),\n          details: \"Development mode - Bedrock endpoint skipped\",\n        };\n      }\n\n      // Simple health check with minimal prompt\n      const response = await this.executeBedrockRequest(\n        {\n          operation: \"standard\",\n          priority: \"low\",\n          prompt: \"Health check: respond with 'OK'\",\n          maxTokens: 10,\n          temperature: 0,\n        },\n        \"health-check\"\n      );\n\n      const latencyMs = Date.now() - startTime;\n\n      this.updateHealthStatus(true, latencyMs);\n\n      return this.healthStatus;\n    } catch (error) {\n      const latencyMs = Date.now() - startTime;\n\n      // In development, don't fail hard on connection issues\n      const isDev = process.env.NODE_ENV === \"development\";\n\n      this.updateHealthStatus(!isDev, latencyMs, error as Error);\n\n      return this.healthStatus;\n    }\n  }\n\n  /**\n   * Update PII detection configuration\n   */\n  updatePIIDetectionConfig(config: {\n    enablePII?: boolean;\n    enableToxicity?: boolean;\n    enablePromptInjection?: boolean;\n    strictMode?: boolean;\n    redactionMode?: \"MASK\" | \"REMOVE\" | \"REPLACE\";\n    confidenceThreshold?: number;\n  }): void {\n    this.piiDetectionService.updateConfig(config);\n  }\n\n  /**\n   * Test PII detection without processing\n   */\n  async testPIIDetection(text: string): Promise<{\n    piiFound: boolean;\n    piiTokens: any[];\n    toxicityScore: number;\n    promptInjectionDetected: boolean;\n  }> {\n    const piiTokens = this.piiDetectionService.testPIIDetection(text);\n    const toxicityViolations =\n      this.piiDetectionService.testToxicityDetection(text);\n    const promptInjectionViolations =\n      this.piiDetectionService.testPromptInjectionDetection(text);\n\n    return {\n      piiFound: piiTokens.length > 0,\n      piiTokens,\n      toxicityScore: toxicityViolations.length > 0 ? 0.8 : 0.0, // Simplified scoring\n      promptInjectionDetected: promptInjectionViolations.length > 0,\n    };\n  }\n\n  /**\n   * Detect PII in text with comprehensive analysis\n   */\n  async detectPii(\n    text: string,\n    options?: {\n      consentId?: string;\n      dataSubject?: string;\n      processingPurpose?: string;\n    }\n  ): Promise<{\n    hasPii: boolean;\n    piiTypes: string[];\n    detectedPii: Array<{\n      type: string;\n      value: string;\n      confidence: number;\n      startIndex: number;\n      endIndex: number;\n    }>;\n    processingRegion?: string;\n    gdprCompliant?: boolean;\n    consentTracking?: {\n      consentId: string;\n      dataSubject: string;\n      processingPurpose: string;\n      timestamp: Date;\n    };\n  }> {\n    // Check if PII detection is enabled\n    if (!this.featureFlags.isEnabled(\"pii_detection_enabled\", true)) {\n      return {\n        hasPii: false,\n        piiTypes: [],\n        detectedPii: [],\n        processingRegion: this.config.region,\n        gdprCompliant: true,\n      };\n    }\n\n    // Validate input\n    if (!text || typeof text !== \"string\" || text.trim().length === 0) {\n      return {\n        hasPii: false,\n        piiTypes: [],\n        detectedPii: [],\n        processingRegion: this.config.region,\n        gdprCompliant: true,\n      };\n    }\n\n    // Check GDPR compliance for EU regions\n    const isEuRegion = this.config.region.startsWith(\"eu-\");\n    if (\n      this.featureFlags.isEnabled(\"gdpr_compliance_enabled\", true) &&\n      !isEuRegion\n    ) {\n      throw new Error(\n        \"GDPR compliance violation: PII processing must occur in EU region\"\n      );\n    }\n\n    const detectedPii: Array<{\n      type: string;\n      value: string;\n      confidence: number;\n      startIndex: number;\n      endIndex: number;\n    }> = [];\n\n    // Define PII detection patterns\n    const piiPatterns = [\n      {\n        type: \"EMAIL\",\n        pattern: /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g,\n        confidence: 0.95,\n      },\n      {\n        type: \"PHONE\",\n        pattern:\n          /\\b\\+?1?[-.\\s]?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}\\b/g,\n        confidence: 0.85,\n      },\n      {\n        type: \"PHONE\",\n        pattern: /\\b\\+?[1-9]\\d{1,14}\\b/g,\n        confidence: 0.75,\n      },\n      {\n        type: \"CREDIT_CARD\",\n        pattern: /\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g,\n        confidence: 0.9,\n      },\n      {\n        type: \"SSN\",\n        pattern: /\\b\\d{3}-\\d{2}-\\d{4}\\b/g,\n        confidence: 0.95,\n      },\n      {\n        type: \"SSN\",\n        pattern: /\\b\\d{9}\\b/g,\n        confidence: 0.7,\n      },\n      {\n        type: \"IBAN\",\n        pattern: /\\b[A-Z]{2}\\d{2}[A-Z0-9]{4}\\d{7}([A-Z0-9]?){0,16}\\b/g,\n        confidence: 0.9,\n      },\n    ];\n\n    // Detect PII using patterns\n    for (const { type, pattern, confidence } of piiPatterns) {\n      let match;\n      const regex = new RegExp(pattern.source, pattern.flags);\n\n      while ((match = regex.exec(text)) !== null) {\n        detectedPii.push({\n          type,\n          value: match[0],\n          confidence,\n          startIndex: match.index,\n          endIndex: match.index + match[0].length,\n        });\n      }\n    }\n\n    // Get unique PII types\n    const piiTypes = [...new Set(detectedPii.map((pii) => pii.type))];\n\n    // Build result\n    const result = {\n      hasPii: detectedPii.length > 0,\n      piiTypes,\n      detectedPii,\n      processingRegion: this.config.region,\n      gdprCompliant: isEuRegion,\n    };\n\n    // Add consent tracking if provided\n    if (\n      options?.consentId &&\n      options?.dataSubject &&\n      options?.processingPurpose\n    ) {\n      (result as any).consentTracking = {\n        consentId: options.consentId,\n        dataSubject: options.dataSubject,\n        processingPurpose: options.processingPurpose,\n        timestamp: new Date(),\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * Redact PII from text\n   */\n  async redactPii(text: string): Promise<{\n    redactedText: string;\n    redactionMap: Array<{\n      original: string;\n      redacted: string;\n      type: string;\n      startIndex: number;\n      endIndex: number;\n    }>;\n  }> {\n    // Detect PII first\n    const detection = await this.detectPii(text);\n\n    if (!detection.hasPii) {\n      return {\n        redactedText: text,\n        redactionMap: [],\n      };\n    }\n\n    let redactedText = text;\n    const redactionMap: Array<{\n      original: string;\n      redacted: string;\n      type: string;\n      startIndex: number;\n      endIndex: number;\n    }> = [];\n\n    // Sort detected PII by start index in descending order to avoid index shifting\n    const sortedPii = detection.detectedPii.sort(\n      (a, b) => b.startIndex - a.startIndex\n    );\n\n    // Apply redactions\n    for (const pii of sortedPii) {\n      const redactedValue = this.getRedactionPlaceholder(pii.type);\n\n      redactedText =\n        redactedText.substring(0, pii.startIndex) +\n        redactedValue +\n        redactedText.substring(pii.endIndex);\n\n      redactionMap.unshift({\n        original: pii.value,\n        redacted: redactedValue,\n        type: pii.type,\n        startIndex: pii.startIndex,\n        endIndex: pii.startIndex + redactedValue.length,\n      });\n    }\n\n    return {\n      redactedText,\n      redactionMap,\n    };\n  }\n\n  /**\n   * Restore PII from redacted text using redaction map\n   */\n  async restorePii(\n    redactedText: string,\n    redactionMap: Array<{\n      original: string;\n      redacted: string;\n      type: string;\n      startIndex?: number;\n      endIndex?: number;\n    }>\n  ): Promise<string> {\n    let restoredText = redactedText;\n\n    // Apply restorations in reverse order to maintain text structure\n    for (const redaction of redactionMap.reverse()) {\n      restoredText = restoredText.replace(\n        redaction.redacted,\n        redaction.original\n      );\n    }\n\n    return restoredText;\n  }\n\n  /**\n   * Get redaction placeholder for PII type\n   */\n  private getRedactionPlaceholder(piiType: string): string {\n    const placeholders: Record<string, string> = {\n      EMAIL: \"[EMAIL_REDACTED]\",\n      PHONE: \"[PHONE_REDACTED]\",\n      CREDIT_CARD: \"[CREDIT_CARD_REDACTED]\",\n      SSN: \"[SSN_REDACTED]\",\n      IBAN: \"[IBAN_REDACTED]\",\n      NAME: \"[NAME_REDACTED]\",\n      ADDRESS: \"[ADDRESS_REDACTED]\",\n      IP: \"[IP_REDACTED]\",\n      API_KEY: \"[API_KEY_REDACTED]\",\n      TOKEN: \"[TOKEN_REDACTED]\",\n    };\n\n    return placeholders[piiType] || \"[PII_REDACTED]\";\n  }\n\n  /**\n   * Get PII detection statistics for monitoring\n   */\n  async getPIIDetectionStats(): Promise<{\n    totalChecks: number;\n    piiDetected: number;\n    redactionsApplied: number;\n    averageProcessingTime: number;\n  }> {\n    // This would typically be stored in a metrics service\n    // For now, return placeholder data\n    return {\n      totalChecks: 0,\n      piiDetected: 0,\n      redactionsApplied: 0,\n      averageProcessingTime: 0,\n    };\n  }\n\n  /**\n   * Encrypt sensitive operation data using KMS\n   */\n  async encryptSensitiveData(\n    data: string,\n    context: {\n      operationId: string;\n      dataType: \"pii\" | \"credentials\" | \"context\";\n      userId?: string;\n    }\n  ): Promise<string> {\n    try {\n      const encrypted = await this.kmsEncryption.encrypt(\n        {\n          plaintext: data,\n          encryptionContext: {\n            operationId: context.operationId,\n            dataType: context.dataType,\n            ...(context.userId && { userId: context.userId }),\n          },\n        },\n        context.dataType\n      );\n\n      return encrypted.ciphertext;\n    } catch (error) {\n      throw new Error(\n        `Failed to encrypt sensitive data: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Decrypt sensitive operation data using KMS\n   */\n  async decryptSensitiveData(\n    encryptedData: string,\n    context: {\n      operationId: string;\n      dataType: \"pii\" | \"credentials\" | \"context\";\n      userId?: string;\n    }\n  ): Promise<string> {\n    try {\n      const decrypted = await this.kmsEncryption.decrypt(\n        {\n          ciphertext: encryptedData,\n          encryptionContext: {\n            operationId: context.operationId,\n            dataType: context.dataType,\n            ...(context.userId && { userId: context.userId }),\n          },\n        },\n        context.dataType\n      );\n\n      return decrypted.plaintext;\n    } catch (error) {\n      throw new Error(\n        `Failed to decrypt sensitive data: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Encrypt PII data before storage\n   */\n  async encryptPIIForStorage(\n    piiData: string,\n    piiType: string,\n    operationId: string\n  ): Promise<string> {\n    try {\n      const encrypted = await this.kmsEncryption.encryptPII(piiData, {\n        piiType,\n        operationId,\n      });\n\n      return encrypted.ciphertext;\n    } catch (error) {\n      throw new Error(\n        `Failed to encrypt PII for storage: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Decrypt PII data from storage\n   */\n  async decryptPIIFromStorage(\n    encryptedPII: string,\n    piiType: string,\n    operationId: string\n  ): Promise<string> {\n    try {\n      const decrypted = await this.kmsEncryption.decryptPII(encryptedPII, {\n        piiType,\n        operationId,\n      });\n\n      return decrypted.plaintext;\n    } catch (error) {\n      throw new Error(\n        `Failed to decrypt PII from storage: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Encrypt operation context for secure audit trail\n   */\n  async encryptOperationContextForAudit(\n    context: Record<string, any>,\n    operationId: string\n  ): Promise<string> {\n    try {\n      const encrypted = await this.kmsEncryption.encryptOperationContext(\n        context,\n        operationId\n      );\n\n      return encrypted.ciphertext;\n    } catch (error) {\n      throw new Error(\n        `Failed to encrypt operation context: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Decrypt operation context from audit trail\n   */\n  async decryptOperationContextFromAudit(\n    encryptedContext: string,\n    operationId: string\n  ): Promise<Record<string, any>> {\n    try {\n      return await this.kmsEncryption.decryptOperationContext(\n        encryptedContext,\n        operationId\n      );\n    } catch (error) {\n      throw new Error(\n        `Failed to decrypt operation context: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  }\n\n  /**\n   * Get KMS encryption service for advanced operations\n   */\n  getKMSEncryptionService(): KMSEncryptionService {\n    return this.kmsEncryption;\n  }\n\n  /**\n   * Validate URL against SSRF protection rules\n   */\n  async validateUrlForSSRF(\n    url: string,\n    operationId?: string\n  ): Promise<SSRFValidationResult> {\n    return await this.ssrfValidator.validateUrl(url, operationId);\n  }\n\n  /**\n   * Get SSRF protection validator for advanced operations\n   */\n  getSSRFProtectionValidator(): SSRFProtectionValidator {\n    return this.ssrfValidator;\n  }\n\n  /**\n   * Update SSRF protection configuration\n   */\n  updateSSRFProtectionConfig(config: {\n    allowedDomains?: string[];\n    allowedProtocols?: string[];\n    blockMetadataEndpoints?: boolean;\n    blockPrivateIPs?: boolean;\n    blockLocalhost?: boolean;\n    blockIPv6Private?: boolean;\n    blockDangerousProtocols?: boolean;\n    enableDNSRebindingProtection?: boolean;\n    enableRedirectionProtection?: boolean;\n    maxRedirects?: number;\n  }): void {\n    this.ssrfValidator.updateConfig(config);\n  }\n\n  /**\n   * Add allowed domain for SSRF protection\n   */\n  addAllowedDomain(domain: string): void {\n    this.ssrfValidator.addAllowedDomain(domain);\n  }\n\n  /**\n   * Remove allowed domain from SSRF protection\n   */\n  removeAllowedDomain(domain: string): void {\n    this.ssrfValidator.removeAllowedDomain(domain);\n  }\n\n  /**\n   * Get all allowed domains for SSRF protection\n   */\n  getAllowedDomains(): string[] {\n    return this.ssrfValidator.getAllowedDomains();\n  }\n\n  /**\n   * Cleanup resources\n   */\n  destroy(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n    }\n    this.kmsEncryption.destroy();\n  }\n\n  // Private Methods\n\n  /**\n   * Execute actual Bedrock request\n   */\n  private async executeBedrockRequest(\n    request: SupportOperationRequest,\n    operationId: string\n  ): Promise<{\n    text?: string;\n    toolCalls?: any[];\n    tokensUsed?: { input: number; output: number };\n  }> {\n    const modelConfig = this.modelConfigs[request.operation];\n    const timeout = this.getTimeoutForOperation(request.operation);\n\n    // Build request payload\n    const payload = {\n      anthropic_version: \"bedrock-2023-05-31\",\n      max_tokens: request.maxTokens || modelConfig.maxTokens,\n      temperature: request.temperature ?? modelConfig.temperature,\n      messages: [\n        {\n          role: \"user\",\n          content: [{ type: \"text\", text: request.prompt }],\n        },\n      ],\n      ...(request.tools && {\n        tools: this.mapToolsToBedrockFormat(request.tools),\n      }),\n    };\n\n    // Add system message for support operations\n    if (request.operation !== \"standard\") {\n      (payload as any).system = this.getSystemMessageForOperation(\n        request.operation\n      );\n    }\n\n    const command = request.streaming\n      ? new InvokeModelWithResponseStreamCommand({\n          modelId: modelConfig.modelId,\n          contentType: \"application/json\",\n          accept: \"application/vnd.amazon.eventstream\",\n          body: JSON.stringify(payload),\n        })\n      : new InvokeModelCommand({\n          modelId: modelConfig.modelId,\n          contentType: \"application/json\",\n          accept: \"application/json\",\n          body: JSON.stringify(payload),\n        });\n\n    // Set timeout for the operation\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(\n        () => reject(new Error(`Operation timeout after ${timeout}ms`)),\n        timeout\n      );\n    });\n\n    const response = await Promise.race([\n      this.client.send(command as any),\n      timeoutPromise,\n    ]);\n\n    // Parse response\n    return this.parseBedrockResponse(response, request.streaming);\n  }\n\n  /**\n   * Map tools to Bedrock format\n   */\n  private mapToolsToBedrockFormat(tools: ToolSpec[]): any[] {\n    return tools.map((tool) => ({\n      name: tool.name,\n      description: tool.description || \"\",\n      input_schema: {\n        type: \"object\",\n        properties: tool.parameters || {},\n        required: Object.keys(tool.parameters || {}),\n      },\n    }));\n  }\n\n  /**\n   * Get system message for operation type\n   */\n  private getSystemMessageForOperation(operation: OperationType): string {\n    const systemMessages = {\n      emergency:\n        \"You are an emergency support assistant. Provide immediate, actionable responses. Be concise and direct.\",\n      infrastructure:\n        \"You are an infrastructure support specialist. Analyze system issues and provide technical solutions.\",\n      meta_monitor:\n        \"You are a meta-monitoring assistant. Analyze execution patterns and provide diagnostic insights.\",\n      implementation:\n        \"You are an implementation support assistant. Help resolve incomplete modules and provide remediation steps.\",\n      standard: \"You are a helpful AI assistant.\",\n    };\n\n    return systemMessages[operation];\n  }\n\n  /**\n   * Parse Bedrock response\n   */\n  private parseBedrockResponse(\n    response: any,\n    streaming?: boolean\n  ): {\n    text?: string;\n    toolCalls?: any[];\n    tokensUsed?: { input: number; output: number };\n  } {\n    if (streaming) {\n      // Handle streaming response (simplified for now)\n      return {\n        text: \"Streaming response\",\n        tokensUsed: { input: 0, output: 0 },\n      };\n    }\n\n    const body = JSON.parse(new TextDecoder().decode(response.body));\n\n    const text = body.content?.map((c: any) => c.text).join(\"\\n\") || \"\";\n    const toolCalls =\n      body.content\n        ?.filter((c: any) => c.type === \"tool_use\")\n        ?.map((tc: any) => ({\n          name: tc.name,\n          arguments: tc.input,\n        })) || [];\n\n    const tokensUsed = {\n      input: body.usage?.input_tokens || 0,\n      output: body.usage?.output_tokens || 0,\n    };\n\n    return { text, toolCalls, tokensUsed };\n  }\n\n  /**\n   * Validate operation timeout requirements\n   */\n  private validateOperationTimeout(operation: OperationType): void {\n    const timeout = this.getTimeoutForOperation(operation);\n    const maxAllowed =\n      operation === \"emergency\"\n        ? 5000\n        : operation === \"infrastructure\"\n        ? 10000\n        : 30000;\n\n    if (timeout > maxAllowed) {\n      throw new Error(\n        `Operation ${operation} timeout ${timeout}ms exceeds maximum ${maxAllowed}ms`\n      );\n    }\n  }\n\n  /**\n   * Get timeout for operation type\n   */\n  private getTimeoutForOperation(operation: OperationType): number {\n    switch (operation) {\n      case \"emergency\":\n        return this.config.emergencyTimeout;\n      case \"infrastructure\":\n      case \"meta_monitor\":\n      case \"implementation\":\n        return this.config.criticalTimeout;\n      default:\n        return this.config.timeout;\n    }\n  }\n\n  /**\n   * Perform enhanced PII detection and redaction for direct Bedrock operations\n   */\n  private async performPIIDetectionAndRedaction(\n    request: SupportOperationRequest,\n    operationId: string\n  ): Promise<SafetyCheckResult> {\n    const startTime = Date.now();\n\n    try {\n      // Perform comprehensive PII and safety check\n      const safetyResult = await this.piiDetectionService.performSafetyCheck(\n        request.prompt,\n        operationId\n      );\n\n      // Log PII detection results\n      await this.auditTrail.logEvent({\n        eventType: \"pii_detection\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: safetyResult.allowed ? \"compliant\" : \"violation\",\n        metadata: {\n          operation: request.operation,\n          priority: request.priority,\n          piiViolations: safetyResult.violations.filter((v) => v.type === \"PII\")\n            .length,\n          toxicityViolations: safetyResult.violations.filter(\n            (v) => v.type === \"TOXICITY\"\n          ).length,\n          promptInjectionViolations: safetyResult.violations.filter(\n            (v) => v.type === \"CUSTOM\"\n          ).length,\n          confidence: safetyResult.confidence,\n          processingTimeMs: safetyResult.processingTimeMs,\n          contentModified: !!safetyResult.modifiedContent,\n        },\n      });\n\n      // If content was modified (PII redacted), update the request\n      if (safetyResult.modifiedContent) {\n        request.prompt = safetyResult.modifiedContent;\n\n        // Log the redaction action\n        await this.auditTrail.logEvent({\n          eventType: \"pii_redaction\",\n          requestId: operationId,\n          provider: \"bedrock\",\n          complianceStatus: \"compliant\",\n          metadata: {\n            operation: request.operation,\n            redactionApplied: true,\n            originalLength: request.prompt.length,\n            redactedLength: safetyResult.modifiedContent.length,\n            violationsRedacted: safetyResult.violations.length,\n          },\n        });\n      }\n\n      // For emergency operations, allow with redaction even if violations exist\n      if (request.operation === \"emergency\" && !safetyResult.allowed) {\n        // Force redaction for emergency operations\n        if (safetyResult.violations.some((v) => v.type === \"PII\")) {\n          const emergencyRedaction = this.piiDetectionService.testPIIDetection(\n            request.prompt\n          );\n          if (emergencyRedaction.length > 0) {\n            // Apply emergency redaction\n            request.prompt = this.redactPIIForEmergency(request.prompt);\n\n            await this.auditTrail.logEvent({\n              eventType: \"emergency_pii_redaction\",\n              requestId: operationId,\n              provider: \"bedrock\",\n              complianceStatus: \"compliant\",\n              metadata: {\n                operation: request.operation,\n                emergencyRedactionApplied: true,\n                piiTokensRedacted: emergencyRedaction.length,\n              },\n            });\n\n            // Return modified safety result for emergency\n            return {\n              ...safetyResult,\n              allowed: true,\n              modifiedContent: request.prompt,\n            };\n          }\n        }\n      }\n\n      // For non-emergency operations with critical violations, block the request\n      if (\n        !safetyResult.allowed &&\n        safetyResult.violations.some((v) => v.severity === \"CRITICAL\")\n      ) {\n        throw new Error(\n          `Critical safety violations detected: ${safetyResult.violations\n            .filter((v) => v.severity === \"CRITICAL\")\n            .map((v) => v.details)\n            .join(\", \")}`\n        );\n      }\n\n      return safetyResult;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      // Log PII detection error\n      await this.auditTrail.logEvent({\n        eventType: \"pii_detection\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"pii_detection_error\",\n          message: errorMessage,\n        },\n        metadata: {\n          operation: request.operation,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      // Return failed safety result\n      return {\n        allowed: false,\n        confidence: 0.0,\n        violations: [\n          {\n            type: \"CUSTOM\",\n            severity: \"CRITICAL\",\n            confidence: 1.0,\n            details: `PII detection failed: ${errorMessage}`,\n          },\n        ],\n        processingTimeMs: Date.now() - startTime,\n      };\n    }\n  }\n\n  /**\n   * Perform enhanced compliance checks with GDPR validation\n   */\n  private async performEnhancedComplianceChecks(\n    request: SupportOperationRequest,\n    operationId: string\n  ): Promise<SupportOperationResponse[\"complianceValidation\"]> {\n    const startTime = Date.now();\n\n    try {\n      // Create routing path for GDPR validation\n      const routingPath: HybridRoutingPath = {\n        routeType: \"direct_bedrock\",\n        provider: \"bedrock\",\n        operationType: request.operation,\n        priority: request.priority,\n      };\n\n      // Validate GDPR compliance before routing\n      const gdprValidation = await this.gdprValidator.validateBeforeRouting(\n        routingPath,\n        operationId\n      );\n\n      if (!gdprValidation.allowed) {\n        throw new Error(`GDPR compliance violation: ${gdprValidation.reason}`);\n      }\n\n      // Perform additional compliance checks\n      await this.performLegacyComplianceChecks(request);\n\n      // Log compliance validation success\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_compliance_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"compliant\",\n        metadata: {\n          operation: request.operation,\n          routingPath: \"direct_bedrock\",\n          gdprCompliant: true,\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      return {\n        gdprCompliant: true,\n        piiRedacted: true, // PII redaction is always applied\n        auditLogged: true,\n      };\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : String(error);\n\n      // Log compliance validation error\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_compliance_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"compliance_error\",\n          message: errorMessage,\n        },\n        metadata: {\n          operation: request.operation,\n          routingPath: \"direct_bedrock\",\n          processingTimeMs: Date.now() - startTime,\n        },\n      });\n\n      throw error; // Re-throw to block the operation\n    }\n  }\n\n  /**\n   * Emergency PII redaction for critical operations\n   */\n  private redactPIIForEmergency(text: string): string {\n    // Use aggressive redaction patterns for emergency operations\n    let redactedText = text;\n\n    const emergencyRedactionPatterns = [\n      // Email addresses - complete redaction\n      {\n        pattern: /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g,\n        replacement: \"[EMAIL_REDACTED]\",\n      },\n\n      // Phone numbers - complete redaction\n      {\n        pattern:\n          /\\b\\+?1?[-.\\s]?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}\\b/g,\n        replacement: \"[PHONE_REDACTED]\",\n      },\n      { pattern: /\\b\\+?[1-9]\\d{1,14}\\b/g, replacement: \"[PHONE_REDACTED]\" },\n\n      // Credit card numbers - complete redaction\n      {\n        pattern: /\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g,\n        replacement: \"[CARD_REDACTED]\",\n      },\n\n      // Social Security Numbers - complete redaction\n      { pattern: /\\b\\d{3}-\\d{2}-\\d{4}\\b/g, replacement: \"[SSN_REDACTED]\" },\n      { pattern: /\\b\\d{9}\\b/g, replacement: \"[ID_REDACTED]\" },\n\n      // IBAN - complete redaction\n      {\n        pattern: /\\b[A-Z]{2}\\d{2}[A-Z0-9]{4}\\d{7}([A-Z0-9]?){0,16}\\b/g,\n        replacement: \"[IBAN_REDACTED]\",\n      },\n\n      // Names with titles - partial redaction\n      {\n        pattern: /\\b(Mr|Mrs|Ms|Dr|Prof)\\.?\\s+[A-Z][a-z]+\\s+[A-Z][a-z]+\\b/g,\n        replacement: \"$1. [NAME_REDACTED]\",\n      },\n\n      // IP addresses - complete redaction\n      {\n        pattern: /\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b/g,\n        replacement: \"[IP_REDACTED]\",\n      },\n\n      // API keys and tokens - complete redaction\n      { pattern: /\\bsk-[A-Za-z0-9]{48}\\b/g, replacement: \"[API_KEY_REDACTED]\" },\n      { pattern: /\\bAKIA[A-Z0-9]{16}\\b/g, replacement: \"[AWS_KEY_REDACTED]\" },\n\n      // Long alphanumeric strings (potential tokens)\n      { pattern: /\\b[A-Za-z0-9]{32,}\\b/g, replacement: \"[TOKEN_REDACTED]\" },\n    ];\n\n    // Apply all emergency redaction patterns\n    emergencyRedactionPatterns.forEach(({ pattern, replacement }) => {\n      redactedText = redactedText.replace(pattern, replacement);\n    });\n\n    return redactedText;\n  }\n\n  /**\n   * Legacy compliance checks (renamed from performComplianceChecks)\n   */\n  private async performLegacyComplianceChecks(\n    request: SupportOperationRequest\n  ): Promise<void> {\n    // Note: PII Detection and Redaction is now handled by performPIIDetectionAndRedaction method\n    // This method focuses on other compliance aspects\n\n    // 2. GDPR Compliance Checks\n    if (request.context?.userId) {\n      const consentValid = await this.validateGDPRConsent(\n        request.context.userId\n      );\n      if (!consentValid) {\n        throw new Error(\n          \"Missing or invalid GDPR consent for user data processing\"\n        );\n      }\n    }\n\n    // 3. Data Residency Compliance (EU)\n    if (request.context?.tenant) {\n      const isEUTenant = await this.isEUTenant(request.context.tenant);\n      if (\n        isEUTenant &&\n        this.config.region !== \"eu-central-1\" &&\n        this.config.region !== \"eu-west-1\"\n      ) {\n        throw new Error(\n          `EU data residency violation: operation must use EU region, current: ${this.config.region}`\n        );\n      }\n    }\n\n    // 4. Operation-specific compliance checks\n    await this.performOperationSpecificCompliance(request);\n\n    // 5. Audit trail logging\n    await this.logComplianceCheck(request);\n  }\n\n  /**\n   * Validate GDPR consent for user\n   */\n  private async validateGDPRConsent(userId: string): Promise<boolean> {\n    try {\n      // In real implementation, check consent database\n      // For now, we'll use a simple check\n\n      // Check if user has valid consent record\n      const consentRecord = await this.getConsentRecord(userId);\n\n      if (!consentRecord) {\n        return false;\n      }\n\n      // Check if consent is still valid (not expired)\n      const consentAge = Date.now() - consentRecord.timestamp.getTime();\n      const maxConsentAge = 365 * 24 * 60 * 60 * 1000; // 1 year\n\n      if (consentAge > maxConsentAge) {\n        return false;\n      }\n\n      // Check if consent covers AI processing\n      return consentRecord.aiProcessingConsent === true;\n    } catch (error) {\n      console.error(\"GDPR consent validation failed:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Get consent record for user (placeholder)\n   */\n  private async getConsentRecord(userId: string): Promise<{\n    userId: string;\n    timestamp: Date;\n    aiProcessingConsent: boolean;\n    dataRetentionConsent: boolean;\n  } | null> {\n    // In real implementation, query consent database\n    // For now, return a mock valid consent\n    return {\n      userId,\n      timestamp: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago\n      aiProcessingConsent: true,\n      dataRetentionConsent: true,\n    };\n  }\n\n  /**\n   * Check if tenant is EU-based\n   */\n  private async isEUTenant(tenantId: string): Promise<boolean> {\n    // In real implementation, check tenant database\n    // For now, simple heuristic based on tenant ID\n    const euTenantPatterns = [\n      /^eu-/,\n      /^de-/,\n      /^fr-/,\n      /^it-/,\n      /^es-/,\n      /^nl-/,\n      /^be-/,\n      /^at-/,\n      /^ch-/,\n    ];\n\n    return euTenantPatterns.some((pattern) => pattern.test(tenantId));\n  }\n\n  /**\n   * Perform operation-specific compliance checks\n   */\n  private async performOperationSpecificCompliance(\n    request: SupportOperationRequest\n  ): Promise<void> {\n    switch (request.operation) {\n      case \"emergency\":\n        // Emergency operations have relaxed compliance for speed\n        // but still require basic checks\n        break;\n\n      case \"infrastructure\":\n        // Infrastructure operations may access system data\n        // Ensure no customer data is included\n        if (this.containsCustomerData(request.prompt)) {\n          throw new Error(\"Customer data detected in infrastructure operation\");\n        }\n        break;\n\n      case \"meta_monitor\":\n        // Meta monitoring should not process personal data\n        if (this.containsPersonalData(request.prompt)) {\n          throw new Error(\n            \"Personal data detected in meta monitoring operation\"\n          );\n        }\n        break;\n\n      case \"implementation\":\n        // Implementation support should not access production data\n        if (this.containsProductionData(request.prompt)) {\n          throw new Error(\n            \"Production data detected in implementation operation\"\n          );\n        }\n        break;\n\n      default:\n        // Standard operations follow full compliance\n        break;\n    }\n  }\n\n  /**\n   * Check for customer data patterns\n   */\n  private containsCustomerData(text: string): boolean {\n    const customerDataPatterns = [\n      /customer_id:\\s*\\d+/i,\n      /user_id:\\s*\\d+/i,\n      /account_id:\\s*\\d+/i,\n      /order_id:\\s*\\d+/i,\n      /transaction_id:\\s*\\d+/i,\n    ];\n\n    return customerDataPatterns.some((pattern) => pattern.test(text));\n  }\n\n  /**\n   * Check for personal data patterns\n   */\n  private containsPersonalData(text: string): boolean {\n    const personalDataPatterns = [\n      /first_name:\\s*[A-Z][a-z]+/i,\n      /last_name:\\s*[A-Z][a-z]+/i,\n      /full_name:\\s*[A-Z][a-z]+\\s+[A-Z][a-z]+/i,\n      /date_of_birth:\\s*\\d{4}-\\d{2}-\\d{2}/i,\n      /address:\\s*.+/i,\n    ];\n\n    return personalDataPatterns.some((pattern) => pattern.test(text));\n  }\n\n  /**\n   * Check for production data patterns\n   */\n  private containsProductionData(text: string): boolean {\n    const productionDataPatterns = [\n      /prod_/i,\n      /production/i,\n      /live_/i,\n      /real_customer/i,\n      /actual_user/i,\n    ];\n\n    return productionDataPatterns.some((pattern) => pattern.test(text));\n  }\n\n  /**\n   * Log compliance check for audit trail\n   */\n  private async logComplianceCheck(\n    request: SupportOperationRequest\n  ): Promise<void> {\n    const auditEntry = {\n      timestamp: new Date().toISOString(),\n      operation: request.operation,\n      priority: request.priority,\n      userId: request.context?.userId,\n      tenantId: request.context?.tenant,\n      correlationId: request.context?.correlationId,\n      complianceChecks: {\n        piiDetection: await this.containsPII(request.prompt),\n        gdprConsent: request.context?.userId\n          ? await this.validateGDPRConsent(request.context.userId)\n          : null,\n        dataResidency: request.context?.tenant\n          ? await this.isEUTenant(request.context.tenant)\n          : null,\n        operationSpecific: true, // Passed if we reach this point\n      },\n      region: this.config.region,\n    };\n\n    // In real implementation, send to audit service\n    console.log(\"Compliance audit:\", JSON.stringify(auditEntry, null, 2));\n  }\n\n  /**\n   * Check if text contains PII using the comprehensive detection service\n   */\n  private async containsPII(text: string): Promise<boolean> {\n    try {\n      const piiTokens = this.piiDetectionService.testPIIDetection(text);\n      return piiTokens && piiTokens.length > 0;\n    } catch (error) {\n      console.warn(\"PII detection service error:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate GDPR consent using the enhanced compliance system\n   */\n  private async validateGDPRConsentEnhanced(\n    userId: string,\n    operationId: string\n  ): Promise<boolean> {\n    try {\n      const consentValid = await this.validateGDPRConsent(userId);\n\n      // Log consent validation to audit trail\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_consent_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: consentValid ? \"compliant\" : \"violation\",\n        metadata: {\n          userId,\n          consentValid,\n          validationType: \"enhanced\",\n        },\n      });\n\n      return consentValid;\n    } catch (error) {\n      // Log consent validation error\n      await this.auditTrail.logEvent({\n        eventType: \"gdpr_consent_validation\",\n        requestId: operationId,\n        provider: \"bedrock\",\n        complianceStatus: \"violation\",\n        error: {\n          type: \"consent_validation_error\",\n          message: error instanceof Error ? error.message : String(error),\n        },\n        metadata: {\n          userId,\n        },\n      });\n\n      return false;\n    }\n  }\n\n  /**\n   * Calculate cost based on token usage\n   */\n  private calculateCost(tokensUsed?: {\n    input: number;\n    output: number;\n  }): number {\n    if (!tokensUsed) return 0;\n\n    // Claude 3.5 Sonnet pricing (approximate)\n    const inputCostPer1k = 0.003; // $0.003 per 1k input tokens\n    const outputCostPer1k = 0.015; // $0.015 per 1k output tokens\n\n    const inputCost = (tokensUsed.input / 1000) * inputCostPer1k;\n    const outputCost = (tokensUsed.output / 1000) * outputCostPer1k;\n\n    return inputCost + outputCost;\n  }\n\n  /**\n   * Update health status\n   */\n  private updateHealthStatus(\n    success: boolean,\n    latencyMs: number,\n    error?: Error\n  ): void {\n    this.healthStatus.lastCheck = new Date();\n    this.healthStatus.latencyMs = latencyMs;\n    this.healthStatus.circuitBreakerState = this.circuitBreaker.isOpen(\n      \"bedrock\"\n    )\n      ? \"open\"\n      : \"closed\";\n\n    if (success) {\n      this.healthStatus.isHealthy = true;\n      this.healthStatus.consecutiveFailures = 0;\n      delete this.healthStatus.error;\n\n      // Set development mode details if applicable\n      if (\n        process.env.NODE_ENV === \"development\" &&\n        !process.env.BEDROCK_ENDPOINT\n      ) {\n        this.healthStatus.details =\n          \"Development mode - Bedrock endpoint skipped\";\n      }\n    } else {\n      this.healthStatus.isHealthy = false;\n      this.healthStatus.consecutiveFailures++;\n\n      // In development, provide helpful error message\n      const isDev = process.env.NODE_ENV === \"development\";\n      if (isDev) {\n        this.healthStatus.error = `Development mode - Bedrock connection skipped: ${\n          error?.message || \"Unknown error\"\n        }`;\n      } else {\n        this.healthStatus.error = error?.message;\n      }\n    }\n  }\n\n  /**\n   * Start health monitoring\n   */\n  private startHealthMonitoring(): void {\n    this.healthCheckInterval = setInterval(async () => {\n      try {\n        await this.performHealthCheck();\n      } catch (error) {\n        console.error(\"Health check failed:\", error);\n      }\n    }, 30000); // Check every 30 seconds\n  }\n\n  /**\n   * Generate unique operation ID\n   */\n  private generateOperationId(): string {\n    return `direct-bedrock-${Date.now()}-${Math.random()\n      .toString(36)\n      .substring(2, 11)}`;\n  }\n\n  /**\n   * Get PII detection statistics\n   */\n  async getPIIDetectionStats(): Promise<{\n    totalDetections: number;\n    totalRedactions: number;\n    detectionsByType: Record<string, number>;\n    averageConfidence: number;\n    lastDetection?: Date;\n  }> {\n    // This would typically query a metrics store\n    // For now, return mock statistics\n    return {\n      totalDetections: 0,\n      totalRedactions: 0,\n      detectionsByType: {},\n      averageConfidence: 0,\n      lastDetection: undefined,\n    };\n  }\n\n  /**\n   * Get redaction placeholder for PII type\n   */\n  private getRedactionPlaceholder(piiType: string): string {\n    const placeholders: Record<string, string> = {\n      EMAIL: \"[EMAIL_REDACTED]\",\n      PHONE: \"[PHONE_REDACTED]\",\n      CREDIT_CARD: \"[CREDIT_CARD_REDACTED]\",\n      SSN: \"[SSN_REDACTED]\",\n      IBAN: \"[IBAN_REDACTED]\",\n    };\n\n    return placeholders[piiType] || \"[PII_REDACTED]\";\n  }\n\n  /**\n   * Cleanup resources\n   */\n  cleanup(): void {\n    if (this.healthCheckInterval) {\n      clearInterval(this.healthCheckInterval);\n      this.healthCheckInterval = undefined;\n    }\n  }\n}\n\n// Types are already exported as interfaces above\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c60844a46722120284c9b772b0f635297689b3d4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ng8e89pfv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ng8e89pfv();
cov_2ng8e89pfv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ng8e89pfv().s[1]++;
exports.DirectBedrockClient = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[2]++, require("tslib"));
const client_bedrock_runtime_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[3]++, require("@aws-sdk/client-bedrock-runtime"));
const ai_feature_flags_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[4]++, require("./ai-feature-flags"));
const audit_trail_system_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[5]++, require("./audit-trail-system"));
const circuit_breaker_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[6]++, require("./circuit-breaker"));
const emergency_operations_performance_monitor_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[7]++, require("./emergency-operations-performance-monitor"));
const gdpr_hybrid_compliance_validator_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[8]++, require("./gdpr-hybrid-compliance-validator"));
const kms_encryption_service_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[9]++, require("./kms-encryption-service"));
const pii_toxicity_detector_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[10]++, require("./safety/pii-toxicity-detector"));
const ssrf_protection_validator_1 =
/* istanbul ignore next */
(cov_2ng8e89pfv().s[11]++, require("./ssrf-protection-validator"));
/**
 * Direct Bedrock Client for Critical Support Operations
 */
class DirectBedrockClient {
  constructor(config =
  /* istanbul ignore next */
  (cov_2ng8e89pfv().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[0]++;
    cov_2ng8e89pfv().s[12]++;
    // Default model configurations for different operation types
    this.modelConfigs = {
      emergency: {
        modelId: "anthropic.claude-3-5-sonnet-20241022-v2:0",
        temperature: 0.1,
        // Low temperature for consistent emergency responses
        maxTokens: 1024 // Smaller token limit for speed
      },
      infrastructure: {
        modelId: "anthropic.claude-3-5-sonnet-20241022-v2:0",
        temperature: 0.2,
        maxTokens: 2048
      },
      meta_monitor: {
        modelId: "anthropic.claude-3-5-sonnet-20241022-v2:0",
        temperature: 0.3,
        maxTokens: 2048
      },
      implementation: {
        modelId: "anthropic.claude-3-5-sonnet-20241022-v2:0",
        temperature: 0.4,
        maxTokens: 4096
      },
      standard: {
        modelId: "anthropic.claude-3-5-sonnet-20241022-v2:0",
        temperature: 0.7,
        maxTokens: 4096
      }
    };
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[13]++;
    this.config = Object.assign({
      region:
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[1][0]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[1][1]++, "eu-central-1"),
      maxRetries: 3,
      timeout: 30000,
      emergencyTimeout: 5000,
      criticalTimeout: 10000,
      enableCircuitBreaker: true,
      enableHealthMonitoring: true,
      enableComplianceChecks: true
    }, config);
    // Initialize AWS Bedrock Runtime Client
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[14]++;
    this.client = new client_bedrock_runtime_1.BedrockRuntimeClient({
      region: this.config.region,
      maxAttempts: this.config.maxRetries,
      requestHandler: {
        requestTimeout: this.config.timeout
      }
    });
    // Initialize circuit breaker
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[15]++;
    this.circuitBreaker = new circuit_breaker_1.CircuitBreaker({
      failureThreshold: 3,
      // Open after 3 failures
      recoveryTimeout: 30000,
      // 30s recovery timeout
      halfOpenMaxCalls: 2 // Max 2 calls in half-open state
    });
    // Initialize feature flags
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[16]++;
    this.featureFlags = new ai_feature_flags_1.AiFeatureFlags();
    // Initialize PII detection service with strict configuration for direct Bedrock
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[17]++;
    this.piiDetectionService = new pii_toxicity_detector_1.PIIToxicityDetectionService({
      enablePII: true,
      enableToxicity: true,
      enablePromptInjection: true,
      strictMode: true,
      // Strict mode for direct Bedrock operations
      redactionMode: "MASK",
      // Mask PII by default
      confidenceThreshold: 0.7 // Lower threshold for better detection
    });
    // Initialize GDPR compliance validator
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[18]++;
    this.gdprValidator = new gdpr_hybrid_compliance_validator_1.GDPRHybridComplianceValidator();
    // Initialize audit trail system
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[19]++;
    this.auditTrail = new audit_trail_system_1.AuditTrailSystem({
      complianceMode: "strict",
      enableIntegrityChecking: true,
      retentionDays: 2555 // 7 years for GDPR compliance
    });
    // Initialize KMS encryption service
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[20]++;
    this.kmsEncryption = new kms_encryption_service_1.KMSEncryptionService({
      region: this.config.region,
      keyAlias:
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[2][0]++, process.env.KMS_KEY_ALIAS) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[2][1]++, "alias/matbakh-ai"),
      enableKeyRotation: true
    }, this.auditTrail);
    // Initialize SSRF protection validator
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[21]++;
    this.ssrfValidator = new ssrf_protection_validator_1.SSRFProtectionValidator({
      auditTrail: this.auditTrail
    });
    // Initialize emergency operations performance monitor
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[22]++;
    this.performanceMonitor = new emergency_operations_performance_monitor_1.EmergencyOperationsPerformanceMonitor({
      emergencySlaThresholdMs: this.config.emergencyTimeout,
      // 5 seconds for emergency
      criticalSlaThresholdMs: this.config.criticalTimeout,
      // 10 seconds for critical
      successRateThreshold: 95,
      // 95% success rate requirement
      rollingWindowMinutes: 60,
      // 1 hour rolling window
      alertingEnabled: true,
      circuitBreakerEnabled: this.config.enableCircuitBreaker
    }, this.auditTrail, this.circuitBreaker);
    // Initialize health status
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[23]++;
    this.healthStatus = {
      isHealthy: true,
      latencyMs: 0,
      lastCheck: new Date(),
      consecutiveFailures: 0,
      circuitBreakerState: "closed"
    };
    // Start health monitoring if enabled
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[24]++;
    if (this.config.enableHealthMonitoring) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[3][0]++;
      cov_2ng8e89pfv().s[25]++;
      this.startHealthMonitoring();
    } else
    /* istanbul ignore next */
    {
      cov_2ng8e89pfv().b[3][1]++;
    }
  }
  /**
   * Execute support operation with direct Bedrock access
   */
  executeSupportOperation(request) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[1]++;
    cov_2ng8e89pfv().s[26]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[2]++;
      var _a, _b, _c, _d;
      const startTime =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[27]++, Date.now());
      const operationId =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[28]++, this.generateOperationId());
      let piiDetectionResult;
      let complianceValidation;
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[29]++;
      try {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[30]++;
        // Check if direct Bedrock is enabled
        if (!this.featureFlags.isEnabled("ENABLE_DIRECT_BEDROCK_FALLBACK")) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[4][0]++;
          cov_2ng8e89pfv().s[31]++;
          throw new Error("Direct Bedrock access is disabled");
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[4][1]++;
        }
        // Check circuit breaker
        cov_2ng8e89pfv().s[32]++;
        if (
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[6][0]++, this.config.enableCircuitBreaker) &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[6][1]++, this.circuitBreaker.isOpen("bedrock"))) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[5][0]++;
          cov_2ng8e89pfv().s[33]++;
          throw new Error("Circuit breaker is open for Bedrock");
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[5][1]++;
        }
        // Validate operation timeout requirements
        cov_2ng8e89pfv().s[34]++;
        this.validateOperationTimeout(request.operation);
        // Perform enhanced PII detection and redaction
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[35]++;
        piiDetectionResult = yield this.performPIIDetectionAndRedaction(request, operationId);
        // Perform comprehensive compliance checks if enabled
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[36]++;
        if (this.config.enableComplianceChecks) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[7][0]++;
          cov_2ng8e89pfv().s[37]++;
          complianceValidation = yield this.performEnhancedComplianceChecks(request, operationId);
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[7][1]++;
        }
        // Execute the operation with circuit breaker protection
        const response =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[38]++, yield this.circuitBreaker.execute("bedrock", () => {
          /* istanbul ignore next */
          cov_2ng8e89pfv().f[3]++;
          cov_2ng8e89pfv().s[39]++;
          return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /* istanbul ignore next */
            cov_2ng8e89pfv().f[4]++;
            cov_2ng8e89pfv().s[40]++;
            return yield this.executeBedrockRequest(request, operationId);
          });
        }));
        const latencyMs =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[41]++, Date.now() - startTime);
        // Track operation performance based on priority
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[42]++;
        if (request.operation === "emergency") {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[8][0]++;
          cov_2ng8e89pfv().s[43]++;
          yield this.performanceMonitor.recordEmergencyOperation(operationId, latencyMs, true,
          // success
          request.operation,
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[10][0]++, (_a = request.context) === null) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[10][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[9][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[9][1]++, _a.correlationId), undefined,
          // no error
          "emergency" // priority
          );
        } else {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[8][1]++;
          cov_2ng8e89pfv().s[44]++;
          if (request.priority === "critical") {
            /* istanbul ignore next */
            cov_2ng8e89pfv().b[11][0]++;
            cov_2ng8e89pfv().s[45]++;
            yield this.performanceMonitor.recordEmergencyOperation(operationId, latencyMs, true,
            // success
            request.operation,
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[13][0]++, (_b = request.context) === null) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[13][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[12][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[12][1]++, _b.correlationId), undefined,
            // no error
            "critical" // priority
            );
          } else
          /* istanbul ignore next */
          {
            cov_2ng8e89pfv().b[11][1]++;
          }
        }
        // Update health status on success
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[46]++;
        this.updateHealthStatus(true, latencyMs);
        // Log successful operation to audit trail
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[47]++;
        yield this.auditTrail.logEvent({
          eventType: "direct_bedrock_operation",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: "compliant",
          metadata: {
            operation: request.operation,
            priority: request.priority,
            latencyMs,
            tokensUsed: response.tokensUsed,
            piiDetected:
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[14][0]++,
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[16][0]++, piiDetectionResult === null) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[16][1]++, piiDetectionResult === void 0) ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[15][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[15][1]++, piiDetectionResult.violations.length)) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[14][1]++, 0),
            piiRedacted: !!(
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[18][0]++, piiDetectionResult === null) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[18][1]++, piiDetectionResult === void 0) ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[17][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[17][1]++, piiDetectionResult.modifiedContent)),
            gdprCompliant:
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[19][0]++,
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[21][0]++, complianceValidation === null) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[21][1]++, complianceValidation === void 0) ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[20][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[20][1]++, complianceValidation.gdprCompliant)) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[19][1]++, false)
          }
        });
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[48]++;
        return {
          success: true,
          text: response.text,
          toolCalls: response.toolCalls,
          latencyMs,
          tokensUsed: response.tokensUsed,
          costEuro: this.calculateCost(response.tokensUsed),
          operationId,
          timestamp: new Date(),
          piiDetectionResult,
          piiDetected: (
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[22][0]++,
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[24][0]++, piiDetectionResult === null) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[24][1]++, piiDetectionResult === void 0) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[23][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[23][1]++, piiDetectionResult.violations.length)) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[22][1]++, 0)) > 0,
          redactionApplied: !!(
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[26][0]++, piiDetectionResult === null) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[26][1]++, piiDetectionResult === void 0) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[25][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[25][1]++, piiDetectionResult.modifiedContent)),
          response: response.text,
          complianceValidation
        };
      } catch (error) {
        const latencyMs =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[49]++, Date.now() - startTime);
        // Track operation performance based on priority
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[50]++;
        if (request.operation === "emergency") {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[27][0]++;
          cov_2ng8e89pfv().s[51]++;
          yield this.performanceMonitor.recordEmergencyOperation(operationId, latencyMs, false,
          // failure
          request.operation,
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[29][0]++, (_c = request.context) === null) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[29][1]++, _c === void 0) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[28][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[28][1]++, _c.correlationId), error instanceof Error ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[30][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[30][1]++, "Unknown error"), "emergency" // priority
          );
        } else {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[27][1]++;
          cov_2ng8e89pfv().s[52]++;
          if (request.priority === "critical") {
            /* istanbul ignore next */
            cov_2ng8e89pfv().b[31][0]++;
            cov_2ng8e89pfv().s[53]++;
            yield this.performanceMonitor.recordEmergencyOperation(operationId, latencyMs, false,
            // failure
            request.operation,
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[33][0]++, (_d = request.context) === null) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[33][1]++, _d === void 0) ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[32][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[32][1]++, _d.correlationId), error instanceof Error ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[34][0]++, error.message) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[34][1]++, "Unknown error"), "critical" // priority
            );
          } else
          /* istanbul ignore next */
          {
            cov_2ng8e89pfv().b[31][1]++;
          }
        }
        // Update health status on failure
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[54]++;
        this.updateHealthStatus(false, latencyMs, error);
        // Log failed operation to audit trail
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[55]++;
        yield this.auditTrail.logEvent({
          eventType: "direct_bedrock_operation",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: "violation",
          error: {
            type: "operation_error",
            message: error instanceof Error ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[35][0]++, error.message) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[35][1]++, "Unknown error")
          },
          metadata: {
            operation: request.operation,
            priority: request.priority,
            latencyMs,
            piiDetected:
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[36][0]++,
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[38][0]++, piiDetectionResult === null) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[38][1]++, piiDetectionResult === void 0) ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[37][0]++, void 0) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[37][1]++, piiDetectionResult.violations.length)) ||
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[36][1]++, 0)
          }
        });
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[56]++;
        return {
          success: false,
          latencyMs,
          error: error instanceof Error ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[39][0]++, error.message) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[39][1]++, "Unknown error"),
          operationId,
          timestamp: new Date(),
          piiDetectionResult,
          complianceValidation
        };
      }
    });
  }
  /**
   * Execute emergency operation (< 5s latency requirement)
   */
  executeEmergencyOperation(prompt, context) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[5]++;
    cov_2ng8e89pfv().s[57]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[6]++;
      cov_2ng8e89pfv().s[58]++;
      return this.executeSupportOperation({
        operation: "emergency",
        priority: "critical",
        prompt,
        context,
        maxTokens: 1024,
        // Limit tokens for speed
        temperature: 0.1 // Low temperature for consistency
      });
    });
  }
  /**
   * Execute critical support operation (< 10s latency requirement)
   */
  executeCriticalOperation(prompt, context, tools) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[7]++;
    cov_2ng8e89pfv().s[59]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[8]++;
      cov_2ng8e89pfv().s[60]++;
      return this.executeSupportOperation({
        operation: "infrastructure",
        priority: "critical",
        prompt,
        context,
        tools,
        maxTokens: 2048,
        temperature: 0.2
      });
    });
  }
  /**
   * Get current health status
   */
  getHealthStatus() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[9]++;
    cov_2ng8e89pfv().s[61]++;
    return Object.assign({}, this.healthStatus);
  }
  /**
   * Get emergency operations performance statistics
   */
  getEmergencyPerformanceStats() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[10]++;
    cov_2ng8e89pfv().s[62]++;
    return this.performanceMonitor.getCurrentPerformanceStats();
  }
  /**
   * Check if emergency operations are meeting SLA requirements (>95% within 5s)
   */
  isEmergencyPerformanceWithinSLA() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[11]++;
    cov_2ng8e89pfv().s[63]++;
    return this.performanceMonitor.isPerformanceWithinSLA();
  }
  /**
   * Get detailed emergency operations performance report
   */
  getEmergencyPerformanceReport() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[12]++;
    cov_2ng8e89pfv().s[64]++;
    return this.performanceMonitor.getPerformanceReport();
  }
  /**
   * Get recent emergency operations performance alerts
   */
  getEmergencyPerformanceAlerts(limitHours =
  /* istanbul ignore next */
  (cov_2ng8e89pfv().b[40][0]++, 24)) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[13]++;
    cov_2ng8e89pfv().s[65]++;
    return this.performanceMonitor.getRecentAlerts(limitHours);
  }
  /**
   * Check if critical operations are meeting SLA requirements (>95% within 10s)
   */
  isCriticalOperationsPerformanceWithinSLA() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[14]++;
    cov_2ng8e89pfv().s[66]++;
    return this.performanceMonitor.isCriticalOperationsPerformanceWithinSLA();
  }
  /**
   * Check if emergency operations specifically are meeting SLA requirements (>95% within 5s)
   */
  isEmergencyOperationsPerformanceWithinSLA() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[15]++;
    cov_2ng8e89pfv().s[67]++;
    return this.performanceMonitor.isEmergencyOperationsPerformanceWithinSLA();
  }
  /**
   * Perform health check
   */
  performHealthCheck() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[16]++;
    cov_2ng8e89pfv().s[68]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[17]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[69]++, Date.now());
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[70]++;
      try {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[71]++;
        // Development environment safety check
        if (
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[42][0]++, !process.env.BEDROCK_ENDPOINT) &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[42][1]++, process.env.NODE_ENV === "development")) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[41][0]++;
          const latencyMs =
          /* istanbul ignore next */
          (cov_2ng8e89pfv().s[72]++, Date.now() - startTime);
          /* istanbul ignore next */
          cov_2ng8e89pfv().s[73]++;
          this.updateHealthStatus(true, latencyMs);
          /* istanbul ignore next */
          cov_2ng8e89pfv().s[74]++;
          return Object.assign(Object.assign({}, this.healthStatus), {
            lastCheck: new Date(),
            details: "Development mode - Bedrock endpoint skipped"
          });
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[41][1]++;
        }
        // Simple health check with minimal prompt
        const response =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[75]++, yield this.executeBedrockRequest({
          operation: "standard",
          priority: "low",
          prompt: "Health check: respond with 'OK'",
          maxTokens: 10,
          temperature: 0
        }, "health-check"));
        const latencyMs =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[76]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[77]++;
        this.updateHealthStatus(true, latencyMs);
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[78]++;
        return this.healthStatus;
      } catch (error) {
        const latencyMs =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[79]++, Date.now() - startTime);
        // In development, don't fail hard on connection issues
        const isDev =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[80]++, process.env.NODE_ENV === "development");
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[81]++;
        this.updateHealthStatus(!isDev, latencyMs, error);
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[82]++;
        return this.healthStatus;
      }
    });
  }
  /**
   * Update PII detection configuration
   */
  updatePIIDetectionConfig(config) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[18]++;
    cov_2ng8e89pfv().s[83]++;
    this.piiDetectionService.updateConfig(config);
  }
  /**
   * Test PII detection without processing
   */
  testPIIDetection(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[19]++;
    cov_2ng8e89pfv().s[84]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[20]++;
      const piiTokens =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[85]++, this.piiDetectionService.testPIIDetection(text));
      const toxicityViolations =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[86]++, this.piiDetectionService.testToxicityDetection(text));
      const promptInjectionViolations =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[87]++, this.piiDetectionService.testPromptInjectionDetection(text));
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[88]++;
      return {
        piiFound: piiTokens.length > 0,
        piiTokens,
        toxicityScore: toxicityViolations.length > 0 ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[43][0]++, 0.8) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[43][1]++, 0.0),
        // Simplified scoring
        promptInjectionDetected: promptInjectionViolations.length > 0
      };
    });
  }
  /**
   * Detect PII in text with comprehensive analysis
   */
  detectPii(text, options) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[21]++;
    cov_2ng8e89pfv().s[89]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[22]++;
      cov_2ng8e89pfv().s[90]++;
      // Check if PII detection is enabled
      if (!this.featureFlags.isEnabled("pii_detection_enabled", true)) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[44][0]++;
        cov_2ng8e89pfv().s[91]++;
        return {
          hasPii: false,
          piiTypes: [],
          detectedPii: [],
          processingRegion: this.config.region,
          gdprCompliant: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[44][1]++;
      }
      // Validate input
      cov_2ng8e89pfv().s[92]++;
      if (
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[46][0]++, !text) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[46][1]++, typeof text !== "string") ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[46][2]++, text.trim().length === 0)) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[45][0]++;
        cov_2ng8e89pfv().s[93]++;
        return {
          hasPii: false,
          piiTypes: [],
          detectedPii: [],
          processingRegion: this.config.region,
          gdprCompliant: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[45][1]++;
      }
      // Check GDPR compliance for EU regions
      const isEuRegion =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[94]++, this.config.region.startsWith("eu-"));
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[95]++;
      if (
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[48][0]++, this.featureFlags.isEnabled("gdpr_compliance_enabled", true)) &&
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[48][1]++, !isEuRegion)) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[47][0]++;
        cov_2ng8e89pfv().s[96]++;
        throw new Error("GDPR compliance violation: PII processing must occur in EU region");
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[47][1]++;
      }
      const detectedPii =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[97]++, []);
      // Define PII detection patterns
      const piiPatterns =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[98]++, [{
        type: "EMAIL",
        pattern: /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g,
        confidence: 0.95
      }, {
        type: "PHONE",
        pattern: /\b\+?1?[-.\s]?\(?[0-9]{3}\)?[-.\s]?[0-9]{3}[-.\s]?[0-9]{4}\b/g,
        confidence: 0.85
      }, {
        type: "PHONE",
        pattern: /\b\+?[1-9]\d{1,14}\b/g,
        confidence: 0.75
      }, {
        type: "CREDIT_CARD",
        pattern: /\b\d{4}[\s-]?\d{4}[\s-]?\d{4}[\s-]?\d{4}\b/g,
        confidence: 0.9
      }, {
        type: "SSN",
        pattern: /\b\d{3}-\d{2}-\d{4}\b/g,
        confidence: 0.95
      }, {
        type: "SSN",
        pattern: /\b\d{9}\b/g,
        confidence: 0.7
      }, {
        type: "IBAN",
        pattern: /\b[A-Z]{2}\d{2}[A-Z0-9]{4}\d{7}([A-Z0-9]?){0,16}\b/g,
        confidence: 0.9
      }]);
      // Detect PII using patterns
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[99]++;
      for (const {
        type,
        pattern,
        confidence
      } of piiPatterns) {
        let match;
        const regex =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[100]++, new RegExp(pattern.source, pattern.flags));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[101]++;
        while ((match = regex.exec(text)) !== null) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().s[102]++;
          detectedPii.push({
            type,
            value: match[0],
            confidence,
            startIndex: match.index,
            endIndex: match.index + match[0].length
          });
        }
      }
      // Get unique PII types
      const piiTypes =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[103]++, [...new Set(detectedPii.map(pii => {
        /* istanbul ignore next */
        cov_2ng8e89pfv().f[23]++;
        cov_2ng8e89pfv().s[104]++;
        return pii.type;
      }))]);
      // Build result
      const result =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[105]++, {
        hasPii: detectedPii.length > 0,
        piiTypes,
        detectedPii,
        processingRegion: this.config.region,
        gdprCompliant: isEuRegion
      });
      // Add consent tracking if provided
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[106]++;
      if (
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[50][0]++,
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[52][0]++, options === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[52][1]++, options === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[51][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[51][1]++, options.consentId)) &&
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[50][1]++,
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[54][0]++, options === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[54][1]++, options === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[53][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[53][1]++, options.dataSubject)) &&
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[50][2]++,
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[56][0]++, options === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[56][1]++, options === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[55][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[55][1]++, options.processingPurpose))) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[49][0]++;
        cov_2ng8e89pfv().s[107]++;
        result.consentTracking = {
          consentId: options.consentId,
          dataSubject: options.dataSubject,
          processingPurpose: options.processingPurpose,
          timestamp: new Date()
        };
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[49][1]++;
      }
      cov_2ng8e89pfv().s[108]++;
      return result;
    });
  }
  /**
   * Redact PII from text
   */
  redactPii(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[24]++;
    cov_2ng8e89pfv().s[109]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[25]++;
      // Detect PII first
      const detection =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[110]++, yield this.detectPii(text));
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[111]++;
      if (!detection.hasPii) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[57][0]++;
        cov_2ng8e89pfv().s[112]++;
        return {
          redactedText: text,
          redactionMap: []
        };
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[57][1]++;
      }
      let redactedText =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[113]++, text);
      const redactionMap =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[114]++, []);
      // Sort detected PII by start index in descending order to avoid index shifting
      const sortedPii =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[115]++, detection.detectedPii.sort((a, b) => {
        /* istanbul ignore next */
        cov_2ng8e89pfv().f[26]++;
        cov_2ng8e89pfv().s[116]++;
        return b.startIndex - a.startIndex;
      }));
      // Apply redactions
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[117]++;
      for (const pii of sortedPii) {
        const redactedValue =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[118]++, this.getRedactionPlaceholder(pii.type));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[119]++;
        redactedText = redactedText.substring(0, pii.startIndex) + redactedValue + redactedText.substring(pii.endIndex);
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[120]++;
        redactionMap.unshift({
          original: pii.value,
          redacted: redactedValue,
          type: pii.type,
          startIndex: pii.startIndex,
          endIndex: pii.startIndex + redactedValue.length
        });
      }
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[121]++;
      return {
        redactedText,
        redactionMap
      };
    });
  }
  /**
   * Restore PII from redacted text using redaction map
   */
  restorePii(redactedText, redactionMap) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[27]++;
    cov_2ng8e89pfv().s[122]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[28]++;
      let restoredText =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[123]++, redactedText);
      // Apply restorations in reverse order to maintain text structure
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[124]++;
      for (const redaction of redactionMap.reverse()) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[125]++;
        restoredText = restoredText.replace(redaction.redacted, redaction.original);
      }
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[126]++;
      return restoredText;
    });
  }
  /**
   * Get redaction placeholder for PII type
   */
  getRedactionPlaceholder(piiType) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[29]++;
    const placeholders =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[127]++, {
      EMAIL: "[EMAIL_REDACTED]",
      PHONE: "[PHONE_REDACTED]",
      CREDIT_CARD: "[CREDIT_CARD_REDACTED]",
      SSN: "[SSN_REDACTED]",
      IBAN: "[IBAN_REDACTED]",
      NAME: "[NAME_REDACTED]",
      ADDRESS: "[ADDRESS_REDACTED]",
      IP: "[IP_REDACTED]",
      API_KEY: "[API_KEY_REDACTED]",
      TOKEN: "[TOKEN_REDACTED]"
    });
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[128]++;
    return /* istanbul ignore next */(cov_2ng8e89pfv().b[58][0]++, placeholders[piiType]) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[58][1]++, "[PII_REDACTED]");
  }
  /**
   * Get PII detection statistics for monitoring
   */
  getPIIDetectionStats() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[30]++;
    cov_2ng8e89pfv().s[129]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[31]++;
      cov_2ng8e89pfv().s[130]++;
      // This would typically be stored in a metrics service
      // For now, return placeholder data
      return {
        totalChecks: 0,
        piiDetected: 0,
        redactionsApplied: 0,
        averageProcessingTime: 0
      };
    });
  }
  /**
   * Encrypt sensitive operation data using KMS
   */
  encryptSensitiveData(data, context) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[32]++;
    cov_2ng8e89pfv().s[131]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[33]++;
      cov_2ng8e89pfv().s[132]++;
      try {
        const encrypted =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[133]++, yield this.kmsEncryption.encrypt({
          plaintext: data,
          encryptionContext: Object.assign({
            operationId: context.operationId,
            dataType: context.dataType
          },
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[59][0]++, context.userId) &&
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[59][1]++, {
            userId: context.userId
          }))
        }, context.dataType));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[134]++;
        return encrypted.ciphertext;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[135]++;
        throw new Error(`Failed to encrypt sensitive data: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[60][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[60][1]++, String(error))}`);
      }
    });
  }
  /**
   * Decrypt sensitive operation data using KMS
   */
  decryptSensitiveData(encryptedData, context) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[34]++;
    cov_2ng8e89pfv().s[136]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[35]++;
      cov_2ng8e89pfv().s[137]++;
      try {
        const decrypted =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[138]++, yield this.kmsEncryption.decrypt({
          ciphertext: encryptedData,
          encryptionContext: Object.assign({
            operationId: context.operationId,
            dataType: context.dataType
          },
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[61][0]++, context.userId) &&
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[61][1]++, {
            userId: context.userId
          }))
        }, context.dataType));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[139]++;
        return decrypted.plaintext;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[140]++;
        throw new Error(`Failed to decrypt sensitive data: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[62][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[62][1]++, String(error))}`);
      }
    });
  }
  /**
   * Encrypt PII data before storage
   */
  encryptPIIForStorage(piiData, piiType, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[36]++;
    cov_2ng8e89pfv().s[141]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[37]++;
      cov_2ng8e89pfv().s[142]++;
      try {
        const encrypted =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[143]++, yield this.kmsEncryption.encryptPII(piiData, {
          piiType,
          operationId
        }));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[144]++;
        return encrypted.ciphertext;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[145]++;
        throw new Error(`Failed to encrypt PII for storage: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[63][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[63][1]++, String(error))}`);
      }
    });
  }
  /**
   * Decrypt PII data from storage
   */
  decryptPIIFromStorage(encryptedPII, piiType, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[38]++;
    cov_2ng8e89pfv().s[146]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[39]++;
      cov_2ng8e89pfv().s[147]++;
      try {
        const decrypted =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[148]++, yield this.kmsEncryption.decryptPII(encryptedPII, {
          piiType,
          operationId
        }));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[149]++;
        return decrypted.plaintext;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[150]++;
        throw new Error(`Failed to decrypt PII from storage: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[64][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[64][1]++, String(error))}`);
      }
    });
  }
  /**
   * Encrypt operation context for secure audit trail
   */
  encryptOperationContextForAudit(context, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[40]++;
    cov_2ng8e89pfv().s[151]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[41]++;
      cov_2ng8e89pfv().s[152]++;
      try {
        const encrypted =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[153]++, yield this.kmsEncryption.encryptOperationContext(context, operationId));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[154]++;
        return encrypted.ciphertext;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[155]++;
        throw new Error(`Failed to encrypt operation context: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[65][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[65][1]++, String(error))}`);
      }
    });
  }
  /**
   * Decrypt operation context from audit trail
   */
  decryptOperationContextFromAudit(encryptedContext, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[42]++;
    cov_2ng8e89pfv().s[156]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[43]++;
      cov_2ng8e89pfv().s[157]++;
      try {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[158]++;
        return yield this.kmsEncryption.decryptOperationContext(encryptedContext, operationId);
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[159]++;
        throw new Error(`Failed to decrypt operation context: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[66][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[66][1]++, String(error))}`);
      }
    });
  }
  /**
   * Get KMS encryption service for advanced operations
   */
  getKMSEncryptionService() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[44]++;
    cov_2ng8e89pfv().s[160]++;
    return this.kmsEncryption;
  }
  /**
   * Validate URL against SSRF protection rules
   */
  validateUrlForSSRF(url, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[45]++;
    cov_2ng8e89pfv().s[161]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[46]++;
      cov_2ng8e89pfv().s[162]++;
      return yield this.ssrfValidator.validateUrl(url, operationId);
    });
  }
  /**
   * Get SSRF protection validator for advanced operations
   */
  getSSRFProtectionValidator() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[47]++;
    cov_2ng8e89pfv().s[163]++;
    return this.ssrfValidator;
  }
  /**
   * Update SSRF protection configuration
   */
  updateSSRFProtectionConfig(config) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[48]++;
    cov_2ng8e89pfv().s[164]++;
    this.ssrfValidator.updateConfig(config);
  }
  /**
   * Add allowed domain for SSRF protection
   */
  addAllowedDomain(domain) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[49]++;
    cov_2ng8e89pfv().s[165]++;
    this.ssrfValidator.addAllowedDomain(domain);
  }
  /**
   * Remove allowed domain from SSRF protection
   */
  removeAllowedDomain(domain) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[50]++;
    cov_2ng8e89pfv().s[166]++;
    this.ssrfValidator.removeAllowedDomain(domain);
  }
  /**
   * Get all allowed domains for SSRF protection
   */
  getAllowedDomains() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[51]++;
    cov_2ng8e89pfv().s[167]++;
    return this.ssrfValidator.getAllowedDomains();
  }
  /**
   * Cleanup resources
   */
  destroy() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[52]++;
    cov_2ng8e89pfv().s[168]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[67][0]++;
      cov_2ng8e89pfv().s[169]++;
      clearInterval(this.healthCheckInterval);
    } else
    /* istanbul ignore next */
    {
      cov_2ng8e89pfv().b[67][1]++;
    }
    cov_2ng8e89pfv().s[170]++;
    this.kmsEncryption.destroy();
  }
  // Private Methods
  /**
   * Execute actual Bedrock request
   */
  executeBedrockRequest(request, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[53]++;
    cov_2ng8e89pfv().s[171]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[54]++;
      var _a;
      const modelConfig =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[172]++, this.modelConfigs[request.operation]);
      const timeout =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[173]++, this.getTimeoutForOperation(request.operation));
      // Build request payload
      const payload =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[174]++, Object.assign({
        anthropic_version: "bedrock-2023-05-31",
        max_tokens:
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[68][0]++, request.maxTokens) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[68][1]++, modelConfig.maxTokens),
        temperature:
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[70][0]++, (_a = request.temperature) !== null) &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[70][1]++, _a !== void 0) ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[69][0]++, _a) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[69][1]++, modelConfig.temperature),
        messages: [{
          role: "user",
          content: [{
            type: "text",
            text: request.prompt
          }]
        }]
      },
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[71][0]++, request.tools) &&
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[71][1]++, {
        tools: this.mapToolsToBedrockFormat(request.tools)
      })));
      // Add system message for support operations
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[175]++;
      if (request.operation !== "standard") {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[72][0]++;
        cov_2ng8e89pfv().s[176]++;
        payload.system = this.getSystemMessageForOperation(request.operation);
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[72][1]++;
      }
      const command =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[177]++, request.streaming ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[73][0]++, new client_bedrock_runtime_1.InvokeModelWithResponseStreamCommand({
        modelId: modelConfig.modelId,
        contentType: "application/json",
        accept: "application/vnd.amazon.eventstream",
        body: JSON.stringify(payload)
      })) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[73][1]++, new client_bedrock_runtime_1.InvokeModelCommand({
        modelId: modelConfig.modelId,
        contentType: "application/json",
        accept: "application/json",
        body: JSON.stringify(payload)
      })));
      // Set timeout for the operation
      const timeoutPromise =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[178]++, new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_2ng8e89pfv().f[55]++;
        cov_2ng8e89pfv().s[179]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_2ng8e89pfv().f[56]++;
          cov_2ng8e89pfv().s[180]++;
          return reject(new Error(`Operation timeout after ${timeout}ms`));
        }, timeout);
      }));
      const response =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[181]++, yield Promise.race([this.client.send(command), timeoutPromise]));
      // Parse response
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[182]++;
      return this.parseBedrockResponse(response, request.streaming);
    });
  }
  /**
   * Map tools to Bedrock format
   */
  mapToolsToBedrockFormat(tools) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[57]++;
    cov_2ng8e89pfv().s[183]++;
    return tools.map(tool => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[58]++;
      cov_2ng8e89pfv().s[184]++;
      return {
        name: tool.name,
        description:
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[74][0]++, tool.description) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[74][1]++, ""),
        input_schema: {
          type: "object",
          properties:
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[75][0]++, tool.parameters) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[75][1]++, {}),
          required: Object.keys(
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[76][0]++, tool.parameters) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[76][1]++, {}))
        }
      };
    });
  }
  /**
   * Get system message for operation type
   */
  getSystemMessageForOperation(operation) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[59]++;
    const systemMessages =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[185]++, {
      emergency: "You are an emergency support assistant. Provide immediate, actionable responses. Be concise and direct.",
      infrastructure: "You are an infrastructure support specialist. Analyze system issues and provide technical solutions.",
      meta_monitor: "You are a meta-monitoring assistant. Analyze execution patterns and provide diagnostic insights.",
      implementation: "You are an implementation support assistant. Help resolve incomplete modules and provide remediation steps.",
      standard: "You are a helpful AI assistant."
    });
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[186]++;
    return systemMessages[operation];
  }
  /**
   * Parse Bedrock response
   */
  parseBedrockResponse(response, streaming) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[60]++;
    var _a, _b, _c, _d, _e;
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[187]++;
    if (streaming) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[77][0]++;
      cov_2ng8e89pfv().s[188]++;
      // Handle streaming response (simplified for now)
      return {
        text: "Streaming response",
        tokensUsed: {
          input: 0,
          output: 0
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_2ng8e89pfv().b[77][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[189]++, JSON.parse(new TextDecoder().decode(response.body)));
    const text =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[190]++,
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[78][0]++,
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[80][0]++, (_a = body.content) === null) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[80][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[79][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[79][1]++, _a.map(c => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[61]++;
      cov_2ng8e89pfv().s[191]++;
      return c.text;
    }).join("\n"))) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[78][1]++, ""));
    const toolCalls =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[192]++,
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[81][0]++,
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[83][0]++, (_c =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[85][0]++, (_b = body.content) === null) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[85][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[84][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[84][1]++, _b.filter(c => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[62]++;
      cov_2ng8e89pfv().s[193]++;
      return c.type === "tool_use";
    }))) === null) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[83][1]++, _c === void 0) ?
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[82][0]++, void 0) :
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[82][1]++, _c.map(tc => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[63]++;
      cov_2ng8e89pfv().s[194]++;
      return {
        name: tc.name,
        arguments: tc.input
      };
    }))) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[81][1]++, []));
    const tokensUsed =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[195]++, {
      input:
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[86][0]++,
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[88][0]++, (_d = body.usage) === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[88][1]++, _d === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[87][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[87][1]++, _d.input_tokens)) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[86][1]++, 0),
      output:
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[89][0]++,
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[91][0]++, (_e = body.usage) === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[91][1]++, _e === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[90][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[90][1]++, _e.output_tokens)) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[89][1]++, 0)
    });
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[196]++;
    return {
      text,
      toolCalls,
      tokensUsed
    };
  }
  /**
   * Validate operation timeout requirements
   */
  validateOperationTimeout(operation) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[64]++;
    const timeout =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[197]++, this.getTimeoutForOperation(operation));
    const maxAllowed =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[198]++, operation === "emergency" ?
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[92][0]++, 5000) :
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[92][1]++, operation === "infrastructure" ?
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[93][0]++, 10000) :
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[93][1]++, 30000)));
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[199]++;
    if (timeout > maxAllowed) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[94][0]++;
      cov_2ng8e89pfv().s[200]++;
      throw new Error(`Operation ${operation} timeout ${timeout}ms exceeds maximum ${maxAllowed}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_2ng8e89pfv().b[94][1]++;
    }
  }
  /**
   * Get timeout for operation type
   */
  getTimeoutForOperation(operation) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[65]++;
    cov_2ng8e89pfv().s[201]++;
    switch (operation) {
      case "emergency":
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[95][0]++;
        cov_2ng8e89pfv().s[202]++;
        return this.config.emergencyTimeout;
      case "infrastructure":
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[95][1]++;
      case "meta_monitor":
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[95][2]++;
      case "implementation":
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[95][3]++;
        cov_2ng8e89pfv().s[203]++;
        return this.config.criticalTimeout;
      default:
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[95][4]++;
        cov_2ng8e89pfv().s[204]++;
        return this.config.timeout;
    }
  }
  /**
   * Perform enhanced PII detection and redaction for direct Bedrock operations
   */
  performPIIDetectionAndRedaction(request, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[66]++;
    cov_2ng8e89pfv().s[205]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[67]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[206]++, Date.now());
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[207]++;
      try {
        // Perform comprehensive PII and safety check
        const safetyResult =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[208]++, yield this.piiDetectionService.performSafetyCheck(request.prompt, operationId));
        // Log PII detection results
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[209]++;
        yield this.auditTrail.logEvent({
          eventType: "pii_detection",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: safetyResult.allowed ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[96][0]++, "compliant") :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[96][1]++, "violation"),
          metadata: {
            operation: request.operation,
            priority: request.priority,
            piiViolations: safetyResult.violations.filter(v => {
              /* istanbul ignore next */
              cov_2ng8e89pfv().f[68]++;
              cov_2ng8e89pfv().s[210]++;
              return v.type === "PII";
            }).length,
            toxicityViolations: safetyResult.violations.filter(v => {
              /* istanbul ignore next */
              cov_2ng8e89pfv().f[69]++;
              cov_2ng8e89pfv().s[211]++;
              return v.type === "TOXICITY";
            }).length,
            promptInjectionViolations: safetyResult.violations.filter(v => {
              /* istanbul ignore next */
              cov_2ng8e89pfv().f[70]++;
              cov_2ng8e89pfv().s[212]++;
              return v.type === "CUSTOM";
            }).length,
            confidence: safetyResult.confidence,
            processingTimeMs: safetyResult.processingTimeMs,
            contentModified: !!safetyResult.modifiedContent
          }
        });
        // If content was modified (PII redacted), update the request
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[213]++;
        if (safetyResult.modifiedContent) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[97][0]++;
          cov_2ng8e89pfv().s[214]++;
          request.prompt = safetyResult.modifiedContent;
          // Log the redaction action
          /* istanbul ignore next */
          cov_2ng8e89pfv().s[215]++;
          yield this.auditTrail.logEvent({
            eventType: "pii_redaction",
            requestId: operationId,
            provider: "bedrock",
            complianceStatus: "compliant",
            metadata: {
              operation: request.operation,
              redactionApplied: true,
              originalLength: request.prompt.length,
              redactedLength: safetyResult.modifiedContent.length,
              violationsRedacted: safetyResult.violations.length
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[97][1]++;
        }
        // For emergency operations, allow with redaction even if violations exist
        cov_2ng8e89pfv().s[216]++;
        if (
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[99][0]++, request.operation === "emergency") &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[99][1]++, !safetyResult.allowed)) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[98][0]++;
          cov_2ng8e89pfv().s[217]++;
          // Force redaction for emergency operations
          if (safetyResult.violations.some(v => {
            /* istanbul ignore next */
            cov_2ng8e89pfv().f[71]++;
            cov_2ng8e89pfv().s[218]++;
            return v.type === "PII";
          })) {
            /* istanbul ignore next */
            cov_2ng8e89pfv().b[100][0]++;
            const emergencyRedaction =
            /* istanbul ignore next */
            (cov_2ng8e89pfv().s[219]++, this.piiDetectionService.testPIIDetection(request.prompt));
            /* istanbul ignore next */
            cov_2ng8e89pfv().s[220]++;
            if (emergencyRedaction.length > 0) {
              /* istanbul ignore next */
              cov_2ng8e89pfv().b[101][0]++;
              cov_2ng8e89pfv().s[221]++;
              // Apply emergency redaction
              request.prompt = this.redactPIIForEmergency(request.prompt);
              /* istanbul ignore next */
              cov_2ng8e89pfv().s[222]++;
              yield this.auditTrail.logEvent({
                eventType: "emergency_pii_redaction",
                requestId: operationId,
                provider: "bedrock",
                complianceStatus: "compliant",
                metadata: {
                  operation: request.operation,
                  emergencyRedactionApplied: true,
                  piiTokensRedacted: emergencyRedaction.length
                }
              });
              // Return modified safety result for emergency
              /* istanbul ignore next */
              cov_2ng8e89pfv().s[223]++;
              return Object.assign(Object.assign({}, safetyResult), {
                allowed: true,
                modifiedContent: request.prompt
              });
            } else
            /* istanbul ignore next */
            {
              cov_2ng8e89pfv().b[101][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_2ng8e89pfv().b[100][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[98][1]++;
        }
        // For non-emergency operations with critical violations, block the request
        cov_2ng8e89pfv().s[224]++;
        if (
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[103][0]++, !safetyResult.allowed) &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[103][1]++, safetyResult.violations.some(v => {
          /* istanbul ignore next */
          cov_2ng8e89pfv().f[72]++;
          cov_2ng8e89pfv().s[225]++;
          return v.severity === "CRITICAL";
        }))) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[102][0]++;
          cov_2ng8e89pfv().s[226]++;
          throw new Error(`Critical safety violations detected: ${safetyResult.violations.filter(v => {
            /* istanbul ignore next */
            cov_2ng8e89pfv().f[73]++;
            cov_2ng8e89pfv().s[227]++;
            return v.severity === "CRITICAL";
          }).map(v => {
            /* istanbul ignore next */
            cov_2ng8e89pfv().f[74]++;
            cov_2ng8e89pfv().s[228]++;
            return v.details;
          }).join(", ")}`);
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[102][1]++;
        }
        cov_2ng8e89pfv().s[229]++;
        return safetyResult;
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[230]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[104][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[104][1]++, String(error)));
        // Log PII detection error
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[231]++;
        yield this.auditTrail.logEvent({
          eventType: "pii_detection",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: "violation",
          error: {
            type: "pii_detection_error",
            message: errorMessage
          },
          metadata: {
            operation: request.operation,
            processingTimeMs: Date.now() - startTime
          }
        });
        // Return failed safety result
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[232]++;
        return {
          allowed: false,
          confidence: 0.0,
          violations: [{
            type: "CUSTOM",
            severity: "CRITICAL",
            confidence: 1.0,
            details: `PII detection failed: ${errorMessage}`
          }],
          processingTimeMs: Date.now() - startTime
        };
      }
    });
  }
  /**
   * Perform enhanced compliance checks with GDPR validation
   */
  performEnhancedComplianceChecks(request, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[75]++;
    cov_2ng8e89pfv().s[233]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[76]++;
      const startTime =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[234]++, Date.now());
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[235]++;
      try {
        // Create routing path for GDPR validation
        const routingPath =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[236]++, {
          routeType: "direct_bedrock",
          provider: "bedrock",
          operationType: request.operation,
          priority: request.priority
        });
        // Validate GDPR compliance before routing
        const gdprValidation =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[237]++, yield this.gdprValidator.validateBeforeRouting(routingPath, operationId));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[238]++;
        if (!gdprValidation.allowed) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[105][0]++;
          cov_2ng8e89pfv().s[239]++;
          throw new Error(`GDPR compliance violation: ${gdprValidation.reason}`);
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[105][1]++;
        }
        // Perform additional compliance checks
        cov_2ng8e89pfv().s[240]++;
        yield this.performLegacyComplianceChecks(request);
        // Log compliance validation success
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[241]++;
        yield this.auditTrail.logEvent({
          eventType: "gdpr_compliance_validation",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: "compliant",
          metadata: {
            operation: request.operation,
            routingPath: "direct_bedrock",
            gdprCompliant: true,
            processingTimeMs: Date.now() - startTime
          }
        });
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[242]++;
        return {
          gdprCompliant: true,
          piiRedacted: true,
          // PII redaction is always applied
          auditLogged: true
        };
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[243]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[106][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[106][1]++, String(error)));
        // Log compliance validation error
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[244]++;
        yield this.auditTrail.logEvent({
          eventType: "gdpr_compliance_validation",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: "violation",
          error: {
            type: "compliance_error",
            message: errorMessage
          },
          metadata: {
            operation: request.operation,
            routingPath: "direct_bedrock",
            processingTimeMs: Date.now() - startTime
          }
        });
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[245]++;
        throw error; // Re-throw to block the operation
      }
    });
  }
  /**
   * Emergency PII redaction for critical operations
   */
  redactPIIForEmergency(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[77]++;
    // Use aggressive redaction patterns for emergency operations
    let redactedText =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[246]++, text);
    const emergencyRedactionPatterns =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[247]++, [
    // Email addresses - complete redaction
    {
      pattern: /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g,
      replacement: "[EMAIL_REDACTED]"
    },
    // Phone numbers - complete redaction
    {
      pattern: /\b\+?1?[-.\s]?\(?[0-9]{3}\)?[-.\s]?[0-9]{3}[-.\s]?[0-9]{4}\b/g,
      replacement: "[PHONE_REDACTED]"
    }, {
      pattern: /\b\+?[1-9]\d{1,14}\b/g,
      replacement: "[PHONE_REDACTED]"
    },
    // Credit card numbers - complete redaction
    {
      pattern: /\b\d{4}[\s-]?\d{4}[\s-]?\d{4}[\s-]?\d{4}\b/g,
      replacement: "[CARD_REDACTED]"
    },
    // Social Security Numbers - complete redaction
    {
      pattern: /\b\d{3}-\d{2}-\d{4}\b/g,
      replacement: "[SSN_REDACTED]"
    }, {
      pattern: /\b\d{9}\b/g,
      replacement: "[ID_REDACTED]"
    },
    // IBAN - complete redaction
    {
      pattern: /\b[A-Z]{2}\d{2}[A-Z0-9]{4}\d{7}([A-Z0-9]?){0,16}\b/g,
      replacement: "[IBAN_REDACTED]"
    },
    // Names with titles - partial redaction
    {
      pattern: /\b(Mr|Mrs|Ms|Dr|Prof)\.?\s+[A-Z][a-z]+\s+[A-Z][a-z]+\b/g,
      replacement: "$1. [NAME_REDACTED]"
    },
    // IP addresses - complete redaction
    {
      pattern: /\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b/g,
      replacement: "[IP_REDACTED]"
    },
    // API keys and tokens - complete redaction
    {
      pattern: /\bsk-[A-Za-z0-9]{48}\b/g,
      replacement: "[API_KEY_REDACTED]"
    }, {
      pattern: /\bAKIA[A-Z0-9]{16}\b/g,
      replacement: "[AWS_KEY_REDACTED]"
    },
    // Long alphanumeric strings (potential tokens)
    {
      pattern: /\b[A-Za-z0-9]{32,}\b/g,
      replacement: "[TOKEN_REDACTED]"
    }]);
    // Apply all emergency redaction patterns
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[248]++;
    emergencyRedactionPatterns.forEach(({
      pattern,
      replacement
    }) => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[78]++;
      cov_2ng8e89pfv().s[249]++;
      redactedText = redactedText.replace(pattern, replacement);
    });
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[250]++;
    return redactedText;
  }
  /**
   * Legacy compliance checks (renamed from performComplianceChecks)
   */
  performLegacyComplianceChecks(request) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[79]++;
    cov_2ng8e89pfv().s[251]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[80]++;
      // Note: PII Detection and Redaction is now handled by performPIIDetectionAndRedaction method
      // This method focuses on other compliance aspects
      var _a, _b;
      // 2. GDPR Compliance Checks
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[252]++;
      if (
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[109][0]++, (_a = request.context) === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[109][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[108][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[108][1]++, _a.userId)) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[107][0]++;
        const consentValid =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[253]++, yield this.validateGDPRConsent(request.context.userId));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[254]++;
        if (!consentValid) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[110][0]++;
          cov_2ng8e89pfv().s[255]++;
          throw new Error("Missing or invalid GDPR consent for user data processing");
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[110][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[107][1]++;
      }
      // 3. Data Residency Compliance (EU)
      cov_2ng8e89pfv().s[256]++;
      if (
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[113][0]++, (_b = request.context) === null) ||
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[113][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[112][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[112][1]++, _b.tenant)) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[111][0]++;
        const isEUTenant =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[257]++, yield this.isEUTenant(request.context.tenant));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[258]++;
        if (
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[115][0]++, isEUTenant) &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[115][1]++, this.config.region !== "eu-central-1") &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[115][2]++, this.config.region !== "eu-west-1")) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[114][0]++;
          cov_2ng8e89pfv().s[259]++;
          throw new Error(`EU data residency violation: operation must use EU region, current: ${this.config.region}`);
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[114][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[111][1]++;
      }
      // 4. Operation-specific compliance checks
      cov_2ng8e89pfv().s[260]++;
      yield this.performOperationSpecificCompliance(request);
      // 5. Audit trail logging
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[261]++;
      yield this.logComplianceCheck(request);
    });
  }
  /**
   * Validate GDPR consent for user
   */
  validateGDPRConsent(userId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[81]++;
    cov_2ng8e89pfv().s[262]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[82]++;
      cov_2ng8e89pfv().s[263]++;
      try {
        // In real implementation, check consent database
        // For now, we'll use a simple check
        // Check if user has valid consent record
        const consentRecord =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[264]++, yield this.getConsentRecord(userId));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[265]++;
        if (!consentRecord) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[116][0]++;
          cov_2ng8e89pfv().s[266]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[116][1]++;
        }
        // Check if consent is still valid (not expired)
        const consentAge =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[267]++, Date.now() - consentRecord.timestamp.getTime());
        const maxConsentAge =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[268]++, 365 * 24 * 60 * 60 * 1000); // 1 year
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[269]++;
        if (consentAge > maxConsentAge) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[117][0]++;
          cov_2ng8e89pfv().s[270]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_2ng8e89pfv().b[117][1]++;
        }
        // Check if consent covers AI processing
        cov_2ng8e89pfv().s[271]++;
        return consentRecord.aiProcessingConsent === true;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[272]++;
        console.error("GDPR consent validation failed:", error);
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[273]++;
        return false;
      }
    });
  }
  /**
   * Get consent record for user (placeholder)
   */
  getConsentRecord(userId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[83]++;
    cov_2ng8e89pfv().s[274]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[84]++;
      cov_2ng8e89pfv().s[275]++;
      // In real implementation, query consent database
      // For now, return a mock valid consent
      return {
        userId,
        timestamp: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),
        // 30 days ago
        aiProcessingConsent: true,
        dataRetentionConsent: true
      };
    });
  }
  /**
   * Check if tenant is EU-based
   */
  isEUTenant(tenantId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[85]++;
    cov_2ng8e89pfv().s[276]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[86]++;
      // In real implementation, check tenant database
      // For now, simple heuristic based on tenant ID
      const euTenantPatterns =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[277]++, [/^eu-/, /^de-/, /^fr-/, /^it-/, /^es-/, /^nl-/, /^be-/, /^at-/, /^ch-/]);
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[278]++;
      return euTenantPatterns.some(pattern => {
        /* istanbul ignore next */
        cov_2ng8e89pfv().f[87]++;
        cov_2ng8e89pfv().s[279]++;
        return pattern.test(tenantId);
      });
    });
  }
  /**
   * Perform operation-specific compliance checks
   */
  performOperationSpecificCompliance(request) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[88]++;
    cov_2ng8e89pfv().s[280]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[89]++;
      cov_2ng8e89pfv().s[281]++;
      switch (request.operation) {
        case "emergency":
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[118][0]++;
          cov_2ng8e89pfv().s[282]++;
          // Emergency operations have relaxed compliance for speed
          // but still require basic checks
          break;
        case "infrastructure":
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[118][1]++;
          cov_2ng8e89pfv().s[283]++;
          // Infrastructure operations may access system data
          // Ensure no customer data is included
          if (this.containsCustomerData(request.prompt)) {
            /* istanbul ignore next */
            cov_2ng8e89pfv().b[119][0]++;
            cov_2ng8e89pfv().s[284]++;
            throw new Error("Customer data detected in infrastructure operation");
          } else
          /* istanbul ignore next */
          {
            cov_2ng8e89pfv().b[119][1]++;
          }
          cov_2ng8e89pfv().s[285]++;
          break;
        case "meta_monitor":
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[118][2]++;
          cov_2ng8e89pfv().s[286]++;
          // Meta monitoring should not process personal data
          if (this.containsPersonalData(request.prompt)) {
            /* istanbul ignore next */
            cov_2ng8e89pfv().b[120][0]++;
            cov_2ng8e89pfv().s[287]++;
            throw new Error("Personal data detected in meta monitoring operation");
          } else
          /* istanbul ignore next */
          {
            cov_2ng8e89pfv().b[120][1]++;
          }
          cov_2ng8e89pfv().s[288]++;
          break;
        case "implementation":
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[118][3]++;
          cov_2ng8e89pfv().s[289]++;
          // Implementation support should not access production data
          if (this.containsProductionData(request.prompt)) {
            /* istanbul ignore next */
            cov_2ng8e89pfv().b[121][0]++;
            cov_2ng8e89pfv().s[290]++;
            throw new Error("Production data detected in implementation operation");
          } else
          /* istanbul ignore next */
          {
            cov_2ng8e89pfv().b[121][1]++;
          }
          cov_2ng8e89pfv().s[291]++;
          break;
        default:
          /* istanbul ignore next */
          cov_2ng8e89pfv().b[118][4]++;
          cov_2ng8e89pfv().s[292]++;
          // Standard operations follow full compliance
          break;
      }
    });
  }
  /**
   * Check for customer data patterns
   */
  containsCustomerData(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[90]++;
    const customerDataPatterns =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[293]++, [/customer_id:\s*\d+/i, /user_id:\s*\d+/i, /account_id:\s*\d+/i, /order_id:\s*\d+/i, /transaction_id:\s*\d+/i]);
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[294]++;
    return customerDataPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[91]++;
      cov_2ng8e89pfv().s[295]++;
      return pattern.test(text);
    });
  }
  /**
   * Check for personal data patterns
   */
  containsPersonalData(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[92]++;
    const personalDataPatterns =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[296]++, [/first_name:\s*[A-Z][a-z]+/i, /last_name:\s*[A-Z][a-z]+/i, /full_name:\s*[A-Z][a-z]+\s+[A-Z][a-z]+/i, /date_of_birth:\s*\d{4}-\d{2}-\d{2}/i, /address:\s*.+/i]);
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[297]++;
    return personalDataPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[93]++;
      cov_2ng8e89pfv().s[298]++;
      return pattern.test(text);
    });
  }
  /**
   * Check for production data patterns
   */
  containsProductionData(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[94]++;
    const productionDataPatterns =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[299]++, [/prod_/i, /production/i, /live_/i, /real_customer/i, /actual_user/i]);
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[300]++;
    return productionDataPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[95]++;
      cov_2ng8e89pfv().s[301]++;
      return pattern.test(text);
    });
  }
  /**
   * Log compliance check for audit trail
   */
  logComplianceCheck(request) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[96]++;
    cov_2ng8e89pfv().s[302]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[97]++;
      var _a, _b, _c, _d, _e;
      const auditEntry =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[303]++, {
        timestamp: new Date().toISOString(),
        operation: request.operation,
        priority: request.priority,
        userId:
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[123][0]++, (_a = request.context) === null) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[123][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[122][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[122][1]++, _a.userId),
        tenantId:
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[125][0]++, (_b = request.context) === null) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[125][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[124][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[124][1]++, _b.tenant),
        correlationId:
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[127][0]++, (_c = request.context) === null) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[127][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[126][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[126][1]++, _c.correlationId),
        complianceChecks: {
          piiDetection: yield this.containsPII(request.prompt),
          gdprConsent: (
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[130][0]++, (_d = request.context) === null) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[130][1]++, _d === void 0) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[129][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[129][1]++, _d.userId)) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[128][0]++, yield this.validateGDPRConsent(request.context.userId)) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[128][1]++, null),
          dataResidency: (
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[133][0]++, (_e = request.context) === null) ||
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[133][1]++, _e === void 0) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[132][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[132][1]++, _e.tenant)) ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[131][0]++, yield this.isEUTenant(request.context.tenant)) :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[131][1]++, null),
          operationSpecific: true // Passed if we reach this point
        },
        region: this.config.region
      });
      // In real implementation, send to audit service
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[304]++;
      console.log("Compliance audit:", JSON.stringify(auditEntry, null, 2));
    });
  }
  /**
   * Check if text contains PII using the comprehensive detection service
   */
  containsPII(text) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[98]++;
    cov_2ng8e89pfv().s[305]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[99]++;
      cov_2ng8e89pfv().s[306]++;
      try {
        const piiTokens =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[307]++, this.piiDetectionService.testPIIDetection(text));
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[308]++;
        return /* istanbul ignore next */(cov_2ng8e89pfv().b[134][0]++, piiTokens) &&
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[134][1]++, piiTokens.length > 0);
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[309]++;
        console.warn("PII detection service error:", error);
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[310]++;
        return false;
      }
    });
  }
  /**
   * Validate GDPR consent using the enhanced compliance system
   */
  validateGDPRConsentEnhanced(userId, operationId) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[100]++;
    cov_2ng8e89pfv().s[311]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[101]++;
      cov_2ng8e89pfv().s[312]++;
      try {
        const consentValid =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().s[313]++, yield this.validateGDPRConsent(userId));
        // Log consent validation to audit trail
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[314]++;
        yield this.auditTrail.logEvent({
          eventType: "gdpr_consent_validation",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: consentValid ?
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[135][0]++, "compliant") :
          /* istanbul ignore next */
          (cov_2ng8e89pfv().b[135][1]++, "violation"),
          metadata: {
            userId,
            consentValid,
            validationType: "enhanced"
          }
        });
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[315]++;
        return consentValid;
      } catch (error) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[316]++;
        // Log consent validation error
        yield this.auditTrail.logEvent({
          eventType: "gdpr_consent_validation",
          requestId: operationId,
          provider: "bedrock",
          complianceStatus: "violation",
          error: {
            type: "consent_validation_error",
            message: error instanceof Error ?
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[136][0]++, error.message) :
            /* istanbul ignore next */
            (cov_2ng8e89pfv().b[136][1]++, String(error))
          },
          metadata: {
            userId
          }
        });
        /* istanbul ignore next */
        cov_2ng8e89pfv().s[317]++;
        return false;
      }
    });
  }
  /**
   * Calculate cost based on token usage
   */
  calculateCost(tokensUsed) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[102]++;
    cov_2ng8e89pfv().s[318]++;
    if (!tokensUsed) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[137][0]++;
      cov_2ng8e89pfv().s[319]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2ng8e89pfv().b[137][1]++;
    }
    // Claude 3.5 Sonnet pricing (approximate)
    const inputCostPer1k =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[320]++, 0.003); // $0.003 per 1k input tokens
    const outputCostPer1k =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[321]++, 0.015); // $0.015 per 1k output tokens
    const inputCost =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[322]++, tokensUsed.input / 1000 * inputCostPer1k);
    const outputCost =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[323]++, tokensUsed.output / 1000 * outputCostPer1k);
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[324]++;
    return inputCost + outputCost;
  }
  /**
   * Update health status
   */
  updateHealthStatus(success, latencyMs, error) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[103]++;
    cov_2ng8e89pfv().s[325]++;
    this.healthStatus.lastCheck = new Date();
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[326]++;
    this.healthStatus.latencyMs = latencyMs;
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[327]++;
    this.healthStatus.circuitBreakerState = this.circuitBreaker.isOpen("bedrock") ?
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[138][0]++, "open") :
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[138][1]++, "closed");
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[328]++;
    if (success) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[139][0]++;
      cov_2ng8e89pfv().s[329]++;
      this.healthStatus.isHealthy = true;
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[330]++;
      this.healthStatus.consecutiveFailures = 0;
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[331]++;
      delete this.healthStatus.error;
      // Set development mode details if applicable
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[332]++;
      if (
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[141][0]++, process.env.NODE_ENV === "development") &&
      /* istanbul ignore next */
      (cov_2ng8e89pfv().b[141][1]++, !process.env.BEDROCK_ENDPOINT)) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[140][0]++;
        cov_2ng8e89pfv().s[333]++;
        this.healthStatus.details = "Development mode - Bedrock endpoint skipped";
      } else
      /* istanbul ignore next */
      {
        cov_2ng8e89pfv().b[140][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[139][1]++;
      cov_2ng8e89pfv().s[334]++;
      this.healthStatus.isHealthy = false;
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[335]++;
      this.healthStatus.consecutiveFailures++;
      // In development, provide helpful error message
      const isDev =
      /* istanbul ignore next */
      (cov_2ng8e89pfv().s[336]++, process.env.NODE_ENV === "development");
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[337]++;
      if (isDev) {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[142][0]++;
        cov_2ng8e89pfv().s[338]++;
        this.healthStatus.error = `Development mode - Bedrock connection skipped: ${
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[143][0]++,
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[145][0]++, error === null) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[145][1]++, error === void 0) ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[144][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[144][1]++, error.message)) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[143][1]++, "Unknown error")}`;
      } else {
        /* istanbul ignore next */
        cov_2ng8e89pfv().b[142][1]++;
        cov_2ng8e89pfv().s[339]++;
        this.healthStatus.error =
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[147][0]++, error === null) ||
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[147][1]++, error === void 0) ?
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[146][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2ng8e89pfv().b[146][1]++, error.message);
      }
    }
  }
  /**
   * Start health monitoring
   */
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[104]++;
    cov_2ng8e89pfv().s[340]++;
    this.healthCheckInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[105]++;
      cov_2ng8e89pfv().s[341]++;
      return tslib_1.__awaiter(this, void 0, void 0, function* () {
        /* istanbul ignore next */
        cov_2ng8e89pfv().f[106]++;
        cov_2ng8e89pfv().s[342]++;
        try {
          /* istanbul ignore next */
          cov_2ng8e89pfv().s[343]++;
          yield this.performHealthCheck();
        } catch (error) {
          /* istanbul ignore next */
          cov_2ng8e89pfv().s[344]++;
          console.error("Health check failed:", error);
        }
      });
    }, 30000); // Check every 30 seconds
  }
  /**
   * Generate unique operation ID
   */
  generateOperationId() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[107]++;
    cov_2ng8e89pfv().s[345]++;
    return `direct-bedrock-${Date.now()}-${Math.random().toString(36).substring(2, 11)}`;
  }
  /**
   * Get PII detection statistics
   */
  getPIIDetectionStats() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[108]++;
    cov_2ng8e89pfv().s[346]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2ng8e89pfv().f[109]++;
      cov_2ng8e89pfv().s[347]++;
      // This would typically query a metrics store
      // For now, return mock statistics
      return {
        totalDetections: 0,
        totalRedactions: 0,
        detectionsByType: {},
        averageConfidence: 0,
        lastDetection: undefined
      };
    });
  }
  /**
   * Get redaction placeholder for PII type
   */
  getRedactionPlaceholder(piiType) {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[110]++;
    const placeholders =
    /* istanbul ignore next */
    (cov_2ng8e89pfv().s[348]++, {
      EMAIL: "[EMAIL_REDACTED]",
      PHONE: "[PHONE_REDACTED]",
      CREDIT_CARD: "[CREDIT_CARD_REDACTED]",
      SSN: "[SSN_REDACTED]",
      IBAN: "[IBAN_REDACTED]"
    });
    /* istanbul ignore next */
    cov_2ng8e89pfv().s[349]++;
    return /* istanbul ignore next */(cov_2ng8e89pfv().b[148][0]++, placeholders[piiType]) ||
    /* istanbul ignore next */
    (cov_2ng8e89pfv().b[148][1]++, "[PII_REDACTED]");
  }
  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_2ng8e89pfv().f[111]++;
    cov_2ng8e89pfv().s[350]++;
    if (this.healthCheckInterval) {
      /* istanbul ignore next */
      cov_2ng8e89pfv().b[149][0]++;
      cov_2ng8e89pfv().s[351]++;
      clearInterval(this.healthCheckInterval);
      /* istanbul ignore next */
      cov_2ng8e89pfv().s[352]++;
      this.healthCheckInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_2ng8e89pfv().b[149][1]++;
    }
  }
}
/* istanbul ignore next */
cov_2ng8e89pfv().s[353]++;
exports.DirectBedrockClient = DirectBedrockClient;
// Types are already exported as interfaces above
//# sourceMappingURL=data:application/json;charset=utf-8;base64,