{"file":"/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/__tests__/support-operations-cache.test.ts","mappings":"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","names":[],"sources":["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/__tests__/support-operations-cache.test.ts"],"sourcesContent":["/**\n * Support Operations Cache Tests\n *\n * Comprehensive test suite for the support operations caching layer\n */\n\nimport { beforeEach, describe, expect, it } from \"@jest/globals\";\nimport type {\n  ComplianceValidationResult,\n  CostAnalysis,\n  ExecutionMetadata,\n  ImplementationGap,\n  InfrastructureAuditResult,\n  SecurityAuditResult,\n} from \"../bedrock-support-manager\";\nimport {\n  SUPPORT_CACHE_CONFIGS,\n  SupportOperationsCache,\n  createSupportOperationsCache,\n  type SupportCacheConfig,\n} from \"../support-operations-cache\";\n\ndescribe(\"SupportOperationsCache\", () => {\n  let cache: SupportOperationsCache;\n\n  beforeEach(() => {\n    cache = new SupportOperationsCache();\n  });\n\n  describe(\"Infrastructure Audit Caching\", () => {\n    it(\"should cache and retrieve infrastructure audit results\", async () => {\n      const auditResult: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      // Cache the result\n      await cache.setInfrastructureAudit(auditResult);\n\n      // Retrieve from cache\n      const cached = await cache.getInfrastructureAudit();\n\n      expect(cached).toBeDefined();\n      expect(cached?.overallHealth).toBe(\"healthy\");\n      expect(cached?.detectedIssues).toHaveLength(0);\n    });\n\n    it(\"should return null for cache miss\", async () => {\n      const cached = await cache.getInfrastructureAudit({ context: \"test\" });\n      expect(cached).toBeNull();\n    });\n\n    it(\"should cache different contexts separately\", async () => {\n      const result1: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      const result2: InfrastructureAuditResult = {\n        ...result1,\n        overallHealth: \"warning\",\n      };\n\n      await cache.setInfrastructureAudit(result1, { env: \"dev\" });\n      await cache.setInfrastructureAudit(result2, { env: \"prod\" });\n\n      const cached1 = await cache.getInfrastructureAudit({ env: \"dev\" });\n      const cached2 = await cache.getInfrastructureAudit({ env: \"prod\" });\n\n      expect(cached1?.overallHealth).toBe(\"healthy\");\n      expect(cached2?.overallHealth).toBe(\"warning\");\n    });\n  });\n\n  describe(\"Meta-Monitoring Caching\", () => {\n    it(\"should cache and retrieve meta-monitoring data\", async () => {\n      const executionData: ExecutionMetadata = {\n        executionId: \"exec-123\",\n        timestamp: new Date(),\n        operation: \"test-operation\",\n        duration: 1000,\n        success: true,\n        performanceMetrics: {\n          responseTime: 500,\n          memoryUsage: 100,\n          cpuUsage: 50,\n          networkLatency: 10,\n        },\n      };\n\n      await cache.setMetaMonitoring(executionData, \"exec-123\");\n\n      const cached = await cache.getMetaMonitoring(\"exec-123\");\n\n      expect(cached).toBeDefined();\n      expect(cached?.executionId).toBe(\"exec-123\");\n      expect(cached?.success).toBe(true);\n    });\n\n    it(\"should handle different execution IDs\", async () => {\n      const data1: ExecutionMetadata = {\n        executionId: \"exec-1\",\n        timestamp: new Date(),\n        operation: \"op1\",\n        duration: 100,\n        success: true,\n        performanceMetrics: {\n          responseTime: 50,\n          memoryUsage: 10,\n          cpuUsage: 5,\n          networkLatency: 1,\n        },\n      };\n\n      const data2: ExecutionMetadata = {\n        ...data1,\n        executionId: \"exec-2\",\n        operation: \"op2\",\n      };\n\n      await cache.setMetaMonitoring(data1, \"exec-1\");\n      await cache.setMetaMonitoring(data2, \"exec-2\");\n\n      const cached1 = await cache.getMetaMonitoring(\"exec-1\");\n      const cached2 = await cache.getMetaMonitoring(\"exec-2\");\n\n      expect(cached1?.operation).toBe(\"op1\");\n      expect(cached2?.operation).toBe(\"op2\");\n    });\n  });\n\n  describe(\"Implementation Gaps Caching\", () => {\n    it(\"should cache and retrieve implementation gaps\", async () => {\n      const gaps: ImplementationGap[] = [\n        {\n          id: \"gap-1\",\n          module: \"auth\",\n          description: \"Missing OAuth implementation\",\n          priority: \"high\",\n          estimatedEffort: \"2 days\",\n          dependencies: [],\n        },\n      ];\n\n      await cache.setImplementationGaps(gaps, \"auth\");\n\n      const cached = await cache.getImplementationGaps(\"auth\");\n\n      expect(cached).toBeDefined();\n      expect(cached).toHaveLength(1);\n      expect(cached?.[0].module).toBe(\"auth\");\n    });\n\n    it(\"should cache gaps for different modules\", async () => {\n      const authGaps: ImplementationGap[] = [\n        {\n          id: \"gap-1\",\n          module: \"auth\",\n          description: \"Auth gap\",\n          priority: \"high\",\n          estimatedEffort: \"1 day\",\n          dependencies: [],\n        },\n      ];\n\n      const paymentGaps: ImplementationGap[] = [\n        {\n          id: \"gap-2\",\n          module: \"payment\",\n          description: \"Payment gap\",\n          priority: \"medium\",\n          estimatedEffort: \"3 days\",\n          dependencies: [],\n        },\n      ];\n\n      await cache.setImplementationGaps(authGaps, \"auth\");\n      await cache.setImplementationGaps(paymentGaps, \"payment\");\n\n      const cachedAuth = await cache.getImplementationGaps(\"auth\");\n      const cachedPayment = await cache.getImplementationGaps(\"payment\");\n\n      expect(cachedAuth?.[0].module).toBe(\"auth\");\n      expect(cachedPayment?.[0].module).toBe(\"payment\");\n    });\n  });\n\n  describe(\"Compliance Validation Caching\", () => {\n    it(\"should cache and retrieve compliance validation results\", async () => {\n      const result: ComplianceValidationResult = {\n        isCompliant: true,\n        violations: [],\n        recommendations: [],\n        lastChecked: new Date(),\n      };\n\n      await cache.setComplianceValidation(result, \"gdpr\");\n\n      const cached = await cache.getComplianceValidation(\"gdpr\");\n\n      expect(cached).toBeDefined();\n      expect(cached?.isCompliant).toBe(true);\n      expect(cached?.violations).toHaveLength(0);\n    });\n\n    it(\"should handle different compliance scopes\", async () => {\n      const gdprResult: ComplianceValidationResult = {\n        isCompliant: true,\n        violations: [],\n        recommendations: [],\n        lastChecked: new Date(),\n      };\n\n      const hipaaResult: ComplianceValidationResult = {\n        isCompliant: false,\n        violations: [\"Missing encryption\"],\n        recommendations: [\"Enable encryption\"],\n        lastChecked: new Date(),\n      };\n\n      await cache.setComplianceValidation(gdprResult, \"gdpr\");\n      await cache.setComplianceValidation(hipaaResult, \"hipaa\");\n\n      const cachedGdpr = await cache.getComplianceValidation(\"gdpr\");\n      const cachedHipaa = await cache.getComplianceValidation(\"hipaa\");\n\n      expect(cachedGdpr?.isCompliant).toBe(true);\n      expect(cachedHipaa?.isCompliant).toBe(false);\n    });\n  });\n\n  describe(\"Security Audit Caching\", () => {\n    it(\"should cache and retrieve security audit results\", async () => {\n      const result: SecurityAuditResult = {\n        securityScore: 85,\n        vulnerabilities: [],\n        recommendations: [],\n        lastAudit: new Date(),\n      };\n\n      await cache.setSecurityAudit(result, \"api\");\n\n      const cached = await cache.getSecurityAudit(\"api\");\n\n      expect(cached).toBeDefined();\n      expect(cached?.securityScore).toBe(85);\n      expect(cached?.vulnerabilities).toHaveLength(0);\n    });\n\n    it(\"should cache audits for different components\", async () => {\n      const apiResult: SecurityAuditResult = {\n        securityScore: 90,\n        vulnerabilities: [],\n        recommendations: [],\n        lastAudit: new Date(),\n      };\n\n      const dbResult: SecurityAuditResult = {\n        securityScore: 75,\n        vulnerabilities: [\n          {\n            id: \"vuln-1\",\n            severity: \"medium\",\n            description: \"Weak password policy\",\n            component: \"database\",\n            remediation: \"Strengthen password requirements\",\n          },\n        ],\n        recommendations: [\"Update password policy\"],\n        lastAudit: new Date(),\n      };\n\n      await cache.setSecurityAudit(apiResult, \"api\");\n      await cache.setSecurityAudit(dbResult, \"database\");\n\n      const cachedApi = await cache.getSecurityAudit(\"api\");\n      const cachedDb = await cache.getSecurityAudit(\"database\");\n\n      expect(cachedApi?.securityScore).toBe(90);\n      expect(cachedDb?.securityScore).toBe(75);\n    });\n  });\n\n  describe(\"Cost Analysis Caching\", () => {\n    it(\"should cache and retrieve cost analysis\", async () => {\n      const analysis: CostAnalysis = {\n        currentSpend: 100,\n        projectedSpend: 150,\n        budgetUtilization: 0.67,\n        costBreakdown: {\n          compute: 60,\n          storage: 30,\n          network: 10,\n        },\n        recommendations: [\"Optimize storage usage\"],\n      };\n\n      await cache.setCostAnalysis(analysis, \"monthly\");\n\n      const cached = await cache.getCostAnalysis(\"monthly\");\n\n      expect(cached).toBeDefined();\n      expect(cached?.currentSpend).toBe(100);\n      expect(cached?.budgetUtilization).toBe(0.67);\n    });\n\n    it(\"should cache analysis for different time ranges\", async () => {\n      const dailyAnalysis: CostAnalysis = {\n        currentSpend: 10,\n        projectedSpend: 15,\n        budgetUtilization: 0.5,\n        costBreakdown: { compute: 6, storage: 3, network: 1 },\n        recommendations: [],\n      };\n\n      const monthlyAnalysis: CostAnalysis = {\n        currentSpend: 300,\n        projectedSpend: 450,\n        budgetUtilization: 0.75,\n        costBreakdown: { compute: 180, storage: 90, network: 30 },\n        recommendations: [\"Review compute usage\"],\n      };\n\n      await cache.setCostAnalysis(dailyAnalysis, \"daily\");\n      await cache.setCostAnalysis(monthlyAnalysis, \"monthly\");\n\n      const cachedDaily = await cache.getCostAnalysis(\"daily\");\n      const cachedMonthly = await cache.getCostAnalysis(\"monthly\");\n\n      expect(cachedDaily?.currentSpend).toBe(10);\n      expect(cachedMonthly?.currentSpend).toBe(300);\n    });\n  });\n\n  describe(\"Cache Statistics\", () => {\n    it(\"should track cache hits and misses\", async () => {\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      // Miss\n      await cache.getInfrastructureAudit();\n\n      // Set\n      await cache.setInfrastructureAudit(result);\n\n      // Hit\n      await cache.getInfrastructureAudit();\n\n      const stats = cache.getStats();\n\n      expect(stats.hits).toBe(1);\n      expect(stats.misses).toBe(1);\n      expect(stats.totalRequests).toBe(2);\n      expect(stats.hitRate).toBe(0.5);\n    });\n\n    it(\"should track operation-specific statistics\", async () => {\n      const auditResult: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      await cache.setInfrastructureAudit(auditResult);\n      await cache.getInfrastructureAudit(); // Hit\n      await cache.getInfrastructureAudit(); // Hit\n\n      const opStats = cache.getOperationStats(\"infrastructureAudit\");\n\n      expect(opStats.hits).toBe(2);\n      expect(opStats.misses).toBe(0);\n      expect(opStats.hitRate).toBe(1.0);\n    });\n\n    it(\"should update cache size correctly\", async () => {\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      const initialStats = cache.getStats();\n      expect(initialStats.cacheSize).toBe(0);\n\n      await cache.setInfrastructureAudit(result);\n\n      const updatedStats = cache.getStats();\n      expect(updatedStats.cacheSize).toBe(1);\n    });\n  });\n\n  describe(\"Cache Invalidation\", () => {\n    it(\"should invalidate specific operation type\", async () => {\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      await cache.setInfrastructureAudit(result);\n\n      let cached = await cache.getInfrastructureAudit();\n      expect(cached).toBeDefined();\n\n      await cache.invalidate(\"infrastructureAudit\");\n\n      cached = await cache.getInfrastructureAudit();\n      expect(cached).toBeNull();\n    });\n\n    it(\"should invalidate all cache entries\", async () => {\n      const auditResult: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      const complianceResult: ComplianceValidationResult = {\n        isCompliant: true,\n        violations: [],\n        recommendations: [],\n        lastChecked: new Date(),\n      };\n\n      await cache.setInfrastructureAudit(auditResult);\n      await cache.setComplianceValidation(complianceResult);\n\n      const statsBefore = cache.getStats();\n      expect(statsBefore.cacheSize).toBe(2);\n\n      await cache.invalidateAll();\n\n      const statsAfter = cache.getStats();\n      expect(statsAfter.cacheSize).toBe(0);\n\n      const cachedAudit = await cache.getInfrastructureAudit();\n      const cachedCompliance = await cache.getComplianceValidation();\n\n      expect(cachedAudit).toBeNull();\n      expect(cachedCompliance).toBeNull();\n    });\n\n    it(\"should invalidate specific context\", async () => {\n      const result1: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      const result2: InfrastructureAuditResult = {\n        ...result1,\n        overallHealth: \"warning\",\n      };\n\n      await cache.setInfrastructureAudit(result1, { env: \"dev\" });\n      await cache.setInfrastructureAudit(result2, { env: \"prod\" });\n\n      await cache.invalidate(\"infrastructureAudit\", { env: \"dev\" });\n\n      const cachedDev = await cache.getInfrastructureAudit({ env: \"dev\" });\n      const cachedProd = await cache.getInfrastructureAudit({ env: \"prod\" });\n\n      expect(cachedDev).toBeNull();\n      expect(cachedProd).toBeDefined();\n    });\n  });\n\n  describe(\"Cache Configuration\", () => {\n    it(\"should use custom configuration\", () => {\n      const customConfig: Partial<SupportCacheConfig> = {\n        enabled: false,\n        maxCacheSize: 500,\n      };\n\n      const customCache = new SupportOperationsCache(customConfig);\n      const config = customCache.getConfig();\n\n      expect(config.enabled).toBe(false);\n      expect(config.maxCacheSize).toBe(500);\n    });\n\n    it(\"should update configuration\", () => {\n      cache.updateConfig({\n        maxCacheSize: 2000,\n        compressionEnabled: false,\n      });\n\n      const config = cache.getConfig();\n\n      expect(config.maxCacheSize).toBe(2000);\n      expect(config.compressionEnabled).toBe(false);\n    });\n\n    it(\"should update TTL for specific operations\", () => {\n      cache.updateConfig({\n        ttlSeconds: {\n          infrastructureAudit: 600,\n          metaMonitoring: 120,\n          implementationGaps: 900,\n          complianceValidation: 3600,\n          securityAudit: 1800,\n          costAnalysis: 600,\n        },\n      });\n\n      const config = cache.getConfig();\n\n      expect(config.ttlSeconds.infrastructureAudit).toBe(600);\n      expect(config.ttlSeconds.metaMonitoring).toBe(120);\n    });\n  });\n\n  describe(\"Health Check\", () => {\n    it(\"should report healthy status for empty cache\", async () => {\n      const health = await cache.healthCheck();\n\n      expect(health.healthy).toBe(true);\n      expect(health.cacheSize).toBe(0);\n      expect(health.errors).toHaveLength(0);\n    });\n\n    it(\"should report healthy status with good performance\", async () => {\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      await cache.setInfrastructureAudit(result);\n      await cache.getInfrastructureAudit(); // Hit\n\n      const health = await cache.healthCheck();\n\n      expect(health.healthy).toBe(true);\n      expect(health.cacheSize).toBe(1);\n      expect(health.hitRate).toBeGreaterThan(0);\n    });\n  });\n\n  describe(\"Cache Warm-up\", () => {\n    it(\"should warm up cache with common operations\", async () => {\n      const operations = [\n        {\n          type: \"infrastructureAudit\" as const,\n          data: {\n            timestamp: new Date(),\n            overallHealth: \"healthy\" as const,\n            detectedIssues: [],\n            implementationGaps: [],\n            recommendations: [],\n            complianceStatus: {\n              gdprCompliant: true,\n              dataResidencyCompliant: true,\n              auditTrailComplete: true,\n              issues: [],\n            },\n          },\n        },\n        {\n          type: \"complianceValidation\" as const,\n          data: {\n            isCompliant: true,\n            violations: [],\n            recommendations: [],\n            lastChecked: new Date(),\n          },\n        },\n      ];\n\n      await cache.warmUp(operations);\n\n      const stats = cache.getStats();\n      expect(stats.cacheSize).toBe(2);\n    });\n  });\n\n  describe(\"Performance Target\", () => {\n    it(\"should check if performance target is met\", async () => {\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      await cache.setInfrastructureAudit(result);\n\n      // Generate hits\n      await cache.getInfrastructureAudit();\n      await cache.getInfrastructureAudit();\n      await cache.getInfrastructureAudit();\n\n      const meetsTarget = cache.isPerformanceTarget(0.7);\n      expect(meetsTarget).toBe(true);\n    });\n\n    it(\"should fail performance target with low hit rate\", async () => {\n      // Generate misses\n      await cache.getInfrastructureAudit({ context: \"miss1\" });\n      await cache.getInfrastructureAudit({ context: \"miss2\" });\n      await cache.getInfrastructureAudit({ context: \"miss3\" });\n\n      const meetsTarget = cache.isPerformanceTarget(0.7);\n      expect(meetsTarget).toBe(false);\n    });\n  });\n\n  describe(\"Factory Function\", () => {\n    it(\"should create cache with factory function\", () => {\n      const factoryCache = createSupportOperationsCache({\n        maxCacheSize: 500,\n      });\n\n      const config = factoryCache.getConfig();\n      expect(config.maxCacheSize).toBe(500);\n    });\n  });\n\n  describe(\"Environment Configurations\", () => {\n    it(\"should have development configuration\", () => {\n      const devConfig = SUPPORT_CACHE_CONFIGS.development;\n\n      expect(devConfig.enabled).toBe(true);\n      expect(devConfig.maxCacheSize).toBe(100);\n      expect(devConfig.ttlSeconds.infrastructureAudit).toBe(60);\n    });\n\n    it(\"should have staging configuration\", () => {\n      const stagingConfig = SUPPORT_CACHE_CONFIGS.staging;\n\n      expect(stagingConfig.enabled).toBe(true);\n      expect(stagingConfig.maxCacheSize).toBe(500);\n      expect(stagingConfig.ttlSeconds.infrastructureAudit).toBe(180);\n    });\n\n    it(\"should have production configuration\", () => {\n      const prodConfig = SUPPORT_CACHE_CONFIGS.production;\n\n      expect(prodConfig.enabled).toBe(true);\n      expect(prodConfig.maxCacheSize).toBe(1000);\n      expect(prodConfig.ttlSeconds.infrastructureAudit).toBe(300);\n    });\n  });\n\n  describe(\"Cache Entries Debugging\", () => {\n    it(\"should get cache entries for debugging\", async () => {\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      await cache.setInfrastructureAudit(result);\n\n      const entries = cache.getCacheEntries();\n\n      expect(entries).toHaveLength(1);\n      expect(entries[0].operationType).toBe(\"infrastructureAudit\");\n      expect(entries[0].accessCount).toBe(0);\n    });\n  });\n\n  describe(\"Disabled Cache\", () => {\n    it(\"should not cache when disabled\", async () => {\n      const disabledCache = new SupportOperationsCache({ enabled: false });\n\n      const result: InfrastructureAuditResult = {\n        timestamp: new Date(),\n        overallHealth: \"healthy\",\n        detectedIssues: [],\n        implementationGaps: [],\n        recommendations: [],\n        complianceStatus: {\n          gdprCompliant: true,\n          dataResidencyCompliant: true,\n          auditTrailComplete: true,\n          issues: [],\n        },\n      };\n\n      await disabledCache.setInfrastructureAudit(result);\n\n      const cached = await disabledCache.getInfrastructureAudit();\n\n      expect(cached).toBeNull();\n\n      const stats = disabledCache.getStats();\n      expect(stats.cacheSize).toBe(0);\n    });\n  });\n});\n"],"version":3}