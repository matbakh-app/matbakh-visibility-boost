1683b2b00e24683cd8e67e0d8265f0dd
"use strict";

/**
 * Routing Efficiency Optimizer
 *
 * Actively optimizes routing decisions to improve performance by >15%.
 * Uses machine learning-based optimization and adaptive routing rules.
 *
 * @module routing-efficiency-optimizer
 */
/* istanbul ignore next */
function cov_1h31f5qhg4() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/routing-efficiency-optimizer.ts";
  var hash = "1125ccea08b7423ff5e8d746ef9f4f296bd80803";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/routing-efficiency-optimizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 75
        }
      },
      "2": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 76
        }
      },
      "3": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "4": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 24,
          column: 87
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 60
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 70
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 62
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 50
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 50
        }
      },
      "10": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "11": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 34
        }
      },
      "12": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "13": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 53
        }
      },
      "14": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "15": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "16": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 79
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "18": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 38
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 40
        }
      },
      "20": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 41
        }
      },
      "21": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 38
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "24": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "25": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 79
        }
      },
      "26": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "27": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "28": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 98
        }
      },
      "29": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 23
        }
      },
      "30": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 85
        }
      },
      "31": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 37
        }
      },
      "32": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 46
        }
      },
      "33": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 120
        }
      },
      "34": {
        start: {
          line: 82,
          column: 55
        },
        end: {
          line: 82,
          column: 82
        }
      },
      "35": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 133
        }
      },
      "36": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "37": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "38": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 23
        }
      },
      "39": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 85
        }
      },
      "40": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 38
        }
      },
      "41": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "42": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 54
        }
      },
      "43": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 51
        }
      },
      "44": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 130
        }
      },
      "45": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "46": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "47": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 87
        }
      },
      "48": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 49
        }
      },
      "49": {
        start: {
          line: 115,
          column: 43
        },
        end: {
          line: 115,
          column: 81
        }
      },
      "50": {
        start: {
          line: 117,
          column: 40
        },
        end: {
          line: 117,
          column: 106
        }
      },
      "51": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "52": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 96
        }
      },
      "53": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 27
        }
      },
      "54": {
        start: {
          line: 123,
          column: 47
        },
        end: {
          line: 123,
          column: 161
        }
      },
      "55": {
        start: {
          line: 123,
          column: 109
        },
        end: {
          line: 123,
          column: 159
        }
      },
      "56": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "57": {
        start: {
          line: 126,
          column: 35
        },
        end: {
          line: 137,
          column: 21
        }
      },
      "58": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 58
        }
      },
      "59": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 55
        }
      },
      "60": {
        start: {
          line: 141,
          column: 20
        },
        end: {
          line: 145,
          column: 23
        }
      },
      "61": {
        start: {
          line: 141,
          column: 99
        },
        end: {
          line: 141,
          column: 112
        }
      },
      "62": {
        start: {
          line: 143,
          column: 91
        },
        end: {
          line: 143,
          column: 112
        }
      },
      "63": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 119
        }
      },
      "64": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 59
        }
      },
      "65": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 98
        }
      },
      "66": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "67": {
        start: {
          line: 161,
          column: 31
        },
        end: {
          line: 161,
          column: 74
        }
      },
      "68": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "69": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "70": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "71": {
        start: {
          line: 165,
          column: 30
        },
        end: {
          line: 165,
          column: 34
        }
      },
      "72": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 175,
          column: 17
        }
      },
      "73": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 55
        }
      },
      "74": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "75": {
        start: {
          line: 185,
          column: 31
        },
        end: {
          line: 185,
          column: 89
        }
      },
      "76": {
        start: {
          line: 186,
          column: 31
        },
        end: {
          line: 186,
          column: 74
        }
      },
      "77": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "78": {
        start: {
          line: 188,
          column: 34
        },
        end: {
          line: 188,
          column: 35
        }
      },
      "79": {
        start: {
          line: 189,
          column: 38
        },
        end: {
          line: 189,
          column: 39
        }
      },
      "80": {
        start: {
          line: 190,
          column: 28
        },
        end: {
          line: 190,
          column: 29
        }
      },
      "81": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 34
        }
      },
      "82": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "83": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "84": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "85": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 54
        }
      },
      "86": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 83
        }
      },
      "87": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 82
        }
      },
      "88": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 198,
          column: 60
        }
      },
      "89": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "90": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 79
        }
      },
      "91": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 204,
          column: 21
        }
      },
      "92": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 99
        }
      },
      "93": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 207,
          column: 21
        }
      },
      "94": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 108
        }
      },
      "95": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 216,
          column: 14
        }
      },
      "96": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 343,
          column: 11
        }
      },
      "97": {
        start: {
          line: 224,
          column: 36
        },
        end: {
          line: 224,
          column: 38
        }
      },
      "98": {
        start: {
          line: 226,
          column: 34
        },
        end: {
          line: 226,
          column: 154
        }
      },
      "99": {
        start: {
          line: 226,
          column: 124
        },
        end: {
          line: 226,
          column: 150
        }
      },
      "100": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 230,
          column: 13
        }
      },
      "101": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 95
        }
      },
      "102": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 39
        }
      },
      "103": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 257,
          column: 13
        }
      },
      "104": {
        start: {
          line: 233,
          column: 38
        },
        end: {
          line: 233,
          column: 70
        }
      },
      "105": {
        start: {
          line: 234,
          column: 35
        },
        end: {
          line: 234,
          column: 64
        }
      },
      "106": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 256,
          column: 17
        }
      },
      "107": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 255,
          column: 21
        }
      },
      "108": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 254,
          column: 27
        }
      },
      "109": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "110": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 276,
          column: 19
        }
      },
      "111": {
        start: {
          line: 279,
          column: 33
        },
        end: {
          line: 279,
          column: 75
        }
      },
      "112": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "113": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "114": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "115": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 317,
          column: 19
        }
      },
      "116": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 338,
          column: 13
        }
      },
      "117": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 337,
          column: 19
        }
      },
      "118": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 342,
          column: 15
        }
      },
      "119": {
        start: {
          line: 340,
          column: 38
        },
        end: {
          line: 340,
          column: 81
        }
      },
      "120": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 77
        }
      },
      "121": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 371,
          column: 11
        }
      },
      "122": {
        start: {
          line: 350,
          column: 28
        },
        end: {
          line: 350,
          column: 30
        }
      },
      "123": {
        start: {
          line: 351,
          column: 33
        },
        end: {
          line: 351,
          column: 34
        }
      },
      "124": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "125": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 356,
          column: 17
        }
      },
      "126": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 354,
          column: 98
        }
      },
      "127": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 26
        }
      },
      "128": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 367,
          column: 17
        }
      },
      "129": {
        start: {
          line: 358,
          column: 36
        },
        end: {
          line: 358,
          column: 82
        }
      },
      "130": {
        start: {
          line: 359,
          column: 20
        },
        end: {
          line: 363,
          column: 21
        }
      },
      "131": {
        start: {
          line: 360,
          column: 24
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "132": {
        start: {
          line: 361,
          column: 24
        },
        end: {
          line: 361,
          column: 41
        }
      },
      "133": {
        start: {
          line: 362,
          column: 24
        },
        end: {
          line: 362,
          column: 107
        }
      },
      "134": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 135
        }
      },
      "135": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 56
        }
      },
      "136": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 27
        }
      },
      "137": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 394,
          column: 11
        }
      },
      "138": {
        start: {
          line: 378,
          column: 43
        },
        end: {
          line: 378,
          column: 72
        }
      },
      "139": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "140": {
        start: {
          line: 381,
          column: 20
        },
        end: {
          line: 381,
          column: 68
        }
      },
      "141": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 71
        }
      },
      "142": {
        start: {
          line: 385,
          column: 20
        },
        end: {
          line: 385,
          column: 66
        }
      },
      "143": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 387,
          column: 70
        }
      },
      "144": {
        start: {
          line: 389,
          column: 20
        },
        end: {
          line: 389,
          column: 67
        }
      },
      "145": {
        start: {
          line: 391,
          column: 20
        },
        end: {
          line: 391,
          column: 91
        }
      },
      "146": {
        start: {
          line: 392,
          column: 20
        },
        end: {
          line: 392,
          column: 33
        }
      },
      "147": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 415,
          column: 11
        }
      },
      "148": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 414,
          column: 13
        }
      },
      "149": {
        start: {
          line: 404,
          column: 37
        },
        end: {
          line: 404,
          column: 135
        }
      },
      "150": {
        start: {
          line: 406,
          column: 37
        },
        end: {
          line: 406,
          column: 185
        }
      },
      "151": {
        start: {
          line: 406,
          column: 65
        },
        end: {
          line: 406,
          column: 183
        }
      },
      "152": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 408,
          column: 124
        }
      },
      "153": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 409,
          column: 28
        }
      },
      "154": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 412,
          column: 105
        }
      },
      "155": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 29
        }
      },
      "156": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "157": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "158": {
        start: {
          line: 425,
          column: 16
        },
        end: {
          line: 425,
          column: 104
        }
      },
      "159": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 426,
          column: 28
        }
      },
      "160": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 429,
          column: 101
        }
      },
      "161": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 430,
          column: 29
        }
      },
      "162": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 448,
          column: 11
        }
      },
      "163": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 447,
          column: 13
        }
      },
      "164": {
        start: {
          line: 440,
          column: 16
        },
        end: {
          line: 440,
          column: 66
        }
      },
      "165": {
        start: {
          line: 441,
          column: 16
        },
        end: {
          line: 441,
          column: 104
        }
      },
      "166": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 28
        }
      },
      "167": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 445,
          column: 94
        }
      },
      "168": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 446,
          column: 29
        }
      },
      "169": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 464,
          column: 11
        }
      },
      "170": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 463,
          column: 13
        }
      },
      "171": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 102
        }
      },
      "172": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 28
        }
      },
      "173": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 461,
          column: 98
        }
      },
      "174": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 29
        }
      },
      "175": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 481,
          column: 11
        }
      },
      "176": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 480,
          column: 13
        }
      },
      "177": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 472,
          column: 58
        }
      },
      "178": {
        start: {
          line: 473,
          column: 16
        },
        end: {
          line: 473,
          column: 76
        }
      },
      "179": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 474,
          column: 86
        }
      },
      "180": {
        start: {
          line: 475,
          column: 16
        },
        end: {
          line: 475,
          column: 28
        }
      },
      "181": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 478,
          column: 103
        }
      },
      "182": {
        start: {
          line: 479,
          column: 16
        },
        end: {
          line: 479,
          column: 29
        }
      },
      "183": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 511,
          column: 11
        }
      },
      "184": {
        start: {
          line: 488,
          column: 37
        },
        end: {
          line: 488,
          column: 78
        }
      },
      "185": {
        start: {
          line: 489,
          column: 24
        },
        end: {
          line: 489,
          column: 34
        }
      },
      "186": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 510,
          column: 13
        }
      },
      "187": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 492,
          column: 29
        }
      },
      "188": {
        start: {
          line: 492,
          column: 20
        },
        end: {
          line: 492,
          column: 29
        }
      },
      "189": {
        start: {
          line: 493,
          column: 46
        },
        end: {
          line: 493,
          column: 78
        }
      },
      "190": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 495,
          column: 29
        }
      },
      "191": {
        start: {
          line: 495,
          column: 20
        },
        end: {
          line: 495,
          column: 29
        }
      },
      "192": {
        start: {
          line: 497,
          column: 36
        },
        end: {
          line: 497,
          column: 86
        }
      },
      "193": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 68
        }
      },
      "194": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 64
        }
      },
      "195": {
        start: {
          line: 500,
          column: 16
        },
        end: {
          line: 500,
          column: 72
        }
      },
      "196": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 58
        }
      },
      "197": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 508,
          column: 17
        }
      },
      "198": {
        start: {
          line: 505,
          column: 20
        },
        end: {
          line: 505,
          column: 60
        }
      },
      "199": {
        start: {
          line: 506,
          column: 20
        },
        end: {
          line: 506,
          column: 51
        }
      },
      "200": {
        start: {
          line: 507,
          column: 20
        },
        end: {
          line: 507,
          column: 43
        }
      },
      "201": {
        start: {
          line: 509,
          column: 16
        },
        end: {
          line: 509,
          column: 156
        }
      },
      "202": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 541,
          column: 11
        }
      },
      "203": {
        start: {
          line: 518,
          column: 39
        },
        end: {
          line: 518,
          column: 77
        }
      },
      "204": {
        start: {
          line: 519,
          column: 36
        },
        end: {
          line: 520,
          column: 49
        }
      },
      "205": {
        start: {
          line: 521,
          column: 40
        },
        end: {
          line: 522,
          column: 53
        }
      },
      "206": {
        start: {
          line: 523,
          column: 33
        },
        end: {
          line: 523,
          column: 104
        }
      },
      "207": {
        start: {
          line: 524,
          column: 39
        },
        end: {
          line: 526,
          column: 19
        }
      },
      "208": {
        start: {
          line: 527,
          column: 43
        },
        end: {
          line: 529,
          column: 19
        }
      },
      "209": {
        start: {
          line: 530,
          column: 36
        },
        end: {
          line: 530,
          column: 106
        }
      },
      "210": {
        start: {
          line: 532,
          column: 39
        },
        end: {
          line: 534,
          column: 37
        }
      },
      "211": {
        start: {
          line: 535,
          column: 12
        },
        end: {
          line: 540,
          column: 14
        }
      },
      "212": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 560,
          column: 11
        }
      },
      "213": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 108
        }
      },
      "214": {
        start: {
          line: 549,
          column: 12
        },
        end: {
          line: 559,
          column: 13
        }
      },
      "215": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 558,
          column: 17
        }
      },
      "216": {
        start: {
          line: 552,
          column: 20
        },
        end: {
          line: 552,
          column: 120
        }
      },
      "217": {
        start: {
          line: 554,
          column: 20
        },
        end: {
          line: 554,
          column: 155
        }
      },
      "218": {
        start: {
          line: 557,
          column: 20
        },
        end: {
          line: 557,
          column: 124
        }
      },
      "219": {
        start: {
          line: 566,
          column: 35
        },
        end: {
          line: 566,
          column: 69
        }
      },
      "220": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 574,
          column: 10
        }
      },
      "221": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 45
        }
      },
      "222": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 586,
          column: 47
        }
      },
      "223": {
        start: {
          line: 590,
          column: 23
        },
        end: {
          line: 590,
          column: 40
        }
      },
      "224": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 602,
          column: 9
        }
      },
      "225": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 601,
          column: 15
        }
      },
      "226": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 611,
          column: 11
        }
      },
      "227": {
        start: {
          line: 606,
          column: 32
        },
        end: {
          line: 606,
          column: 70
        }
      },
      "228": {
        start: {
          line: 607,
          column: 12
        },
        end: {
          line: 607,
          column: 83
        }
      },
      "229": {
        start: {
          line: 608,
          column: 12
        },
        end: {
          line: 608,
          column: 84
        }
      },
      "230": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 609,
          column: 75
        }
      },
      "231": {
        start: {
          line: 610,
          column: 12
        },
        end: {
          line: 610,
          column: 89
        }
      },
      "232": {
        start: {
          line: 615,
          column: 25
        },
        end: {
          line: 615,
          column: 60
        }
      },
      "233": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 616,
          column: 60
        }
      },
      "234": {
        start: {
          line: 619,
          column: 8
        },
        end: {
          line: 619,
          column: 41
        }
      },
      "235": {
        start: {
          line: 623,
          column: 27
        },
        end: {
          line: 623,
          column: 32
        }
      },
      "236": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 68
        }
      },
      "237": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 628,
          column: 21
        }
      },
      "238": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 21
        }
      },
      "239": {
        start: {
          line: 629,
          column: 29
        },
        end: {
          line: 629,
          column: 99
        }
      },
      "240": {
        start: {
          line: 629,
          column: 68
        },
        end: {
          line: 629,
          column: 98
        }
      },
      "241": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 631,
          column: 21
        }
      },
      "242": {
        start: {
          line: 631,
          column: 12
        },
        end: {
          line: 631,
          column: 21
        }
      },
      "243": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 633,
          column: 33
        }
      },
      "244": {
        start: {
          line: 632,
          column: 48
        },
        end: {
          line: 632,
          column: 78
        }
      },
      "245": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 78
        }
      },
      "246": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 639,
          column: 78
        }
      },
      "247": {
        start: {
          line: 645,
          column: 8
        },
        end: {
          line: 645,
          column: 32
        }
      },
      "248": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 646,
          column: 35
        }
      },
      "249": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 647,
          column: 38
        }
      },
      "250": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 648,
          column: 40
        }
      },
      "251": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 649,
          column: 37
        }
      },
      "252": {
        start: {
          line: 652,
          column: 0
        },
        end: {
          line: 652,
          column: 64
        }
      },
      "253": {
        start: {
          line: 657,
          column: 4
        },
        end: {
          line: 657,
          column: 104
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 18,
            column: 1
          },
          end: {
            line: 18,
            column: 2
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 78
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 68,
            column: 55
          },
          end: {
            line: 68,
            column: 56
          }
        },
        loc: {
          start: {
            line: 68,
            column: 68
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 68
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 82,
            column: 49
          },
          end: {
            line: 82,
            column: 50
          }
        },
        loc: {
          start: {
            line: 82,
            column: 55
          },
          end: {
            line: 82,
            column: 82
          }
        },
        line: 82
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 55
          },
          end: {
            line: 91,
            column: 56
          }
        },
        loc: {
          start: {
            line: 91,
            column: 68
          },
          end: {
            line: 103,
            column: 9
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 27
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 108
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 109,
            column: 55
          },
          end: {
            line: 109,
            column: 56
          }
        },
        loc: {
          start: {
            line: 109,
            column: 68
          },
          end: {
            line: 154,
            column: 9
          }
        },
        line: 109
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 123,
            column: 102
          },
          end: {
            line: 123,
            column: 103
          }
        },
        loc: {
          start: {
            line: 123,
            column: 109
          },
          end: {
            line: 123,
            column: 159
          }
        },
        line: 123
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 141,
            column: 92
          },
          end: {
            line: 141,
            column: 93
          }
        },
        loc: {
          start: {
            line: 141,
            column: 99
          },
          end: {
            line: 141,
            column: 112
          }
        },
        line: 141
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 84
          },
          end: {
            line: 143,
            column: 85
          }
        },
        loc: {
          start: {
            line: 143,
            column: 91
          },
          end: {
            line: 143,
            column: 112
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 159
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 160,
            column: 55
          },
          end: {
            line: 160,
            column: 56
          }
        },
        loc: {
          start: {
            line: 160,
            column: 68
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 160
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 183
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 184,
            column: 55
          },
          end: {
            line: 184,
            column: 56
          }
        },
        loc: {
          start: {
            line: 184,
            column: 68
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 184
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 53
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 222
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 223,
            column: 55
          },
          end: {
            line: 223,
            column: 56
          }
        },
        loc: {
          start: {
            line: 223,
            column: 68
          },
          end: {
            line: 343,
            column: 9
          }
        },
        line: 223
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 226,
            column: 106
          },
          end: {
            line: 226,
            column: 107
          }
        },
        loc: {
          start: {
            line: 226,
            column: 124
          },
          end: {
            line: 226,
            column: 150
          }
        },
        line: 226
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 339,
            column: 40
          },
          end: {
            line: 339,
            column: 41
          }
        },
        loc: {
          start: {
            line: 339,
            column: 50
          },
          end: {
            line: 342,
            column: 13
          }
        },
        line: 339
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 42
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 348
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 349,
            column: 55
          },
          end: {
            line: 349,
            column: 56
          }
        },
        loc: {
          start: {
            line: 349,
            column: 68
          },
          end: {
            line: 371,
            column: 9
          }
        },
        line: 349
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 40
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 376
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 377,
            column: 55
          },
          end: {
            line: 377,
            column: 56
          }
        },
        loc: {
          start: {
            line: 377,
            column: 68
          },
          end: {
            line: 394,
            column: 9
          }
        },
        line: 377
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 399,
            column: 5
          }
        },
        loc: {
          start: {
            line: 399,
            column: 40
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 399
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 400,
            column: 55
          },
          end: {
            line: 400,
            column: 56
          }
        },
        loc: {
          start: {
            line: 400,
            column: 68
          },
          end: {
            line: 415,
            column: 9
          }
        },
        line: 400
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 406,
            column: 54
          },
          end: {
            line: 406,
            column: 55
          }
        },
        loc: {
          start: {
            line: 406,
            column: 65
          },
          end: {
            line: 406,
            column: 183
          }
        },
        line: 406
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 420,
            column: 4
          },
          end: {
            line: 420,
            column: 5
          }
        },
        loc: {
          start: {
            line: 420,
            column: 43
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 420
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 421,
            column: 55
          },
          end: {
            line: 421,
            column: 56
          }
        },
        loc: {
          start: {
            line: 421,
            column: 68
          },
          end: {
            line: 432,
            column: 9
          }
        },
        line: 421
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        loc: {
          start: {
            line: 437,
            column: 38
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 437
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 438,
            column: 55
          },
          end: {
            line: 438,
            column: 56
          }
        },
        loc: {
          start: {
            line: 438,
            column: 68
          },
          end: {
            line: 448,
            column: 9
          }
        },
        line: 438
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 453,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        loc: {
          start: {
            line: 453,
            column: 42
          },
          end: {
            line: 465,
            column: 5
          }
        },
        line: 453
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 454,
            column: 55
          },
          end: {
            line: 454,
            column: 56
          }
        },
        loc: {
          start: {
            line: 454,
            column: 68
          },
          end: {
            line: 464,
            column: 9
          }
        },
        line: 454
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 469,
            column: 5
          }
        },
        loc: {
          start: {
            line: 469,
            column: 39
          },
          end: {
            line: 482,
            column: 5
          }
        },
        line: 469
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 470,
            column: 55
          },
          end: {
            line: 470,
            column: 56
          }
        },
        loc: {
          start: {
            line: 470,
            column: 68
          },
          end: {
            line: 481,
            column: 9
          }
        },
        line: 470
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 5
          }
        },
        loc: {
          start: {
            line: 486,
            column: 36
          },
          end: {
            line: 512,
            column: 5
          }
        },
        line: 486
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 487,
            column: 55
          },
          end: {
            line: 487,
            column: 56
          }
        },
        loc: {
          start: {
            line: 487,
            column: 68
          },
          end: {
            line: 511,
            column: 9
          }
        },
        line: 487
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 516,
            column: 5
          }
        },
        loc: {
          start: {
            line: 516,
            column: 44
          },
          end: {
            line: 542,
            column: 5
          }
        },
        line: 516
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 517,
            column: 55
          },
          end: {
            line: 517,
            column: 56
          }
        },
        loc: {
          start: {
            line: 517,
            column: 68
          },
          end: {
            line: 541,
            column: 9
          }
        },
        line: 517
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 546,
            column: 5
          }
        },
        loc: {
          start: {
            line: 546,
            column: 33
          },
          end: {
            line: 561,
            column: 5
          }
        },
        line: 546
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 547,
            column: 55
          },
          end: {
            line: 547,
            column: 56
          }
        },
        loc: {
          start: {
            line: 547,
            column: 68
          },
          end: {
            line: 560,
            column: 9
          }
        },
        line: 547
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 565,
            column: 4
          },
          end: {
            line: 565,
            column: 5
          }
        },
        loc: {
          start: {
            line: 565,
            column: 28
          },
          end: {
            line: 575,
            column: 5
          }
        },
        line: 565
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 579,
            column: 4
          },
          end: {
            line: 579,
            column: 5
          }
        },
        loc: {
          start: {
            line: 579,
            column: 29
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 579
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 585,
            column: 4
          },
          end: {
            line: 585,
            column: 5
          }
        },
        loc: {
          start: {
            line: 585,
            column: 31
          },
          end: {
            line: 587,
            column: 5
          }
        },
        line: 585
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 589,
            column: 4
          },
          end: {
            line: 589,
            column: 5
          }
        },
        loc: {
          start: {
            line: 589,
            column: 30
          },
          end: {
            line: 603,
            column: 5
          }
        },
        line: 589
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 604,
            column: 4
          },
          end: {
            line: 604,
            column: 5
          }
        },
        loc: {
          start: {
            line: 604,
            column: 29
          },
          end: {
            line: 612,
            column: 5
          }
        },
        line: 604
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 605,
            column: 55
          },
          end: {
            line: 605,
            column: 56
          }
        },
        loc: {
          start: {
            line: 605,
            column: 68
          },
          end: {
            line: 611,
            column: 9
          }
        },
        line: 605
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 613,
            column: 4
          },
          end: {
            line: 613,
            column: 5
          }
        },
        loc: {
          start: {
            line: 613,
            column: 43
          },
          end: {
            line: 617,
            column: 5
          }
        },
        line: 613
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 618,
            column: 4
          },
          end: {
            line: 618,
            column: 5
          }
        },
        loc: {
          start: {
            line: 618,
            column: 34
          },
          end: {
            line: 620,
            column: 5
          }
        },
        line: 618
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        loc: {
          start: {
            line: 621,
            column: 37
          },
          end: {
            line: 625,
            column: 5
          }
        },
        line: 621
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 626,
            column: 4
          },
          end: {
            line: 626,
            column: 5
          }
        },
        loc: {
          start: {
            line: 626,
            column: 34
          },
          end: {
            line: 634,
            column: 5
          }
        },
        line: 626
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 629,
            column: 61
          },
          end: {
            line: 629,
            column: 62
          }
        },
        loc: {
          start: {
            line: 629,
            column: 68
          },
          end: {
            line: 629,
            column: 98
          }
        },
        line: 629
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 632,
            column: 36
          },
          end: {
            line: 632,
            column: 37
          }
        },
        loc: {
          start: {
            line: 632,
            column: 48
          },
          end: {
            line: 632,
            column: 78
          }
        },
        line: 632
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 635,
            column: 4
          },
          end: {
            line: 635,
            column: 5
          }
        },
        loc: {
          start: {
            line: 635,
            column: 29
          },
          end: {
            line: 637,
            column: 5
          }
        },
        line: 635
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 638,
            column: 4
          },
          end: {
            line: 638,
            column: 5
          }
        },
        loc: {
          start: {
            line: 638,
            column: 31
          },
          end: {
            line: 640,
            column: 5
          }
        },
        line: 638
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 644,
            column: 4
          },
          end: {
            line: 644,
            column: 5
          }
        },
        loc: {
          start: {
            line: 644,
            column: 14
          },
          end: {
            line: 650,
            column: 5
          }
        },
        line: 644
      },
      "56": {
        name: "createRoutingEfficiencyOptimizer",
        decl: {
          start: {
            line: 656,
            column: 9
          },
          end: {
            line: 656,
            column: 41
          }
        },
        loc: {
          start: {
            line: 656,
            column: 104
          },
          end: {
            line: 658,
            column: 1
          }
        },
        line: 656
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 3
          },
          end: {
            line: 24,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 3
          },
          end: {
            line: 24,
            column: 23
          }
        }, {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 84
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "6": {
        loc: {
          start: {
            line: 123,
            column: 109
          },
          end: {
            line: 123,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 109
          },
          end: {
            line: 123,
            column: 130
          }
        }, {
          start: {
            line: 123,
            column: 134
          },
          end: {
            line: 123,
            column: 159
          }
        }],
        line: 123
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 164,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 164,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "9": {
        loc: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 37
          }
        }, {
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 163,
            column: 60
          }
        }],
        line: 163
      },
      "10": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 194,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 194,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "11": {
        loc: {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 37
          }
        }, {
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 193,
            column: 60
          }
        }],
        line: 193
      },
      "12": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "13": {
        loc: {
          start: {
            line: 202,
            column: 20
          },
          end: {
            line: 204,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 20
          },
          end: {
            line: 204,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "14": {
        loc: {
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 207,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 207,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "15": {
        loc: {
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 211,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 52
          },
          end: {
            line: 211,
            column: 83
          }
        }, {
          start: {
            line: 211,
            column: 86
          },
          end: {
            line: 211,
            column: 87
          }
        }],
        line: 211
      },
      "16": {
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 212,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 56
          },
          end: {
            line: 212,
            column: 91
          }
        }, {
          start: {
            line: 212,
            column: 94
          },
          end: {
            line: 212,
            column: 97
          }
        }],
        line: 212
      },
      "17": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 230,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 230,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "18": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 257,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "19": {
        loc: {
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 16
          },
          end: {
            line: 256,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "20": {
        loc: {
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 235,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 235,
            column: 33
          }
        }, {
          start: {
            line: 235,
            column: 37
          },
          end: {
            line: 235,
            column: 47
          }
        }],
        line: 235
      },
      "21": {
        loc: {
          start: {
            line: 236,
            column: 20
          },
          end: {
            line: 255,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 20
          },
          end: {
            line: 255,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "22": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "23": {
        loc: {
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 279,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 279,
            column: 70
          }
        }, {
          start: {
            line: 279,
            column: 74
          },
          end: {
            line: 279,
            column: 75
          }
        }],
        line: 279
      },
      "24": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "25": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "26": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 338,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 338,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "27": {
        loc: {
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 320,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 16
          },
          end: {
            line: 320,
            column: 50
          }
        }, {
          start: {
            line: 320,
            column: 54
          },
          end: {
            line: 320,
            column: 80
          }
        }],
        line: 320
      },
      "28": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 356,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "29": {
        loc: {
          start: {
            line: 359,
            column: 20
          },
          end: {
            line: 363,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 20
          },
          end: {
            line: 363,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "30": {
        loc: {
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 393,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 380,
            column: 16
          },
          end: {
            line: 381,
            column: 68
          }
        }, {
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 383,
            column: 71
          }
        }, {
          start: {
            line: 384,
            column: 16
          },
          end: {
            line: 385,
            column: 66
          }
        }, {
          start: {
            line: 386,
            column: 16
          },
          end: {
            line: 387,
            column: 70
          }
        }, {
          start: {
            line: 388,
            column: 16
          },
          end: {
            line: 389,
            column: 67
          }
        }, {
          start: {
            line: 390,
            column: 16
          },
          end: {
            line: 392,
            column: 33
          }
        }],
        line: 379
      },
      "31": {
        loc: {
          start: {
            line: 404,
            column: 37
          },
          end: {
            line: 404,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 38
          },
          end: {
            line: 404,
            column: 128
          }
        }, {
          start: {
            line: 404,
            column: 133
          },
          end: {
            line: 404,
            column: 135
          }
        }],
        line: 404
      },
      "32": {
        loc: {
          start: {
            line: 404,
            column: 38
          },
          end: {
            line: 404,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 108
          },
          end: {
            line: 404,
            column: 114
          }
        }, {
          start: {
            line: 404,
            column: 117
          },
          end: {
            line: 404,
            column: 128
          }
        }],
        line: 404
      },
      "33": {
        loc: {
          start: {
            line: 404,
            column: 38
          },
          end: {
            line: 404,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 38
          },
          end: {
            line: 404,
            column: 88
          }
        }, {
          start: {
            line: 404,
            column: 92
          },
          end: {
            line: 404,
            column: 105
          }
        }],
        line: 404
      },
      "34": {
        loc: {
          start: {
            line: 406,
            column: 126
          },
          end: {
            line: 406,
            column: 180
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 126
          },
          end: {
            line: 406,
            column: 153
          }
        }, {
          start: {
            line: 406,
            column: 157
          },
          end: {
            line: 406,
            column: 180
          }
        }],
        line: 406
      },
      "35": {
        loc: {
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 408,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 408,
            column: 89
          },
          end: {
            line: 408,
            column: 95
          }
        }, {
          start: {
            line: 408,
            column: 98
          },
          end: {
            line: 408,
            column: 123
          }
        }],
        line: 408
      },
      "36": {
        loc: {
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 408,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 16
          },
          end: {
            line: 408,
            column: 69
          }
        }, {
          start: {
            line: 408,
            column: 73
          },
          end: {
            line: 408,
            column: 86
          }
        }],
        line: 408
      },
      "37": {
        loc: {
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 492,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 492,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "38": {
        loc: {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 495,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 495,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "39": {
        loc: {
          start: {
            line: 503,
            column: 16
          },
          end: {
            line: 508,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 16
          },
          end: {
            line: 508,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "40": {
        loc: {
          start: {
            line: 503,
            column: 20
          },
          end: {
            line: 504,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 503,
            column: 20
          },
          end: {
            line: 503,
            column: 71
          }
        }, {
          start: {
            line: 504,
            column: 20
          },
          end: {
            line: 504,
            column: 55
          }
        }],
        line: 503
      },
      "41": {
        loc: {
          start: {
            line: 519,
            column: 36
          },
          end: {
            line: 520,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 36
          },
          end: {
            line: 519,
            column: 78
          }
        }, {
          start: {
            line: 520,
            column: 16
          },
          end: {
            line: 520,
            column: 49
          }
        }],
        line: 519
      },
      "42": {
        loc: {
          start: {
            line: 521,
            column: 40
          },
          end: {
            line: 522,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 40
          },
          end: {
            line: 521,
            column: 79
          }
        }, {
          start: {
            line: 522,
            column: 16
          },
          end: {
            line: 522,
            column: 53
          }
        }],
        line: 521
      },
      "43": {
        loc: {
          start: {
            line: 523,
            column: 33
          },
          end: {
            line: 523,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 33
          },
          end: {
            line: 523,
            column: 70
          }
        }, {
          start: {
            line: 523,
            column: 74
          },
          end: {
            line: 523,
            column: 104
          }
        }],
        line: 523
      },
      "44": {
        loc: {
          start: {
            line: 615,
            column: 25
          },
          end: {
            line: 615,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 615,
            column: 46
          },
          end: {
            line: 615,
            column: 51
          }
        }, {
          start: {
            line: 615,
            column: 54
          },
          end: {
            line: 615,
            column: 60
          }
        }],
        line: 615
      },
      "45": {
        loc: {
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 628,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 8
          },
          end: {
            line: 628,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 627
      },
      "46": {
        loc: {
          start: {
            line: 630,
            column: 8
          },
          end: {
            line: 631,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 630,
            column: 8
          },
          end: {
            line: 631,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 630
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/routing-efficiency-optimizer.ts",
      mappings: ";AAAA;;;;;;;GAOG;;;AAk7BH,4EAcC;;AAt7BD;;GAEG;AACH,IAAY,oBAMX;AAND,WAAY,oBAAoB;IAC9B,uDAA+B,CAAA;IAC/B,iEAAyC,CAAA;IACzC,yDAAiC,CAAA;IACjC,6CAAqB,CAAA;IACrB,6CAAqB,CAAA;AACvB,CAAC,EANW,oBAAoB,oCAApB,oBAAoB,QAM/B;AAmFD;;GAEG;AACH,MAAM,cAAc,GAAoB;IACtC,4BAA4B,EAAE,EAAE,EAAE,0BAA0B;IAC5D,sBAAsB,EAAE,EAAE,EAAE,+BAA+B;IAC3D,4BAA4B,EAAE,CAAC,EAAE,8BAA8B;IAC/D,mBAAmB,EAAE,EAAE,EAAE,4BAA4B;IACrD,sBAAsB,EAAE,MAAM,EAAE,YAAY;IAC5C,6BAA6B,EAAE,MAAM,EAAE,aAAa;IACpD,qBAAqB,EAAE,CAAC;IACxB,qBAAqB,EAAE,GAAG;IAC1B,iBAAiB,EAAE,CAAC,CAAC,EAAE,yCAAyC;IAChE,eAAe,EAAE,oBAAoB,CAAC,QAAQ;IAC9C,sBAAsB,EAAE,IAAI;IAC5B,uBAAuB,EAAE,IAAI;IAC7B,kBAAkB,EAAE,IAAI;IACxB,4BAA4B,EAAE,KAAK;CACpC,CAAC;AAEF;;;;GAIG;AACH,MAAa,0BAA0B;IAgBrC,YACE,MAAyB,EACzB,kBAAmD,EACnD,YAA4B,EAC5B,UAA4B,EAC5B,MAAiC;QAR3B,iBAAY,GAAY,KAAK,CAAC;QAUpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,mCAAQ,cAAc,GAAK,MAAM,CAAE,CAAC;QAE/C,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;QAEjC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAED;;OAEG;IACG,iBAAiB;;YACrB,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;gBAC/D,OAAO;YACT,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,iCAAiC,CAAC,EAAE,CAAC;gBACpE,OAAO,CAAC,GAAG,CACT,oEAAoE,CACrE,CAAC;gBACF,OAAO;YACT,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;YACzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,uBAAuB;YACvB,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAElC,iCAAiC;YACjC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAClC,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,EACjC,IAAI,CAAC,MAAM,CAAC,sBAAsB,CACnC,CAAC;YAEF,yBAAyB;YACzB,MAAM,IAAI,CAAC,UAAU,CAAC,2BAA2B,CAC/C,IAAI,CAAC,MAAM,CAAC,eAAe,EAC3B,IAAI,CAAC,MAAM,CAAC,4BAA4B,CACzC,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACG,gBAAgB;;YACpB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACvB,OAAO;YACT,CAAC;YAED,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;YACzE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAE1B,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC3B,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACtC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;YACrC,CAAC;YAED,wBAAwB;YACxB,MAAM,IAAI,CAAC,UAAU,CAAC,0BAA0B,CAC9C,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAC/B,IAAI,CAAC,2BAA2B,EAAE,CACnC,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,oBAAoB;;YAChC,IAAI,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;gBAEvE,oCAAoC;gBACpC,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAEjC,8BAA8B;gBAC9B,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;gBAElE,wCAAwC;gBACxC,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,mCAAmC,CACpE,kBAAkB,CACnB,CAAC;gBAEF,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBACjC,OAAO,CAAC,GAAG,CACT,8DAA8D,CAC/D,CAAC;oBACF,OAAO;gBACT,CAAC;gBAED,sCAAsC;gBACtC,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAC5D,eAAe,CAAC,MAAM,CACpB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,MAAM,IAAI,CAAC,CAAC,QAAQ,KAAK,UAAU,CAC1D,CACF,CAAC;gBAEF,IAAI,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACtC,6BAA6B;oBAC7B,MAAM,MAAM,GAAuB;wBACjC,cAAc,EAAE,IAAI,CAAC,sBAAsB,EAAE;wBAC7C,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;wBACrC,sBAAsB;wBACtB,sBAAsB,EAAE,CAAC,EAAE,6CAA6C;wBACxE,kBAAkB,EAAE,CAAC;wBACrB,sBAAsB,EAAE,CAAC;wBACzB,eAAe,EAAE,CAAC;wBAClB,SAAS,EAAE,IAAI,IAAI,EAAE;wBACrB,OAAO,EAAE,IAAI;wBACb,gBAAgB,EAAE,KAAK;qBACxB,CAAC;oBAEF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,IAAI,EAAE,CAAC;oBAEnC,mBAAmB;oBACnB,MAAM,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAC1C,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAChD;wBACE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;wBACrC,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAC3B,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAC5D;wBACD,YAAY,EAAE,sBAAsB,CAAC,MAAM;qBAC5C,CACF,CAAC;oBAEF,OAAO,CAAC,GAAG,CACT,wCAAwC,sBAAsB,CAAC,MAAM,gBAAgB,CACtF,CAAC;gBACJ,CAAC;gBAED,kCAAkC;gBAClC,MAAM,IAAI,CAAC,6BAA6B,EAAE,CAAC;YAC7C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,2DAA2D,EAC3D,KAAK,CACN,CAAC;YACJ,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,mBAAmB;;YAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;YAE/D,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC;gBACnD,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,UAAU;oBAAE,SAAS,CAAC,uBAAuB;gBAE/E,MAAM,KAAK,GAAG,IAAiB,CAAC;gBAChC,MAAM,OAAO,GAA4B;oBACvC,KAAK;oBACL,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;oBAC1C,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,WAAW,EAAE,OAAO,CAAC,WAAW;oBAChC,cAAc,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,OAAO,CAAC;oBAC3D,WAAW,EAAE,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC;oBAC/C,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC;oBAC/C,WAAW,EAAE,IAAI,IAAI,EAAE;iBACxB,CAAC;gBAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACzC,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,yBAAyB;;YAOrC,MAAM,UAAU,GACd,MAAM,IAAI,CAAC,kBAAkB,CAAC,0BAA0B,EAAE,CAAC;YAC7D,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;YAE/D,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,eAAe,GAAG,CAAC,CAAC;YACxB,IAAI,mBAAmB,GAAG,CAAC,CAAC;YAC5B,IAAI,SAAS,GAAG,CAAC,CAAC;YAClB,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC;gBACnD,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,UAAU;oBAAE,SAAS;gBAEvD,aAAa,IAAI,OAAO,CAAC,YAAY,CAAC;gBACtC,eAAe,IAAI,OAAO,CAAC,gBAAgB,GAAG,OAAO,CAAC,YAAY,CAAC;gBACnE,mBAAmB,IAAI,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC;gBAElE,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAiB,CAAC,CAAC;gBAC1D,IAAI,OAAO,EAAE,CAAC;oBACZ,SAAS,IAAI,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,YAAY,CAAC;oBAE3D,uBAAuB;oBACvB,IAAI,OAAO,CAAC,YAAY,GAAG,KAAK,EAAE,CAAC;wBACjC,WAAW,CAAC,IAAI,CACd,uBAAuB,IAAI,KAAK,OAAO,CAAC,YAAY,IAAI,CACzD,CAAC;oBACJ,CAAC;oBACD,IAAI,OAAO,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC;wBAC7B,WAAW,CAAC,IAAI,CACd,uBAAuB,IAAI,KAAK,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAClE,CAAC;oBACJ,CAAC;gBACH,CAAC;YACH,CAAC;YAED,OAAO;gBACL,cAAc,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBACvE,kBAAkB,EAChB,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,mBAAmB,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG;gBAC/D,WAAW,EAAE,SAAS;gBACtB,iBAAiB,EAAE,UAAU,CAAC,iBAAiB;gBAC/C,WAAW;aACZ,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,mCAAmC,CAC/C,WAAgB;;YAEhB,MAAM,eAAe,GAAiC,EAAE,CAAC;YAEzD,+BAA+B;YAC/B,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAC9B,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC,MAAM,EAAE,CACrD,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAE1D,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;gBACtD,OAAO,CAAC,GAAG,CACT,iEAAiE,CAClE,CAAC;gBACF,OAAO,eAAe,CAAC;YACzB,CAAC;YAED,uCAAuC;YACvC,IAAI,WAAW,CAAC,cAAc,GAAG,IAAI,EAAE,CAAC;gBACtC,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACvD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAEjD,IAAI,aAAa,IAAI,UAAU,EAAE,CAAC;oBAChC,IACE,aAAa,CAAC,gBAAgB;wBAC9B,UAAU,CAAC,gBAAgB,GAAG,GAAG,EACjC,CAAC;wBACD,eAAe,CAAC,IAAI,CAAC;4BACnB,EAAE,EAAE,IAAI,CAAC,wBAAwB,EAAE;4BACnC,IAAI,EAAE,iBAAiB;4BACvB,QAAQ,EAAE,MAAM;4BAChB,WAAW,EACT,4DAA4D;4BAC9D,mBAAmB,EAAE,EAAE;4BACvB,cAAc,EAAE;gCACd,MAAM,EAAE,2BAA2B;gCACnC,UAAU,EAAE;oCACV,qBAAqB,EAAE,IAAI;oCAC3B,gBAAgB,EAAE,IAAI;iCACvB;gCACD,YAAY,EAAE,uCAAuC;6BACtD;4BACD,UAAU,EAAE,IAAI;4BAChB,SAAS,EAAE,IAAI,IAAI,EAAE;yBACtB,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC;YAED,4CAA4C;YAC5C,IAAI,WAAW,CAAC,kBAAkB,GAAG,EAAE,EAAE,CAAC;gBACxC,eAAe,CAAC,IAAI,CAAC;oBACnB,EAAE,EAAE,IAAI,CAAC,wBAAwB,EAAE;oBACnC,IAAI,EAAE,cAAc;oBACpB,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,gDAAgD;oBAC7D,mBAAmB,EAAE,EAAE;oBACvB,cAAc,EAAE;wBACd,MAAM,EAAE,+BAA+B;wBACvC,UAAU,EAAE;4BACV,gBAAgB,EAAE,CAAC;4BACnB,eAAe,EAAE,KAAK;yBACvB;wBACD,YAAY,EAAE,kDAAkD;qBACjE;oBACD,UAAU,EAAE,GAAG;oBACf,SAAS,EAAE,IAAI,IAAI,EAAE;iBACtB,CAAC,CAAC;YACL,CAAC;YAED,oCAAoC;YACpC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAChE,IAAI,WAAW,CAAC,WAAW,GAAG,YAAY,GAAG,GAAG,EAAE,CAAC;gBACjD,eAAe,CAAC,IAAI,CAAC;oBACnB,EAAE,EAAE,IAAI,CAAC,wBAAwB,EAAE;oBACnC,IAAI,EAAE,iBAAiB;oBACvB,QAAQ,EAAE,QAAQ;oBAClB,WAAW,EAAE,kDAAkD;oBAC/D,mBAAmB,EAAE,EAAE;oBACvB,cAAc,EAAE;wBACd,MAAM,EAAE,yBAAyB;wBACjC,UAAU,EAAE;4BACV,QAAQ,EAAE,oBAAoB,CAAC,cAAc;4BAC7C,aAAa,EAAE,GAAG;yBACnB;wBACD,YAAY,EAAE,qCAAqC;qBACpD;oBACD,UAAU,EAAE,IAAI;oBAChB,SAAS,EAAE,IAAI,IAAI,EAAE;iBACtB,CAAC,CAAC;YACL,CAAC;YAED,qCAAqC;YACrC,IAAI,WAAW,CAAC,iBAAiB,GAAG,EAAE,EAAE,CAAC;gBACvC,eAAe,CAAC,IAAI,CAAC;oBACnB,EAAE,EAAE,IAAI,CAAC,wBAAwB,EAAE;oBACnC,IAAI,EAAE,kBAAkB;oBACxB,QAAQ,EAAE,MAAM;oBAChB,WAAW,EACT,mEAAmE;oBACrE,mBAAmB,EAAE,EAAE;oBACvB,cAAc,EAAE;wBACd,MAAM,EAAE,6BAA6B;wBACrC,UAAU,EAAE;4BACV,kBAAkB,EAAE,IAAI;4BACxB,oBAAoB,EAAE,GAAG;yBAC1B;wBACD,YAAY,EAAE,qCAAqC;qBACpD;oBACD,UAAU,EAAE,GAAG;oBACf,SAAS,EAAE,IAAI,IAAI,EAAE;iBACtB,CAAC,CAAC;YACL,CAAC;YAED,mCAAmC;YACnC,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACrE,eAAe,CAAC,IAAI,CAAC;oBACnB,EAAE,EAAE,IAAI,CAAC,wBAAwB,EAAE;oBACnC,IAAI,EAAE,iBAAiB;oBACvB,QAAQ,EAAE,QAAQ;oBAClB,WAAW,EACT,2DAA2D;oBAC7D,mBAAmB,EAAE,EAAE;oBACvB,cAAc,EAAE;wBACd,MAAM,EAAE,0BAA0B;wBAClC,UAAU,EAAE;4BACV,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;4BACvC,kBAAkB,EAAE,KAAK;yBAC1B;wBACD,YAAY,EAAE,2BAA2B;qBAC1C;oBACD,UAAU,EAAE,GAAG;oBACf,SAAS,EAAE,IAAI,IAAI,EAAE;iBACtB,CAAC,CAAC;YACL,CAAC;YAED,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACnC,MAAM,aAAa,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;gBAClE,OAAO,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAED;;OAEG;IACW,oBAAoB,CAChC,eAA6C;;YAE7C,MAAM,OAAO,GAAiC,EAAE,CAAC;YACjD,IAAI,cAAc,GAAG,CAAC,CAAC;YAEvB,KAAK,MAAM,cAAc,IAAI,eAAe,EAAE,CAAC;gBAC7C,IAAI,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;oBACxD,OAAO,CAAC,GAAG,CACT,gEAAgE,CACjE,CAAC;oBACF,MAAM;gBACR,CAAC;gBAED,IAAI,CAAC;oBACH,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC;oBAC/D,IAAI,OAAO,EAAE,CAAC;wBACZ,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC7B,cAAc,EAAE,CAAC;wBAEjB,OAAO,CAAC,GAAG,CACT,yCAAyC,cAAc,CAAC,WAAW,EAAE,CACtE,CAAC;oBACJ,CAAC;gBACH,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,KAAK,CACX,gEAAgE,cAAc,CAAC,WAAW,EAAE,EAC5F,KAAK,CACN,CAAC;gBACJ,CAAC;YACH,CAAC;YAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;YAC5C,OAAO,OAAO,CAAC;QACjB,CAAC;KAAA;IAED;;OAEG;IACW,mBAAmB,CAC/B,cAA0C;;YAE1C,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,cAAc,CAAC,cAAc,CAAC;YAE7D,QAAQ,MAAM,EAAE,CAAC;gBACf,KAAK,2BAA2B;oBAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;gBAElD,KAAK,+BAA+B;oBAClC,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;gBAErD,KAAK,yBAAyB;oBAC5B,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;gBAEhD,KAAK,6BAA6B;oBAChC,OAAO,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC;gBAEpD,KAAK,0BAA0B;oBAC7B,OAAO,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;gBAEjD;oBACE,OAAO,CAAC,IAAI,CAAC,gDAAgD,MAAM,EAAE,CAAC,CAAC;oBACvE,OAAO,KAAK,CAAC;YACjB,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,uBAAuB,CAAC,UAAe;;;YACnD,IAAI,CAAC;gBACH,4BAA4B;gBAC5B,MAAM,YAAY,GAAG,CAAA,MAAA,MAAA,IAAI,CAAC,MAAM,EAAC,eAAe,kDAAI,KAAI,EAAE,CAAC;gBAE3D,4BAA4B;gBAC5B,MAAM,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,iCAC3C,IAAI,KACP,kBAAkB,EAChB,UAAU,CAAC,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,IACxD,CAAC,CAAC;gBAEJ,+BAA+B;gBAC/B,MAAA,MAAA,IAAI,CAAC,MAAM,EAAC,kBAAkB,mDAAG,YAAY,CAAC,CAAC;gBAE/C,OAAO,IAAI,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,kEAAkE,EAClE,KAAK,CACN,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,0BAA0B,CAAC,UAAe;;YACtD,IAAI,CAAC;gBACH,uDAAuD;gBACvD,8CAA8C;gBAC9C,OAAO,CAAC,GAAG,CACT,8DAA8D,EAC9D,UAAU,CACX,CAAC;gBACF,OAAO,IAAI,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,8DAA8D,EAC9D,KAAK,CACN,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,qBAAqB,CAAC,UAAe;;YACjD,IAAI,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,UAAU,CAAC,QAAQ,CAAC;gBAClD,OAAO,CAAC,GAAG,CACT,qDAAqD,UAAU,CAAC,QAAQ,EAAE,CAC3E,CAAC;gBACF,OAAO,IAAI,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,uDAAuD,EACvD,KAAK,CACN,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,yBAAyB,CAAC,UAAe;;YACrD,IAAI,CAAC;gBACH,4CAA4C;gBAC5C,OAAO,CAAC,GAAG,CACT,4DAA4D,EAC5D,UAAU,CACX,CAAC;gBACF,OAAO,IAAI,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,2DAA2D,EAC3D,KAAK,CACN,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,sBAAsB,CAAC,UAAe;;YAClD,IAAI,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,oBAAoB,CAAC,QAAQ,CAAC;gBAC5D,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;gBACtE,OAAO,IAAI,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,gEAAgE,EAChE,KAAK,CACN,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,6BAA6B;;YACzC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,6BAA6B,CAAC;YACnE,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAEvB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC9C,IAAI,MAAM,CAAC,sBAAsB,KAAK,CAAC;oBAAE,SAAS,CAAC,oBAAoB;gBAEvE,MAAM,qBAAqB,GAAG,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBAC/D,IAAI,qBAAqB,GAAG,gBAAgB;oBAAE,SAAS,CAAC,wBAAwB;gBAEhF,2CAA2C;gBAC3C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;gBAEvE,MAAM,CAAC,sBAAsB,GAAG,WAAW,CAAC,OAAO,CAAC;gBACpD,MAAM,CAAC,kBAAkB,GAAG,WAAW,CAAC,OAAO,CAAC;gBAChD,MAAM,CAAC,sBAAsB,GAAG,WAAW,CAAC,WAAW,CAAC;gBACxD,MAAM,CAAC,eAAe,GAAG,WAAW,CAAC,IAAI,CAAC;gBAE1C,8BAA8B;gBAC9B,IACE,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB;oBACnD,IAAI,CAAC,MAAM,CAAC,uBAAuB,EACnC,CAAC;oBACD,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;oBACxC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC/B,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,CAAC;gBAED,OAAO,CAAC,GAAG,CACT,6CACE,MAAM,CAAC,cACT,eAAe,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAC7D,CAAC;YACJ,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACW,+BAA+B,CAC3C,MAA0B;;YAO1B,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAElE,MAAM,eAAe,GACnB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBAC1C,kBAAkB,CAAC,cAAc,CAAC;YACpC,MAAM,mBAAmB,GACvB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC;gBACvC,kBAAkB,CAAC,kBAAkB,CAAC;YACxC,MAAM,YAAY,GAChB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,kBAAkB,CAAC,WAAW,CAAC;YAE1E,MAAM,kBAAkB,GACtB,CAAC,CAAC,eAAe,GAAG,kBAAkB,CAAC,cAAc,CAAC;gBACpD,eAAe,CAAC;gBAClB,GAAG,CAAC;YACN,MAAM,sBAAsB,GAC1B,CAAC,CAAC,kBAAkB,CAAC,kBAAkB,GAAG,mBAAmB,CAAC;gBAC5D,mBAAmB,CAAC;gBACtB,GAAG,CAAC;YACN,MAAM,eAAe,GACnB,CAAC,CAAC,YAAY,GAAG,kBAAkB,CAAC,WAAW,CAAC,GAAG,YAAY,CAAC,GAAG,GAAG,CAAC;YAEzE,0CAA0C;YAC1C,MAAM,kBAAkB,GACtB,kBAAkB,GAAG,GAAG;gBACxB,sBAAsB,GAAG,GAAG;gBAC5B,eAAe,GAAG,GAAG,CAAC;YAExB,OAAO;gBACL,OAAO,EAAE,kBAAkB;gBAC3B,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,sBAAsB;gBACnC,IAAI,EAAE,eAAe;aACtB,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACW,oBAAoB,CAChC,MAA0B;;YAE1B,OAAO,CAAC,GAAG,CACT,2DAA2D,MAAM,CAAC,cAAc,EAAE,CACnF,CAAC;YAEF,KAAK,MAAM,cAAc,IAAI,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBAC3D,IAAI,CAAC;oBACH,wBAAwB;oBACxB,OAAO,CAAC,GAAG,CACT,0CAA0C,cAAc,CAAC,cAAc,CAAC,YAAY,EAAE,CACvF,CAAC;oBAEF,eAAe;oBACf,MAAM,IAAI,CAAC,UAAU,CAAC,8BAA8B,CAClD,MAAM,CAAC,cAAc,EACrB,cAAc,CAAC,WAAW,EAC1B,MAAM,CAAC,sBAAsB,CAC9B,CAAC;gBACJ,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,KAAK,CACX,qDAAqD,cAAc,CAAC,WAAW,EAAE,EACjF,KAAK,CACN,CAAC;gBACJ,CAAC;YACH,CAAC;QACH,CAAC;KAAA;IAED;;OAEG;IACH,qBAAqB;QAQnB,MAAM,kBAAkB,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAE9D,OAAO;YACL,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM;YACnD,kBAAkB;YAClB,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,CAAC,MAAM;YACxD,cAAc,EACZ,kBAAkB,IAAI,IAAI,CAAC,MAAM,CAAC,4BAA4B;SACjE,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,sBAAsB;QACpB,OAAO,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,wBAAwB;QACtB,OAAO,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACzC,CAAC;IAED,yBAAyB;IAEjB,uBAAuB;QAC7B,MAAM,MAAM,GAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAE9C,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,EAAE;gBAC5B,KAAK;gBACL,gBAAgB,EAAE,CAAC;gBACnB,YAAY,EAAE,CAAC;gBACf,WAAW,EAAE,GAAG;gBAChB,cAAc,EAAE,CAAC;gBACjB,WAAW,EAAE,GAAG;gBAChB,QAAQ,EAAE,GAAG;gBACb,WAAW,EAAE,IAAI,IAAI,EAAE;aACxB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEa,sBAAsB;;YAClC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAE3D,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC;YACvE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,kBAAkB,CAAC,CAAC;YACxE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;YAC/D,IAAI,CAAC,eAAe,CAAC,GAAG,CACtB,mBAAmB,EACnB,WAAW,CAAC,iBAAiB,CAC9B,CAAC;QACJ,CAAC;KAAA;IAEO,sBAAsB,CAC5B,KAAgB,EAChB,OAA2B;QAE3B,6BAA6B;QAC7B,MAAM,QAAQ,GAAG,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,4BAA4B;QAClF,OAAO,QAAQ,GAAG,CAAC,OAAO,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,2BAA2B;IAClF,CAAC;IAEO,oBAAoB,CAAC,OAA2B;QACtD,OAAO,OAAO,CAAC,WAAW,GAAG,GAAG,CAAC;IACnC,CAAC;IAEO,gBAAgB,CACtB,KAAgB,EAChB,OAA2B;QAE3B,kDAAkD;QAClD,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,iBAAiB;QAC3C,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC;IAC9D,CAAC;IAEO,2BAA2B;QACjC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC;QAEpD,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAClD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,sBAAsB,KAAK,CAAC,CACtC,CAAC;QACF,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC;QAExC,OAAO,CACL,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,sBAAsB,EAAE,CAAC,CAAC;YAClE,YAAY,CAAC,MAAM,CACpB,CAAC;IACJ,CAAC;IAEO,sBAAsB;QAC5B,OAAO,OAAO,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IACxE,CAAC;IAEO,wBAAwB;QAC9B,OAAO,OAAO,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IACxE,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;CACF;AA9yBD,gEA8yBC;AAED;;GAEG;AACH,SAAgB,gCAAgC,CAC9C,MAAyB,EACzB,kBAAmD,EACnD,YAA4B,EAC5B,UAA4B,EAC5B,MAAiC;IAEjC,OAAO,IAAI,0BAA0B,CACnC,MAAM,EACN,kBAAkB,EAClB,YAAY,EACZ,UAAU,EACV,MAAM,CACP,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/routing-efficiency-optimizer.ts"],
      sourcesContent: ["/**\n * Routing Efficiency Optimizer\n *\n * Actively optimizes routing decisions to improve performance by >15%.\n * Uses machine learning-based optimization and adaptive routing rules.\n *\n * @module routing-efficiency-optimizer\n */\n\nimport { AiFeatureFlags } from \"./ai-feature-flags\";\nimport { AuditTrailSystem } from \"./audit-trail-system\";\nimport {\n  HybridRoutingPerformanceMonitor,\n  RoutingPathMetrics,\n} from \"./hybrid-routing-performance-monitor\";\nimport { IntelligentRouter, RouteType } from \"./intelligent-router\";\n\n/**\n * Optimization strategy types\n */\nexport enum OptimizationStrategy {\n  LATENCY_FIRST = \"latency_first\",\n  SUCCESS_RATE_FIRST = \"success_rate_first\",\n  COST_EFFICIENT = \"cost_efficient\",\n  BALANCED = \"balanced\",\n  ADAPTIVE = \"adaptive\",\n}\n\n/**\n * Route performance profile\n */\nexport interface RoutePerformanceProfile {\n  route: RouteType;\n  averageLatencyMs: number;\n  p95LatencyMs: number;\n  successRate: number;\n  costPerRequest: number;\n  reliability: number;\n  capacity: number;\n  lastUpdated: Date;\n}\n\n/**\n * Optimization recommendation\n */\nexport interface OptimizationRecommendation {\n  id: string;\n  type:\n    | \"route_change\"\n    | \"rule_adjustment\"\n    | \"threshold_update\"\n    | \"strategy_change\";\n  priority: \"low\" | \"medium\" | \"high\" | \"critical\";\n  description: string;\n  expectedImprovement: number; // Percentage improvement expected\n  implementation: {\n    action: string;\n    parameters: Record<string, any>;\n    rollbackPlan: string;\n  };\n  confidence: number; // 0-1 confidence score\n  timestamp: Date;\n}\n\n/**\n * Optimization result\n */\nexport interface OptimizationResult {\n  optimizationId: string;\n  strategy: OptimizationStrategy;\n  appliedRecommendations: OptimizationRecommendation[];\n  performanceImprovement: number; // Actual improvement percentage\n  latencyImprovement: number;\n  successRateImprovement: number;\n  costImprovement: number;\n  timestamp: Date;\n  success: boolean;\n  rollbackRequired: boolean;\n}\n\n/**\n * Optimizer configuration\n */\nexport interface OptimizerConfig {\n  // Optimization targets\n  targetPerformanceImprovement: number; // Minimum 15% improvement\n  targetLatencyReduction: number; // Target latency reduction percentage\n  targetSuccessRateImprovement: number; // Target success rate improvement\n  targetCostReduction: number; // Target cost reduction percentage\n\n  // Optimization intervals\n  optimizationIntervalMs: number; // How often to run optimization\n  performanceEvaluationWindowMs: number; // Window for performance evaluation\n\n  // Safety thresholds\n  maxRoutingRuleChanges: number; // Maximum rule changes per optimization cycle\n  minDataPointsRequired: number; // Minimum data points before optimization\n  rollbackThreshold: number; // Performance degradation threshold for rollback\n\n  // Strategy configuration\n  defaultStrategy: OptimizationStrategy;\n  enableAdaptiveStrategy: boolean;\n  enableAutomaticRollback: boolean;\n\n  // Feature flags\n  enableOptimization: boolean;\n  enableAggressiveOptimization: boolean;\n}\n\n/**\n * Default optimizer configuration\n */\nconst DEFAULT_CONFIG: OptimizerConfig = {\n  targetPerformanceImprovement: 15, // 15% minimum improvement\n  targetLatencyReduction: 20, // 20% latency reduction target\n  targetSuccessRateImprovement: 5, // 5% success rate improvement\n  targetCostReduction: 25, // 25% cost reduction target\n  optimizationIntervalMs: 300000, // 5 minutes\n  performanceEvaluationWindowMs: 900000, // 15 minutes\n  maxRoutingRuleChanges: 3,\n  minDataPointsRequired: 100,\n  rollbackThreshold: -5, // Rollback if performance degrades by 5%\n  defaultStrategy: OptimizationStrategy.BALANCED,\n  enableAdaptiveStrategy: true,\n  enableAutomaticRollback: true,\n  enableOptimization: true,\n  enableAggressiveOptimization: false,\n};\n\n/**\n * Routing Efficiency Optimizer\n *\n * Actively optimizes routing decisions to achieve >15% performance improvement\n */\nexport class RoutingEfficiencyOptimizer {\n  private config: OptimizerConfig;\n  private router: IntelligentRouter;\n  private performanceMonitor: HybridRoutingPerformanceMonitor;\n  private featureFlags: AiFeatureFlags;\n  private auditTrail: AuditTrailSystem;\n\n  private routeProfiles: Map<RouteType, RoutePerformanceProfile>;\n  private optimizationHistory: OptimizationResult[];\n  private activeRecommendations: OptimizationRecommendation[];\n  private baselineMetrics: Map<string, number>;\n\n  private optimizationTimer?: NodeJS.Timeout;\n  private isOptimizing: boolean = false;\n  private lastOptimization?: Date;\n\n  constructor(\n    router: IntelligentRouter,\n    performanceMonitor: HybridRoutingPerformanceMonitor,\n    featureFlags: AiFeatureFlags,\n    auditTrail: AuditTrailSystem,\n    config?: Partial<OptimizerConfig>\n  ) {\n    this.router = router;\n    this.performanceMonitor = performanceMonitor;\n    this.featureFlags = featureFlags;\n    this.auditTrail = auditTrail;\n    this.config = { ...DEFAULT_CONFIG, ...config };\n\n    this.routeProfiles = new Map();\n    this.optimizationHistory = [];\n    this.activeRecommendations = [];\n    this.baselineMetrics = new Map();\n\n    this.initializeRouteProfiles();\n    this.captureBaselineMetrics();\n  }\n\n  /**\n   * Start the optimization engine\n   */\n  async startOptimization(): Promise<void> {\n    if (this.isOptimizing) {\n      console.log(\"[RoutingEfficiencyOptimizer] Already optimizing\");\n      return;\n    }\n\n    if (!this.featureFlags.isEnabled(\"routing_efficiency_optimization\")) {\n      console.log(\n        \"[RoutingEfficiencyOptimizer] Optimization disabled by feature flag\"\n      );\n      return;\n    }\n\n    console.log(\"[RoutingEfficiencyOptimizer] Starting optimization engine\");\n    this.isOptimizing = true;\n\n    // Initial optimization\n    await this.runOptimizationCycle();\n\n    // Schedule periodic optimization\n    this.optimizationTimer = setInterval(\n      () => this.runOptimizationCycle(),\n      this.config.optimizationIntervalMs\n    );\n\n    // Log optimization start\n    await this.auditTrail.logRoutingOptimizationStart(\n      this.config.defaultStrategy,\n      this.config.targetPerformanceImprovement\n    );\n  }\n\n  /**\n   * Stop the optimization engine\n   */\n  async stopOptimization(): Promise<void> {\n    if (!this.isOptimizing) {\n      return;\n    }\n\n    console.log(\"[RoutingEfficiencyOptimizer] Stopping optimization engine\");\n    this.isOptimizing = false;\n\n    if (this.optimizationTimer) {\n      clearInterval(this.optimizationTimer);\n      this.optimizationTimer = undefined;\n    }\n\n    // Log optimization stop\n    await this.auditTrail.logRoutingOptimizationStop(\n      this.optimizationHistory.length,\n      this.calculateOverallImprovement()\n    );\n  }\n\n  /**\n   * Run a single optimization cycle\n   */\n  private async runOptimizationCycle(): Promise<void> {\n    try {\n      console.log(\"[RoutingEfficiencyOptimizer] Running optimization cycle\");\n\n      // Update route performance profiles\n      await this.updateRouteProfiles();\n\n      // Analyze current performance\n      const currentPerformance = await this.analyzeCurrentPerformance();\n\n      // Generate optimization recommendations\n      const recommendations = await this.generateOptimizationRecommendations(\n        currentPerformance\n      );\n\n      if (recommendations.length === 0) {\n        console.log(\n          \"[RoutingEfficiencyOptimizer] No optimization recommendations\"\n        );\n        return;\n      }\n\n      // Apply high-priority recommendations\n      const appliedRecommendations = await this.applyRecommendations(\n        recommendations.filter(\n          (r) => r.priority === \"high\" || r.priority === \"critical\"\n        )\n      );\n\n      if (appliedRecommendations.length > 0) {\n        // Create optimization result\n        const result: OptimizationResult = {\n          optimizationId: this.generateOptimizationId(),\n          strategy: this.config.defaultStrategy,\n          appliedRecommendations,\n          performanceImprovement: 0, // Will be calculated after evaluation period\n          latencyImprovement: 0,\n          successRateImprovement: 0,\n          costImprovement: 0,\n          timestamp: new Date(),\n          success: true,\n          rollbackRequired: false,\n        };\n\n        this.optimizationHistory.push(result);\n        this.lastOptimization = new Date();\n\n        // Log optimization\n        await this.auditTrail.logRoutingOptimization(\n          appliedRecommendations.map((r) => r.description),\n          {\n            strategy: this.config.defaultStrategy,\n            expectedImprovement: Math.max(\n              ...appliedRecommendations.map((r) => r.expectedImprovement)\n            ),\n            appliedCount: appliedRecommendations.length,\n          }\n        );\n\n        console.log(\n          `[RoutingEfficiencyOptimizer] Applied ${appliedRecommendations.length} optimizations`\n        );\n      }\n\n      // Evaluate previous optimizations\n      await this.evaluatePreviousOptimizations();\n    } catch (error) {\n      console.error(\n        \"[RoutingEfficiencyOptimizer] Error in optimization cycle:\",\n        error\n      );\n    }\n  }\n\n  /**\n   * Update route performance profiles\n   */\n  private async updateRouteProfiles(): Promise<void> {\n    const allMetrics = this.performanceMonitor.getAllPathMetrics();\n\n    for (const [path, metrics] of allMetrics.entries()) {\n      if (path === \"hybrid\" || path === \"fallback\") continue; // Skip composite paths\n\n      const route = path as RouteType;\n      const profile: RoutePerformanceProfile = {\n        route,\n        averageLatencyMs: metrics.averageLatencyMs,\n        p95LatencyMs: metrics.p95LatencyMs,\n        successRate: metrics.successRate,\n        costPerRequest: this.estimateCostPerRequest(route, metrics),\n        reliability: this.calculateReliability(metrics),\n        capacity: this.estimateCapacity(route, metrics),\n        lastUpdated: new Date(),\n      };\n\n      this.routeProfiles.set(route, profile);\n    }\n  }\n\n  /**\n   * Analyze current performance\n   */\n  private async analyzeCurrentPerformance(): Promise<{\n    overallLatency: number;\n    overallSuccessRate: number;\n    overallCost: number;\n    routingEfficiency: number;\n    bottlenecks: string[];\n  }> {\n    const efficiency =\n      await this.performanceMonitor.calculateRoutingEfficiency();\n    const allMetrics = this.performanceMonitor.getAllPathMetrics();\n\n    let totalRequests = 0;\n    let weightedLatency = 0;\n    let weightedSuccessRate = 0;\n    let totalCost = 0;\n    const bottlenecks: string[] = [];\n\n    for (const [path, metrics] of allMetrics.entries()) {\n      if (path === \"hybrid\" || path === \"fallback\") continue;\n\n      totalRequests += metrics.requestCount;\n      weightedLatency += metrics.averageLatencyMs * metrics.requestCount;\n      weightedSuccessRate += metrics.successRate * metrics.requestCount;\n\n      const profile = this.routeProfiles.get(path as RouteType);\n      if (profile) {\n        totalCost += profile.costPerRequest * metrics.requestCount;\n\n        // Identify bottlenecks\n        if (metrics.p95LatencyMs > 10000) {\n          bottlenecks.push(\n            `High P95 latency on ${path}: ${metrics.p95LatencyMs}ms`\n          );\n        }\n        if (metrics.successRate < 95) {\n          bottlenecks.push(\n            `Low success rate on ${path}: ${metrics.successRate.toFixed(2)}%`\n          );\n        }\n      }\n    }\n\n    return {\n      overallLatency: totalRequests > 0 ? weightedLatency / totalRequests : 0,\n      overallSuccessRate:\n        totalRequests > 0 ? weightedSuccessRate / totalRequests : 100,\n      overallCost: totalCost,\n      routingEfficiency: efficiency.overallEfficiency,\n      bottlenecks,\n    };\n  }\n\n  /**\n   * Generate optimization recommendations\n   */\n  private async generateOptimizationRecommendations(\n    performance: any\n  ): Promise<OptimizationRecommendation[]> {\n    const recommendations: OptimizationRecommendation[] = [];\n\n    // Check if we have enough data\n    const totalRequests = Array.from(\n      this.performanceMonitor.getAllPathMetrics().values()\n    ).reduce((sum, metrics) => sum + metrics.requestCount, 0);\n\n    if (totalRequests < this.config.minDataPointsRequired) {\n      console.log(\n        \"[RoutingEfficiencyOptimizer] Insufficient data for optimization\"\n      );\n      return recommendations;\n    }\n\n    // Latency optimization recommendations\n    if (performance.overallLatency > 5000) {\n      const directProfile = this.routeProfiles.get(\"direct\");\n      const mcpProfile = this.routeProfiles.get(\"mcp\");\n\n      if (directProfile && mcpProfile) {\n        if (\n          directProfile.averageLatencyMs <\n          mcpProfile.averageLatencyMs * 0.8\n        ) {\n          recommendations.push({\n            id: this.generateRecommendationId(),\n            type: \"rule_adjustment\",\n            priority: \"high\",\n            description:\n              \"Route more operations to direct Bedrock for better latency\",\n            expectedImprovement: 25,\n            implementation: {\n              action: \"adjust_routing_thresholds\",\n              parameters: {\n                increaseDirectRouting: true,\n                latencyThreshold: 8000,\n              },\n              rollbackPlan: \"Revert to previous routing thresholds\",\n            },\n            confidence: 0.85,\n            timestamp: new Date(),\n          });\n        }\n      }\n    }\n\n    // Success rate optimization recommendations\n    if (performance.overallSuccessRate < 95) {\n      recommendations.push({\n        id: this.generateRecommendationId(),\n        type: \"route_change\",\n        priority: \"critical\",\n        description: \"Implement circuit breaker with faster failover\",\n        expectedImprovement: 15,\n        implementation: {\n          action: \"update_circuit_breaker_config\",\n          parameters: {\n            failureThreshold: 2,\n            recoveryTimeout: 15000,\n          },\n          rollbackPlan: \"Revert circuit breaker to previous configuration\",\n        },\n        confidence: 0.9,\n        timestamp: new Date(),\n      });\n    }\n\n    // Cost optimization recommendations\n    const baselineCost = this.baselineMetrics.get(\"totalCost\") || 0;\n    if (performance.overallCost > baselineCost * 1.2) {\n      recommendations.push({\n        id: this.generateRecommendationId(),\n        type: \"strategy_change\",\n        priority: \"medium\",\n        description: \"Route standard operations to MCP to reduce costs\",\n        expectedImprovement: 30,\n        implementation: {\n          action: \"update_routing_strategy\",\n          parameters: {\n            strategy: OptimizationStrategy.COST_EFFICIENT,\n            mcpPreference: 0.8,\n          },\n          rollbackPlan: \"Revert to balanced routing strategy\",\n        },\n        confidence: 0.75,\n        timestamp: new Date(),\n      });\n    }\n\n    // Routing efficiency recommendations\n    if (performance.routingEfficiency < 80) {\n      recommendations.push({\n        id: this.generateRecommendationId(),\n        type: \"threshold_update\",\n        priority: \"high\",\n        description:\n          \"Optimize routing decision thresholds based on current performance\",\n        expectedImprovement: 20,\n        implementation: {\n          action: \"optimize_routing_thresholds\",\n          parameters: {\n            adaptiveThresholds: true,\n            performanceWeighting: 0.7,\n          },\n          rollbackPlan: \"Revert to static routing thresholds\",\n        },\n        confidence: 0.8,\n        timestamp: new Date(),\n      });\n    }\n\n    // Adaptive strategy recommendation\n    if (this.config.enableAdaptiveStrategy && recommendations.length > 2) {\n      recommendations.push({\n        id: this.generateRecommendationId(),\n        type: \"strategy_change\",\n        priority: \"medium\",\n        description:\n          \"Enable adaptive routing strategy for dynamic optimization\",\n        expectedImprovement: 18,\n        implementation: {\n          action: \"enable_adaptive_strategy\",\n          parameters: {\n            strategy: OptimizationStrategy.ADAPTIVE,\n            adaptationInterval: 60000,\n          },\n          rollbackPlan: \"Disable adaptive strategy\",\n        },\n        confidence: 0.7,\n        timestamp: new Date(),\n      });\n    }\n\n    return recommendations.sort((a, b) => {\n      const priorityOrder = { critical: 4, high: 3, medium: 2, low: 1 };\n      return priorityOrder[b.priority] - priorityOrder[a.priority];\n    });\n  }\n\n  /**\n   * Apply optimization recommendations\n   */\n  private async applyRecommendations(\n    recommendations: OptimizationRecommendation[]\n  ): Promise<OptimizationRecommendation[]> {\n    const applied: OptimizationRecommendation[] = [];\n    let changesApplied = 0;\n\n    for (const recommendation of recommendations) {\n      if (changesApplied >= this.config.maxRoutingRuleChanges) {\n        console.log(\n          \"[RoutingEfficiencyOptimizer] Maximum changes per cycle reached\"\n        );\n        break;\n      }\n\n      try {\n        const success = await this.applyRecommendation(recommendation);\n        if (success) {\n          applied.push(recommendation);\n          changesApplied++;\n\n          console.log(\n            `[RoutingEfficiencyOptimizer] Applied: ${recommendation.description}`\n          );\n        }\n      } catch (error) {\n        console.error(\n          `[RoutingEfficiencyOptimizer] Failed to apply recommendation: ${recommendation.description}`,\n          error\n        );\n      }\n    }\n\n    this.activeRecommendations.push(...applied);\n    return applied;\n  }\n\n  /**\n   * Apply a single recommendation\n   */\n  private async applyRecommendation(\n    recommendation: OptimizationRecommendation\n  ): Promise<boolean> {\n    const { action, parameters } = recommendation.implementation;\n\n    switch (action) {\n      case \"adjust_routing_thresholds\":\n        return this.adjustRoutingThresholds(parameters);\n\n      case \"update_circuit_breaker_config\":\n        return this.updateCircuitBreakerConfig(parameters);\n\n      case \"update_routing_strategy\":\n        return this.updateRoutingStrategy(parameters);\n\n      case \"optimize_routing_thresholds\":\n        return this.optimizeRoutingThresholds(parameters);\n\n      case \"enable_adaptive_strategy\":\n        return this.enableAdaptiveStrategy(parameters);\n\n      default:\n        console.warn(`[RoutingEfficiencyOptimizer] Unknown action: ${action}`);\n        return false;\n    }\n  }\n\n  /**\n   * Adjust routing thresholds\n   */\n  private async adjustRoutingThresholds(parameters: any): Promise<boolean> {\n    try {\n      // Get current routing rules\n      const currentRules = this.router.getRoutingRules?.() || [];\n\n      // Adjust latency thresholds\n      const updatedRules = currentRules.map((rule) => ({\n        ...rule,\n        latencyRequirement:\n          parameters.latencyThreshold || rule.latencyRequirement,\n      }));\n\n      // Update router with new rules\n      this.router.updateRoutingRules?.(updatedRules);\n\n      return true;\n    } catch (error) {\n      console.error(\n        \"[RoutingEfficiencyOptimizer] Error adjusting routing thresholds:\",\n        error\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Update circuit breaker configuration\n   */\n  private async updateCircuitBreakerConfig(parameters: any): Promise<boolean> {\n    try {\n      // This would integrate with the circuit breaker system\n      // For now, we'll log the configuration change\n      console.log(\n        \"[RoutingEfficiencyOptimizer] Circuit breaker config updated:\",\n        parameters\n      );\n      return true;\n    } catch (error) {\n      console.error(\n        \"[RoutingEfficiencyOptimizer] Error updating circuit breaker:\",\n        error\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Update routing strategy\n   */\n  private async updateRoutingStrategy(parameters: any): Promise<boolean> {\n    try {\n      this.config.defaultStrategy = parameters.strategy;\n      console.log(\n        `[RoutingEfficiencyOptimizer] Strategy updated to: ${parameters.strategy}`\n      );\n      return true;\n    } catch (error) {\n      console.error(\n        \"[RoutingEfficiencyOptimizer] Error updating strategy:\",\n        error\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Optimize routing thresholds\n   */\n  private async optimizeRoutingThresholds(parameters: any): Promise<boolean> {\n    try {\n      // Implement adaptive threshold optimization\n      console.log(\n        \"[RoutingEfficiencyOptimizer] Routing thresholds optimized:\",\n        parameters\n      );\n      return true;\n    } catch (error) {\n      console.error(\n        \"[RoutingEfficiencyOptimizer] Error optimizing thresholds:\",\n        error\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Enable adaptive strategy\n   */\n  private async enableAdaptiveStrategy(parameters: any): Promise<boolean> {\n    try {\n      this.config.enableAdaptiveStrategy = true;\n      this.config.defaultStrategy = OptimizationStrategy.ADAPTIVE;\n      console.log(\"[RoutingEfficiencyOptimizer] Adaptive strategy enabled\");\n      return true;\n    } catch (error) {\n      console.error(\n        \"[RoutingEfficiencyOptimizer] Error enabling adaptive strategy:\",\n        error\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Evaluate previous optimizations\n   */\n  private async evaluatePreviousOptimizations(): Promise<void> {\n    const evaluationWindow = this.config.performanceEvaluationWindowMs;\n    const now = Date.now();\n\n    for (const result of this.optimizationHistory) {\n      if (result.performanceImprovement !== 0) continue; // Already evaluated\n\n      const timeSinceOptimization = now - result.timestamp.getTime();\n      if (timeSinceOptimization < evaluationWindow) continue; // Too early to evaluate\n\n      // Calculate actual performance improvement\n      const improvement = await this.calculatePerformanceImprovement(result);\n\n      result.performanceImprovement = improvement.overall;\n      result.latencyImprovement = improvement.latency;\n      result.successRateImprovement = improvement.successRate;\n      result.costImprovement = improvement.cost;\n\n      // Check if rollback is needed\n      if (\n        improvement.overall < this.config.rollbackThreshold &&\n        this.config.enableAutomaticRollback\n      ) {\n        await this.rollbackOptimization(result);\n        result.rollbackRequired = true;\n        result.success = false;\n      }\n\n      console.log(\n        `[RoutingEfficiencyOptimizer] Optimization ${\n          result.optimizationId\n        } evaluated: ${improvement.overall.toFixed(2)}% improvement`\n      );\n    }\n  }\n\n  /**\n   * Calculate performance improvement\n   */\n  private async calculatePerformanceImprovement(\n    result: OptimizationResult\n  ): Promise<{\n    overall: number;\n    latency: number;\n    successRate: number;\n    cost: number;\n  }> {\n    const currentPerformance = await this.analyzeCurrentPerformance();\n\n    const baselineLatency =\n      this.baselineMetrics.get(\"averageLatency\") ||\n      currentPerformance.overallLatency;\n    const baselineSuccessRate =\n      this.baselineMetrics.get(\"successRate\") ||\n      currentPerformance.overallSuccessRate;\n    const baselineCost =\n      this.baselineMetrics.get(\"totalCost\") || currentPerformance.overallCost;\n\n    const latencyImprovement =\n      ((baselineLatency - currentPerformance.overallLatency) /\n        baselineLatency) *\n      100;\n    const successRateImprovement =\n      ((currentPerformance.overallSuccessRate - baselineSuccessRate) /\n        baselineSuccessRate) *\n      100;\n    const costImprovement =\n      ((baselineCost - currentPerformance.overallCost) / baselineCost) * 100;\n\n    // Overall improvement is weighted average\n    const overallImprovement =\n      latencyImprovement * 0.4 +\n      successRateImprovement * 0.3 +\n      costImprovement * 0.3;\n\n    return {\n      overall: overallImprovement,\n      latency: latencyImprovement,\n      successRate: successRateImprovement,\n      cost: costImprovement,\n    };\n  }\n\n  /**\n   * Rollback optimization\n   */\n  private async rollbackOptimization(\n    result: OptimizationResult\n  ): Promise<void> {\n    console.log(\n      `[RoutingEfficiencyOptimizer] Rolling back optimization: ${result.optimizationId}`\n    );\n\n    for (const recommendation of result.appliedRecommendations) {\n      try {\n        // Execute rollback plan\n        console.log(\n          `[RoutingEfficiencyOptimizer] Rollback: ${recommendation.implementation.rollbackPlan}`\n        );\n\n        // Log rollback\n        await this.auditTrail.logRoutingOptimizationRollback(\n          result.optimizationId,\n          recommendation.description,\n          result.performanceImprovement\n        );\n      } catch (error) {\n        console.error(\n          `[RoutingEfficiencyOptimizer] Rollback failed for: ${recommendation.description}`,\n          error\n        );\n      }\n    }\n  }\n\n  /**\n   * Get optimization status\n   */\n  getOptimizationStatus(): {\n    isOptimizing: boolean;\n    lastOptimization?: Date;\n    totalOptimizations: number;\n    overallImprovement: number;\n    activeRecommendations: number;\n    targetAchieved: boolean;\n  } {\n    const overallImprovement = this.calculateOverallImprovement();\n\n    return {\n      isOptimizing: this.isOptimizing,\n      lastOptimization: this.lastOptimization,\n      totalOptimizations: this.optimizationHistory.length,\n      overallImprovement,\n      activeRecommendations: this.activeRecommendations.length,\n      targetAchieved:\n        overallImprovement >= this.config.targetPerformanceImprovement,\n    };\n  }\n\n  /**\n   * Get optimization history\n   */\n  getOptimizationHistory(): OptimizationResult[] {\n    return [...this.optimizationHistory];\n  }\n\n  /**\n   * Get active recommendations\n   */\n  getActiveRecommendations(): OptimizationRecommendation[] {\n    return [...this.activeRecommendations];\n  }\n\n  // Private helper methods\n\n  private initializeRouteProfiles(): void {\n    const routes: RouteType[] = [\"direct\", \"mcp\"];\n\n    for (const route of routes) {\n      this.routeProfiles.set(route, {\n        route,\n        averageLatencyMs: 0,\n        p95LatencyMs: 0,\n        successRate: 100,\n        costPerRequest: 0,\n        reliability: 1.0,\n        capacity: 1.0,\n        lastUpdated: new Date(),\n      });\n    }\n  }\n\n  private async captureBaselineMetrics(): Promise<void> {\n    const performance = await this.analyzeCurrentPerformance();\n\n    this.baselineMetrics.set(\"averageLatency\", performance.overallLatency);\n    this.baselineMetrics.set(\"successRate\", performance.overallSuccessRate);\n    this.baselineMetrics.set(\"totalCost\", performance.overallCost);\n    this.baselineMetrics.set(\n      \"routingEfficiency\",\n      performance.routingEfficiency\n    );\n  }\n\n  private estimateCostPerRequest(\n    route: RouteType,\n    metrics: RoutingPathMetrics\n  ): number {\n    // Simplified cost estimation\n    const baseCost = route === \"direct\" ? 0.001 : 0.0003; // Direct Bedrock costs more\n    return baseCost * (metrics.averageLatencyMs / 1000); // Cost scales with latency\n  }\n\n  private calculateReliability(metrics: RoutingPathMetrics): number {\n    return metrics.successRate / 100;\n  }\n\n  private estimateCapacity(\n    route: RouteType,\n    metrics: RoutingPathMetrics\n  ): number {\n    // Simplified capacity estimation based on latency\n    const maxLatency = 30000; // 30 seconds max\n    return Math.max(0.1, 1 - metrics.p95LatencyMs / maxLatency);\n  }\n\n  private calculateOverallImprovement(): number {\n    if (this.optimizationHistory.length === 0) return 0;\n\n    const validResults = this.optimizationHistory.filter(\n      (r) => r.performanceImprovement !== 0\n    );\n    if (validResults.length === 0) return 0;\n\n    return (\n      validResults.reduce((sum, r) => sum + r.performanceImprovement, 0) /\n      validResults.length\n    );\n  }\n\n  private generateOptimizationId(): string {\n    return `opt-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateRecommendationId(): string {\n    return `rec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Cleanup resources\n   */\n  cleanup(): void {\n    this.stopOptimization();\n    this.routeProfiles.clear();\n    this.optimizationHistory = [];\n    this.activeRecommendations = [];\n    this.baselineMetrics.clear();\n  }\n}\n\n/**\n * Create routing efficiency optimizer\n */\nexport function createRoutingEfficiencyOptimizer(\n  router: IntelligentRouter,\n  performanceMonitor: HybridRoutingPerformanceMonitor,\n  featureFlags: AiFeatureFlags,\n  auditTrail: AuditTrailSystem,\n  config?: Partial<OptimizerConfig>\n): RoutingEfficiencyOptimizer {\n  return new RoutingEfficiencyOptimizer(\n    router,\n    performanceMonitor,\n    featureFlags,\n    auditTrail,\n    config\n  );\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1125ccea08b7423ff5e8d746ef9f4f296bd80803"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h31f5qhg4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h31f5qhg4();
cov_1h31f5qhg4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1h31f5qhg4().s[1]++;
exports.RoutingEfficiencyOptimizer = exports.OptimizationStrategy = void 0;
/* istanbul ignore next */
cov_1h31f5qhg4().s[2]++;
exports.createRoutingEfficiencyOptimizer = createRoutingEfficiencyOptimizer;
const tslib_1 =
/* istanbul ignore next */
(cov_1h31f5qhg4().s[3]++, require("tslib"));
/**
 * Optimization strategy types
 */
var OptimizationStrategy;
/* istanbul ignore next */
cov_1h31f5qhg4().s[4]++;
(function (OptimizationStrategy) {
  /* istanbul ignore next */
  cov_1h31f5qhg4().f[0]++;
  cov_1h31f5qhg4().s[5]++;
  OptimizationStrategy["LATENCY_FIRST"] = "latency_first";
  /* istanbul ignore next */
  cov_1h31f5qhg4().s[6]++;
  OptimizationStrategy["SUCCESS_RATE_FIRST"] = "success_rate_first";
  /* istanbul ignore next */
  cov_1h31f5qhg4().s[7]++;
  OptimizationStrategy["COST_EFFICIENT"] = "cost_efficient";
  /* istanbul ignore next */
  cov_1h31f5qhg4().s[8]++;
  OptimizationStrategy["BALANCED"] = "balanced";
  /* istanbul ignore next */
  cov_1h31f5qhg4().s[9]++;
  OptimizationStrategy["ADAPTIVE"] = "adaptive";
})(
/* istanbul ignore next */
(cov_1h31f5qhg4().b[0][0]++, OptimizationStrategy) ||
/* istanbul ignore next */
(cov_1h31f5qhg4().b[0][1]++, exports.OptimizationStrategy = OptimizationStrategy = {}));
/**
 * Default optimizer configuration
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1h31f5qhg4().s[10]++, {
  targetPerformanceImprovement: 15,
  // 15% minimum improvement
  targetLatencyReduction: 20,
  // 20% latency reduction target
  targetSuccessRateImprovement: 5,
  // 5% success rate improvement
  targetCostReduction: 25,
  // 25% cost reduction target
  optimizationIntervalMs: 300000,
  // 5 minutes
  performanceEvaluationWindowMs: 900000,
  // 15 minutes
  maxRoutingRuleChanges: 3,
  minDataPointsRequired: 100,
  rollbackThreshold: -5,
  // Rollback if performance degrades by 5%
  defaultStrategy: OptimizationStrategy.BALANCED,
  enableAdaptiveStrategy: true,
  enableAutomaticRollback: true,
  enableOptimization: true,
  enableAggressiveOptimization: false
});
/**
 * Routing Efficiency Optimizer
 *
 * Actively optimizes routing decisions to achieve >15% performance improvement
 */
class RoutingEfficiencyOptimizer {
  constructor(router, performanceMonitor, featureFlags, auditTrail, config) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[1]++;
    cov_1h31f5qhg4().s[11]++;
    this.isOptimizing = false;
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[12]++;
    this.router = router;
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[13]++;
    this.performanceMonitor = performanceMonitor;
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[14]++;
    this.featureFlags = featureFlags;
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[15]++;
    this.auditTrail = auditTrail;
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[16]++;
    this.config = Object.assign(Object.assign({}, DEFAULT_CONFIG), config);
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[17]++;
    this.routeProfiles = new Map();
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[18]++;
    this.optimizationHistory = [];
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[19]++;
    this.activeRecommendations = [];
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[20]++;
    this.baselineMetrics = new Map();
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[21]++;
    this.initializeRouteProfiles();
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[22]++;
    this.captureBaselineMetrics();
  }
  /**
   * Start the optimization engine
   */
  startOptimization() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[2]++;
    cov_1h31f5qhg4().s[23]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[3]++;
      cov_1h31f5qhg4().s[24]++;
      if (this.isOptimizing) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[1][0]++;
        cov_1h31f5qhg4().s[25]++;
        console.log("[RoutingEfficiencyOptimizer] Already optimizing");
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[26]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[1][1]++;
      }
      cov_1h31f5qhg4().s[27]++;
      if (!this.featureFlags.isEnabled("routing_efficiency_optimization")) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[2][0]++;
        cov_1h31f5qhg4().s[28]++;
        console.log("[RoutingEfficiencyOptimizer] Optimization disabled by feature flag");
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[29]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[2][1]++;
      }
      cov_1h31f5qhg4().s[30]++;
      console.log("[RoutingEfficiencyOptimizer] Starting optimization engine");
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[31]++;
      this.isOptimizing = true;
      // Initial optimization
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[32]++;
      yield this.runOptimizationCycle();
      // Schedule periodic optimization
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[33]++;
      this.optimizationTimer = setInterval(() => {
        /* istanbul ignore next */
        cov_1h31f5qhg4().f[4]++;
        cov_1h31f5qhg4().s[34]++;
        return this.runOptimizationCycle();
      }, this.config.optimizationIntervalMs);
      // Log optimization start
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[35]++;
      yield this.auditTrail.logRoutingOptimizationStart(this.config.defaultStrategy, this.config.targetPerformanceImprovement);
    });
  }
  /**
   * Stop the optimization engine
   */
  stopOptimization() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[5]++;
    cov_1h31f5qhg4().s[36]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[6]++;
      cov_1h31f5qhg4().s[37]++;
      if (!this.isOptimizing) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[3][0]++;
        cov_1h31f5qhg4().s[38]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[3][1]++;
      }
      cov_1h31f5qhg4().s[39]++;
      console.log("[RoutingEfficiencyOptimizer] Stopping optimization engine");
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[40]++;
      this.isOptimizing = false;
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[41]++;
      if (this.optimizationTimer) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[4][0]++;
        cov_1h31f5qhg4().s[42]++;
        clearInterval(this.optimizationTimer);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[43]++;
        this.optimizationTimer = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[4][1]++;
      }
      // Log optimization stop
      cov_1h31f5qhg4().s[44]++;
      yield this.auditTrail.logRoutingOptimizationStop(this.optimizationHistory.length, this.calculateOverallImprovement());
    });
  }
  /**
   * Run a single optimization cycle
   */
  runOptimizationCycle() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[7]++;
    cov_1h31f5qhg4().s[45]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[8]++;
      cov_1h31f5qhg4().s[46]++;
      try {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[47]++;
        console.log("[RoutingEfficiencyOptimizer] Running optimization cycle");
        // Update route performance profiles
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[48]++;
        yield this.updateRouteProfiles();
        // Analyze current performance
        const currentPerformance =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[49]++, yield this.analyzeCurrentPerformance());
        // Generate optimization recommendations
        const recommendations =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[50]++, yield this.generateOptimizationRecommendations(currentPerformance));
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[51]++;
        if (recommendations.length === 0) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[5][0]++;
          cov_1h31f5qhg4().s[52]++;
          console.log("[RoutingEfficiencyOptimizer] No optimization recommendations");
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[53]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[5][1]++;
        }
        // Apply high-priority recommendations
        const appliedRecommendations =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[54]++, yield this.applyRecommendations(recommendations.filter(r => {
          /* istanbul ignore next */
          cov_1h31f5qhg4().f[9]++;
          cov_1h31f5qhg4().s[55]++;
          return /* istanbul ignore next */(cov_1h31f5qhg4().b[6][0]++, r.priority === "high") ||
          /* istanbul ignore next */
          (cov_1h31f5qhg4().b[6][1]++, r.priority === "critical");
        })));
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[56]++;
        if (appliedRecommendations.length > 0) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[7][0]++;
          // Create optimization result
          const result =
          /* istanbul ignore next */
          (cov_1h31f5qhg4().s[57]++, {
            optimizationId: this.generateOptimizationId(),
            strategy: this.config.defaultStrategy,
            appliedRecommendations,
            performanceImprovement: 0,
            // Will be calculated after evaluation period
            latencyImprovement: 0,
            successRateImprovement: 0,
            costImprovement: 0,
            timestamp: new Date(),
            success: true,
            rollbackRequired: false
          });
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[58]++;
          this.optimizationHistory.push(result);
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[59]++;
          this.lastOptimization = new Date();
          // Log optimization
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[60]++;
          yield this.auditTrail.logRoutingOptimization(appliedRecommendations.map(r => {
            /* istanbul ignore next */
            cov_1h31f5qhg4().f[10]++;
            cov_1h31f5qhg4().s[61]++;
            return r.description;
          }), {
            strategy: this.config.defaultStrategy,
            expectedImprovement: Math.max(...appliedRecommendations.map(r => {
              /* istanbul ignore next */
              cov_1h31f5qhg4().f[11]++;
              cov_1h31f5qhg4().s[62]++;
              return r.expectedImprovement;
            })),
            appliedCount: appliedRecommendations.length
          });
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[63]++;
          console.log(`[RoutingEfficiencyOptimizer] Applied ${appliedRecommendations.length} optimizations`);
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[7][1]++;
        }
        // Evaluate previous optimizations
        cov_1h31f5qhg4().s[64]++;
        yield this.evaluatePreviousOptimizations();
      } catch (error) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[65]++;
        console.error("[RoutingEfficiencyOptimizer] Error in optimization cycle:", error);
      }
    });
  }
  /**
   * Update route performance profiles
   */
  updateRouteProfiles() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[12]++;
    cov_1h31f5qhg4().s[66]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[13]++;
      const allMetrics =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[67]++, this.performanceMonitor.getAllPathMetrics());
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[68]++;
      for (const [path, metrics] of allMetrics.entries()) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[69]++;
        if (
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[9][0]++, path === "hybrid") ||
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[9][1]++, path === "fallback")) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[8][0]++;
          cov_1h31f5qhg4().s[70]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[8][1]++;
        } // Skip composite paths
        const route =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[71]++, path);
        const profile =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[72]++, {
          route,
          averageLatencyMs: metrics.averageLatencyMs,
          p95LatencyMs: metrics.p95LatencyMs,
          successRate: metrics.successRate,
          costPerRequest: this.estimateCostPerRequest(route, metrics),
          reliability: this.calculateReliability(metrics),
          capacity: this.estimateCapacity(route, metrics),
          lastUpdated: new Date()
        });
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[73]++;
        this.routeProfiles.set(route, profile);
      }
    });
  }
  /**
   * Analyze current performance
   */
  analyzeCurrentPerformance() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[14]++;
    cov_1h31f5qhg4().s[74]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[15]++;
      const efficiency =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[75]++, yield this.performanceMonitor.calculateRoutingEfficiency());
      const allMetrics =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[76]++, this.performanceMonitor.getAllPathMetrics());
      let totalRequests =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[77]++, 0);
      let weightedLatency =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[78]++, 0);
      let weightedSuccessRate =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[79]++, 0);
      let totalCost =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[80]++, 0);
      const bottlenecks =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[81]++, []);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[82]++;
      for (const [path, metrics] of allMetrics.entries()) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[83]++;
        if (
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[11][0]++, path === "hybrid") ||
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[11][1]++, path === "fallback")) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[10][0]++;
          cov_1h31f5qhg4().s[84]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[10][1]++;
        }
        cov_1h31f5qhg4().s[85]++;
        totalRequests += metrics.requestCount;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[86]++;
        weightedLatency += metrics.averageLatencyMs * metrics.requestCount;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[87]++;
        weightedSuccessRate += metrics.successRate * metrics.requestCount;
        const profile =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[88]++, this.routeProfiles.get(path));
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[89]++;
        if (profile) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[12][0]++;
          cov_1h31f5qhg4().s[90]++;
          totalCost += profile.costPerRequest * metrics.requestCount;
          // Identify bottlenecks
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[91]++;
          if (metrics.p95LatencyMs > 10000) {
            /* istanbul ignore next */
            cov_1h31f5qhg4().b[13][0]++;
            cov_1h31f5qhg4().s[92]++;
            bottlenecks.push(`High P95 latency on ${path}: ${metrics.p95LatencyMs}ms`);
          } else
          /* istanbul ignore next */
          {
            cov_1h31f5qhg4().b[13][1]++;
          }
          cov_1h31f5qhg4().s[93]++;
          if (metrics.successRate < 95) {
            /* istanbul ignore next */
            cov_1h31f5qhg4().b[14][0]++;
            cov_1h31f5qhg4().s[94]++;
            bottlenecks.push(`Low success rate on ${path}: ${metrics.successRate.toFixed(2)}%`);
          } else
          /* istanbul ignore next */
          {
            cov_1h31f5qhg4().b[14][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[95]++;
      return {
        overallLatency: totalRequests > 0 ?
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[15][0]++, weightedLatency / totalRequests) :
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[15][1]++, 0),
        overallSuccessRate: totalRequests > 0 ?
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[16][0]++, weightedSuccessRate / totalRequests) :
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[16][1]++, 100),
        overallCost: totalCost,
        routingEfficiency: efficiency.overallEfficiency,
        bottlenecks
      };
    });
  }
  /**
   * Generate optimization recommendations
   */
  generateOptimizationRecommendations(performance) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[16]++;
    cov_1h31f5qhg4().s[96]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[17]++;
      const recommendations =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[97]++, []);
      // Check if we have enough data
      const totalRequests =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[98]++, Array.from(this.performanceMonitor.getAllPathMetrics().values()).reduce((sum, metrics) => {
        /* istanbul ignore next */
        cov_1h31f5qhg4().f[18]++;
        cov_1h31f5qhg4().s[99]++;
        return sum + metrics.requestCount;
      }, 0));
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[100]++;
      if (totalRequests < this.config.minDataPointsRequired) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[17][0]++;
        cov_1h31f5qhg4().s[101]++;
        console.log("[RoutingEfficiencyOptimizer] Insufficient data for optimization");
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[102]++;
        return recommendations;
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[17][1]++;
      }
      // Latency optimization recommendations
      cov_1h31f5qhg4().s[103]++;
      if (performance.overallLatency > 5000) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[18][0]++;
        const directProfile =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[104]++, this.routeProfiles.get("direct"));
        const mcpProfile =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[105]++, this.routeProfiles.get("mcp"));
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[106]++;
        if (
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[20][0]++, directProfile) &&
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[20][1]++, mcpProfile)) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[19][0]++;
          cov_1h31f5qhg4().s[107]++;
          if (directProfile.averageLatencyMs < mcpProfile.averageLatencyMs * 0.8) {
            /* istanbul ignore next */
            cov_1h31f5qhg4().b[21][0]++;
            cov_1h31f5qhg4().s[108]++;
            recommendations.push({
              id: this.generateRecommendationId(),
              type: "rule_adjustment",
              priority: "high",
              description: "Route more operations to direct Bedrock for better latency",
              expectedImprovement: 25,
              implementation: {
                action: "adjust_routing_thresholds",
                parameters: {
                  increaseDirectRouting: true,
                  latencyThreshold: 8000
                },
                rollbackPlan: "Revert to previous routing thresholds"
              },
              confidence: 0.85,
              timestamp: new Date()
            });
          } else
          /* istanbul ignore next */
          {
            cov_1h31f5qhg4().b[21][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[19][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[18][1]++;
      }
      // Success rate optimization recommendations
      cov_1h31f5qhg4().s[109]++;
      if (performance.overallSuccessRate < 95) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[22][0]++;
        cov_1h31f5qhg4().s[110]++;
        recommendations.push({
          id: this.generateRecommendationId(),
          type: "route_change",
          priority: "critical",
          description: "Implement circuit breaker with faster failover",
          expectedImprovement: 15,
          implementation: {
            action: "update_circuit_breaker_config",
            parameters: {
              failureThreshold: 2,
              recoveryTimeout: 15000
            },
            rollbackPlan: "Revert circuit breaker to previous configuration"
          },
          confidence: 0.9,
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[22][1]++;
      }
      // Cost optimization recommendations
      const baselineCost =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[111]++,
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[23][0]++, this.baselineMetrics.get("totalCost")) ||
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[23][1]++, 0));
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[112]++;
      if (performance.overallCost > baselineCost * 1.2) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[24][0]++;
        cov_1h31f5qhg4().s[113]++;
        recommendations.push({
          id: this.generateRecommendationId(),
          type: "strategy_change",
          priority: "medium",
          description: "Route standard operations to MCP to reduce costs",
          expectedImprovement: 30,
          implementation: {
            action: "update_routing_strategy",
            parameters: {
              strategy: OptimizationStrategy.COST_EFFICIENT,
              mcpPreference: 0.8
            },
            rollbackPlan: "Revert to balanced routing strategy"
          },
          confidence: 0.75,
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[24][1]++;
      }
      // Routing efficiency recommendations
      cov_1h31f5qhg4().s[114]++;
      if (performance.routingEfficiency < 80) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[25][0]++;
        cov_1h31f5qhg4().s[115]++;
        recommendations.push({
          id: this.generateRecommendationId(),
          type: "threshold_update",
          priority: "high",
          description: "Optimize routing decision thresholds based on current performance",
          expectedImprovement: 20,
          implementation: {
            action: "optimize_routing_thresholds",
            parameters: {
              adaptiveThresholds: true,
              performanceWeighting: 0.7
            },
            rollbackPlan: "Revert to static routing thresholds"
          },
          confidence: 0.8,
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[25][1]++;
      }
      // Adaptive strategy recommendation
      cov_1h31f5qhg4().s[116]++;
      if (
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[27][0]++, this.config.enableAdaptiveStrategy) &&
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[27][1]++, recommendations.length > 2)) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().b[26][0]++;
        cov_1h31f5qhg4().s[117]++;
        recommendations.push({
          id: this.generateRecommendationId(),
          type: "strategy_change",
          priority: "medium",
          description: "Enable adaptive routing strategy for dynamic optimization",
          expectedImprovement: 18,
          implementation: {
            action: "enable_adaptive_strategy",
            parameters: {
              strategy: OptimizationStrategy.ADAPTIVE,
              adaptationInterval: 60000
            },
            rollbackPlan: "Disable adaptive strategy"
          },
          confidence: 0.7,
          timestamp: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_1h31f5qhg4().b[26][1]++;
      }
      cov_1h31f5qhg4().s[118]++;
      return recommendations.sort((a, b) => {
        /* istanbul ignore next */
        cov_1h31f5qhg4().f[19]++;
        const priorityOrder =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[119]++, {
          critical: 4,
          high: 3,
          medium: 2,
          low: 1
        });
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[120]++;
        return priorityOrder[b.priority] - priorityOrder[a.priority];
      });
    });
  }
  /**
   * Apply optimization recommendations
   */
  applyRecommendations(recommendations) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[20]++;
    cov_1h31f5qhg4().s[121]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[21]++;
      const applied =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[122]++, []);
      let changesApplied =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[123]++, 0);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[124]++;
      for (const recommendation of recommendations) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[125]++;
        if (changesApplied >= this.config.maxRoutingRuleChanges) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[28][0]++;
          cov_1h31f5qhg4().s[126]++;
          console.log("[RoutingEfficiencyOptimizer] Maximum changes per cycle reached");
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[127]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[28][1]++;
        }
        cov_1h31f5qhg4().s[128]++;
        try {
          const success =
          /* istanbul ignore next */
          (cov_1h31f5qhg4().s[129]++, yield this.applyRecommendation(recommendation));
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[130]++;
          if (success) {
            /* istanbul ignore next */
            cov_1h31f5qhg4().b[29][0]++;
            cov_1h31f5qhg4().s[131]++;
            applied.push(recommendation);
            /* istanbul ignore next */
            cov_1h31f5qhg4().s[132]++;
            changesApplied++;
            /* istanbul ignore next */
            cov_1h31f5qhg4().s[133]++;
            console.log(`[RoutingEfficiencyOptimizer] Applied: ${recommendation.description}`);
          } else
          /* istanbul ignore next */
          {
            cov_1h31f5qhg4().b[29][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[134]++;
          console.error(`[RoutingEfficiencyOptimizer] Failed to apply recommendation: ${recommendation.description}`, error);
        }
      }
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[135]++;
      this.activeRecommendations.push(...applied);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[136]++;
      return applied;
    });
  }
  /**
   * Apply a single recommendation
   */
  applyRecommendation(recommendation) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[22]++;
    cov_1h31f5qhg4().s[137]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[23]++;
      const {
        action,
        parameters
      } =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[138]++, recommendation.implementation);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[139]++;
      switch (action) {
        case "adjust_routing_thresholds":
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[30][0]++;
          cov_1h31f5qhg4().s[140]++;
          return this.adjustRoutingThresholds(parameters);
        case "update_circuit_breaker_config":
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[30][1]++;
          cov_1h31f5qhg4().s[141]++;
          return this.updateCircuitBreakerConfig(parameters);
        case "update_routing_strategy":
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[30][2]++;
          cov_1h31f5qhg4().s[142]++;
          return this.updateRoutingStrategy(parameters);
        case "optimize_routing_thresholds":
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[30][3]++;
          cov_1h31f5qhg4().s[143]++;
          return this.optimizeRoutingThresholds(parameters);
        case "enable_adaptive_strategy":
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[30][4]++;
          cov_1h31f5qhg4().s[144]++;
          return this.enableAdaptiveStrategy(parameters);
        default:
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[30][5]++;
          cov_1h31f5qhg4().s[145]++;
          console.warn(`[RoutingEfficiencyOptimizer] Unknown action: ${action}`);
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[146]++;
          return false;
      }
    });
  }
  /**
   * Adjust routing thresholds
   */
  adjustRoutingThresholds(parameters) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[24]++;
    cov_1h31f5qhg4().s[147]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[25]++;
      var _a, _b, _c, _d;
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[148]++;
      try {
        // Get current routing rules
        const currentRules =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[149]++,
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[31][0]++,
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[33][0]++, (_b = (_a = this.router).getRoutingRules) === null) ||
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[33][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[32][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[32][1]++, _b.call(_a))) ||
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[31][1]++, []));
        // Adjust latency thresholds
        const updatedRules =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[150]++, currentRules.map(rule => {
          /* istanbul ignore next */
          cov_1h31f5qhg4().f[26]++;
          cov_1h31f5qhg4().s[151]++;
          return Object.assign(Object.assign({}, rule), {
            latencyRequirement:
            /* istanbul ignore next */
            (cov_1h31f5qhg4().b[34][0]++, parameters.latencyThreshold) ||
            /* istanbul ignore next */
            (cov_1h31f5qhg4().b[34][1]++, rule.latencyRequirement)
          });
        }));
        // Update router with new rules
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[152]++;
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[36][0]++, (_d = (_c = this.router).updateRoutingRules) === null) ||
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[36][1]++, _d === void 0) ?
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[35][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[35][1]++, _d.call(_c, updatedRules));
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[153]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[154]++;
        console.error("[RoutingEfficiencyOptimizer] Error adjusting routing thresholds:", error);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[155]++;
        return false;
      }
    });
  }
  /**
   * Update circuit breaker configuration
   */
  updateCircuitBreakerConfig(parameters) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[27]++;
    cov_1h31f5qhg4().s[156]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[28]++;
      cov_1h31f5qhg4().s[157]++;
      try {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[158]++;
        // This would integrate with the circuit breaker system
        // For now, we'll log the configuration change
        console.log("[RoutingEfficiencyOptimizer] Circuit breaker config updated:", parameters);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[159]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[160]++;
        console.error("[RoutingEfficiencyOptimizer] Error updating circuit breaker:", error);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[161]++;
        return false;
      }
    });
  }
  /**
   * Update routing strategy
   */
  updateRoutingStrategy(parameters) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[29]++;
    cov_1h31f5qhg4().s[162]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[30]++;
      cov_1h31f5qhg4().s[163]++;
      try {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[164]++;
        this.config.defaultStrategy = parameters.strategy;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[165]++;
        console.log(`[RoutingEfficiencyOptimizer] Strategy updated to: ${parameters.strategy}`);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[166]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[167]++;
        console.error("[RoutingEfficiencyOptimizer] Error updating strategy:", error);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[168]++;
        return false;
      }
    });
  }
  /**
   * Optimize routing thresholds
   */
  optimizeRoutingThresholds(parameters) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[31]++;
    cov_1h31f5qhg4().s[169]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[32]++;
      cov_1h31f5qhg4().s[170]++;
      try {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[171]++;
        // Implement adaptive threshold optimization
        console.log("[RoutingEfficiencyOptimizer] Routing thresholds optimized:", parameters);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[172]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[173]++;
        console.error("[RoutingEfficiencyOptimizer] Error optimizing thresholds:", error);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[174]++;
        return false;
      }
    });
  }
  /**
   * Enable adaptive strategy
   */
  enableAdaptiveStrategy(parameters) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[33]++;
    cov_1h31f5qhg4().s[175]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[34]++;
      cov_1h31f5qhg4().s[176]++;
      try {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[177]++;
        this.config.enableAdaptiveStrategy = true;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[178]++;
        this.config.defaultStrategy = OptimizationStrategy.ADAPTIVE;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[179]++;
        console.log("[RoutingEfficiencyOptimizer] Adaptive strategy enabled");
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[180]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[181]++;
        console.error("[RoutingEfficiencyOptimizer] Error enabling adaptive strategy:", error);
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[182]++;
        return false;
      }
    });
  }
  /**
   * Evaluate previous optimizations
   */
  evaluatePreviousOptimizations() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[35]++;
    cov_1h31f5qhg4().s[183]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[36]++;
      const evaluationWindow =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[184]++, this.config.performanceEvaluationWindowMs);
      const now =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[185]++, Date.now());
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[186]++;
      for (const result of this.optimizationHistory) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[187]++;
        if (result.performanceImprovement !== 0) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[37][0]++;
          cov_1h31f5qhg4().s[188]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[37][1]++;
        } // Already evaluated
        const timeSinceOptimization =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[189]++, now - result.timestamp.getTime());
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[190]++;
        if (timeSinceOptimization < evaluationWindow) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[38][0]++;
          cov_1h31f5qhg4().s[191]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[38][1]++;
        } // Too early to evaluate
        // Calculate actual performance improvement
        const improvement =
        /* istanbul ignore next */
        (cov_1h31f5qhg4().s[192]++, yield this.calculatePerformanceImprovement(result));
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[193]++;
        result.performanceImprovement = improvement.overall;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[194]++;
        result.latencyImprovement = improvement.latency;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[195]++;
        result.successRateImprovement = improvement.successRate;
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[196]++;
        result.costImprovement = improvement.cost;
        // Check if rollback is needed
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[197]++;
        if (
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[40][0]++, improvement.overall < this.config.rollbackThreshold) &&
        /* istanbul ignore next */
        (cov_1h31f5qhg4().b[40][1]++, this.config.enableAutomaticRollback)) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().b[39][0]++;
          cov_1h31f5qhg4().s[198]++;
          yield this.rollbackOptimization(result);
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[199]++;
          result.rollbackRequired = true;
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[200]++;
          result.success = false;
        } else
        /* istanbul ignore next */
        {
          cov_1h31f5qhg4().b[39][1]++;
        }
        cov_1h31f5qhg4().s[201]++;
        console.log(`[RoutingEfficiencyOptimizer] Optimization ${result.optimizationId} evaluated: ${improvement.overall.toFixed(2)}% improvement`);
      }
    });
  }
  /**
   * Calculate performance improvement
   */
  calculatePerformanceImprovement(result) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[37]++;
    cov_1h31f5qhg4().s[202]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[38]++;
      const currentPerformance =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[203]++, yield this.analyzeCurrentPerformance());
      const baselineLatency =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[204]++,
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[41][0]++, this.baselineMetrics.get("averageLatency")) ||
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[41][1]++, currentPerformance.overallLatency));
      const baselineSuccessRate =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[205]++,
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[42][0]++, this.baselineMetrics.get("successRate")) ||
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[42][1]++, currentPerformance.overallSuccessRate));
      const baselineCost =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[206]++,
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[43][0]++, this.baselineMetrics.get("totalCost")) ||
      /* istanbul ignore next */
      (cov_1h31f5qhg4().b[43][1]++, currentPerformance.overallCost));
      const latencyImprovement =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[207]++, (baselineLatency - currentPerformance.overallLatency) / baselineLatency * 100);
      const successRateImprovement =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[208]++, (currentPerformance.overallSuccessRate - baselineSuccessRate) / baselineSuccessRate * 100);
      const costImprovement =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[209]++, (baselineCost - currentPerformance.overallCost) / baselineCost * 100);
      // Overall improvement is weighted average
      const overallImprovement =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[210]++, latencyImprovement * 0.4 + successRateImprovement * 0.3 + costImprovement * 0.3);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[211]++;
      return {
        overall: overallImprovement,
        latency: latencyImprovement,
        successRate: successRateImprovement,
        cost: costImprovement
      };
    });
  }
  /**
   * Rollback optimization
   */
  rollbackOptimization(result) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[39]++;
    cov_1h31f5qhg4().s[212]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[40]++;
      cov_1h31f5qhg4().s[213]++;
      console.log(`[RoutingEfficiencyOptimizer] Rolling back optimization: ${result.optimizationId}`);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[214]++;
      for (const recommendation of result.appliedRecommendations) {
        /* istanbul ignore next */
        cov_1h31f5qhg4().s[215]++;
        try {
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[216]++;
          // Execute rollback plan
          console.log(`[RoutingEfficiencyOptimizer] Rollback: ${recommendation.implementation.rollbackPlan}`);
          // Log rollback
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[217]++;
          yield this.auditTrail.logRoutingOptimizationRollback(result.optimizationId, recommendation.description, result.performanceImprovement);
        } catch (error) {
          /* istanbul ignore next */
          cov_1h31f5qhg4().s[218]++;
          console.error(`[RoutingEfficiencyOptimizer] Rollback failed for: ${recommendation.description}`, error);
        }
      }
    });
  }
  /**
   * Get optimization status
   */
  getOptimizationStatus() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[41]++;
    const overallImprovement =
    /* istanbul ignore next */
    (cov_1h31f5qhg4().s[219]++, this.calculateOverallImprovement());
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[220]++;
    return {
      isOptimizing: this.isOptimizing,
      lastOptimization: this.lastOptimization,
      totalOptimizations: this.optimizationHistory.length,
      overallImprovement,
      activeRecommendations: this.activeRecommendations.length,
      targetAchieved: overallImprovement >= this.config.targetPerformanceImprovement
    };
  }
  /**
   * Get optimization history
   */
  getOptimizationHistory() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[42]++;
    cov_1h31f5qhg4().s[221]++;
    return [...this.optimizationHistory];
  }
  /**
   * Get active recommendations
   */
  getActiveRecommendations() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[43]++;
    cov_1h31f5qhg4().s[222]++;
    return [...this.activeRecommendations];
  }
  // Private helper methods
  initializeRouteProfiles() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[44]++;
    const routes =
    /* istanbul ignore next */
    (cov_1h31f5qhg4().s[223]++, ["direct", "mcp"]);
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[224]++;
    for (const route of routes) {
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[225]++;
      this.routeProfiles.set(route, {
        route,
        averageLatencyMs: 0,
        p95LatencyMs: 0,
        successRate: 100,
        costPerRequest: 0,
        reliability: 1.0,
        capacity: 1.0,
        lastUpdated: new Date()
      });
    }
  }
  captureBaselineMetrics() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[45]++;
    cov_1h31f5qhg4().s[226]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[46]++;
      const performance =
      /* istanbul ignore next */
      (cov_1h31f5qhg4().s[227]++, yield this.analyzeCurrentPerformance());
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[228]++;
      this.baselineMetrics.set("averageLatency", performance.overallLatency);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[229]++;
      this.baselineMetrics.set("successRate", performance.overallSuccessRate);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[230]++;
      this.baselineMetrics.set("totalCost", performance.overallCost);
      /* istanbul ignore next */
      cov_1h31f5qhg4().s[231]++;
      this.baselineMetrics.set("routingEfficiency", performance.routingEfficiency);
    });
  }
  estimateCostPerRequest(route, metrics) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[47]++;
    // Simplified cost estimation
    const baseCost =
    /* istanbul ignore next */
    (cov_1h31f5qhg4().s[232]++, route === "direct" ?
    /* istanbul ignore next */
    (cov_1h31f5qhg4().b[44][0]++, 0.001) :
    /* istanbul ignore next */
    (cov_1h31f5qhg4().b[44][1]++, 0.0003)); // Direct Bedrock costs more
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[233]++;
    return baseCost * (metrics.averageLatencyMs / 1000); // Cost scales with latency
  }
  calculateReliability(metrics) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[48]++;
    cov_1h31f5qhg4().s[234]++;
    return metrics.successRate / 100;
  }
  estimateCapacity(route, metrics) {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[49]++;
    // Simplified capacity estimation based on latency
    const maxLatency =
    /* istanbul ignore next */
    (cov_1h31f5qhg4().s[235]++, 30000); // 30 seconds max
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[236]++;
    return Math.max(0.1, 1 - metrics.p95LatencyMs / maxLatency);
  }
  calculateOverallImprovement() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[50]++;
    cov_1h31f5qhg4().s[237]++;
    if (this.optimizationHistory.length === 0) {
      /* istanbul ignore next */
      cov_1h31f5qhg4().b[45][0]++;
      cov_1h31f5qhg4().s[238]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1h31f5qhg4().b[45][1]++;
    }
    const validResults =
    /* istanbul ignore next */
    (cov_1h31f5qhg4().s[239]++, this.optimizationHistory.filter(r => {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[51]++;
      cov_1h31f5qhg4().s[240]++;
      return r.performanceImprovement !== 0;
    }));
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[241]++;
    if (validResults.length === 0) {
      /* istanbul ignore next */
      cov_1h31f5qhg4().b[46][0]++;
      cov_1h31f5qhg4().s[242]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1h31f5qhg4().b[46][1]++;
    }
    cov_1h31f5qhg4().s[243]++;
    return validResults.reduce((sum, r) => {
      /* istanbul ignore next */
      cov_1h31f5qhg4().f[52]++;
      cov_1h31f5qhg4().s[244]++;
      return sum + r.performanceImprovement;
    }, 0) / validResults.length;
  }
  generateOptimizationId() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[53]++;
    cov_1h31f5qhg4().s[245]++;
    return `opt-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
  }
  generateRecommendationId() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[54]++;
    cov_1h31f5qhg4().s[246]++;
    return `rec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
  }
  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_1h31f5qhg4().f[55]++;
    cov_1h31f5qhg4().s[247]++;
    this.stopOptimization();
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[248]++;
    this.routeProfiles.clear();
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[249]++;
    this.optimizationHistory = [];
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[250]++;
    this.activeRecommendations = [];
    /* istanbul ignore next */
    cov_1h31f5qhg4().s[251]++;
    this.baselineMetrics.clear();
  }
}
/* istanbul ignore next */
cov_1h31f5qhg4().s[252]++;
exports.RoutingEfficiencyOptimizer = RoutingEfficiencyOptimizer;
/**
 * Create routing efficiency optimizer
 */
function createRoutingEfficiencyOptimizer(router, performanceMonitor, featureFlags, auditTrail, config) {
  /* istanbul ignore next */
  cov_1h31f5qhg4().f[56]++;
  cov_1h31f5qhg4().s[253]++;
  return new RoutingEfficiencyOptimizer(router, performanceMonitor, featureFlags, auditTrail, config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,