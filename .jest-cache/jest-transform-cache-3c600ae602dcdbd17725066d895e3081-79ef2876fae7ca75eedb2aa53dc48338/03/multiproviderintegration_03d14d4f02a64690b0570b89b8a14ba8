3945ab014dc5269605f78434d1abfaa8
"use strict";

/**
 * PR-3: Multi-Provider Integration
 *
 * Implements:
 * - Unified provider interface for Bedrock, Google, Meta
 * - Intelligent model routing and selection
 * - Provider-specific optimizations
 * - Fallback and circuit breaker patterns
 */
/* istanbul ignore next */
function cov_163tj71ack() {
  var path = "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/multi-provider-integration.ts";
  var hash = "edb1874aaf217ca0117d4ab853ba8fcbde5716ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/multi-provider-integration.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "2": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "3": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "4": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "5": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "6": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "7": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 67
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "16": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 40,
          column: 17
        }
      },
      "17": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 45
        }
      },
      "18": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 63
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "20": {
        start: {
          line: 43,
          column: 31
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "21": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "22": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "23": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 33
        }
      },
      "24": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 28
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 55,
          column: 80
        }
      },
      "26": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 26
        }
      },
      "27": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "28": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 24
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "30": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "31": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 26
        }
      },
      "33": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 29
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "35": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 29
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 34
        }
      },
      "37": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 41
        }
      },
      "38": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 41
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 77
        }
      },
      "40": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "41": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "42": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 37
        }
      },
      "43": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "44": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "45": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 94
        }
      },
      "46": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 26
        }
      },
      "47": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 92
        }
      },
      "48": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 26
        }
      },
      "49": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 88
        }
      },
      "50": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 26
        }
      },
      "51": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "52": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "53": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 69
        }
      },
      "54": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 18
        }
      },
      "55": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 39
        }
      },
      "56": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "57": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "58": {
        start: {
          line: 124,
          column: 30
        },
        end: {
          line: 124,
          column: 40
        }
      },
      "59": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "60": {
        start: {
          line: 127,
          column: 36
        },
        end: {
          line: 127,
          column: 142
        }
      },
      "61": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "62": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 131,
          column: 39
        }
      },
      "63": {
        start: {
          line: 130,
          column: 36
        },
        end: {
          line: 130,
          column: 45
        }
      },
      "64": {
        start: {
          line: 134,
          column: 35
        },
        end: {
          line: 134,
          column: 80
        }
      },
      "65": {
        start: {
          line: 135,
          column: 36
        },
        end: {
          line: 135,
          column: 101
        }
      },
      "66": {
        start: {
          line: 137,
          column: 32
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "67": {
        start: {
          line: 138,
          column: 33
        },
        end: {
          line: 138,
          column: 85
        }
      },
      "68": {
        start: {
          line: 140,
          column: 37
        },
        end: {
          line: 140,
          column: 133
        }
      },
      "69": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 145,
          column: 17
        }
      },
      "70": {
        start: {
          line: 142,
          column: 20
        },
        end: {
          line: 144,
          column: 39
        }
      },
      "71": {
        start: {
          line: 143,
          column: 36
        },
        end: {
          line: 143,
          column: 45
        }
      },
      "72": {
        start: {
          line: 147,
          column: 36
        },
        end: {
          line: 147,
          column: 84
        }
      },
      "73": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 91
        }
      },
      "74": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 154,
          column: 25
        }
      },
      "75": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 71
        }
      },
      "76": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 28
        }
      },
      "77": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 58
        }
      },
      "78": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      },
      "79": {
        start: {
          line: 171,
          column: 39
        },
        end: {
          line: 171,
          column: 71
        }
      },
      "80": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "81": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 66
        }
      },
      "82": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "83": {
        start: {
          line: 177,
          column: 47
        },
        end: {
          line: 177,
          column: 78
        }
      },
      "84": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 184,
          column: 18
        }
      },
      "85": {
        start: {
          line: 187,
          column: 27
        },
        end: {
          line: 216,
          column: 14
        }
      },
      "86": {
        start: {
          line: 188,
          column: 33
        },
        end: {
          line: 188,
          column: 48
        }
      },
      "87": {
        start: {
          line: 189,
          column: 32
        },
        end: {
          line: 189,
          column: 66
        }
      },
      "88": {
        start: {
          line: 190,
          column: 37
        },
        end: {
          line: 190,
          column: 75
        }
      },
      "89": {
        start: {
          line: 191,
          column: 28
        },
        end: {
          line: 191,
          column: 29
        }
      },
      "90": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "91": {
        start: {
          line: 194,
          column: 41
        },
        end: {
          line: 194,
          column: 93
        }
      },
      "92": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 48
        }
      },
      "93": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 201,
          column: 17
        }
      },
      "94": {
        start: {
          line: 199,
          column: 38
        },
        end: {
          line: 199,
          column: 93
        }
      },
      "95": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 45
        }
      },
      "96": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "97": {
        start: {
          line: 204,
          column: 44
        },
        end: {
          line: 204,
          column: 109
        }
      },
      "98": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 51
        }
      },
      "99": {
        start: {
          line: 208,
          column: 36
        },
        end: {
          line: 208,
          column: 98
        }
      },
      "100": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 43
        }
      },
      "101": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 215,
          column: 18
        }
      },
      "102": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 53
        }
      },
      "103": {
        start: {
          line: 218,
          column: 34
        },
        end: {
          line: 218,
          column: 51
        }
      },
      "104": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 219,
          column: 34
        }
      },
      "105": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 229,
          column: 14
        }
      },
      "106": {
        start: {
          line: 225,
          column: 58
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "107": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "108": {
        start: {
          line: 237,
          column: 30
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "109": {
        start: {
          line: 241,
          column: 28
        },
        end: {
          line: 241,
          column: 32
        }
      },
      "110": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "111": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 263,
          column: 17
        }
      },
      "112": {
        start: {
          line: 244,
          column: 43
        },
        end: {
          line: 244,
          column: 77
        }
      },
      "113": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 247,
          column: 21
        }
      },
      "114": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 88
        }
      },
      "115": {
        start: {
          line: 248,
          column: 36
        },
        end: {
          line: 248,
          column: 63
        }
      },
      "116": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 251,
          column: 21
        }
      },
      "117": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 250,
          column: 80
        }
      },
      "118": {
        start: {
          line: 252,
          column: 37
        },
        end: {
          line: 254,
          column: 23
        }
      },
      "119": {
        start: {
          line: 252,
          column: 72
        },
        end: {
          line: 254,
          column: 22
        }
      },
      "120": {
        start: {
          line: 253,
          column: 24
        },
        end: {
          line: 253,
          column: 110
        }
      },
      "121": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 255,
          column: 36
        }
      },
      "122": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 72
        }
      },
      "123": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 38
        }
      },
      "124": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 67
        }
      },
      "125": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 262,
          column: 29
        }
      },
      "126": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 140
        }
      },
      "127": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 311,
          column: 11
        }
      },
      "128": {
        start: {
          line: 273,
          column: 33
        },
        end: {
          line: 273,
          column: 35
        }
      },
      "129": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "130": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 275,
          column: 66
        }
      },
      "131": {
        start: {
          line: 276,
          column: 32
        },
        end: {
          line: 276,
          column: 59
        }
      },
      "132": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 278,
          column: 29
        }
      },
      "133": {
        start: {
          line: 278,
          column: 20
        },
        end: {
          line: 278,
          column: 29
        }
      },
      "134": {
        start: {
          line: 279,
          column: 29
        },
        end: {
          line: 279,
          column: 38
        }
      },
      "135": {
        start: {
          line: 280,
          column: 30
        },
        end: {
          line: 280,
          column: 31
        }
      },
      "136": {
        start: {
          line: 281,
          column: 32
        },
        end: {
          line: 281,
          column: 33
        }
      },
      "137": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 288,
          column: 17
        }
      },
      "138": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 41
        }
      },
      "139": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 288,
          column: 17
        }
      },
      "140": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 287,
          column: 40
        }
      },
      "141": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "142": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "143": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 56
        }
      },
      "144": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "145": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 295,
          column: 45
        }
      },
      "146": {
        start: {
          line: 297,
          column: 25
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "147": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 44
        }
      },
      "148": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 307,
          column: 19
        }
      },
      "149": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 310,
          column: 72
        }
      },
      "150": {
        start: {
          line: 310,
          column: 46
        },
        end: {
          line: 310,
          column: 70
        }
      },
      "151": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "152": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 330,
          column: 13
        }
      },
      "153": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 329,
          column: 17
        }
      },
      "154": {
        start: {
          line: 320,
          column: 38
        },
        end: {
          line: 320,
          column: 48
        }
      },
      "155": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 322,
          column: 48
        }
      },
      "156": {
        start: {
          line: 323,
          column: 36
        },
        end: {
          line: 323,
          column: 58
        }
      },
      "157": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 324,
          column: 72
        }
      },
      "158": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 327,
          column: 80
        }
      },
      "159": {
        start: {
          line: 328,
          column: 20
        },
        end: {
          line: 328,
          column: 67
        }
      },
      "160": {
        start: {
          line: 337,
          column: 25
        },
        end: {
          line: 337,
          column: 59
        }
      },
      "161": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "162": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 345,
          column: 15
        }
      },
      "163": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 19
        }
      },
      "164": {
        start: {
          line: 349,
          column: 22
        },
        end: {
          line: 349,
          column: 25
        }
      },
      "165": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "166": {
        start: {
          line: 363,
          column: 29
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "167": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 38
        }
      },
      "168": {
        start: {
          line: 398,
          column: 20
        },
        end: {
          line: 398,
          column: 21
        }
      },
      "169": {
        start: {
          line: 399,
          column: 21
        },
        end: {
          line: 399,
          column: 22
        }
      },
      "170": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "171": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 71
        }
      },
      "172": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 21
        }
      },
      "173": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "174": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 406,
          column: 83
        }
      },
      "175": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 21
        }
      },
      "176": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "177": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 411,
          column: 87
        }
      },
      "178": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 21
        }
      },
      "179": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "180": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 82
        }
      },
      "181": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 21
        }
      },
      "182": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "183": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 78
        }
      },
      "184": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 21
        }
      },
      "185": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "186": {
        start: {
          line: 423,
          column: 39
        },
        end: {
          line: 423,
          column: 110
        }
      },
      "187": {
        start: {
          line: 423,
          column: 75
        },
        end: {
          line: 423,
          column: 109
        }
      },
      "188": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 75
        }
      },
      "189": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 21
        }
      },
      "190": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "191": {
        start: {
          line: 428,
          column: 37
        },
        end: {
          line: 428,
          column: 108
        }
      },
      "192": {
        start: {
          line: 428,
          column: 73
        },
        end: {
          line: 428,
          column: 107
        }
      },
      "193": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 71
        }
      },
      "194": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 21
        }
      },
      "195": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 47
        }
      },
      "196": {
        start: {
          line: 438,
          column: 30
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "197": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 39
        }
      },
      "198": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 455,
          column: 12
        }
      },
      "199": {
        start: {
          line: 450,
          column: 27
        },
        end: {
          line: 450,
          column: 49
        }
      },
      "200": {
        start: {
          line: 452,
          column: 25
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "201": {
        start: {
          line: 461,
          column: 22
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "202": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 466,
          column: 31
        }
      },
      "203": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 45
        }
      },
      "204": {
        start: {
          line: 478,
          column: 23
        },
        end: {
          line: 478,
          column: 32
        }
      },
      "205": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "206": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 53
        }
      },
      "207": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 22
        }
      },
      "208": {
        start: {
          line: 488,
          column: 24
        },
        end: {
          line: 488,
          column: 58
        }
      },
      "209": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "210": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 69
        }
      },
      "211": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 43
        }
      },
      "212": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 500,
          column: 34
        }
      },
      "213": {
        start: {
          line: 503,
          column: 0
        },
        end: {
          line: 503,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 55
          },
          end: {
            line: 33,
            column: 56
          }
        },
        loc: {
          start: {
            line: 33,
            column: 68
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 25
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 107
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 28
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 112
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        },
        loc: {
          start: {
            line: 114,
            column: 26
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 114
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 121
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 122,
            column: 56
          }
        },
        loc: {
          start: {
            line: 122,
            column: 68
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 122
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 30
          }
        },
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 130,
            column: 45
          }
        },
        line: 130
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 143,
            column: 29
          },
          end: {
            line: 143,
            column: 30
          }
        },
        loc: {
          start: {
            line: 143,
            column: 36
          },
          end: {
            line: 143,
            column: 45
          }
        },
        line: 143
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 169
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 170,
            column: 55
          },
          end: {
            line: 170,
            column: 56
          }
        },
        loc: {
          start: {
            line: 170,
            column: 68
          },
          end: {
            line: 230,
            column: 9
          }
        },
        line: 170
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 177,
            column: 40
          },
          end: {
            line: 177,
            column: 41
          }
        },
        loc: {
          start: {
            line: 177,
            column: 47
          },
          end: {
            line: 177,
            column: 78
          }
        },
        line: 177
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 187,
            column: 50
          },
          end: {
            line: 187,
            column: 51
          }
        },
        loc: {
          start: {
            line: 187,
            column: 62
          },
          end: {
            line: 216,
            column: 13
          }
        },
        line: 187
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 218,
            column: 24
          },
          end: {
            line: 218,
            column: 25
          }
        },
        loc: {
          start: {
            line: 218,
            column: 34
          },
          end: {
            line: 218,
            column: 51
          }
        },
        line: 218
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 225,
            column: 50
          },
          end: {
            line: 225,
            column: 51
          }
        },
        loc: {
          start: {
            line: 225,
            column: 58
          },
          end: {
            line: 228,
            column: 17
          }
        },
        line: 225
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 42
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 235
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 236,
            column: 55
          },
          end: {
            line: 236,
            column: 56
          }
        },
        loc: {
          start: {
            line: 236,
            column: 68
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 236
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 252,
            column: 66
          },
          end: {
            line: 252,
            column: 67
          }
        },
        loc: {
          start: {
            line: 252,
            column: 72
          },
          end: {
            line: 254,
            column: 22
          }
        },
        line: 252
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 252,
            column: 112
          },
          end: {
            line: 252,
            column: 113
          }
        },
        loc: {
          start: {
            line: 252,
            column: 125
          },
          end: {
            line: 254,
            column: 21
          }
        },
        line: 252
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 26
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 271
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 272,
            column: 55
          },
          end: {
            line: 272,
            column: 56
          }
        },
        loc: {
          start: {
            line: 272,
            column: 68
          },
          end: {
            line: 311,
            column: 9
          }
        },
        line: 272
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 310,
            column: 39
          },
          end: {
            line: 310,
            column: 40
          }
        },
        loc: {
          start: {
            line: 310,
            column: 46
          },
          end: {
            line: 310,
            column: 70
          }
        },
        line: 310
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 26
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 316
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 317,
            column: 55
          },
          end: {
            line: 317,
            column: 56
          }
        },
        loc: {
          start: {
            line: 317,
            column: 68
          },
          end: {
            line: 331,
            column: 9
          }
        },
        line: 317
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 54
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 336
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 38
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 361
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 50
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 397
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 423,
            column: 65
          },
          end: {
            line: 423,
            column: 66
          }
        },
        loc: {
          start: {
            line: 423,
            column: 75
          },
          end: {
            line: 423,
            column: 109
          }
        },
        line: 423
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 428,
            column: 61
          },
          end: {
            line: 428,
            column: 62
          }
        },
        loc: {
          start: {
            line: 428,
            column: 73
          },
          end: {
            line: 428,
            column: 107
          }
        },
        line: 428
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        loc: {
          start: {
            line: 437,
            column: 30
          },
          end: {
            line: 444,
            column: 5
          }
        },
        line: 437
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 37
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 448
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 450,
            column: 20
          },
          end: {
            line: 450,
            column: 21
          }
        },
        loc: {
          start: {
            line: 450,
            column: 27
          },
          end: {
            line: 450,
            column: 49
          }
        },
        line: 450
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 452,
            column: 17
          },
          end: {
            line: 452,
            column: 18
          }
        },
        loc: {
          start: {
            line: 452,
            column: 25
          },
          end: {
            line: 455,
            column: 9
          }
        },
        line: 452
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 5
          }
        },
        loc: {
          start: {
            line: 460,
            column: 38
          },
          end: {
            line: 467,
            column: 5
          }
        },
        line: 460
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 471,
            column: 4
          },
          end: {
            line: 471,
            column: 5
          }
        },
        loc: {
          start: {
            line: 471,
            column: 25
          },
          end: {
            line: 473,
            column: 5
          }
        },
        line: 471
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 477,
            column: 5
          }
        },
        loc: {
          start: {
            line: 477,
            column: 30
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 477
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        loc: {
          start: {
            line: 487,
            column: 34
          },
          end: {
            line: 493,
            column: 5
          }
        },
        line: 487
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 497,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        loc: {
          start: {
            line: 497,
            column: 43
          },
          end: {
            line: 501,
            column: 5
          }
        },
        line: 497
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 23,
            column: 36
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 38
          },
          end: {
            line: 23,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 23,
            column: 61
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 40,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 40,
            column: 17
          }
        }, {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 40,
            column: 17
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 55,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 45
          }
        }, {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 78
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 34
          },
          end: {
            line: 79,
            column: 48
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 95,
            column: 26
          }
        }, {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 98,
            column: 26
          }
        }, {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 101,
            column: 26
          }
        }, {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 103,
            column: 73
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 127,
            column: 85
          },
          end: {
            line: 127,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 85
          },
          end: {
            line: 127,
            column: 101
          }
        }, {
          start: {
            line: 127,
            column: 105
          },
          end: {
            line: 127,
            column: 114
          }
        }],
        line: 127
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 132,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 62
          }
        }, {
          start: {
            line: 134,
            column: 66
          },
          end: {
            line: 134,
            column: 80
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 145,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "13": {
        loc: {
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 64
          }
        }, {
          start: {
            line: 147,
            column: 68
          },
          end: {
            line: 147,
            column: 84
          }
        }],
        line: 147
      },
      "14": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 177,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 32
          }
        }, {
          start: {
            line: 177,
            column: 16
          },
          end: {
            line: 177,
            column: 79
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 196,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "18": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "19": {
        loc: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 198,
            column: 35
          }
        }, {
          start: {
            line: 198,
            column: 39
          },
          end: {
            line: 198,
            column: 46
          }
        }],
        line: 198
      },
      "20": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "21": {
        loc: {
          start: {
            line: 208,
            column: 36
          },
          end: {
            line: 208,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 91
          },
          end: {
            line: 208,
            column: 92
          }
        }, {
          start: {
            line: 208,
            column: 95
          },
          end: {
            line: 208,
            column: 98
          }
        }],
        line: 208
      },
      "22": {
        loc: {
          start: {
            line: 245,
            column: 20
          },
          end: {
            line: 247,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 20
          },
          end: {
            line: 247,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 20
          },
          end: {
            line: 251,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 20
          },
          end: {
            line: 251,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 265,
            column: 65
          },
          end: {
            line: 265,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 265,
            column: 110
          },
          end: {
            line: 265,
            column: 116
          }
        }, {
          start: {
            line: 265,
            column: 119
          },
          end: {
            line: 265,
            column: 136
          }
        }],
        line: 265
      },
      "25": {
        loc: {
          start: {
            line: 265,
            column: 65
          },
          end: {
            line: 265,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 65
          },
          end: {
            line: 265,
            column: 83
          }
        }, {
          start: {
            line: 265,
            column: 87
          },
          end: {
            line: 265,
            column: 107
          }
        }],
        line: 265
      },
      "26": {
        loc: {
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 278,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 16
          },
          end: {
            line: 278,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "27": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 288,
            column: 17
          }
        }, {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 288,
            column: 17
          }
        }],
        line: 283
      },
      "28": {
        loc: {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 288,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 288,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "29": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "30": {
        loc: {
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 299,
            column: 21
          }
        }, {
          start: {
            line: 297,
            column: 25
          },
          end: {
            line: 299,
            column: 21
          }
        }],
        line: 294
      },
      "31": {
        loc: {
          start: {
            line: 294,
            column: 24
          },
          end: {
            line: 294,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 24
          },
          end: {
            line: 294,
            column: 39
          }
        }, {
          start: {
            line: 294,
            column: 43
          },
          end: {
            line: 294,
            column: 57
          }
        }],
        line: 294
      },
      "32": {
        loc: {
          start: {
            line: 297,
            column: 25
          },
          end: {
            line: 299,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 25
          },
          end: {
            line: 299,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "33": {
        loc: {
          start: {
            line: 297,
            column: 29
          },
          end: {
            line: 297,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 29
          },
          end: {
            line: 297,
            column: 45
          }
        }, {
          start: {
            line: 297,
            column: 49
          },
          end: {
            line: 297,
            column: 63
          }
        }],
        line: 297
      },
      "34": {
        loc: {
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "35": {
        loc: {
          start: {
            line: 341,
            column: 29
          },
          end: {
            line: 341,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 341,
            column: 39
          },
          end: {
            line: 341,
            column: 40
          }
        }, {
          start: {
            line: 341,
            column: 43
          },
          end: {
            line: 341,
            column: 44
          }
        }],
        line: 341
      },
      "36": {
        loc: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 343,
            column: 40
          },
          end: {
            line: 343,
            column: 41
          }
        }, {
          start: {
            line: 343,
            column: 44
          },
          end: {
            line: 343,
            column: 45
          }
        }],
        line: 343
      },
      "37": {
        loc: {
          start: {
            line: 352,
            column: 63
          },
          end: {
            line: 352,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 352,
            column: 73
          },
          end: {
            line: 352,
            column: 74
          }
        }, {
          start: {
            line: 352,
            column: 77
          },
          end: {
            line: 352,
            column: 78
          }
        }],
        line: 352
      },
      "38": {
        loc: {
          start: {
            line: 354,
            column: 65
          },
          end: {
            line: 354,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 75
          },
          end: {
            line: 354,
            column: 76
          }
        }, {
          start: {
            line: 354,
            column: 79
          },
          end: {
            line: 354,
            column: 80
          }
        }],
        line: 354
      },
      "39": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "40": {
        loc: {
          start: {
            line: 401,
            column: 21
          },
          end: {
            line: 401,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 65
          },
          end: {
            line: 401,
            column: 66
          }
        }, {
          start: {
            line: 401,
            column: 69
          },
          end: {
            line: 401,
            column: 70
          }
        }],
        line: 401
      },
      "41": {
        loc: {
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "42": {
        loc: {
          start: {
            line: 406,
            column: 16
          },
          end: {
            line: 406,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 406,
            column: 77
          },
          end: {
            line: 406,
            column: 78
          }
        }, {
          start: {
            line: 406,
            column: 81
          },
          end: {
            line: 406,
            column: 82
          }
        }],
        line: 406
      },
      "43": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 413,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "44": {
        loc: {
          start: {
            line: 411,
            column: 16
          },
          end: {
            line: 411,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 81
          },
          end: {
            line: 411,
            column: 82
          }
        }, {
          start: {
            line: 411,
            column: 85
          },
          end: {
            line: 411,
            column: 86
          }
        }],
        line: 411
      },
      "45": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "46": {
        loc: {
          start: {
            line: 415,
            column: 21
          },
          end: {
            line: 415,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 415,
            column: 76
          },
          end: {
            line: 415,
            column: 77
          }
        }, {
          start: {
            line: 415,
            column: 80
          },
          end: {
            line: 415,
            column: 81
          }
        }],
        line: 415
      },
      "47": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 421,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "48": {
        loc: {
          start: {
            line: 419,
            column: 21
          },
          end: {
            line: 419,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 419,
            column: 72
          },
          end: {
            line: 419,
            column: 73
          }
        }, {
          start: {
            line: 419,
            column: 76
          },
          end: {
            line: 419,
            column: 77
          }
        }],
        line: 419
      },
      "49": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "50": {
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 422,
            column: 30
          }
        }, {
          start: {
            line: 422,
            column: 34
          },
          end: {
            line: 422,
            column: 63
          }
        }],
        line: 422
      },
      "51": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "52": {
        loc: {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 28
          }
        }, {
          start: {
            line: 427,
            column: 32
          },
          end: {
            line: 427,
            column: 59
          }
        }],
        line: 427
      },
      "53": {
        loc: {
          start: {
            line: 432,
            column: 15
          },
          end: {
            line: 432,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 432,
            column: 28
          },
          end: {
            line: 432,
            column: 42
          }
        }, {
          start: {
            line: 432,
            column: 45
          },
          end: {
            line: 432,
            column: 46
          }
        }],
        line: 432
      },
      "54": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/multi-provider-integration.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/matbakh-visibility-boost.20250920/src/lib/ai-orchestrator/multi-provider-integration.ts"],
      sourcesContent: ["/**\n * PR-3: Multi-Provider Integration\n *\n * Implements:\n * - Unified provider interface for Bedrock, Google, Meta\n * - Intelligent model routing and selection\n * - Provider-specific optimizations\n * - Fallback and circuit breaker patterns\n */\n\nimport { randomUUID } from \"crypto\";\nimport { BedrockAdapter } from \"./adapters/bedrock-adapter\";\nimport { GoogleAdapter } from \"./adapters/google-adapter\";\nimport { MetaAdapter } from \"./adapters/meta-adapter\";\nimport { GuardrailsService } from \"./safety/guardrails-service\";\nimport { Provider } from \"./types\";\n\ninterface ProviderConfig {\n  region?: string;\n  accessKeyId?: string;\n  secretAccessKey?: string;\n  apiKey?: string;\n  endpoint?: string;\n}\n\ninterface ModelCapabilities {\n  maxTokens: number;\n  supportsStreaming: boolean;\n  supportsToolCalling: boolean;\n  supportsVision: boolean;\n  supportsJSON: boolean;\n  languages: string[];\n  domains: string[];\n}\n\ninterface AiRequest {\n  prompt: string;\n  context: any;\n  provider?: Provider;\n  capabilities?: Partial<ModelCapabilities>;\n  maxLatency?: number;\n  maxCost?: number;\n  domain?: string;\n}\n\ninterface AiResponse {\n  content: string;\n  provider: Provider;\n  requestId: string;\n  processingTime: number;\n  success: boolean;\n  routing?: any;\n}\n\nexport interface ProviderMetrics {\n  latency: number;\n  successRate: number;\n  costPerToken: number;\n  availability: number;\n  lastUpdated: Date;\n}\n\nexport interface RoutingDecision {\n  provider: Provider;\n  model: string;\n  confidence: number;\n  reasoning: string;\n  fallbacks: Array<{ provider: Provider; model: string }>;\n}\n\nexport interface ProviderHealth {\n  provider: Provider;\n  status: \"healthy\" | \"degraded\" | \"unhealthy\";\n  latency: number;\n  errorRate: number;\n  lastCheck: Date;\n}\n\n/**\n * Circuit Breaker for Provider Health Management\n */\nclass CircuitBreaker {\n  private failures: number = 0;\n  private lastFailureTime: Date | null = null;\n  private state: \"closed\" | \"open\" | \"half-open\" = \"closed\";\n\n  constructor(\n    private readonly failureThreshold: number = 5,\n    private readonly recoveryTimeout: number = 60000, // 1 minute\n    private readonly successThreshold: number = 3\n  ) {}\n\n  async execute<T>(operation: () => Promise<T>): Promise<T> {\n    if (this.state === \"open\") {\n      if (this.shouldAttemptReset()) {\n        this.state = \"half-open\";\n      } else {\n        throw new Error(\"Circuit breaker is open\");\n      }\n    }\n\n    try {\n      const result = await operation();\n      this.onSuccess();\n      return result;\n    } catch (error) {\n      this.onFailure();\n      throw error;\n    }\n  }\n\n  private shouldAttemptReset(): boolean {\n    return (\n      this.lastFailureTime !== null &&\n      Date.now() - this.lastFailureTime.getTime() > this.recoveryTimeout\n    );\n  }\n\n  private onSuccess(): void {\n    this.failures = 0;\n    this.state = \"closed\";\n  }\n\n  private onFailure(): void {\n    this.failures++;\n    this.lastFailureTime = new Date();\n\n    if (this.failures >= this.failureThreshold) {\n      this.state = \"open\";\n    }\n  }\n\n  getState(): string {\n    return this.state;\n  }\n\n  getFailures(): number {\n    return this.failures;\n  }\n}\n\n/**\n * Multi-Provider Integration Service\n */\nexport class MultiProviderIntegration {\n  private adapters: Map<Provider, any> = new Map();\n  private circuitBreakers: Map<Provider, CircuitBreaker> = new Map();\n  private providerMetrics: Map<Provider, ProviderMetrics> = new Map();\n  private guardrails: GuardrailsService;\n\n  constructor(\n    private readonly configs: Map<Provider, ProviderConfig>,\n    private readonly region: string = \"eu-central-1\"\n  ) {\n    this.guardrails = new GuardrailsService(region);\n    this.initializeAdapters();\n    this.initializeCircuitBreakers();\n    this.startHealthMonitoring();\n  }\n\n  private initializeAdapters(): void {\n    for (const [provider, config] of this.configs) {\n      switch (provider) {\n        case \"bedrock\":\n          this.adapters.set(provider, new BedrockAdapter(config));\n          break;\n        case \"google\":\n          this.adapters.set(provider, new GoogleAdapter(config));\n          break;\n        case \"meta\":\n          this.adapters.set(provider, new MetaAdapter(config));\n          break;\n        default:\n          throw new Error(`Unsupported provider: ${provider}`);\n      }\n    }\n  }\n\n  private initializeCircuitBreakers(): void {\n    for (const provider of this.configs.keys()) {\n      this.circuitBreakers.set(provider, new CircuitBreaker());\n    }\n  }\n\n  private startHealthMonitoring(): void {\n    // Health check every 30 seconds\n    setInterval(() => {\n      this.performHealthChecks();\n    }, 30000);\n  }\n\n  /**\n   * Route request to optimal provider based on capabilities and health\n   */\n  async routeRequest(request: AiRequest): Promise<AiResponse> {\n    const requestId = randomUUID();\n    const startTime = Date.now();\n\n    try {\n      // Input safety check\n      const inputSafety = await this.guardrails.checkInput(\n        request.prompt,\n        request.provider || \"bedrock\",\n        request.domain,\n        requestId\n      );\n\n      if (!inputSafety.allowed) {\n        throw new Error(\n          `Input blocked by guardrails: ${inputSafety.violations\n            .map((v) => v.details)\n            .join(\", \")}`\n        );\n      }\n\n      // Use modified prompt if PII was redacted\n      const safePrompt = inputSafety.modifiedContent || request.prompt;\n      const safeRequest = { ...request, prompt: safePrompt };\n\n      // Route to best provider\n      const routing = await this.selectProvider(safeRequest);\n      const response = await this.executeWithFallback(safeRequest, routing);\n\n      // Output safety check\n      const outputSafety = await this.guardrails.checkOutput(\n        response.content,\n        routing.provider,\n        request.domain,\n        requestId\n      );\n\n      if (!outputSafety.allowed) {\n        throw new Error(\n          `Output blocked by guardrails: ${outputSafety.violations\n            .map((v) => v.details)\n            .join(\", \")}`\n        );\n      }\n\n      // Use modified content if safety filters applied\n      const safeContent = outputSafety.modifiedContent || response.content;\n\n      // Update metrics\n      this.updateProviderMetrics(\n        routing.provider,\n        Date.now() - startTime,\n        true\n      );\n\n      return {\n        ...response,\n        content: safeContent,\n        provider: routing.provider,\n        requestId,\n        processingTime: Date.now() - startTime,\n        routing: {\n          decision: routing,\n          inputSafety,\n          outputSafety,\n        },\n      };\n    } catch (error) {\n      console.error(\"Multi-provider routing failed:\", error);\n      throw error;\n    } finally {\n      // Clean up PII tokens\n      this.guardrails.clearPIITokens(requestId);\n    }\n  }\n\n  /**\n   * Select optimal provider based on request requirements and provider health\n   */\n  private async selectProvider(request: AiRequest): Promise<RoutingDecision> {\n    const availableProviders = await this.getHealthyProviders();\n\n    if (availableProviders.length === 0) {\n      throw new Error(\"No healthy providers available\");\n    }\n\n    // If specific provider requested and healthy, use it\n    if (\n      request.provider &&\n      availableProviders.some((p) => p.provider === request.provider)\n    ) {\n      return {\n        provider: request.provider,\n        model: this.getDefaultModel(request.provider),\n        confidence: 1.0,\n        reasoning: \"User-specified provider\",\n        fallbacks: this.getFallbacks(request.provider, availableProviders),\n      };\n    }\n\n    // Score providers based on request requirements\n    const scores = availableProviders.map((health) => {\n      const provider = health.provider;\n      const metrics = this.providerMetrics.get(provider);\n      const capabilities = this.getProviderCapabilities(provider);\n\n      let score = 0;\n\n      // Latency preference (lower is better)\n      if (request.maxLatency) {\n        const latencyScore = Math.max(\n          0,\n          1 - health.latency / request.maxLatency\n        );\n        score += latencyScore * 0.3;\n      }\n\n      // Cost preference (lower is better)\n      if (request.maxCost && metrics) {\n        const costScore = Math.max(\n          0,\n          1 - metrics.costPerToken / request.maxCost\n        );\n        score += costScore * 0.2;\n      }\n\n      // Capability matching\n      if (request.capabilities) {\n        const capabilityScore = this.calculateCapabilityMatch(\n          request.capabilities,\n          capabilities\n        );\n        score += capabilityScore * 0.3;\n      }\n\n      // Health and reliability\n      const healthScore =\n        (1 - health.errorRate) * health.status === \"healthy\" ? 1 : 0.5;\n      score += healthScore * 0.2;\n\n      return {\n        provider,\n        score,\n        health,\n        metrics,\n      };\n    });\n\n    // Sort by score (highest first)\n    scores.sort((a, b) => b.score - a.score);\n    const best = scores[0];\n\n    return {\n      provider: best.provider,\n      model: this.getDefaultModel(best.provider),\n      confidence: best.score,\n      reasoning: `Best match based on latency, cost, capabilities, and health (score: ${best.score.toFixed(\n        2\n      )})`,\n      fallbacks: scores.slice(1, 3).map((s) => ({\n        provider: s.provider,\n        model: this.getDefaultModel(s.provider),\n      })),\n    };\n  }\n\n  /**\n   * Execute request with fallback support\n   */\n  private async executeWithFallback(\n    request: AiRequest,\n    routing: RoutingDecision\n  ): Promise<AiResponse> {\n    const providers = [\n      { provider: routing.provider, model: routing.model },\n      ...routing.fallbacks,\n    ];\n\n    let lastError: Error | null = null;\n\n    for (const { provider, model } of providers) {\n      try {\n        const circuitBreaker = this.circuitBreakers.get(provider);\n        if (!circuitBreaker) {\n          throw new Error(`No circuit breaker for provider: ${provider}`);\n        }\n\n        const adapter = this.adapters.get(provider);\n        if (!adapter) {\n          throw new Error(`No adapter for provider: ${provider}`);\n        }\n\n        const response = await circuitBreaker.execute(async () => {\n          return adapter.generateResponse({\n            ...request,\n            model,\n          });\n        });\n\n        return response;\n      } catch (error) {\n        console.warn(`Provider ${provider} failed:`, error);\n        lastError = error as Error;\n\n        // Update metrics for failed attempt\n        this.updateProviderMetrics(provider, 0, false);\n        continue;\n      }\n    }\n\n    throw new Error(`All providers failed. Last error: ${lastError?.message}`);\n  }\n\n  /**\n   * Get healthy providers based on circuit breaker state and recent metrics\n   */\n  private async getHealthyProviders(): Promise<ProviderHealth[]> {\n    const healthChecks: ProviderHealth[] = [];\n\n    for (const [provider, circuitBreaker] of this.circuitBreakers) {\n      const metrics = this.providerMetrics.get(provider);\n      const adapter = this.adapters.get(provider);\n\n      if (!adapter) continue;\n\n      let status: ProviderHealth[\"status\"] = \"healthy\";\n      let latency = 0;\n      let errorRate = 0;\n\n      // Check circuit breaker state\n      if (circuitBreaker.getState() === \"open\") {\n        status = \"unhealthy\";\n      } else if (circuitBreaker.getState() === \"half-open\") {\n        status = \"degraded\";\n      }\n\n      // Use metrics if available\n      if (metrics) {\n        latency = metrics.latency;\n        errorRate = 1 - metrics.successRate;\n\n        // Determine status based on metrics\n        if (errorRate > 0.1 || latency > 5000) {\n          status = \"unhealthy\";\n        } else if (errorRate > 0.05 || latency > 2000) {\n          status = \"degraded\";\n        }\n      }\n\n      healthChecks.push({\n        provider,\n        status,\n        latency,\n        errorRate,\n        lastCheck: new Date(),\n      });\n    }\n\n    // Return only healthy and degraded providers\n    return healthChecks.filter((h) => h.status !== \"unhealthy\");\n  }\n\n  /**\n   * Perform health checks on all providers\n   */\n  private async performHealthChecks(): Promise<void> {\n    for (const [provider, adapter] of this.adapters) {\n      try {\n        const startTime = Date.now();\n\n        // Simple health check request\n        await adapter.healthCheck();\n\n        const latency = Date.now() - startTime;\n        this.updateProviderMetrics(provider, latency, true);\n      } catch (error) {\n        console.warn(`Health check failed for ${provider}:`, error);\n        this.updateProviderMetrics(provider, 0, false);\n      }\n    }\n  }\n\n  /**\n   * Update provider metrics\n   */\n  private updateProviderMetrics(\n    provider: Provider,\n    latency: number,\n    success: boolean\n  ): void {\n    const existing = this.providerMetrics.get(provider);\n\n    if (!existing) {\n      this.providerMetrics.set(provider, {\n        latency,\n        successRate: success ? 1 : 0,\n        costPerToken: this.getProviderCostPerToken(provider),\n        availability: success ? 1 : 0,\n        lastUpdated: new Date(),\n      });\n      return;\n    }\n\n    // Exponential moving average for metrics\n    const alpha = 0.1; // Smoothing factor\n\n    this.providerMetrics.set(provider, {\n      latency: existing.latency * (1 - alpha) + latency * alpha,\n      successRate:\n        existing.successRate * (1 - alpha) + (success ? 1 : 0) * alpha,\n      costPerToken: existing.costPerToken, // Updated separately\n      availability:\n        existing.availability * (1 - alpha) + (success ? 1 : 0) * alpha,\n      lastUpdated: new Date(),\n    });\n  }\n\n  /**\n   * Get provider capabilities\n   */\n  private getProviderCapabilities(provider: Provider): ModelCapabilities {\n    // This would typically come from a configuration or discovery service\n    const capabilities: Record<Provider, ModelCapabilities> = {\n      bedrock: {\n        maxTokens: 200000,\n        supportsStreaming: true,\n        supportsToolCalling: true,\n        supportsVision: true,\n        supportsJSON: true,\n        languages: [\"en\", \"de\", \"fr\", \"es\", \"it\"],\n        domains: [\"general\", \"legal\", \"medical\", \"culinary\"],\n      },\n      google: {\n        maxTokens: 1000000,\n        supportsStreaming: true,\n        supportsToolCalling: true,\n        supportsVision: true,\n        supportsJSON: true,\n        languages: [\"en\", \"de\", \"fr\", \"es\", \"it\", \"ja\", \"ko\"],\n        domains: [\"general\", \"culinary\"],\n      },\n      meta: {\n        maxTokens: 128000,\n        supportsStreaming: true,\n        supportsToolCalling: true,\n        supportsVision: false,\n        supportsJSON: true,\n        languages: [\"en\", \"de\", \"fr\", \"es\"],\n        domains: [\"general\", \"culinary\"],\n      },\n    };\n\n    return capabilities[provider];\n  }\n\n  /**\n   * Calculate capability match score\n   */\n  private calculateCapabilityMatch(\n    required: Partial<ModelCapabilities>,\n    available: ModelCapabilities\n  ): number {\n    let score = 0;\n    let checks = 0;\n\n    if (required.maxTokens !== undefined) {\n      score += available.maxTokens >= required.maxTokens ? 1 : 0;\n      checks++;\n    }\n\n    if (required.supportsStreaming !== undefined) {\n      score +=\n        available.supportsStreaming === required.supportsStreaming ? 1 : 0;\n      checks++;\n    }\n\n    if (required.supportsToolCalling !== undefined) {\n      score +=\n        available.supportsToolCalling === required.supportsToolCalling ? 1 : 0;\n      checks++;\n    }\n\n    if (required.supportsVision !== undefined) {\n      score += available.supportsVision === required.supportsVision ? 1 : 0;\n      checks++;\n    }\n\n    if (required.supportsJSON !== undefined) {\n      score += available.supportsJSON === required.supportsJSON ? 1 : 0;\n      checks++;\n    }\n\n    if (required.languages && required.languages.length > 0) {\n      const supportedLanguages = required.languages.filter((lang) =>\n        available.languages.includes(lang)\n      );\n      score += supportedLanguages.length / required.languages.length;\n      checks++;\n    }\n\n    if (required.domains && required.domains.length > 0) {\n      const supportedDomains = required.domains.filter((domain) =>\n        available.domains.includes(domain)\n      );\n      score += supportedDomains.length / required.domains.length;\n      checks++;\n    }\n\n    return checks > 0 ? score / checks : 0;\n  }\n\n  /**\n   * Get default model for provider\n   */\n  private getDefaultModel(provider: Provider): string {\n    const defaultModels: Record<Provider, string> = {\n      bedrock: \"anthropic.claude-3-5-sonnet-20241022-v2:0\",\n      google: \"gemini-1.5-pro\",\n      meta: \"meta.llama3-2-90b-instruct-v1:0\",\n    };\n\n    return defaultModels[provider];\n  }\n\n  /**\n   * Get fallback providers\n   */\n  private getFallbacks(\n    primary: Provider,\n    available: ProviderHealth[]\n  ): Array<{ provider: Provider; model: string }> {\n    return available\n      .filter((h) => h.provider !== primary)\n      .slice(0, 2)\n      .map((h) => ({\n        provider: h.provider,\n        model: this.getDefaultModel(h.provider),\n      }));\n  }\n\n  /**\n   * Get provider cost per token (placeholder - would come from pricing API)\n   */\n  private getProviderCostPerToken(provider: Provider): number {\n    const costs: Record<Provider, number> = {\n      bedrock: 0.003, // $3 per 1K tokens\n      google: 0.0025, // $2.50 per 1K tokens\n      meta: 0.002, // $2 per 1K tokens\n    };\n\n    return costs[provider];\n  }\n\n  /**\n   * Get current provider metrics\n   */\n  getProviderMetrics(): Map<Provider, ProviderMetrics> {\n    return new Map(this.providerMetrics);\n  }\n\n  /**\n   * Get circuit breaker states\n   */\n  getCircuitBreakerStates(): Map<Provider, string> {\n    const states = new Map<Provider, string>();\n    for (const [provider, breaker] of this.circuitBreakers) {\n      states.set(provider, breaker.getState());\n    }\n    return states;\n  }\n\n  /**\n   * Force circuit breaker reset for a provider\n   */\n  resetCircuitBreaker(provider: Provider): void {\n    const breaker = this.circuitBreakers.get(provider);\n    if (breaker) {\n      // Reset by creating new circuit breaker\n      this.circuitBreakers.set(provider, new CircuitBreaker());\n    }\n  }\n\n  /**\n   * Update provider configuration\n   */\n  updateProviderConfig(provider: Provider, config: ProviderConfig): void {\n    this.configs.set(provider, config);\n    // Reinitialize adapter with new config\n    this.initializeAdapters();\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edb1874aaf217ca0117d4ab853ba8fcbde5716ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_163tj71ack = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_163tj71ack();
cov_163tj71ack().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_163tj71ack().s[1]++;
exports.MultiProviderIntegration = void 0;
const tslib_1 =
/* istanbul ignore next */
(cov_163tj71ack().s[2]++, require("tslib"));
const crypto_1 =
/* istanbul ignore next */
(cov_163tj71ack().s[3]++, require("crypto"));
const bedrock_adapter_1 =
/* istanbul ignore next */
(cov_163tj71ack().s[4]++, require("./adapters/bedrock-adapter"));
const google_adapter_1 =
/* istanbul ignore next */
(cov_163tj71ack().s[5]++, require("./adapters/google-adapter"));
const meta_adapter_1 =
/* istanbul ignore next */
(cov_163tj71ack().s[6]++, require("./adapters/meta-adapter"));
const guardrails_service_1 =
/* istanbul ignore next */
(cov_163tj71ack().s[7]++, require("./safety/guardrails-service"));
/**
 * Circuit Breaker for Provider Health Management
 */
class CircuitBreaker {
  constructor(failureThreshold =
  /* istanbul ignore next */
  (cov_163tj71ack().b[0][0]++, 5), recoveryTimeout =
  /* istanbul ignore next */
  (cov_163tj71ack().b[1][0]++, 60000),
  // 1 minute
  successThreshold =
  /* istanbul ignore next */
  (cov_163tj71ack().b[2][0]++, 3)) {
    /* istanbul ignore next */
    cov_163tj71ack().f[0]++;
    cov_163tj71ack().s[8]++;
    this.failureThreshold = failureThreshold;
    /* istanbul ignore next */
    cov_163tj71ack().s[9]++;
    this.recoveryTimeout = recoveryTimeout;
    /* istanbul ignore next */
    cov_163tj71ack().s[10]++;
    this.successThreshold = successThreshold;
    /* istanbul ignore next */
    cov_163tj71ack().s[11]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_163tj71ack().s[12]++;
    this.lastFailureTime = null;
    /* istanbul ignore next */
    cov_163tj71ack().s[13]++;
    this.state = "closed";
  }
  execute(operation) {
    /* istanbul ignore next */
    cov_163tj71ack().f[1]++;
    cov_163tj71ack().s[14]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_163tj71ack().f[2]++;
      cov_163tj71ack().s[15]++;
      if (this.state === "open") {
        /* istanbul ignore next */
        cov_163tj71ack().b[3][0]++;
        cov_163tj71ack().s[16]++;
        if (this.shouldAttemptReset()) {
          /* istanbul ignore next */
          cov_163tj71ack().b[4][0]++;
          cov_163tj71ack().s[17]++;
          this.state = "half-open";
        } else {
          /* istanbul ignore next */
          cov_163tj71ack().b[4][1]++;
          cov_163tj71ack().s[18]++;
          throw new Error("Circuit breaker is open");
        }
      } else
      /* istanbul ignore next */
      {
        cov_163tj71ack().b[3][1]++;
      }
      cov_163tj71ack().s[19]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_163tj71ack().s[20]++, yield operation());
        /* istanbul ignore next */
        cov_163tj71ack().s[21]++;
        this.onSuccess();
        /* istanbul ignore next */
        cov_163tj71ack().s[22]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_163tj71ack().s[23]++;
        this.onFailure();
        /* istanbul ignore next */
        cov_163tj71ack().s[24]++;
        throw error;
      }
    });
  }
  shouldAttemptReset() {
    /* istanbul ignore next */
    cov_163tj71ack().f[3]++;
    cov_163tj71ack().s[25]++;
    return /* istanbul ignore next */(cov_163tj71ack().b[5][0]++, this.lastFailureTime !== null) &&
    /* istanbul ignore next */
    (cov_163tj71ack().b[5][1]++, Date.now() - this.lastFailureTime.getTime() > this.recoveryTimeout);
  }
  onSuccess() {
    /* istanbul ignore next */
    cov_163tj71ack().f[4]++;
    cov_163tj71ack().s[26]++;
    this.failures = 0;
    /* istanbul ignore next */
    cov_163tj71ack().s[27]++;
    this.state = "closed";
  }
  onFailure() {
    /* istanbul ignore next */
    cov_163tj71ack().f[5]++;
    cov_163tj71ack().s[28]++;
    this.failures++;
    /* istanbul ignore next */
    cov_163tj71ack().s[29]++;
    this.lastFailureTime = new Date();
    /* istanbul ignore next */
    cov_163tj71ack().s[30]++;
    if (this.failures >= this.failureThreshold) {
      /* istanbul ignore next */
      cov_163tj71ack().b[6][0]++;
      cov_163tj71ack().s[31]++;
      this.state = "open";
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[6][1]++;
    }
  }
  getState() {
    /* istanbul ignore next */
    cov_163tj71ack().f[6]++;
    cov_163tj71ack().s[32]++;
    return this.state;
  }
  getFailures() {
    /* istanbul ignore next */
    cov_163tj71ack().f[7]++;
    cov_163tj71ack().s[33]++;
    return this.failures;
  }
}
/**
 * Multi-Provider Integration Service
 */
class MultiProviderIntegration {
  constructor(configs, region =
  /* istanbul ignore next */
  (cov_163tj71ack().b[7][0]++, "eu-central-1")) {
    /* istanbul ignore next */
    cov_163tj71ack().f[8]++;
    cov_163tj71ack().s[34]++;
    this.configs = configs;
    /* istanbul ignore next */
    cov_163tj71ack().s[35]++;
    this.region = region;
    /* istanbul ignore next */
    cov_163tj71ack().s[36]++;
    this.adapters = new Map();
    /* istanbul ignore next */
    cov_163tj71ack().s[37]++;
    this.circuitBreakers = new Map();
    /* istanbul ignore next */
    cov_163tj71ack().s[38]++;
    this.providerMetrics = new Map();
    /* istanbul ignore next */
    cov_163tj71ack().s[39]++;
    this.guardrails = new guardrails_service_1.GuardrailsService(region);
    /* istanbul ignore next */
    cov_163tj71ack().s[40]++;
    this.initializeAdapters();
    /* istanbul ignore next */
    cov_163tj71ack().s[41]++;
    this.initializeCircuitBreakers();
    /* istanbul ignore next */
    cov_163tj71ack().s[42]++;
    this.startHealthMonitoring();
  }
  initializeAdapters() {
    /* istanbul ignore next */
    cov_163tj71ack().f[9]++;
    cov_163tj71ack().s[43]++;
    for (const [provider, config] of this.configs) {
      /* istanbul ignore next */
      cov_163tj71ack().s[44]++;
      switch (provider) {
        case "bedrock":
          /* istanbul ignore next */
          cov_163tj71ack().b[8][0]++;
          cov_163tj71ack().s[45]++;
          this.adapters.set(provider, new bedrock_adapter_1.BedrockAdapter(config));
          /* istanbul ignore next */
          cov_163tj71ack().s[46]++;
          break;
        case "google":
          /* istanbul ignore next */
          cov_163tj71ack().b[8][1]++;
          cov_163tj71ack().s[47]++;
          this.adapters.set(provider, new google_adapter_1.GoogleAdapter(config));
          /* istanbul ignore next */
          cov_163tj71ack().s[48]++;
          break;
        case "meta":
          /* istanbul ignore next */
          cov_163tj71ack().b[8][2]++;
          cov_163tj71ack().s[49]++;
          this.adapters.set(provider, new meta_adapter_1.MetaAdapter(config));
          /* istanbul ignore next */
          cov_163tj71ack().s[50]++;
          break;
        default:
          /* istanbul ignore next */
          cov_163tj71ack().b[8][3]++;
          cov_163tj71ack().s[51]++;
          throw new Error(`Unsupported provider: ${provider}`);
      }
    }
  }
  initializeCircuitBreakers() {
    /* istanbul ignore next */
    cov_163tj71ack().f[10]++;
    cov_163tj71ack().s[52]++;
    for (const provider of this.configs.keys()) {
      /* istanbul ignore next */
      cov_163tj71ack().s[53]++;
      this.circuitBreakers.set(provider, new CircuitBreaker());
    }
  }
  startHealthMonitoring() {
    /* istanbul ignore next */
    cov_163tj71ack().f[11]++;
    cov_163tj71ack().s[54]++;
    // Health check every 30 seconds
    setInterval(() => {
      /* istanbul ignore next */
      cov_163tj71ack().f[12]++;
      cov_163tj71ack().s[55]++;
      this.performHealthChecks();
    }, 30000);
  }
  /**
   * Route request to optimal provider based on capabilities and health
   */
  routeRequest(request) {
    /* istanbul ignore next */
    cov_163tj71ack().f[13]++;
    cov_163tj71ack().s[56]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_163tj71ack().f[14]++;
      const requestId =
      /* istanbul ignore next */
      (cov_163tj71ack().s[57]++, (0, crypto_1.randomUUID)());
      const startTime =
      /* istanbul ignore next */
      (cov_163tj71ack().s[58]++, Date.now());
      /* istanbul ignore next */
      cov_163tj71ack().s[59]++;
      try {
        // Input safety check
        const inputSafety =
        /* istanbul ignore next */
        (cov_163tj71ack().s[60]++, yield this.guardrails.checkInput(request.prompt,
        /* istanbul ignore next */
        (cov_163tj71ack().b[9][0]++, request.provider) ||
        /* istanbul ignore next */
        (cov_163tj71ack().b[9][1]++, "bedrock"), request.domain, requestId));
        /* istanbul ignore next */
        cov_163tj71ack().s[61]++;
        if (!inputSafety.allowed) {
          /* istanbul ignore next */
          cov_163tj71ack().b[10][0]++;
          cov_163tj71ack().s[62]++;
          throw new Error(`Input blocked by guardrails: ${inputSafety.violations.map(v => {
            /* istanbul ignore next */
            cov_163tj71ack().f[15]++;
            cov_163tj71ack().s[63]++;
            return v.details;
          }).join(", ")}`);
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[10][1]++;
        }
        // Use modified prompt if PII was redacted
        const safePrompt =
        /* istanbul ignore next */
        (cov_163tj71ack().s[64]++,
        /* istanbul ignore next */
        (cov_163tj71ack().b[11][0]++, inputSafety.modifiedContent) ||
        /* istanbul ignore next */
        (cov_163tj71ack().b[11][1]++, request.prompt));
        const safeRequest =
        /* istanbul ignore next */
        (cov_163tj71ack().s[65]++, Object.assign(Object.assign({}, request), {
          prompt: safePrompt
        }));
        // Route to best provider
        const routing =
        /* istanbul ignore next */
        (cov_163tj71ack().s[66]++, yield this.selectProvider(safeRequest));
        const response =
        /* istanbul ignore next */
        (cov_163tj71ack().s[67]++, yield this.executeWithFallback(safeRequest, routing));
        // Output safety check
        const outputSafety =
        /* istanbul ignore next */
        (cov_163tj71ack().s[68]++, yield this.guardrails.checkOutput(response.content, routing.provider, request.domain, requestId));
        /* istanbul ignore next */
        cov_163tj71ack().s[69]++;
        if (!outputSafety.allowed) {
          /* istanbul ignore next */
          cov_163tj71ack().b[12][0]++;
          cov_163tj71ack().s[70]++;
          throw new Error(`Output blocked by guardrails: ${outputSafety.violations.map(v => {
            /* istanbul ignore next */
            cov_163tj71ack().f[16]++;
            cov_163tj71ack().s[71]++;
            return v.details;
          }).join(", ")}`);
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[12][1]++;
        }
        // Use modified content if safety filters applied
        const safeContent =
        /* istanbul ignore next */
        (cov_163tj71ack().s[72]++,
        /* istanbul ignore next */
        (cov_163tj71ack().b[13][0]++, outputSafety.modifiedContent) ||
        /* istanbul ignore next */
        (cov_163tj71ack().b[13][1]++, response.content));
        // Update metrics
        /* istanbul ignore next */
        cov_163tj71ack().s[73]++;
        this.updateProviderMetrics(routing.provider, Date.now() - startTime, true);
        /* istanbul ignore next */
        cov_163tj71ack().s[74]++;
        return Object.assign(Object.assign({}, response), {
          content: safeContent,
          provider: routing.provider,
          requestId,
          processingTime: Date.now() - startTime,
          routing: {
            decision: routing,
            inputSafety,
            outputSafety
          }
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_163tj71ack().s[75]++;
        console.error("Multi-provider routing failed:", error);
        /* istanbul ignore next */
        cov_163tj71ack().s[76]++;
        throw error;
      } finally {
        /* istanbul ignore next */
        cov_163tj71ack().s[77]++;
        // Clean up PII tokens
        this.guardrails.clearPIITokens(requestId);
      }
    });
  }
  /**
   * Select optimal provider based on request requirements and provider health
   */
  selectProvider(request) {
    /* istanbul ignore next */
    cov_163tj71ack().f[17]++;
    cov_163tj71ack().s[78]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_163tj71ack().f[18]++;
      const availableProviders =
      /* istanbul ignore next */
      (cov_163tj71ack().s[79]++, yield this.getHealthyProviders());
      /* istanbul ignore next */
      cov_163tj71ack().s[80]++;
      if (availableProviders.length === 0) {
        /* istanbul ignore next */
        cov_163tj71ack().b[14][0]++;
        cov_163tj71ack().s[81]++;
        throw new Error("No healthy providers available");
      } else
      /* istanbul ignore next */
      {
        cov_163tj71ack().b[14][1]++;
      }
      // If specific provider requested and healthy, use it
      cov_163tj71ack().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_163tj71ack().b[16][0]++, request.provider) &&
      /* istanbul ignore next */
      (cov_163tj71ack().b[16][1]++, availableProviders.some(p => {
        /* istanbul ignore next */
        cov_163tj71ack().f[19]++;
        cov_163tj71ack().s[83]++;
        return p.provider === request.provider;
      }))) {
        /* istanbul ignore next */
        cov_163tj71ack().b[15][0]++;
        cov_163tj71ack().s[84]++;
        return {
          provider: request.provider,
          model: this.getDefaultModel(request.provider),
          confidence: 1.0,
          reasoning: "User-specified provider",
          fallbacks: this.getFallbacks(request.provider, availableProviders)
        };
      } else
      /* istanbul ignore next */
      {
        cov_163tj71ack().b[15][1]++;
      }
      // Score providers based on request requirements
      const scores =
      /* istanbul ignore next */
      (cov_163tj71ack().s[85]++, availableProviders.map(health => {
        /* istanbul ignore next */
        cov_163tj71ack().f[20]++;
        const provider =
        /* istanbul ignore next */
        (cov_163tj71ack().s[86]++, health.provider);
        const metrics =
        /* istanbul ignore next */
        (cov_163tj71ack().s[87]++, this.providerMetrics.get(provider));
        const capabilities =
        /* istanbul ignore next */
        (cov_163tj71ack().s[88]++, this.getProviderCapabilities(provider));
        let score =
        /* istanbul ignore next */
        (cov_163tj71ack().s[89]++, 0);
        // Latency preference (lower is better)
        /* istanbul ignore next */
        cov_163tj71ack().s[90]++;
        if (request.maxLatency) {
          /* istanbul ignore next */
          cov_163tj71ack().b[17][0]++;
          const latencyScore =
          /* istanbul ignore next */
          (cov_163tj71ack().s[91]++, Math.max(0, 1 - health.latency / request.maxLatency));
          /* istanbul ignore next */
          cov_163tj71ack().s[92]++;
          score += latencyScore * 0.3;
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[17][1]++;
        }
        // Cost preference (lower is better)
        cov_163tj71ack().s[93]++;
        if (
        /* istanbul ignore next */
        (cov_163tj71ack().b[19][0]++, request.maxCost) &&
        /* istanbul ignore next */
        (cov_163tj71ack().b[19][1]++, metrics)) {
          /* istanbul ignore next */
          cov_163tj71ack().b[18][0]++;
          const costScore =
          /* istanbul ignore next */
          (cov_163tj71ack().s[94]++, Math.max(0, 1 - metrics.costPerToken / request.maxCost));
          /* istanbul ignore next */
          cov_163tj71ack().s[95]++;
          score += costScore * 0.2;
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[18][1]++;
        }
        // Capability matching
        cov_163tj71ack().s[96]++;
        if (request.capabilities) {
          /* istanbul ignore next */
          cov_163tj71ack().b[20][0]++;
          const capabilityScore =
          /* istanbul ignore next */
          (cov_163tj71ack().s[97]++, this.calculateCapabilityMatch(request.capabilities, capabilities));
          /* istanbul ignore next */
          cov_163tj71ack().s[98]++;
          score += capabilityScore * 0.3;
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[20][1]++;
        }
        // Health and reliability
        const healthScore =
        /* istanbul ignore next */
        (cov_163tj71ack().s[99]++, (1 - health.errorRate) * health.status === "healthy" ?
        /* istanbul ignore next */
        (cov_163tj71ack().b[21][0]++, 1) :
        /* istanbul ignore next */
        (cov_163tj71ack().b[21][1]++, 0.5));
        /* istanbul ignore next */
        cov_163tj71ack().s[100]++;
        score += healthScore * 0.2;
        /* istanbul ignore next */
        cov_163tj71ack().s[101]++;
        return {
          provider,
          score,
          health,
          metrics
        };
      }));
      // Sort by score (highest first)
      /* istanbul ignore next */
      cov_163tj71ack().s[102]++;
      scores.sort((a, b) => {
        /* istanbul ignore next */
        cov_163tj71ack().f[21]++;
        cov_163tj71ack().s[103]++;
        return b.score - a.score;
      });
      const best =
      /* istanbul ignore next */
      (cov_163tj71ack().s[104]++, scores[0]);
      /* istanbul ignore next */
      cov_163tj71ack().s[105]++;
      return {
        provider: best.provider,
        model: this.getDefaultModel(best.provider),
        confidence: best.score,
        reasoning: `Best match based on latency, cost, capabilities, and health (score: ${best.score.toFixed(2)})`,
        fallbacks: scores.slice(1, 3).map(s => {
          /* istanbul ignore next */
          cov_163tj71ack().f[22]++;
          cov_163tj71ack().s[106]++;
          return {
            provider: s.provider,
            model: this.getDefaultModel(s.provider)
          };
        })
      };
    });
  }
  /**
   * Execute request with fallback support
   */
  executeWithFallback(request, routing) {
    /* istanbul ignore next */
    cov_163tj71ack().f[23]++;
    cov_163tj71ack().s[107]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_163tj71ack().f[24]++;
      const providers =
      /* istanbul ignore next */
      (cov_163tj71ack().s[108]++, [{
        provider: routing.provider,
        model: routing.model
      }, ...routing.fallbacks]);
      let lastError =
      /* istanbul ignore next */
      (cov_163tj71ack().s[109]++, null);
      /* istanbul ignore next */
      cov_163tj71ack().s[110]++;
      for (const {
        provider,
        model
      } of providers) {
        /* istanbul ignore next */
        cov_163tj71ack().s[111]++;
        try {
          const circuitBreaker =
          /* istanbul ignore next */
          (cov_163tj71ack().s[112]++, this.circuitBreakers.get(provider));
          /* istanbul ignore next */
          cov_163tj71ack().s[113]++;
          if (!circuitBreaker) {
            /* istanbul ignore next */
            cov_163tj71ack().b[22][0]++;
            cov_163tj71ack().s[114]++;
            throw new Error(`No circuit breaker for provider: ${provider}`);
          } else
          /* istanbul ignore next */
          {
            cov_163tj71ack().b[22][1]++;
          }
          const adapter =
          /* istanbul ignore next */
          (cov_163tj71ack().s[115]++, this.adapters.get(provider));
          /* istanbul ignore next */
          cov_163tj71ack().s[116]++;
          if (!adapter) {
            /* istanbul ignore next */
            cov_163tj71ack().b[23][0]++;
            cov_163tj71ack().s[117]++;
            throw new Error(`No adapter for provider: ${provider}`);
          } else
          /* istanbul ignore next */
          {
            cov_163tj71ack().b[23][1]++;
          }
          const response =
          /* istanbul ignore next */
          (cov_163tj71ack().s[118]++, yield circuitBreaker.execute(() => {
            /* istanbul ignore next */
            cov_163tj71ack().f[25]++;
            cov_163tj71ack().s[119]++;
            return tslib_1.__awaiter(this, void 0, void 0, function* () {
              /* istanbul ignore next */
              cov_163tj71ack().f[26]++;
              cov_163tj71ack().s[120]++;
              return adapter.generateResponse(Object.assign(Object.assign({}, request), {
                model
              }));
            });
          }));
          /* istanbul ignore next */
          cov_163tj71ack().s[121]++;
          return response;
        } catch (error) {
          /* istanbul ignore next */
          cov_163tj71ack().s[122]++;
          console.warn(`Provider ${provider} failed:`, error);
          /* istanbul ignore next */
          cov_163tj71ack().s[123]++;
          lastError = error;
          // Update metrics for failed attempt
          /* istanbul ignore next */
          cov_163tj71ack().s[124]++;
          this.updateProviderMetrics(provider, 0, false);
          /* istanbul ignore next */
          cov_163tj71ack().s[125]++;
          continue;
        }
      }
      /* istanbul ignore next */
      cov_163tj71ack().s[126]++;
      throw new Error(`All providers failed. Last error: ${
      /* istanbul ignore next */
      (cov_163tj71ack().b[25][0]++, lastError === null) ||
      /* istanbul ignore next */
      (cov_163tj71ack().b[25][1]++, lastError === void 0) ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[24][0]++, void 0) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[24][1]++, lastError.message)}`);
    });
  }
  /**
   * Get healthy providers based on circuit breaker state and recent metrics
   */
  getHealthyProviders() {
    /* istanbul ignore next */
    cov_163tj71ack().f[27]++;
    cov_163tj71ack().s[127]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_163tj71ack().f[28]++;
      const healthChecks =
      /* istanbul ignore next */
      (cov_163tj71ack().s[128]++, []);
      /* istanbul ignore next */
      cov_163tj71ack().s[129]++;
      for (const [provider, circuitBreaker] of this.circuitBreakers) {
        const metrics =
        /* istanbul ignore next */
        (cov_163tj71ack().s[130]++, this.providerMetrics.get(provider));
        const adapter =
        /* istanbul ignore next */
        (cov_163tj71ack().s[131]++, this.adapters.get(provider));
        /* istanbul ignore next */
        cov_163tj71ack().s[132]++;
        if (!adapter) {
          /* istanbul ignore next */
          cov_163tj71ack().b[26][0]++;
          cov_163tj71ack().s[133]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[26][1]++;
        }
        let status =
        /* istanbul ignore next */
        (cov_163tj71ack().s[134]++, "healthy");
        let latency =
        /* istanbul ignore next */
        (cov_163tj71ack().s[135]++, 0);
        let errorRate =
        /* istanbul ignore next */
        (cov_163tj71ack().s[136]++, 0);
        // Check circuit breaker state
        /* istanbul ignore next */
        cov_163tj71ack().s[137]++;
        if (circuitBreaker.getState() === "open") {
          /* istanbul ignore next */
          cov_163tj71ack().b[27][0]++;
          cov_163tj71ack().s[138]++;
          status = "unhealthy";
        } else {
          /* istanbul ignore next */
          cov_163tj71ack().b[27][1]++;
          cov_163tj71ack().s[139]++;
          if (circuitBreaker.getState() === "half-open") {
            /* istanbul ignore next */
            cov_163tj71ack().b[28][0]++;
            cov_163tj71ack().s[140]++;
            status = "degraded";
          } else
          /* istanbul ignore next */
          {
            cov_163tj71ack().b[28][1]++;
          }
        }
        // Use metrics if available
        /* istanbul ignore next */
        cov_163tj71ack().s[141]++;
        if (metrics) {
          /* istanbul ignore next */
          cov_163tj71ack().b[29][0]++;
          cov_163tj71ack().s[142]++;
          latency = metrics.latency;
          /* istanbul ignore next */
          cov_163tj71ack().s[143]++;
          errorRate = 1 - metrics.successRate;
          // Determine status based on metrics
          /* istanbul ignore next */
          cov_163tj71ack().s[144]++;
          if (
          /* istanbul ignore next */
          (cov_163tj71ack().b[31][0]++, errorRate > 0.1) ||
          /* istanbul ignore next */
          (cov_163tj71ack().b[31][1]++, latency > 5000)) {
            /* istanbul ignore next */
            cov_163tj71ack().b[30][0]++;
            cov_163tj71ack().s[145]++;
            status = "unhealthy";
          } else {
            /* istanbul ignore next */
            cov_163tj71ack().b[30][1]++;
            cov_163tj71ack().s[146]++;
            if (
            /* istanbul ignore next */
            (cov_163tj71ack().b[33][0]++, errorRate > 0.05) ||
            /* istanbul ignore next */
            (cov_163tj71ack().b[33][1]++, latency > 2000)) {
              /* istanbul ignore next */
              cov_163tj71ack().b[32][0]++;
              cov_163tj71ack().s[147]++;
              status = "degraded";
            } else
            /* istanbul ignore next */
            {
              cov_163tj71ack().b[32][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_163tj71ack().b[29][1]++;
        }
        cov_163tj71ack().s[148]++;
        healthChecks.push({
          provider,
          status,
          latency,
          errorRate,
          lastCheck: new Date()
        });
      }
      // Return only healthy and degraded providers
      /* istanbul ignore next */
      cov_163tj71ack().s[149]++;
      return healthChecks.filter(h => {
        /* istanbul ignore next */
        cov_163tj71ack().f[29]++;
        cov_163tj71ack().s[150]++;
        return h.status !== "unhealthy";
      });
    });
  }
  /**
   * Perform health checks on all providers
   */
  performHealthChecks() {
    /* istanbul ignore next */
    cov_163tj71ack().f[30]++;
    cov_163tj71ack().s[151]++;
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_163tj71ack().f[31]++;
      cov_163tj71ack().s[152]++;
      for (const [provider, adapter] of this.adapters) {
        /* istanbul ignore next */
        cov_163tj71ack().s[153]++;
        try {
          const startTime =
          /* istanbul ignore next */
          (cov_163tj71ack().s[154]++, Date.now());
          // Simple health check request
          /* istanbul ignore next */
          cov_163tj71ack().s[155]++;
          yield adapter.healthCheck();
          const latency =
          /* istanbul ignore next */
          (cov_163tj71ack().s[156]++, Date.now() - startTime);
          /* istanbul ignore next */
          cov_163tj71ack().s[157]++;
          this.updateProviderMetrics(provider, latency, true);
        } catch (error) {
          /* istanbul ignore next */
          cov_163tj71ack().s[158]++;
          console.warn(`Health check failed for ${provider}:`, error);
          /* istanbul ignore next */
          cov_163tj71ack().s[159]++;
          this.updateProviderMetrics(provider, 0, false);
        }
      }
    });
  }
  /**
   * Update provider metrics
   */
  updateProviderMetrics(provider, latency, success) {
    /* istanbul ignore next */
    cov_163tj71ack().f[32]++;
    const existing =
    /* istanbul ignore next */
    (cov_163tj71ack().s[160]++, this.providerMetrics.get(provider));
    /* istanbul ignore next */
    cov_163tj71ack().s[161]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_163tj71ack().b[34][0]++;
      cov_163tj71ack().s[162]++;
      this.providerMetrics.set(provider, {
        latency,
        successRate: success ?
        /* istanbul ignore next */
        (cov_163tj71ack().b[35][0]++, 1) :
        /* istanbul ignore next */
        (cov_163tj71ack().b[35][1]++, 0),
        costPerToken: this.getProviderCostPerToken(provider),
        availability: success ?
        /* istanbul ignore next */
        (cov_163tj71ack().b[36][0]++, 1) :
        /* istanbul ignore next */
        (cov_163tj71ack().b[36][1]++, 0),
        lastUpdated: new Date()
      });
      /* istanbul ignore next */
      cov_163tj71ack().s[163]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[34][1]++;
    }
    // Exponential moving average for metrics
    const alpha =
    /* istanbul ignore next */
    (cov_163tj71ack().s[164]++, 0.1); // Smoothing factor
    /* istanbul ignore next */
    cov_163tj71ack().s[165]++;
    this.providerMetrics.set(provider, {
      latency: existing.latency * (1 - alpha) + latency * alpha,
      successRate: existing.successRate * (1 - alpha) + (success ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[37][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[37][1]++, 0)) * alpha,
      costPerToken: existing.costPerToken,
      // Updated separately
      availability: existing.availability * (1 - alpha) + (success ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[38][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[38][1]++, 0)) * alpha,
      lastUpdated: new Date()
    });
  }
  /**
   * Get provider capabilities
   */
  getProviderCapabilities(provider) {
    /* istanbul ignore next */
    cov_163tj71ack().f[33]++;
    // This would typically come from a configuration or discovery service
    const capabilities =
    /* istanbul ignore next */
    (cov_163tj71ack().s[166]++, {
      bedrock: {
        maxTokens: 200000,
        supportsStreaming: true,
        supportsToolCalling: true,
        supportsVision: true,
        supportsJSON: true,
        languages: ["en", "de", "fr", "es", "it"],
        domains: ["general", "legal", "medical", "culinary"]
      },
      google: {
        maxTokens: 1000000,
        supportsStreaming: true,
        supportsToolCalling: true,
        supportsVision: true,
        supportsJSON: true,
        languages: ["en", "de", "fr", "es", "it", "ja", "ko"],
        domains: ["general", "culinary"]
      },
      meta: {
        maxTokens: 128000,
        supportsStreaming: true,
        supportsToolCalling: true,
        supportsVision: false,
        supportsJSON: true,
        languages: ["en", "de", "fr", "es"],
        domains: ["general", "culinary"]
      }
    });
    /* istanbul ignore next */
    cov_163tj71ack().s[167]++;
    return capabilities[provider];
  }
  /**
   * Calculate capability match score
   */
  calculateCapabilityMatch(required, available) {
    /* istanbul ignore next */
    cov_163tj71ack().f[34]++;
    let score =
    /* istanbul ignore next */
    (cov_163tj71ack().s[168]++, 0);
    let checks =
    /* istanbul ignore next */
    (cov_163tj71ack().s[169]++, 0);
    /* istanbul ignore next */
    cov_163tj71ack().s[170]++;
    if (required.maxTokens !== undefined) {
      /* istanbul ignore next */
      cov_163tj71ack().b[39][0]++;
      cov_163tj71ack().s[171]++;
      score += available.maxTokens >= required.maxTokens ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[40][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[40][1]++, 0);
      /* istanbul ignore next */
      cov_163tj71ack().s[172]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[39][1]++;
    }
    cov_163tj71ack().s[173]++;
    if (required.supportsStreaming !== undefined) {
      /* istanbul ignore next */
      cov_163tj71ack().b[41][0]++;
      cov_163tj71ack().s[174]++;
      score += available.supportsStreaming === required.supportsStreaming ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[42][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[42][1]++, 0);
      /* istanbul ignore next */
      cov_163tj71ack().s[175]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[41][1]++;
    }
    cov_163tj71ack().s[176]++;
    if (required.supportsToolCalling !== undefined) {
      /* istanbul ignore next */
      cov_163tj71ack().b[43][0]++;
      cov_163tj71ack().s[177]++;
      score += available.supportsToolCalling === required.supportsToolCalling ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[44][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[44][1]++, 0);
      /* istanbul ignore next */
      cov_163tj71ack().s[178]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[43][1]++;
    }
    cov_163tj71ack().s[179]++;
    if (required.supportsVision !== undefined) {
      /* istanbul ignore next */
      cov_163tj71ack().b[45][0]++;
      cov_163tj71ack().s[180]++;
      score += available.supportsVision === required.supportsVision ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[46][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[46][1]++, 0);
      /* istanbul ignore next */
      cov_163tj71ack().s[181]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[45][1]++;
    }
    cov_163tj71ack().s[182]++;
    if (required.supportsJSON !== undefined) {
      /* istanbul ignore next */
      cov_163tj71ack().b[47][0]++;
      cov_163tj71ack().s[183]++;
      score += available.supportsJSON === required.supportsJSON ?
      /* istanbul ignore next */
      (cov_163tj71ack().b[48][0]++, 1) :
      /* istanbul ignore next */
      (cov_163tj71ack().b[48][1]++, 0);
      /* istanbul ignore next */
      cov_163tj71ack().s[184]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[47][1]++;
    }
    cov_163tj71ack().s[185]++;
    if (
    /* istanbul ignore next */
    (cov_163tj71ack().b[50][0]++, required.languages) &&
    /* istanbul ignore next */
    (cov_163tj71ack().b[50][1]++, required.languages.length > 0)) {
      /* istanbul ignore next */
      cov_163tj71ack().b[49][0]++;
      const supportedLanguages =
      /* istanbul ignore next */
      (cov_163tj71ack().s[186]++, required.languages.filter(lang => {
        /* istanbul ignore next */
        cov_163tj71ack().f[35]++;
        cov_163tj71ack().s[187]++;
        return available.languages.includes(lang);
      }));
      /* istanbul ignore next */
      cov_163tj71ack().s[188]++;
      score += supportedLanguages.length / required.languages.length;
      /* istanbul ignore next */
      cov_163tj71ack().s[189]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[49][1]++;
    }
    cov_163tj71ack().s[190]++;
    if (
    /* istanbul ignore next */
    (cov_163tj71ack().b[52][0]++, required.domains) &&
    /* istanbul ignore next */
    (cov_163tj71ack().b[52][1]++, required.domains.length > 0)) {
      /* istanbul ignore next */
      cov_163tj71ack().b[51][0]++;
      const supportedDomains =
      /* istanbul ignore next */
      (cov_163tj71ack().s[191]++, required.domains.filter(domain => {
        /* istanbul ignore next */
        cov_163tj71ack().f[36]++;
        cov_163tj71ack().s[192]++;
        return available.domains.includes(domain);
      }));
      /* istanbul ignore next */
      cov_163tj71ack().s[193]++;
      score += supportedDomains.length / required.domains.length;
      /* istanbul ignore next */
      cov_163tj71ack().s[194]++;
      checks++;
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[51][1]++;
    }
    cov_163tj71ack().s[195]++;
    return checks > 0 ?
    /* istanbul ignore next */
    (cov_163tj71ack().b[53][0]++, score / checks) :
    /* istanbul ignore next */
    (cov_163tj71ack().b[53][1]++, 0);
  }
  /**
   * Get default model for provider
   */
  getDefaultModel(provider) {
    /* istanbul ignore next */
    cov_163tj71ack().f[37]++;
    const defaultModels =
    /* istanbul ignore next */
    (cov_163tj71ack().s[196]++, {
      bedrock: "anthropic.claude-3-5-sonnet-20241022-v2:0",
      google: "gemini-1.5-pro",
      meta: "meta.llama3-2-90b-instruct-v1:0"
    });
    /* istanbul ignore next */
    cov_163tj71ack().s[197]++;
    return defaultModels[provider];
  }
  /**
   * Get fallback providers
   */
  getFallbacks(primary, available) {
    /* istanbul ignore next */
    cov_163tj71ack().f[38]++;
    cov_163tj71ack().s[198]++;
    return available.filter(h => {
      /* istanbul ignore next */
      cov_163tj71ack().f[39]++;
      cov_163tj71ack().s[199]++;
      return h.provider !== primary;
    }).slice(0, 2).map(h => {
      /* istanbul ignore next */
      cov_163tj71ack().f[40]++;
      cov_163tj71ack().s[200]++;
      return {
        provider: h.provider,
        model: this.getDefaultModel(h.provider)
      };
    });
  }
  /**
   * Get provider cost per token (placeholder - would come from pricing API)
   */
  getProviderCostPerToken(provider) {
    /* istanbul ignore next */
    cov_163tj71ack().f[41]++;
    const costs =
    /* istanbul ignore next */
    (cov_163tj71ack().s[201]++, {
      bedrock: 0.003,
      // $3 per 1K tokens
      google: 0.0025,
      // $2.50 per 1K tokens
      meta: 0.002 // $2 per 1K tokens
    });
    /* istanbul ignore next */
    cov_163tj71ack().s[202]++;
    return costs[provider];
  }
  /**
   * Get current provider metrics
   */
  getProviderMetrics() {
    /* istanbul ignore next */
    cov_163tj71ack().f[42]++;
    cov_163tj71ack().s[203]++;
    return new Map(this.providerMetrics);
  }
  /**
   * Get circuit breaker states
   */
  getCircuitBreakerStates() {
    /* istanbul ignore next */
    cov_163tj71ack().f[43]++;
    const states =
    /* istanbul ignore next */
    (cov_163tj71ack().s[204]++, new Map());
    /* istanbul ignore next */
    cov_163tj71ack().s[205]++;
    for (const [provider, breaker] of this.circuitBreakers) {
      /* istanbul ignore next */
      cov_163tj71ack().s[206]++;
      states.set(provider, breaker.getState());
    }
    /* istanbul ignore next */
    cov_163tj71ack().s[207]++;
    return states;
  }
  /**
   * Force circuit breaker reset for a provider
   */
  resetCircuitBreaker(provider) {
    /* istanbul ignore next */
    cov_163tj71ack().f[44]++;
    const breaker =
    /* istanbul ignore next */
    (cov_163tj71ack().s[208]++, this.circuitBreakers.get(provider));
    /* istanbul ignore next */
    cov_163tj71ack().s[209]++;
    if (breaker) {
      /* istanbul ignore next */
      cov_163tj71ack().b[54][0]++;
      cov_163tj71ack().s[210]++;
      // Reset by creating new circuit breaker
      this.circuitBreakers.set(provider, new CircuitBreaker());
    } else
    /* istanbul ignore next */
    {
      cov_163tj71ack().b[54][1]++;
    }
  }
  /**
   * Update provider configuration
   */
  updateProviderConfig(provider, config) {
    /* istanbul ignore next */
    cov_163tj71ack().f[45]++;
    cov_163tj71ack().s[211]++;
    this.configs.set(provider, config);
    // Reinitialize adapter with new config
    /* istanbul ignore next */
    cov_163tj71ack().s[212]++;
    this.initializeAdapters();
  }
}
/* istanbul ignore next */
cov_163tj71ack().s[213]++;
exports.MultiProviderIntegration = MultiProviderIntegration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,