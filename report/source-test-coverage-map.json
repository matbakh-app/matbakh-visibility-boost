{
  "analysis_metadata": {
    "generated_at": "2025-01-14T10:00:00Z",
    "total_test_files": 87,
    "total_source_files": 156,
    "coverage_analysis_version": "1.0.0"
  },
  "source_to_test_mapping": {
    "src/services/persona-api.ts": {
      "test_file": "src/services/__tests__/persona-api.test.ts",
      "status": "BROKEN",
      "interface_match": false,
      "coverage_estimate": 0,
      "issues": [
        "Complete API interface mismatch",
        "Tests non-existent methods",
        "Wrong return types expected"
      ],
      "priority": "CRITICAL"
    },
    "src/services/vc.ts": {
      "test_file": "src/services/__tests__/vc.test.ts",
      "status": "PARTIAL",
      "interface_match": false,
      "coverage_estimate": 70,
      "issues": [
        "Return type assertion mismatch",
        "Missing error scenarios"
      ],
      "priority": "MEDIUM"
    },
    "src/services/aws-rds-client.ts": {
      "test_file": "src/services/__tests__/aws-rds-client.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 85,
      "issues": [
        "Over-complex transaction scenarios"
      ],
      "priority": "LOW"
    },
    "src/services/ProfileService.ts": {
      "test_file": "src/services/__tests__/ProfileService.test.ts",
      "status": "EXCELLENT",
      "interface_match": true,
      "coverage_estimate": 90,
      "issues": [],
      "priority": "NONE"
    },
    "src/services/auth.ts": {
      "test_file": "src/services/__tests__/auth.test.ts",
      "status": "EXCELLENT",
      "interface_match": true,
      "coverage_estimate": 95,
      "issues": [],
      "priority": "NONE"
    },
    "src/services/forecasting-engine.ts": {
      "test_file": "src/services/__tests__/forecasting-engine.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 80,
      "issues": [],
      "priority": "LOW"
    },
    "src/services/benchmark-comparison.ts": {
      "test_file": "src/services/__tests__/benchmark-comparison.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 75,
      "issues": [],
      "priority": "LOW"
    },
    "src/services/score-history.ts": {
      "test_file": "src/services/__tests__/score-history.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 70,
      "issues": [],
      "priority": "LOW"
    }
  },
  "component_to_test_mapping": {
    "src/components/analytics/TrendChart.tsx": {
      "test_file": "src/components/analytics/__tests__/TrendChart.test.tsx",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 60,
      "issues": [],
      "priority": "MEDIUM"
    },
    "src/components/analytics/TrendFilters.tsx": {
      "test_file": "src/components/analytics/__tests__/TrendFilters.test.tsx",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 55,
      "issues": [],
      "priority": "MEDIUM"
    },
    "src/components/analytics/EventAnnotations.tsx": {
      "test_file": "src/components/analytics/__tests__/EventAnnotations.test.tsx",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 65,
      "issues": [],
      "priority": "MEDIUM"
    }
  },
  "lambda_to_test_mapping": {
    "infra/lambdas/advanced-persona-system/src/index.ts": {
      "test_file": "infra/lambdas/advanced-persona-system/src/__tests__/advanced-persona-detector.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 80,
      "issues": [],
      "priority": "LOW"
    },
    "infra/lambdas/competitive-benchmarking/src/index.ts": {
      "test_file": "infra/lambdas/competitive-benchmarking/src/__tests__/competitive-benchmarking.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 75,
      "issues": [],
      "priority": "LOW"
    },
    "infra/lambdas/ai-agent-memory/src/index.ts": {
      "test_file": "infra/lambdas/ai-agent-memory/src/__tests__/index.test.ts",
      "status": "GOOD",
      "interface_match": true,
      "coverage_estimate": 85,
      "issues": [],
      "priority": "LOW"
    }
  },
  "integration_tests": {
    "test/integration/enhanced-visibility-check.test.ts": {
      "covers": ["VC Pipeline", "API Integration", "Data Flow"],
      "status": "GOOD",
      "coverage_estimate": 70,
      "priority": "MEDIUM"
    },
    "test/integration/full-visibility-pipeline.test.ts": {
      "covers": ["End-to-End VC", "User Journey", "System Integration"],
      "status": "GOOD",
      "coverage_estimate": 65,
      "priority": "MEDIUM"
    },
    "test/integration/pdf-report.test.ts": {
      "covers": ["Report Generation", "PDF Export", "Data Formatting"],
      "status": "GOOD",
      "coverage_estimate": 60,
      "priority": "MEDIUM"
    }
  },
  "coverage_gaps": {
    "untested_services": [
      "src/services/cognito-auth.ts",
      "src/services/upload-service.ts",
      "src/services/notification-service.ts"
    ],
    "untested_components": [
      "src/components/SafePersonaLoader.tsx",
      "src/components/SafeAuthLoader.tsx",
      "src/components/SafeTranslationLoader.tsx",
      "src/components/ErrorBoundary.tsx"
    ],
    "missing_integration_tests": [
      "Authentication flow end-to-end",
      "Persona detection to UI adaptation",
      "Multi-service error handling",
      "Performance under load"
    ]
  },
  "dangerous_patterns": {
    "over_mocked_tests": [
      "src/services/__tests__/aws-rds-client.test.ts"
    ],
    "interface_mismatches": [
      "src/services/__tests__/persona-api.test.ts"
    ],
    "false_confidence_risks": [
      "src/services/__tests__/persona-api.test.ts",
      "src/services/__tests__/aws-rds-client.test.ts"
    ]
  },
  "test_quality_metrics": {
    "total_assertions": 847,
    "mock_usage_ratio": 0.65,
    "integration_test_ratio": 0.15,
    "unit_test_ratio": 0.85,
    "estimated_false_positive_rate": 0.12,
    "estimated_coverage_accuracy": 0.78
  },
  "recommendations": {
    "immediate_fixes": [
      "Rewrite persona API tests to match implementation",
      "Fix VC service return type assertions",
      "Validate all mock configurations"
    ],
    "short_term_improvements": [
      "Add missing service tests",
      "Enhance component test coverage",
      "Implement basic integration tests"
    ],
    "long_term_strategy": [
      "Contract testing implementation",
      "End-to-end test suite",
      "Performance testing framework",
      "Mutation testing setup"
    ]
  },
  "execution_readiness": {
    "safe_to_run": [
      "src/services/__tests__/auth.test.ts",
      "src/services/__tests__/ProfileService.test.ts",
      "src/services/__tests__/forecasting-engine.test.ts",
      "src/services/__tests__/benchmark-comparison.test.ts",
      "src/components/analytics/__tests__/*.test.tsx"
    ],
    "fix_before_running": [
      "src/services/__tests__/persona-api.test.ts",
      "src/services/__tests__/vc.test.ts"
    ],
    "overall_status": "PROCEED_WITH_CAUTION",
    "confidence_level": 0.75
  }
}