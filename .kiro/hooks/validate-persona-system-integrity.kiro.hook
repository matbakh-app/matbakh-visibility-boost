{
  "enabled": true,
  "name": "Persona System Integrity Validator",
  "description": "Validates the consistency of the persona system. Ensures that all PersonaType definitions, components, and test coverage are in sync. Blocks deployment if inconsistencies or missing mappings are found between code, tests, and documentation.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/components/personas/**/*",
      "src/lib/persona-system/**/*",
      "test/green-core-validation/persona-*",
      "docs/personas.md"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Validate the persona system integrity by checking:\n\n1. **PersonaType Enum vs Components**: Ensure every PersonaType has a corresponding UI component\n2. **Component vs Test Coverage**: Verify each persona component has associated tests\n3. **Documentation Sync**: Check that docs/personas.md reflects current PersonaType definitions\n4. **Missing Mappings**: Identify any persona types without UI components or tests\n5. **Deployment Blocking**: If inconsistencies found, recommend blocking deployment\n\nGenerate a comprehensive integrity report with:\n- ✅ Validated mappings (PersonaType → Component → Test)\n- ❌ Missing components or tests for persona types\n- 📝 Documentation gaps or outdated information\n- 🚫 Deployment recommendation (BLOCK/PROCEED)\n- 🔧 Specific remediation steps for any issues found\n\nSave optional audit report to .audit/persona-integrity-report.json and log all findings with \"persona-integrity-check\" prefix for monitoring and compliance."
  }
}