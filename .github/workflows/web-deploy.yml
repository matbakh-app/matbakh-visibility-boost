name: Web Deploy

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      BUCKET: ${{ vars.BUCKET }}
      DIST_ID: ${{ vars.DIST_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::055062860590:role/gh-actions-web-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload assets
        run: |
          set -e
          # immutable, fingerprinted assets
          aws s3 cp dist/assets/ s3://$BUCKET/assets/ \
            --recursive --cache-control "public,max-age=31536000,immutable"

          # html mit kurzer Cachezeit
          aws s3 cp dist/ s3://$BUCKET/ \
            --recursive --exclude "*" --include "*.html" \
            --cache-control "public,max-age=300" --content-type "text/html"

          # optional: manifest
          if [ -f dist/site.webmanifest ]; then
            aws s3 cp dist/site.webmanifest s3://$BUCKET/site.webmanifest \
              --cache-control "public,max-age=86400" \
              --content-type "application/manifest+json"
          fi

          # optional: robots.txt
          if [ -f dist/robots.txt ]; then
            aws s3 cp dist/robots.txt s3://$BUCKET/robots.txt \
              --cache-control "public,max-age=86400" \
              --content-type "text/plain"
          fi

          # optional: favicons
          if [ -d dist/favicons ]; then
            aws s3 cp dist/favicons/ s3://$BUCKET/favicons/ \
              --recursive --cache-control "public,max-age=31536000,immutable"
          fi

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$DIST_ID" \
            --paths "/index.html" "/" "/favicons/*" "/sitemap.xml" "/robots.txt" "/site.webmanifest"
